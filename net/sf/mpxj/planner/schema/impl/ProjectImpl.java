//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.21 at 11:46:13 GMT 
//


package net.sf.mpxj.planner.schema.impl;

public class ProjectImpl implements net.sf.mpxj.planner.schema.Project, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sf.mpxj.planner.schema.impl.runtime.UnmarshallableObject, net.sf.mpxj.planner.schema.impl.runtime.XMLSerializable, net.sf.mpxj.planner.schema.impl.runtime.ValidatableObject
{

    protected java.lang.String _Calendar;
    protected java.lang.String _Manager;
    protected net.sf.mpxj.planner.schema.Allocations _Allocations;
    protected java.lang.String _ProjectStart;
    protected net.sf.mpxj.planner.schema.Calendars _Calendars;
    protected net.sf.mpxj.planner.schema.Tasks _Tasks;
    protected net.sf.mpxj.planner.schema.ResourceGroups _ResourceGroups;
    protected java.lang.String _MrprojectVersion;
    protected java.lang.String _Phase;
    protected java.lang.String _Company;
    protected java.lang.String _Name;
    protected net.sf.mpxj.planner.schema.Phases _Phases;
    protected net.sf.mpxj.planner.schema.Resources _Resources;
    protected com.sun.xml.bind.util.ListImpl _Properties;
    public final static java.lang.Class version = (net.sf.mpxj.planner.schema.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sf.mpxj.planner.schema.Project.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "project";
    }

    public java.lang.String getCalendar() {
        return _Calendar;
    }

    public void setCalendar(java.lang.String value) {
        _Calendar = value;
    }

    public java.lang.String getManager() {
        return _Manager;
    }

    public void setManager(java.lang.String value) {
        _Manager = value;
    }

    public net.sf.mpxj.planner.schema.Allocations getAllocations() {
        return _Allocations;
    }

    public void setAllocations(net.sf.mpxj.planner.schema.Allocations value) {
        _Allocations = value;
    }

    public java.lang.String getProjectStart() {
        return _ProjectStart;
    }

    public void setProjectStart(java.lang.String value) {
        _ProjectStart = value;
    }

    public net.sf.mpxj.planner.schema.Calendars getCalendars() {
        return _Calendars;
    }

    public void setCalendars(net.sf.mpxj.planner.schema.Calendars value) {
        _Calendars = value;
    }

    public net.sf.mpxj.planner.schema.Tasks getTasks() {
        return _Tasks;
    }

    public void setTasks(net.sf.mpxj.planner.schema.Tasks value) {
        _Tasks = value;
    }

    public net.sf.mpxj.planner.schema.ResourceGroups getResourceGroups() {
        return _ResourceGroups;
    }

    public void setResourceGroups(net.sf.mpxj.planner.schema.ResourceGroups value) {
        _ResourceGroups = value;
    }

    public java.lang.String getMrprojectVersion() {
        return _MrprojectVersion;
    }

    public void setMrprojectVersion(java.lang.String value) {
        _MrprojectVersion = value;
    }

    public java.lang.String getPhase() {
        return _Phase;
    }

    public void setPhase(java.lang.String value) {
        _Phase = value;
    }

    public java.lang.String getCompany() {
        return _Company;
    }

    public void setCompany(java.lang.String value) {
        _Company = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public net.sf.mpxj.planner.schema.Phases getPhases() {
        return _Phases;
    }

    public void setPhases(net.sf.mpxj.planner.schema.Phases value) {
        _Phases = value;
    }

    public net.sf.mpxj.planner.schema.Resources getResources() {
        return _Resources;
    }

    public void setResources(net.sf.mpxj.planner.schema.Resources value) {
        _Resources = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getProperties() {
        if (_Properties == null) {
            _Properties = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Properties;
    }

    public java.util.List getProperties() {
        return _getProperties();
    }

    public net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context) {
        return new net.sf.mpxj.planner.schema.impl.ProjectImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx14 = 0;
        final int len14 = ((_Properties == null)? 0 :_Properties.size());
        context.startElement("", "project");
        int idx_6 = idx14;
        while (idx_6 != len14) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Properties.get(idx_6 ++)), "Properties");
        }
        for (int _14 = 1; ((_14 > 0)&&(_Phases!= null)); _14 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Phases), "Phases");
        }
        for (int _15 = 1; ((_15 > 0)&&(_Calendars!= null)); _15 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
        }
        for (int _16 = 1; ((_16 > 0)&&(_Tasks!= null)); _16 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
        }
        for (int _17 = 1; ((_17 > 0)&&(_ResourceGroups!= null)); _17 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ResourceGroups), "ResourceGroups");
        }
        for (int _18 = 1; ((_18 > 0)&&(_Resources!= null)); _18 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
        }
        for (int _19 = 1; ((_19 > 0)&&(_Allocations!= null)); _19 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Allocations), "Allocations");
        }
        context.endNamespaceDecls();
        int idx_21 = idx14;
        if (_Calendar!= null) {
            context.startAttribute("", "calendar");
            try {
                context.text(((java.lang.String) _Calendar), "Calendar");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "mrproject-version");
        try {
            context.text(((java.lang.String) _MrprojectVersion), "MrprojectVersion");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Phase!= null) {
            context.startAttribute("", "phase");
            try {
                context.text(((java.lang.String) _Phase), "Phase");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Manager!= null) {
            context.startAttribute("", "manager");
            try {
                context.text(((java.lang.String) _Manager), "Manager");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "project-start");
        try {
            context.text(((java.lang.String) _ProjectStart), "ProjectStart");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Company!= null) {
            context.startAttribute("", "company");
            try {
                context.text(((java.lang.String) _Company), "Company");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx_21 != len14) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Properties.get(idx_21 ++)), "Properties");
        }
        for (int _27 = 1; ((_27 > 0)&&(_Phases!= null)); _27 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Phases), "Phases");
        }
        for (int _28 = 1; ((_28 > 0)&&(_Calendars!= null)); _28 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
        }
        for (int _29 = 1; ((_29 > 0)&&(_Tasks!= null)); _29 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
        }
        for (int _30 = 1; ((_30 > 0)&&(_ResourceGroups!= null)); _30 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ResourceGroups), "ResourceGroups");
        }
        for (int _31 = 1; ((_31 > 0)&&(_Resources!= null)); _31 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
        }
        for (int _32 = 1; ((_32 > 0)&&(_Allocations!= null)); _32 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Allocations), "Allocations");
        }
        context.endAttributes();
        while (idx14 != len14) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Properties.get(idx14 ++)), "Properties");
        }
        for (int _33 = 1; ((_33 > 0)&&(_Phases!= null)); _33 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Phases), "Phases");
        }
        for (int _34 = 1; ((_34 > 0)&&(_Calendars!= null)); _34 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
        }
        for (int _35 = 1; ((_35 > 0)&&(_Tasks!= null)); _35 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
        }
        for (int _36 = 1; ((_36 > 0)&&(_ResourceGroups!= null)); _36 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ResourceGroups), "ResourceGroups");
        }
        for (int _37 = 1; ((_37 > 0)&&(_Resources!= null)); _37 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
        }
        for (int _38 = 1; ((_38 > 0)&&(_Allocations!= null)); _38 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Allocations), "Allocations");
        }
        context.endElement();
    }

    public void serializeAttributes(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx14 = 0;
        final int len14 = ((_Properties == null)? 0 :_Properties.size());
    }

    public void serializeURIs(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx14 = 0;
        final int len14 = ((_Properties == null)? 0 :_Properties.size());
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sf.mpxj.planner.schema.Project.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000-com.sun.msv.dataty"
+"pe.xsd.NormalizedStringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.dataty"
+"pe.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Stri"
+"ng;L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd"
+"/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000"
+"\u0010normalizedStringsr\u00004com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Replace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpt\u0000"
+"\u0005CDATAt\u0000\u0000sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L"
+"\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\bcalendarq\u0000~\u00002sr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u001a\u0001q\u0000~\u00008s"
+"q\u0000~\u0000\u0018ppq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u0011mrproject-versionq\u0000~\u00002sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001bpq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u0005phaseq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fsq\u0000"
+"~\u00003t\u0000\u0007managerq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000\u0018ppq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\u0004nameq\u0000~\u00002sq\u0000~\u0000\u0018"
+"ppq\u0000~\u0000\u001fsq\u0000~\u00003t\u0000\rproject-startq\u0000~\u00002sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000\u001fs"
+"q\u0000~\u00003t\u0000\u0007companyq\u0000~\u00002q\u0000~\u00008sq\u0000~\u0000\u0016ppsr\u0000 com.sun.msv.grammar.One"
+"OrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000\u001bpsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001bps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001bpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u00009q\u0000~\u0000Xsr\u0000 com.sun.msv.grammar.AnyN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00008sq\u0000~\u00003t\u0000%net.sf.mpxj.planner.s"
+"chema.Propertiest\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tsq\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001bpsq\u0000~\u0000\u0018q\u0000~\u0000\u001bp"
+"q\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u00008sq\u0000~\u00003t\u0000!net.sf.mpxj.planner.schema.Phasesq\u0000~"
+"\u0000]q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001bpsq\u0000~\u0000\u0018q\u0000~\u0000\u001bp"
+"q\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u00008sq\u0000~\u00003t\u0000$net.sf.mpxj.planner.schema.Calendars"
+"q\u0000~\u0000]q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001bpsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001bpq\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u00008sq\u0000~\u00003t\u0000 net.sf.mpxj.planner.schema.Tasksq"
+"\u0000~\u0000]q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001bpsq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001bpq\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u00008sq\u0000~\u00003t\u0000)net.sf.mpxj.planner.schema.Resourc"
+"eGroupsq\u0000~\u0000]q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001bpsq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u00008sq\u0000~\u00003t\u0000$net.sf.mpxj.planner.schema"
+".Resourcesq\u0000~\u0000]q\u0000~\u00008sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0000q\u0000~\u0000\u001bp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000Pq\u0000~\u0000\u001b"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u001bpq\u0000~\u0000Xq\u0000~\u0000Zq\u0000~\u00008sq\u0000~\u00003t\u0000&net.sf.mpxj.planner.sch"
+"ema.Allocationsq\u0000~\u0000]q\u0000~\u00008sq\u0000~\u00003t\u0000\u0007projectq\u0000~\u00002sr\u0000\"com.sun.ms"
+"v.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/ms"
+"v/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramma"
+"r.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersi"
+"onL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\'\u0001pq\u0000"
+"~\u0000\u0017q\u0000~\u0000^q\u0000~\u0000eq\u0000~\u0000lq\u0000~\u0000sq\u0000~\u0000zq\u0000~\u0000\u0081q\u0000~\u0000\tq\u0000~\u0000\u0014q\u0000~\u0000\nq\u0000~\u0000\fq\u0000~\u0000\u0015q\u0000"
+"~\u0000Oq\u0000~\u0000\u0010q\u0000~\u0000\u000bq\u0000~\u0000Rq\u0000~\u0000Aq\u0000~\u0000Tq\u0000~\u0000`q\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000uq\u0000~\u0000|q\u0000~\u0000\u0083q\u0000"
+"~\u0000\u000eq\u0000~\u0000Kq\u0000~\u0000Uq\u0000~\u0000aq\u0000~\u0000hq\u0000~\u0000oq\u0000~\u0000=q\u0000~\u0000vq\u0000~\u0000}q\u0000~\u0000\u0084q\u0000~\u0000\u0012q\u0000~\u0000\u0013q\u0000"
+"~\u0000\u0011q\u0000~\u0000\u000fq\u0000~\u0000\rx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sf.mpxj.planner.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------");
        }

        protected Unmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sf.mpxj.planner.schema.impl.ProjectImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "mrproject-version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  27 :
                        if (("resources" == ___local)&&("" == ___uri)) {
                            _Resources = ((net.sf.mpxj.planner.schema.impl.ResourcesImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.ResourcesImpl.class), 28, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  0 :
                        if (("project" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "company");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  28 :
                        if (("allocations" == ___local)&&("" == ___uri)) {
                            _Allocations = ((net.sf.mpxj.planner.schema.impl.AllocationsImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.AllocationsImpl.class), 29, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 29;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "project-start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  23 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _getProperties().add(((net.sf.mpxj.planner.schema.impl.PropertiesImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.PropertiesImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("phases" == ___local)&&("" == ___uri)) {
                            _Phases = ((net.sf.mpxj.planner.schema.impl.PhasesImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.PhasesImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  30 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "calendar");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  24 :
                        if (("calendars" == ___local)&&("" == ___uri)) {
                            _Calendars = ((net.sf.mpxj.planner.schema.impl.CalendarsImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.CalendarsImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  25 :
                        if (("tasks" == ___local)&&("" == ___uri)) {
                            _Tasks = ((net.sf.mpxj.planner.schema.impl.TasksImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.TasksImpl.class), 26, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 26;
                        continue outer;
                    case  26 :
                        if (("resource-groups" == ___local)&&("" == ___uri)) {
                            _ResourceGroups = ((net.sf.mpxj.planner.schema.impl.ResourceGroupsImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.ResourceGroupsImpl.class), 27, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "manager");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  22 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _getProperties().add(((net.sf.mpxj.planner.schema.impl.PropertiesImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.PropertiesImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 23;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "phase");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MrprojectVersion = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Company = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProjectStart = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Calendar = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Manager = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Phase = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "mrproject-version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  27 :
                        state = 28;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "company");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  28 :
                        state = 29;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "project-start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  23 :
                        state = 24;
                        continue outer;
                    case  30 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "calendar");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  24 :
                        state = 25;
                        continue outer;
                    case  25 :
                        state = 26;
                        continue outer;
                    case  26 :
                        state = 27;
                        continue outer;
                    case  29 :
                        if (("project" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "manager");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  22 :
                        state = 23;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "phase");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("mrproject-version" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 28;
                        continue outer;
                    case  19 :
                        if (("company" == ___local)&&("" == ___uri)) {
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  28 :
                        state = 29;
                        continue outer;
                    case  16 :
                        if (("project-start" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        break;
                    case  23 :
                        state = 24;
                        continue outer;
                    case  30 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("calendar" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  24 :
                        state = 25;
                        continue outer;
                    case  25 :
                        state = 26;
                        continue outer;
                    case  26 :
                        state = 27;
                        continue outer;
                    case  10 :
                        if (("manager" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  22 :
                        state = 23;
                        continue outer;
                    case  7 :
                        if (("phase" == ___local)&&("" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  13 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        attIdx = context.getAttribute("", "mrproject-version");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 7;
                            continue outer;
                        }
                        break;
                    case  27 :
                        state = 28;
                        continue outer;
                    case  12 :
                        if (("manager" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "company");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  6 :
                        if (("mrproject-version" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("calendar" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  28 :
                        state = 29;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "project-start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 19;
                            continue outer;
                        }
                        break;
                    case  23 :
                        state = 24;
                        continue outer;
                    case  30 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "calendar");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  24 :
                        state = 25;
                        continue outer;
                    case  15 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  25 :
                        state = 26;
                        continue outer;
                    case  26 :
                        state = 27;
                        continue outer;
                    case  18 :
                        if (("project-start" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("phase" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "manager");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  22 :
                        state = 23;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "phase");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 10;
                            continue outer;
                        }
                        state = 10;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("company" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  14 :
                            eatText7(value);
                            state = 15;
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "mrproject-version");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 7;
                                continue outer;
                            }
                            break;
                        case  27 :
                            state = 28;
                            continue outer;
                        case  17 :
                            eatText3(value);
                            state = 18;
                            return ;
                        case  19 :
                            attIdx = context.getAttribute("", "company");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 22;
                                continue outer;
                            }
                            state = 22;
                            continue outer;
                        case  20 :
                            eatText2(value);
                            state = 21;
                            return ;
                        case  28 :
                            state = 29;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "project-start");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 19;
                                continue outer;
                            }
                            break;
                        case  23 :
                            state = 24;
                            continue outer;
                        case  8 :
                            eatText6(value);
                            state = 9;
                            return ;
                        case  30 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "calendar");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 4;
                                continue outer;
                            }
                            state = 4;
                            continue outer;
                        case  24 :
                            state = 25;
                            continue outer;
                        case  5 :
                            eatText1(value);
                            state = 6;
                            return ;
                        case  25 :
                            state = 26;
                            continue outer;
                        case  26 :
                            state = 27;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "manager");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 13;
                                continue outer;
                            }
                            state = 13;
                            continue outer;
                        case  22 :
                            state = 23;
                            continue outer;
                        case  11 :
                            eatText5(value);
                            state = 12;
                            return ;
                        case  7 :
                            attIdx = context.getAttribute("", "phase");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 10;
                                continue outer;
                            }
                            state = 10;
                            continue outer;
                        case  2 :
                            eatText4(value);
                            state = 3;
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 16;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
