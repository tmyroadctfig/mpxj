//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.21 at 11:46:13 GMT 
//


package net.sf.mpxj.planner.schema.impl;

public class ResourceImpl implements net.sf.mpxj.planner.schema.Resource, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sf.mpxj.planner.schema.impl.runtime.UnmarshallableObject, net.sf.mpxj.planner.schema.impl.runtime.XMLSerializable, net.sf.mpxj.planner.schema.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected java.lang.String _Calendar;
    protected java.lang.String _OvtRate;
    protected java.lang.String _Email;
    protected java.lang.String _ShortName;
    protected java.lang.String _Note;
    protected java.lang.String _StdRate;
    protected java.lang.String _Name;
    protected java.lang.String _Id;
    protected java.lang.String _Units;
    protected java.lang.String _Group;
    protected net.sf.mpxj.planner.schema.Properties _Properties;
    public final static java.lang.Class version = (net.sf.mpxj.planner.schema.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sf.mpxj.planner.schema.Resource.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "resource";
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public java.lang.String getCalendar() {
        return _Calendar;
    }

    public void setCalendar(java.lang.String value) {
        _Calendar = value;
    }

    public java.lang.String getOvtRate() {
        return _OvtRate;
    }

    public void setOvtRate(java.lang.String value) {
        _OvtRate = value;
    }

    public java.lang.String getEmail() {
        return _Email;
    }

    public void setEmail(java.lang.String value) {
        _Email = value;
    }

    public java.lang.String getShortName() {
        return _ShortName;
    }

    public void setShortName(java.lang.String value) {
        _ShortName = value;
    }

    public java.lang.String getNote() {
        return _Note;
    }

    public void setNote(java.lang.String value) {
        _Note = value;
    }

    public java.lang.String getStdRate() {
        return _StdRate;
    }

    public void setStdRate(java.lang.String value) {
        _StdRate = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.lang.String getUnits() {
        return _Units;
    }

    public void setUnits(java.lang.String value) {
        _Units = value;
    }

    public java.lang.String getGroup() {
        return _Group;
    }

    public void setGroup(java.lang.String value) {
        _Group = value;
    }

    public net.sf.mpxj.planner.schema.Properties getProperties() {
        return _Properties;
    }

    public void setProperties(net.sf.mpxj.planner.schema.Properties value) {
        _Properties = value;
    }

    public net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context) {
        return new net.sf.mpxj.planner.schema.impl.ResourceImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "resource");
        {
            java.lang.Object o = _Type;
        }
        for (int _12 = 1; ((_12 > 0)&&(_Properties!= null)); _12 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
        }
        context.endNamespaceDecls();
        if (_Calendar!= null) {
            context.startAttribute("", "calendar");
            try {
                context.text(((java.lang.String) _Calendar), "Calendar");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Group!= null) {
            context.startAttribute("", "group");
            try {
                context.text(((java.lang.String) _Group), "Group");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "type");
        {
            java.lang.Object o = _Type;
            if (o instanceof java.lang.String) {
                try {
                    context.text(((java.lang.String) _Type), "Type");
                } catch (java.lang.Exception e) {
                    net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            } else {
                if (o instanceof java.lang.String) {
                    try {
                        context.text(((java.lang.String) _Type), "Type");
                    } catch (java.lang.Exception e) {
                        net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    net.sf.mpxj.planner.schema.impl.runtime.Util.handleTypeMismatchError(context, this, "Type", o);
                }
            }
        }
        context.endAttribute();
        context.startAttribute("", "units");
        try {
            context.text(((java.lang.String) _Units), "Units");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Email!= null) {
            context.startAttribute("", "email");
            try {
                context.text(((java.lang.String) _Email), "Email");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_StdRate!= null) {
            context.startAttribute("", "std-rate");
            try {
                context.text(((java.lang.String) _StdRate), "StdRate");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Note!= null) {
            context.startAttribute("", "note");
            try {
                context.text(((java.lang.String) _Note), "Note");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_OvtRate!= null) {
            context.startAttribute("", "ovt-rate");
            try {
                context.text(((java.lang.String) _OvtRate), "OvtRate");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ShortName!= null) {
            context.startAttribute("", "short-name");
            try {
                context.text(((java.lang.String) _ShortName), "ShortName");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "id");
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        for (int _14 = 1; ((_14 > 0)&&(_Properties!= null)); _14 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
        }
        context.endAttributes();
        for (int _15 = 1; ((_15 > 0)&&(_Properties!= null)); _15 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
        }
        context.endElement();
    }

    public void serializeAttributes(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sf.mpxj.planner.schema.Resource.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 c"
+"om.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tname"
+"Classq\u0000~\u0000\u0001xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relax"
+"ng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/ut"
+"il/StringPair;xq\u0000~\u0000\u0004ppsr\u0000-com.sun.msv.datatype.xsd.Normalize"
+"dStringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Bui"
+"ltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concre"
+"teType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000"
+"~\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0010normalizedStrin"
+"gsr\u00004com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Replace\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpt\u0000\u0005CDATAt\u0000\u0000sr\u0000#com"
+".sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#"
+"L\u0000\fnamespaceURIq\u0000~\u0000#xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpt\u0000\bcalendarq\u0000~\u00000sr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0018\u0001q\u0000~\u00006sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u0019pq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\u0005groupq\u0000~\u00000q\u0000~\u00006sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0014ppsr\u0000\u001ccom.sun."
+"msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000\u001bL\u0000\u0004nameq\u0000~\u0000\u001cL\u0000\u0005valu"
+"et\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0004q\u0000~\u0000\u0019psr\u0000\"com.sun.msv.datatype.x"
+"sd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000&t\u0000\u0005tokensr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)\u0001sq\u0000"
+"~\u0000-t\u0000\u000bENUMERATIONq\u0000~\u00000t\u0000\u00011sq\u0000~\u0000>q\u0000~\u0000\u0019pq\u0000~\u0000Bq\u0000~\u0000Ft\u0000\u00012sq\u0000~\u00001t\u0000"
+"\u0004typeq\u0000~\u00000sq\u0000~\u0000\u0016ppq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\u0005unitsq\u0000~\u00000sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u0019pq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\u0005emailq\u0000~\u00000q\u0000~\u00006sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0019pq\u0000~\u0000\u001dsq\u0000~"
+"\u00001t\u0000\bstd-rateq\u0000~\u00000q\u0000~\u00006sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0019pq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\u0004not"
+"eq\u0000~\u00000q\u0000~\u00006sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0019pq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\bovt-rateq\u0000~\u00000q\u0000"
+"~\u00006sq\u0000~\u0000\u0014ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0019pq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\nshort-nameq\u0000~\u00000q\u0000~\u00006sq\u0000"
+"~\u0000\u0016ppq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\u0004nameq\u0000~\u00000sq\u0000~\u0000\u0016ppq\u0000~\u0000\u001dsq\u0000~\u00001t\u0000\u0002idq\u0000~\u00000sq\u0000"
+"~\u0000\u0014ppsq\u0000~\u0000\u0000q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.grammar.OneOrMoreE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003e"
+"xpq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000\u0019psq\u0000~\u0000\u0016q\u0000~\u0000\u0019psr\u00002com.sun.msv.grammar.Expre"
+"ssion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u00007q\u0000~\u0000rsr\u0000 com."
+"sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00006sq\u0000~\u00001t\u0000%n"
+"et.sf.mpxj.planner.schema.Propertiest\u0000+http://java.sun.com/j"
+"axb/xjc/dummy-elementsq\u0000~\u00006sq\u0000~\u00001t\u0000\bresourceq\u0000~\u00000sr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVe"
+"rsionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0015\u0001"
+"pq\u0000~\u0000jq\u0000~\u0000\\q\u0000~\u0000\fq\u0000~\u0000\u000bq\u0000~\u0000`q\u0000~\u0000Pq\u0000~\u0000\u0011q\u0000~\u00008q\u0000~\u0000\u0012q\u0000~\u0000\u000eq\u0000~\u0000\u000fq\u0000~\u0000"
+"\u0010q\u0000~\u0000\rq\u0000~\u0000Xq\u0000~\u0000\tq\u0000~\u0000\u0015q\u0000~\u0000lq\u0000~\u0000\u0013q\u0000~\u0000Tq\u0000~\u0000oq\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sf.mpxj.planner.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------");
        }

        protected Unmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sf.mpxj.planner.schema.impl.ResourceImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "calendar");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  0 :
                        if (("resource" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "group");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "units");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 34;
                            continue outer;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "note");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  34 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _Properties = ((net.sf.mpxj.planner.schema.impl.PropertiesImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.PropertiesImpl.class), 35, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 35;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "short-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "std-rate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "ovt-rate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  36 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 31;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Calendar = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Group = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Units = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Note = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ShortName = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StdRate = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OvtRate = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Email = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "calendar");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "group");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "units");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 34;
                            continue outer;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "note");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  34 :
                        state = 35;
                        continue outer;
                    case  35 :
                        if (("resource" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "short-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "std-rate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "ovt-rate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  36 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 31;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("calendar" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  4 :
                        if (("group" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  10 :
                        if (("units" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        break;
                    case  31 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 32;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        break;
                    case  19 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  34 :
                        state = 35;
                        continue outer;
                    case  25 :
                        if (("short-name" == ___local)&&("" == ___uri)) {
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  16 :
                        if (("std-rate" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  22 :
                        if (("ovt-rate" == ___local)&&("" == ___uri)) {
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  36 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        if (("email" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  28 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 29;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  30 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 31;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "calendar");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 4;
                            continue outer;
                        }
                        state = 4;
                        continue outer;
                    case  6 :
                        if (("group" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "group");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 7;
                            continue outer;
                        }
                        state = 7;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "units");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 13;
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 34;
                            continue outer;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  19 :
                        attIdx = context.getAttribute("", "note");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  3 :
                        if (("calendar" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  34 :
                        state = 35;
                        continue outer;
                    case  15 :
                        if (("email" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("units" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  25 :
                        attIdx = context.getAttribute("", "short-name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 28;
                            continue outer;
                        }
                        state = 28;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "std-rate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "ovt-rate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  36 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("ovt-rate" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("std-rate" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "email");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 16;
                            continue outer;
                        }
                        state = 16;
                        continue outer;
                    case  33 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 34;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("short-name" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 31;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "calendar");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 4;
                                continue outer;
                            }
                            state = 4;
                            continue outer;
                        case  17 :
                            eatText7(value);
                            state = 18;
                            return ;
                        case  5 :
                            eatText2(value);
                            state = 6;
                            return ;
                        case  4 :
                            attIdx = context.getAttribute("", "group");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 7;
                                continue outer;
                            }
                            state = 7;
                            continue outer;
                        case  2 :
                            eatText1(value);
                            state = 3;
                            return ;
                        case  32 :
                            eatText4(value);
                            state = 33;
                            return ;
                        case  29 :
                            eatText10(value);
                            state = 30;
                            return ;
                        case  11 :
                            eatText3(value);
                            state = 12;
                            return ;
                        case  26 :
                            eatText6(value);
                            state = 27;
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "units");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 13;
                                continue outer;
                            }
                            break;
                        case  31 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 34;
                                continue outer;
                            }
                            break;
                        case  7 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  19 :
                            attIdx = context.getAttribute("", "note");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 22;
                                continue outer;
                            }
                            state = 22;
                            continue outer;
                        case  34 :
                            state = 35;
                            continue outer;
                        case  8 :
                            if (___dt0 .isValid(value, null)) {
                                eatText11(value);
                                state = 9;
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                eatText12(value);
                                state = 9;
                                return ;
                            }
                            break;
                        case  14 :
                            eatText9(value);
                            state = 15;
                            return ;
                        case  25 :
                            attIdx = context.getAttribute("", "short-name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 28;
                                continue outer;
                            }
                            state = 28;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "std-rate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 19;
                                continue outer;
                            }
                            state = 19;
                            continue outer;
                        case  20 :
                            eatText5(value);
                            state = 21;
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "ovt-rate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 25;
                                continue outer;
                            }
                            state = 25;
                            continue outer;
                        case  36 :
                            revertToParentFromText(value);
                            return ;
                        case  23 :
                            eatText8(value);
                            state = 24;
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "email");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 16;
                                continue outer;
                            }
                            state = 16;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 31;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
