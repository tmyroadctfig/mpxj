//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.21 at 11:46:13 GMT 
//


package net.sf.mpxj.planner.schema.impl;

public class TaskImpl implements net.sf.mpxj.planner.schema.Task, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sf.mpxj.planner.schema.impl.runtime.UnmarshallableObject, net.sf.mpxj.planner.schema.impl.runtime.XMLSerializable, net.sf.mpxj.planner.schema.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected com.sun.xml.bind.util.ListImpl _Task;
    protected java.lang.String _PercentComplete;
    protected net.sf.mpxj.planner.schema.Predecessors _Predecessors;
    protected java.lang.String _WorkStart;
    protected java.lang.String _End;
    protected java.lang.String _Priority;
    protected net.sf.mpxj.planner.schema.Constraint _Constraint;
    protected java.lang.String _Work;
    protected java.lang.String _Start;
    protected java.lang.String _Note;
    protected java.lang.String _Duration;
    protected java.lang.String _Effort;
    protected java.lang.String _Name;
    protected java.lang.String _Scheduling;
    protected java.lang.String _Id;
    protected net.sf.mpxj.planner.schema.Properties _Properties;
    public final static java.lang.Class version = (net.sf.mpxj.planner.schema.impl.JAXBVersion.class);
    private final static org.relaxng.datatype.Datatype ___dt0 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt1 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt2 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private final static org.relaxng.datatype.Datatype ___dt3 = com.sun.xml.bind.unmarshaller.DatatypeDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001");
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sf.mpxj.planner.schema.Task.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "task";
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getTask() {
        if (_Task == null) {
            _Task = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Task;
    }

    public java.util.List getTask() {
        return _getTask();
    }

    public java.lang.String getPercentComplete() {
        return _PercentComplete;
    }

    public void setPercentComplete(java.lang.String value) {
        _PercentComplete = value;
    }

    public net.sf.mpxj.planner.schema.Predecessors getPredecessors() {
        return _Predecessors;
    }

    public void setPredecessors(net.sf.mpxj.planner.schema.Predecessors value) {
        _Predecessors = value;
    }

    public java.lang.String getWorkStart() {
        return _WorkStart;
    }

    public void setWorkStart(java.lang.String value) {
        _WorkStart = value;
    }

    public java.lang.String getEnd() {
        return _End;
    }

    public void setEnd(java.lang.String value) {
        _End = value;
    }

    public java.lang.String getPriority() {
        return _Priority;
    }

    public void setPriority(java.lang.String value) {
        _Priority = value;
    }

    public net.sf.mpxj.planner.schema.Constraint getConstraint() {
        return _Constraint;
    }

    public void setConstraint(net.sf.mpxj.planner.schema.Constraint value) {
        _Constraint = value;
    }

    public java.lang.String getWork() {
        return _Work;
    }

    public void setWork(java.lang.String value) {
        _Work = value;
    }

    public java.lang.String getStart() {
        return _Start;
    }

    public void setStart(java.lang.String value) {
        _Start = value;
    }

    public java.lang.String getNote() {
        return _Note;
    }

    public void setNote(java.lang.String value) {
        _Note = value;
    }

    public java.lang.String getDuration() {
        return _Duration;
    }

    public void setDuration(java.lang.String value) {
        _Duration = value;
    }

    public java.lang.String getEffort() {
        return _Effort;
    }

    public void setEffort(java.lang.String value) {
        _Effort = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.lang.String getScheduling() {
        return _Scheduling;
    }

    public void setScheduling(java.lang.String value) {
        _Scheduling = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public net.sf.mpxj.planner.schema.Properties getProperties() {
        return _Properties;
    }

    public void setProperties(net.sf.mpxj.planner.schema.Properties value) {
        _Properties = value;
    }

    public net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context) {
        return new net.sf.mpxj.planner.schema.impl.TaskImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Task == null)? 0 :_Task.size());
        context.startElement("", "task");
        int idx_11 = idx2;
        if (_Type!= null) {
            {
                java.lang.Object o = _Type;
            }
        }
        if (_Scheduling!= null) {
            {
                java.lang.Object o = _Scheduling;
            }
        }
        for (int _17 = 1; ((_17 > 0)&&(_Properties!= null)); _17 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
        }
        for (int _18 = 1; ((_18 > 0)&&(_Constraint!= null)); _18 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Constraint), "Constraint");
        }
        for (int _19 = 1; ((_19 > 0)&&(_Predecessors!= null)); _19 --) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Predecessors), "Predecessors");
        }
        while (idx_11 != len2) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Task.get(idx_11 ++)), "Task");
        }
        context.endNamespaceDecls();
        int idx_22 = idx2;
        context.startAttribute("", "start");
        try {
            context.text(((java.lang.String) _Start), "Start");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Type!= null) {
            context.startAttribute("", "type");
            {
                java.lang.Object o = _Type;
                if (o instanceof java.lang.String) {
                    try {
                        context.text(((java.lang.String) _Type), "Type");
                    } catch (java.lang.Exception e) {
                        net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _Type), "Type");
                        } catch (java.lang.Exception e) {
                            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        net.sf.mpxj.planner.schema.impl.runtime.Util.handleTypeMismatchError(context, this, "Type", o);
                    }
                }
            }
            context.endAttribute();
        }
        context.startAttribute("", "end");
        try {
            context.text(((java.lang.String) _End), "End");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Note!= null) {
            context.startAttribute("", "note");
            try {
                context.text(((java.lang.String) _Note), "Note");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "id");
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Work!= null) {
            context.startAttribute("", "work");
            try {
                context.text(((java.lang.String) _Work), "Work");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_WorkStart!= null) {
            context.startAttribute("", "work-start");
            try {
                context.text(((java.lang.String) _WorkStart), "WorkStart");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_PercentComplete!= null) {
            context.startAttribute("", "percent-complete");
            try {
                context.text(((java.lang.String) _PercentComplete), "PercentComplete");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Scheduling!= null) {
            context.startAttribute("", "scheduling");
            {
                java.lang.Object o = _Scheduling;
                if (o instanceof java.lang.String) {
                    try {
                        context.text(((java.lang.String) _Scheduling), "Scheduling");
                    } catch (java.lang.Exception e) {
                        net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                } else {
                    if (o instanceof java.lang.String) {
                        try {
                            context.text(((java.lang.String) _Scheduling), "Scheduling");
                        } catch (java.lang.Exception e) {
                            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                    } else {
                        net.sf.mpxj.planner.schema.impl.runtime.Util.handleTypeMismatchError(context, this, "Scheduling", o);
                    }
                }
            }
            context.endAttribute();
        }
        if (_Effort!= null) {
            context.startAttribute("", "effort");
            try {
                context.text(((java.lang.String) _Effort), "Effort");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Priority!= null) {
            context.startAttribute("", "priority");
            try {
                context.text(((java.lang.String) _Priority), "Priority");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Duration!= null) {
            context.startAttribute("", "duration");
            try {
                context.text(((java.lang.String) _Duration), "Duration");
            } catch (java.lang.Exception e) {
                net.sf.mpxj.planner.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        for (int _24 = 1; ((_24 > 0)&&(_Properties!= null)); _24 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
        }
        for (int _25 = 1; ((_25 > 0)&&(_Constraint!= null)); _25 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Constraint), "Constraint");
        }
        for (int _26 = 1; ((_26 > 0)&&(_Predecessors!= null)); _26 --) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Predecessors), "Predecessors");
        }
        while (idx_22 != len2) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Task.get(idx_22 ++)), "Task");
        }
        context.endAttributes();
        for (int _27 = 1; ((_27 > 0)&&(_Properties!= null)); _27 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
        }
        for (int _28 = 1; ((_28 > 0)&&(_Constraint!= null)); _28 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Constraint), "Constraint");
        }
        for (int _29 = 1; ((_29 > 0)&&(_Predecessors!= null)); _29 --) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Predecessors), "Predecessors");
        }
        while (idx2 != len2) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Task.get(idx2 ++)), "Task");
        }
        context.endElement();
    }

    public void serializeAttributes(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Task == null)? 0 :_Task.size());
    }

    public void serializeURIs(net.sf.mpxj.planner.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Task == null)? 0 :_Task.size());
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sf.mpxj.planner.schema.Task.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.g"
+"rammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq"
+"\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg"
+"/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/"
+"msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000-com.sun.msv.datatype.xsd.Nor"
+"malizedStringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Str"
+"ingType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btype"
+"Nameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpac"
+"eProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0010normalize"
+"dStringsr\u00004com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Repl"
+"ace\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpt\u0000\u0005CDATAt\u0000\u0000s"
+"r\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005startq\u0000~\u00001sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0019sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005va"
+"luexp\u0000psq\u0000~\u00006ppsr\u0000\u001ccom.sun.msv.grammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtq\u0000~\u0000\u001cL\u0000\u0004nameq\u0000~\u0000\u001dL\u0000\u0005valuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000\u0004q\u0000~\u0000:"
+"psr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000"
+"\'t\u0000\u0005tokensr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000*\u0001sq\u0000~\u0000.t\u0000\u000bENUMERATIONq\u0000~\u00001t\u0000\u0006normalsq"
+"\u0000~\u0000<q\u0000~\u0000:pq\u0000~\u0000@q\u0000~\u0000Dt\u0000\tmilestonesq\u0000~\u00002t\u0000\u0004typeq\u0000~\u00001sr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004s"
+"q\u0000~\u00009\u0001q\u0000~\u0000Lsq\u0000~\u0000\u0019ppq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0003endq\u0000~\u00001sq\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:"
+"pq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0004noteq\u0000~\u00001q\u0000~\u0000Lsq\u0000~\u0000\u0019ppq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0002idq\u0000~\u00001sq"
+"\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0004workq\u0000~\u00001q\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0019"
+"q\u0000~\u0000:pq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\nwork-startq\u0000~\u00001q\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:p"
+"q\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0010percent-completeq\u0000~\u00001q\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:p"
+"sq\u0000~\u00006ppsq\u0000~\u0000<q\u0000~\u0000:pq\u0000~\u0000@sq\u0000~\u0000.q\u0000~\u0000Eq\u0000~\u00001t\u0000\nfixed-worksq\u0000~\u0000<"
+"q\u0000~\u0000:pq\u0000~\u0000@q\u0000~\u0000ht\u0000\u000efixed-durationsq\u0000~\u00002t\u0000\nschedulingq\u0000~\u00001q\u0000~"
+"\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0006effortq\u0000~\u00001q\u0000~\u0000Lsq\u0000~\u0000\u0019pp"
+"q\u0000~\u0000\u001esq\u0000~\u00002t\u0000\u0004nameq\u0000~\u00001sq\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\bpri"
+"orityq\u0000~\u00001q\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u001esq\u0000~\u00002t\u0000\bdurationq\u0000~"
+"\u00001q\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0000q\u0000~\u0000:p\u0000sq\u0000~\u00006ppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000:psq\u0000~\u0000\u0019q\u0000~\u0000:psr\u00002com.sun.msv.gra"
+"mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000Mq\u0000~"
+"\u0000\u0085sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003q\u0000~\u0000L"
+"sq\u0000~\u00002t\u0000%net.sf.mpxj.planner.schema.Propertiest\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementsq\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0000q\u0000~\u0000:p\u0000sq"
+"\u0000~\u00006ppsq\u0000~\u0000\u0080q\u0000~\u0000:psq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u0085q\u0000~\u0000\u0087q\u0000~\u0000Lsq\u0000~\u00002t\u0000%net.sf"
+".mpxj.planner.schema.Constraintq\u0000~\u0000\u008aq\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000\u0000q\u0000~\u0000:"
+"p\u0000sq\u0000~\u00006ppsq\u0000~\u0000\u0080q\u0000~\u0000:psq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u0085q\u0000~\u0000\u0087q\u0000~\u0000Lsq\u0000~\u00002t\u0000\'ne"
+"t.sf.mpxj.planner.schema.Predecessorsq\u0000~\u0000\u008aq\u0000~\u0000Lsq\u0000~\u00006ppsq\u0000~\u0000"
+"\u0080q\u0000~\u0000:psq\u0000~\u0000\u0000q\u0000~\u0000:p\u0000sq\u0000~\u00006ppsq\u0000~\u0000\u0080q\u0000~\u0000:psq\u0000~\u0000\u0019q\u0000~\u0000:pq\u0000~\u0000\u0085q\u0000~"
+"\u0000\u0087q\u0000~\u0000Lsq\u0000~\u00002t\u0000\u001fnet.sf.mpxj.planner.schema.Taskq\u0000~\u0000\u008aq\u0000~\u0000Lsq\u0000"
+"~\u00002t\u0000\u0004taskq\u0000~\u00001sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Closed"
+"Hash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N"
+"\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gram"
+"mar/ExpressionPool;xp\u0000\u0000\u0000&\u0001pq\u0000~\u0000}q\u0000~\u0000\u008bq\u0000~\u0000\u000bq\u0000~\u0000\u0092q\u0000~\u0000\u0017q\u0000~\u0000yq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0016q\u0000~\u0000\u0011q\u0000~\u0000\u0099q\u0000~\u0000\u0013q\u0000~\u0000\\q\u0000~\u0000dq\u0000~\u0000\u000fq\u0000~\u00007q\u0000~\u0000\u000eq\u0000~\u0000\nq\u0000~\u0000\rq\u0000~"
+"\u0000\u0012q\u0000~\u0000\u0010q\u0000~\u0000\u009aq\u0000~\u0000\tq\u0000~\u0000uq\u0000~\u0000`q\u0000~\u0000\u007fq\u0000~\u0000\u008dq\u0000~\u0000\u0094q\u0000~\u0000\u009cq\u0000~\u0000nq\u0000~\u0000\u0082q\u0000~"
+"\u0000\u008eq\u0000~\u0000\u0095q\u0000~\u0000\u009dq\u0000~\u0000Xq\u0000~\u0000\fq\u0000~\u0000\u0015q\u0000~\u0000\u0014q\u0000~\u0000Qx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sf.mpxj.planner.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------");
        }

        protected Unmarshaller(net.sf.mpxj.planner.schema.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sf.mpxj.planner.schema.impl.TaskImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        attIdx = context.getAttribute("", "work-start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "percent-complete");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "work");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "end");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 10;
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 34;
                            continue outer;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("", "duration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 40;
                            continue outer;
                        }
                        state = 40;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "scheduling");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  41 :
                        if (("constraint" == ___local)&&("" == ___uri)) {
                            _Constraint = ((net.sf.mpxj.planner.schema.impl.ConstraintImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.ConstraintImpl.class), 42, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  45 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  43 :
                        if (("task" == ___local)&&("" == ___uri)) {
                            _getTask().add(((net.sf.mpxj.planner.schema.impl.TaskImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.TaskImpl.class), 44, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 44;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  42 :
                        if (("predecessors" == ___local)&&("" == ___uri)) {
                            _Predecessors = ((net.sf.mpxj.planner.schema.impl.PredecessorsImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.PredecessorsImpl.class), 43, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 43;
                        continue outer;
                    case  34 :
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "effort");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  44 :
                        if (("task" == ___local)&&("" == ___uri)) {
                            _getTask().add(((net.sf.mpxj.planner.schema.impl.TaskImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.TaskImpl.class), 44, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "note");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 4;
                            continue outer;
                        }
                        break;
                    case  0 :
                        if (("task" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  40 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            _Properties = ((net.sf.mpxj.planner.schema.impl.PropertiesImpl) spawnChildFromEnterElement((net.sf.mpxj.planner.schema.impl.PropertiesImpl.class), 41, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 41;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        state = 7;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WorkStart = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PercentComplete = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Work = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _End = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Duration = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Priority = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Effort = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Note = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Start = com.sun.xml.bind.WhiteSpaceProcessor.replace(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        attIdx = context.getAttribute("", "work-start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "percent-complete");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "work");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "end");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 10;
                            continue outer;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 34;
                            continue outer;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("", "duration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 40;
                            continue outer;
                        }
                        state = 40;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "scheduling");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  41 :
                        state = 42;
                        continue outer;
                    case  45 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  43 :
                        state = 44;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  42 :
                        state = 43;
                        continue outer;
                    case  34 :
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "effort");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  44 :
                        if (("task" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "note");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 4;
                            continue outer;
                        }
                        break;
                    case  40 :
                        state = 41;
                        continue outer;
                    case  4 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 7;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        if (("work-start" == ___local)&&("" == ___uri)) {
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  22 :
                        if (("percent-complete" == ___local)&&("" == ___uri)) {
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  16 :
                        if (("work" == ___local)&&("" == ___uri)) {
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  7 :
                        if (("end" == ___local)&&("" == ___uri)) {
                            state = 8;
                            return ;
                        }
                        break;
                    case  31 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 32;
                            return ;
                        }
                        break;
                    case  37 :
                        if (("duration" == ___local)&&("" == ___uri)) {
                            state = 38;
                            return ;
                        }
                        state = 40;
                        continue outer;
                    case  25 :
                        if (("scheduling" == ___local)&&("" == ___uri)) {
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  41 :
                        state = 42;
                        continue outer;
                    case  45 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  43 :
                        state = 44;
                        continue outer;
                    case  13 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 14;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 43;
                        continue outer;
                    case  34 :
                        if (("priority" == ___local)&&("" == ___uri)) {
                            state = 35;
                            return ;
                        }
                        state = 37;
                        continue outer;
                    case  28 :
                        if (("effort" == ___local)&&("" == ___uri)) {
                            state = 29;
                            return ;
                        }
                        state = 31;
                        continue outer;
                    case  10 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  1 :
                        if (("start" == ___local)&&("" == ___uri)) {
                            state = 2;
                            return ;
                        }
                        break;
                    case  40 :
                        state = 41;
                        continue outer;
                    case  4 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  19 :
                        attIdx = context.getAttribute("", "work-start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 22;
                            continue outer;
                        }
                        state = 22;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "percent-complete");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 25;
                            continue outer;
                        }
                        state = 25;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "work");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 19;
                            continue outer;
                        }
                        state = 19;
                        continue outer;
                    case  36 :
                        if (("priority" == ___local)&&("" == ___uri)) {
                            state = 37;
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "end");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 10;
                            continue outer;
                        }
                        break;
                    case  3 :
                        if (("start" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  31 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 34;
                            continue outer;
                        }
                        break;
                    case  37 :
                        attIdx = context.getAttribute("", "duration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 40;
                            continue outer;
                        }
                        state = 40;
                        continue outer;
                    case  25 :
                        attIdx = context.getAttribute("", "scheduling");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  30 :
                        if (("effort" == ___local)&&("" == ___uri)) {
                            state = 31;
                            return ;
                        }
                        break;
                    case  41 :
                        state = 42;
                        continue outer;
                    case  24 :
                        if (("percent-complete" == ___local)&&("" == ___uri)) {
                            state = 25;
                            return ;
                        }
                        break;
                    case  45 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  39 :
                        if (("duration" == ___local)&&("" == ___uri)) {
                            state = 40;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("work-start" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  43 :
                        state = 44;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 16;
                            continue outer;
                        }
                        break;
                    case  42 :
                        state = 43;
                        continue outer;
                    case  33 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 34;
                            return ;
                        }
                        break;
                    case  34 :
                        attIdx = context.getAttribute("", "priority");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 37;
                            continue outer;
                        }
                        state = 37;
                        continue outer;
                    case  15 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  28 :
                        attIdx = context.getAttribute("", "effort");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText9(v);
                            state = 31;
                            continue outer;
                        }
                        state = 31;
                        continue outer;
                    case  12 :
                        if (("note" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "note");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText10(v);
                            state = 13;
                            continue outer;
                        }
                        state = 13;
                        continue outer;
                    case  1 :
                        attIdx = context.getAttribute("", "start");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText11(v);
                            state = 4;
                            continue outer;
                        }
                        break;
                    case  40 :
                        state = 41;
                        continue outer;
                    case  27 :
                        if (("scheduling" == ___local)&&("" == ___uri)) {
                            state = 28;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("end" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  4 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  18 :
                        if (("work" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  19 :
                            attIdx = context.getAttribute("", "work-start");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 22;
                                continue outer;
                            }
                            state = 22;
                            continue outer;
                        case  32 :
                            eatText5(value);
                            state = 33;
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "percent-complete");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 25;
                                continue outer;
                            }
                            state = 25;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "work");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 19;
                                continue outer;
                            }
                            state = 19;
                            continue outer;
                        case  11 :
                            eatText10(value);
                            state = 12;
                            return ;
                        case  26 :
                            if (___dt0 .isValid(value, null)) {
                                eatText12(value);
                                state = 27;
                                return ;
                            }
                            if (___dt1 .isValid(value, null)) {
                                eatText13(value);
                                state = 27;
                                return ;
                            }
                            break;
                        case  7 :
                            attIdx = context.getAttribute("", "end");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 10;
                                continue outer;
                            }
                            break;
                        case  5 :
                            if (___dt2 .isValid(value, null)) {
                                eatText14(value);
                                state = 6;
                                return ;
                            }
                            if (___dt3 .isValid(value, null)) {
                                eatText15(value);
                                state = 6;
                                return ;
                            }
                            break;
                        case  23 :
                            eatText2(value);
                            state = 24;
                            return ;
                        case  31 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 34;
                                continue outer;
                            }
                            break;
                        case  37 :
                            attIdx = context.getAttribute("", "duration");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 40;
                                continue outer;
                            }
                            state = 40;
                            continue outer;
                        case  25 :
                            attIdx = context.getAttribute("", "scheduling");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            state = 28;
                            continue outer;
                        case  2 :
                            eatText11(value);
                            state = 3;
                            return ;
                        case  41 :
                            state = 42;
                            continue outer;
                        case  38 :
                            eatText6(value);
                            state = 39;
                            return ;
                        case  45 :
                            revertToParentFromText(value);
                            return ;
                        case  43 :
                            state = 44;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 16;
                                continue outer;
                            }
                            break;
                        case  8 :
                            eatText4(value);
                            state = 9;
                            return ;
                        case  17 :
                            eatText3(value);
                            state = 18;
                            return ;
                        case  42 :
                            state = 43;
                            continue outer;
                        case  29 :
                            eatText9(value);
                            state = 30;
                            return ;
                        case  34 :
                            attIdx = context.getAttribute("", "priority");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 37;
                                continue outer;
                            }
                            state = 37;
                            continue outer;
                        case  28 :
                            attIdx = context.getAttribute("", "effort");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText9(v);
                                state = 31;
                                continue outer;
                            }
                            state = 31;
                            continue outer;
                        case  35 :
                            eatText8(value);
                            state = 36;
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "note");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText10(v);
                                state = 13;
                                continue outer;
                            }
                            state = 13;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "start");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText11(v);
                                state = 4;
                                continue outer;
                            }
                            break;
                        case  40 :
                            state = 41;
                            continue outer;
                        case  4 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            state = 7;
                            continue outer;
                        case  20 :
                            eatText1(value);
                            state = 21;
                            return ;
                        case  14 :
                            eatText7(value);
                            state = 15;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Scheduling = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Scheduling = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
