//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2003.12.01 at 02:39:38 GMT
//


package com.tapsterrock.mspdi.schema.impl;

public class ProjectTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
{

    protected java.math.BigInteger _MinutesPerDay;
    protected boolean has_SplitsInProgressTasks;
    protected boolean _SplitsInProgressTasks;
    protected java.lang.String _Manager;
    protected java.util.Calendar _DefaultFinishTime;
    protected boolean has_FiscalYearStart;
    protected boolean _FiscalYearStart;
    protected boolean has_RemoveFileProperties;
    protected boolean _RemoveFileProperties;
    protected java.math.BigInteger _DefaultTaskEVMethod;
    protected java.util.Calendar _DefaultStartTime;
    protected java.util.Calendar _FinishDate;
    protected boolean has_MoveCompletedEndsBack;
    protected boolean _MoveCompletedEndsBack;
    protected java.math.BigInteger _WorkFormat;
    protected java.math.BigInteger _BaselineForEarnedValue;
    protected java.math.BigInteger _CalendarUID;
    protected java.lang.String _Subject;
    protected boolean has_NewTasksEstimated;
    protected boolean _NewTasksEstimated;
    protected boolean has_SpreadActualCost;
    protected boolean _SpreadActualCost;
    protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType _Resources;
    protected java.math.BigInteger _DefaultFixedCostAccrual;
    protected boolean has_MultipleCriticalPaths;
    protected boolean _MultipleCriticalPaths;
    protected boolean has_AutoAddNewResourcesAndTasks;
    protected boolean _AutoAddNewResourcesAndTasks;
    protected boolean has_DefaultOvertimeRate;
    protected float _DefaultOvertimeRate;
    protected java.util.Calendar _StartDate;
    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType _Calendars;
    protected java.math.BigInteger _CurrencySymbolPosition;
    protected com.tapsterrock.mspdi.schema.ProjectType.TasksType _Tasks;
    protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType _OutlineCodes;
    protected com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType _WBSMasks;
    protected java.math.BigInteger _FYStartDate;
    protected java.util.Calendar _LastSaved;
    protected java.util.Calendar _StatusDate;
    protected boolean has_MoveRemainingStartsBack;
    protected boolean _MoveRemainingStartsBack;
    protected boolean has_Autolink;
    protected boolean _Autolink;
    protected java.lang.String _Title;
    protected java.lang.String _Company;
    protected java.util.Calendar _ExtendedCreationDate;
    protected java.math.BigInteger _DurationFormat;
    protected boolean has_MicrosoftProjectServerURL;
    protected boolean _MicrosoftProjectServerURL;
    protected java.math.BigInteger _NewTaskStartDate;
    protected boolean has_HonorConstraints;
    protected boolean _HonorConstraints;
    protected java.math.BigInteger _DaysPerMonth;
    protected java.lang.String _Author;
    protected boolean has_AdminProject;
    protected boolean _AdminProject;
    protected boolean has_ScheduleFromStart;
    protected boolean _ScheduleFromStart;
    protected java.math.BigInteger _MinutesPerWeek;
    protected java.util.Calendar _CurrentDate;
    protected com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType _ExtendedAttributes;
    protected java.math.BigInteger _CurrencyDigits;
    protected boolean has_InsertedProjectsLikeSummary;
    protected boolean _InsertedProjectsLikeSummary;
    protected java.lang.String _Name;
    protected boolean has_SpreadPercentComplete;
    protected boolean _SpreadPercentComplete;
    protected java.math.BigInteger _WeekStartDay;
    protected boolean has_DefaultStandardRate;
    protected float _DefaultStandardRate;
    protected boolean has_MoveCompletedEndsForward;
    protected boolean _MoveCompletedEndsForward;
    protected java.lang.String _CurrencySymbol;
    protected com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType _Assignments;
    protected boolean has_TaskUpdatesResource;
    protected boolean _TaskUpdatesResource;
    protected boolean has_EditableActualCosts;
    protected boolean _EditableActualCosts;
    protected java.lang.String _UID;
    protected java.math.BigInteger _CriticalSlackLimit;
    protected java.math.BigInteger _Revision;
    protected boolean has_NewTasksEffortDriven;
    protected boolean _NewTasksEffortDriven;
    protected java.math.BigInteger _EarnedValueMethod;
    protected boolean has_MoveRemainingStartsForward;
    protected boolean _MoveRemainingStartsForward;
    protected java.math.BigInteger _DefaultTaskType;
    protected boolean has_ProjectExternallyEdited;
    protected boolean _ProjectExternallyEdited;
    protected boolean has_ActualsInSync;
    protected boolean _ActualsInSync;
    protected java.lang.String _Category;
    protected java.util.Calendar _CreationDate;
    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.tapsterrock.mspdi.schema.ProjectType.class);
    }

    public java.math.BigInteger getMinutesPerDay() {
        return _MinutesPerDay;
    }

    public void setMinutesPerDay(java.math.BigInteger value) {
        _MinutesPerDay = value;
    }

    public boolean isSplitsInProgressTasks() {
        return _SplitsInProgressTasks;
    }

    public void setSplitsInProgressTasks(boolean value) {
        _SplitsInProgressTasks = value;
        has_SplitsInProgressTasks = true;
    }

    public java.lang.String getManager() {
        return _Manager;
    }

    public void setManager(java.lang.String value) {
        _Manager = value;
    }

    public java.util.Calendar getDefaultFinishTime() {
        return _DefaultFinishTime;
    }

    public void setDefaultFinishTime(java.util.Calendar value) {
        _DefaultFinishTime = value;
    }

    public boolean isFiscalYearStart() {
        return _FiscalYearStart;
    }

    public void setFiscalYearStart(boolean value) {
        _FiscalYearStart = value;
        has_FiscalYearStart = true;
    }

    public boolean isRemoveFileProperties() {
        return _RemoveFileProperties;
    }

    public void setRemoveFileProperties(boolean value) {
        _RemoveFileProperties = value;
        has_RemoveFileProperties = true;
    }

    public java.math.BigInteger getDefaultTaskEVMethod() {
        return _DefaultTaskEVMethod;
    }

    public void setDefaultTaskEVMethod(java.math.BigInteger value) {
        _DefaultTaskEVMethod = value;
    }

    public java.util.Calendar getDefaultStartTime() {
        return _DefaultStartTime;
    }

    public void setDefaultStartTime(java.util.Calendar value) {
        _DefaultStartTime = value;
    }

    public java.util.Calendar getFinishDate() {
        return _FinishDate;
    }

    public void setFinishDate(java.util.Calendar value) {
        _FinishDate = value;
    }

    public boolean isMoveCompletedEndsBack() {
        return _MoveCompletedEndsBack;
    }

    public void setMoveCompletedEndsBack(boolean value) {
        _MoveCompletedEndsBack = value;
        has_MoveCompletedEndsBack = true;
    }

    public java.math.BigInteger getWorkFormat() {
        return _WorkFormat;
    }

    public void setWorkFormat(java.math.BigInteger value) {
        _WorkFormat = value;
    }

    public java.math.BigInteger getBaselineForEarnedValue() {
        return _BaselineForEarnedValue;
    }

    public void setBaselineForEarnedValue(java.math.BigInteger value) {
        _BaselineForEarnedValue = value;
    }

    public java.math.BigInteger getCalendarUID() {
        return _CalendarUID;
    }

    public void setCalendarUID(java.math.BigInteger value) {
        _CalendarUID = value;
    }

    public java.lang.String getSubject() {
        return _Subject;
    }

    public void setSubject(java.lang.String value) {
        _Subject = value;
    }

    public boolean isNewTasksEstimated() {
        return _NewTasksEstimated;
    }

    public void setNewTasksEstimated(boolean value) {
        _NewTasksEstimated = value;
        has_NewTasksEstimated = true;
    }

    public boolean isSpreadActualCost() {
        return _SpreadActualCost;
    }

    public void setSpreadActualCost(boolean value) {
        _SpreadActualCost = value;
        has_SpreadActualCost = true;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType getResources() {
        return _Resources;
    }

    public void setResources(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType value) {
        _Resources = value;
    }

    public java.math.BigInteger getDefaultFixedCostAccrual() {
        return _DefaultFixedCostAccrual;
    }

    public void setDefaultFixedCostAccrual(java.math.BigInteger value) {
        _DefaultFixedCostAccrual = value;
    }

    public boolean isMultipleCriticalPaths() {
        return _MultipleCriticalPaths;
    }

    public void setMultipleCriticalPaths(boolean value) {
        _MultipleCriticalPaths = value;
        has_MultipleCriticalPaths = true;
    }

    public boolean isAutoAddNewResourcesAndTasks() {
        return _AutoAddNewResourcesAndTasks;
    }

    public void setAutoAddNewResourcesAndTasks(boolean value) {
        _AutoAddNewResourcesAndTasks = value;
        has_AutoAddNewResourcesAndTasks = true;
    }

    public float getDefaultOvertimeRate() {
        return _DefaultOvertimeRate;
    }

    public void setDefaultOvertimeRate(float value) {
        _DefaultOvertimeRate = value;
        has_DefaultOvertimeRate = true;
    }

    public java.util.Calendar getStartDate() {
        return _StartDate;
    }

    public void setStartDate(java.util.Calendar value) {
        _StartDate = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType getCalendars() {
        return _Calendars;
    }

    public void setCalendars(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType value) {
        _Calendars = value;
    }

    public java.math.BigInteger getCurrencySymbolPosition() {
        return _CurrencySymbolPosition;
    }

    public void setCurrencySymbolPosition(java.math.BigInteger value) {
        _CurrencySymbolPosition = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.TasksType getTasks() {
        return _Tasks;
    }

    public void setTasks(com.tapsterrock.mspdi.schema.ProjectType.TasksType value) {
        _Tasks = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType getOutlineCodes() {
        return _OutlineCodes;
    }

    public void setOutlineCodes(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType value) {
        _OutlineCodes = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType getWBSMasks() {
        return _WBSMasks;
    }

    public void setWBSMasks(com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType value) {
        _WBSMasks = value;
    }

    public java.math.BigInteger getFYStartDate() {
        return _FYStartDate;
    }

    public void setFYStartDate(java.math.BigInteger value) {
        _FYStartDate = value;
    }

    public java.util.Calendar getLastSaved() {
        return _LastSaved;
    }

    public void setLastSaved(java.util.Calendar value) {
        _LastSaved = value;
    }

    public java.util.Calendar getStatusDate() {
        return _StatusDate;
    }

    public void setStatusDate(java.util.Calendar value) {
        _StatusDate = value;
    }

    public boolean isMoveRemainingStartsBack() {
        return _MoveRemainingStartsBack;
    }

    public void setMoveRemainingStartsBack(boolean value) {
        _MoveRemainingStartsBack = value;
        has_MoveRemainingStartsBack = true;
    }

    public boolean isAutolink() {
        return _Autolink;
    }

    public void setAutolink(boolean value) {
        _Autolink = value;
        has_Autolink = true;
    }

    public java.lang.String getTitle() {
        return _Title;
    }

    public void setTitle(java.lang.String value) {
        _Title = value;
    }

    public java.lang.String getCompany() {
        return _Company;
    }

    public void setCompany(java.lang.String value) {
        _Company = value;
    }

    public java.util.Calendar getExtendedCreationDate() {
        return _ExtendedCreationDate;
    }

    public void setExtendedCreationDate(java.util.Calendar value) {
        _ExtendedCreationDate = value;
    }

    public java.math.BigInteger getDurationFormat() {
        return _DurationFormat;
    }

    public void setDurationFormat(java.math.BigInteger value) {
        _DurationFormat = value;
    }

    public boolean isMicrosoftProjectServerURL() {
        return _MicrosoftProjectServerURL;
    }

    public void setMicrosoftProjectServerURL(boolean value) {
        _MicrosoftProjectServerURL = value;
        has_MicrosoftProjectServerURL = true;
    }

    public java.math.BigInteger getNewTaskStartDate() {
        return _NewTaskStartDate;
    }

    public void setNewTaskStartDate(java.math.BigInteger value) {
        _NewTaskStartDate = value;
    }

    public boolean isHonorConstraints() {
        return _HonorConstraints;
    }

    public void setHonorConstraints(boolean value) {
        _HonorConstraints = value;
        has_HonorConstraints = true;
    }

    public java.math.BigInteger getDaysPerMonth() {
        return _DaysPerMonth;
    }

    public void setDaysPerMonth(java.math.BigInteger value) {
        _DaysPerMonth = value;
    }

    public java.lang.String getAuthor() {
        return _Author;
    }

    public void setAuthor(java.lang.String value) {
        _Author = value;
    }

    public boolean isAdminProject() {
        return _AdminProject;
    }

    public void setAdminProject(boolean value) {
        _AdminProject = value;
        has_AdminProject = true;
    }

    public boolean isScheduleFromStart() {
        return _ScheduleFromStart;
    }

    public void setScheduleFromStart(boolean value) {
        _ScheduleFromStart = value;
        has_ScheduleFromStart = true;
    }

    public java.math.BigInteger getMinutesPerWeek() {
        return _MinutesPerWeek;
    }

    public void setMinutesPerWeek(java.math.BigInteger value) {
        _MinutesPerWeek = value;
    }

    public java.util.Calendar getCurrentDate() {
        return _CurrentDate;
    }

    public void setCurrentDate(java.util.Calendar value) {
        _CurrentDate = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType getExtendedAttributes() {
        return _ExtendedAttributes;
    }

    public void setExtendedAttributes(com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType value) {
        _ExtendedAttributes = value;
    }

    public java.math.BigInteger getCurrencyDigits() {
        return _CurrencyDigits;
    }

    public void setCurrencyDigits(java.math.BigInteger value) {
        _CurrencyDigits = value;
    }

    public boolean isInsertedProjectsLikeSummary() {
        return _InsertedProjectsLikeSummary;
    }

    public void setInsertedProjectsLikeSummary(boolean value) {
        _InsertedProjectsLikeSummary = value;
        has_InsertedProjectsLikeSummary = true;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public boolean isSpreadPercentComplete() {
        return _SpreadPercentComplete;
    }

    public void setSpreadPercentComplete(boolean value) {
        _SpreadPercentComplete = value;
        has_SpreadPercentComplete = true;
    }

    public java.math.BigInteger getWeekStartDay() {
        return _WeekStartDay;
    }

    public void setWeekStartDay(java.math.BigInteger value) {
        _WeekStartDay = value;
    }

    public float getDefaultStandardRate() {
        return _DefaultStandardRate;
    }

    public void setDefaultStandardRate(float value) {
        _DefaultStandardRate = value;
        has_DefaultStandardRate = true;
    }

    public boolean isMoveCompletedEndsForward() {
        return _MoveCompletedEndsForward;
    }

    public void setMoveCompletedEndsForward(boolean value) {
        _MoveCompletedEndsForward = value;
        has_MoveCompletedEndsForward = true;
    }

    public java.lang.String getCurrencySymbol() {
        return _CurrencySymbol;
    }

    public void setCurrencySymbol(java.lang.String value) {
        _CurrencySymbol = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType getAssignments() {
        return _Assignments;
    }

    public void setAssignments(com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType value) {
        _Assignments = value;
    }

    public boolean isTaskUpdatesResource() {
        return _TaskUpdatesResource;
    }

    public void setTaskUpdatesResource(boolean value) {
        _TaskUpdatesResource = value;
        has_TaskUpdatesResource = true;
    }

    public boolean isEditableActualCosts() {
        return _EditableActualCosts;
    }

    public void setEditableActualCosts(boolean value) {
        _EditableActualCosts = value;
        has_EditableActualCosts = true;
    }

    public java.lang.String getUID() {
        return _UID;
    }

    public void setUID(java.lang.String value) {
        _UID = value;
    }

    public java.math.BigInteger getCriticalSlackLimit() {
        return _CriticalSlackLimit;
    }

    public void setCriticalSlackLimit(java.math.BigInteger value) {
        _CriticalSlackLimit = value;
    }

    public java.math.BigInteger getRevision() {
        return _Revision;
    }

    public void setRevision(java.math.BigInteger value) {
        _Revision = value;
    }

    public boolean isNewTasksEffortDriven() {
        return _NewTasksEffortDriven;
    }

    public void setNewTasksEffortDriven(boolean value) {
        _NewTasksEffortDriven = value;
        has_NewTasksEffortDriven = true;
    }

    public java.math.BigInteger getEarnedValueMethod() {
        return _EarnedValueMethod;
    }

    public void setEarnedValueMethod(java.math.BigInteger value) {
        _EarnedValueMethod = value;
    }

    public boolean isMoveRemainingStartsForward() {
        return _MoveRemainingStartsForward;
    }

    public void setMoveRemainingStartsForward(boolean value) {
        _MoveRemainingStartsForward = value;
        has_MoveRemainingStartsForward = true;
    }

    public java.math.BigInteger getDefaultTaskType() {
        return _DefaultTaskType;
    }

    public void setDefaultTaskType(java.math.BigInteger value) {
        _DefaultTaskType = value;
    }

    public boolean isProjectExternallyEdited() {
        return _ProjectExternallyEdited;
    }

    public void setProjectExternallyEdited(boolean value) {
        _ProjectExternallyEdited = value;
        has_ProjectExternallyEdited = true;
    }

    public boolean isActualsInSync() {
        return _ActualsInSync;
    }

    public void setActualsInSync(boolean value) {
        _ActualsInSync = value;
        has_ActualsInSync = true;
    }

    public java.lang.String getCategory() {
        return _Category;
    }

    public void setCategory(java.lang.String value) {
        _Category = value;
    }

    public java.util.Calendar getCreationDate() {
        return _CreationDate;
    }

    public void setCreationDate(java.util.Calendar value) {
        _CreationDate = value;
    }

    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_UID!= null) {
            context.startElement("http://schemas.microsoft.com/project", "UID");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _UID), "UID");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Name!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Name");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Title!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Title");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Title), "Title");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Subject!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Subject");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Subject), "Subject");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Category!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Category");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Category), "Category");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Company!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Company");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Company), "Company");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Manager!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Manager");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Manager), "Manager");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Author!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Author");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Author), "Author");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CreationDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null), "CreationDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Revision!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Revision");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Revision)), "Revision");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_LastSaved!= null) {
            context.startElement("http://schemas.microsoft.com/project", "LastSaved");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LastSaved), null), "LastSaved");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ScheduleFromStart) {
            context.startElement("http://schemas.microsoft.com/project", "ScheduleFromStart");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ScheduleFromStart)), "ScheduleFromStart");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_StartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "StartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StartDate), null), "StartDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FinishDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "FinishDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FinishDate), null), "FinishDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FYStartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "FYStartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FYStartDate)), "FYStartDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CriticalSlackLimit!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CriticalSlackLimit");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CriticalSlackLimit)), "CriticalSlackLimit");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrencyDigits!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencyDigits");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CurrencyDigits)), "CurrencyDigits");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrencySymbol!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencySymbol");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CurrencySymbol), "CurrencySymbol");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrencySymbolPosition!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencySymbolPosition");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CurrencySymbolPosition)), "CurrencySymbolPosition");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CalendarUID!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalendarUID)), "CalendarUID");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultStartTime!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultStartTime");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _DefaultStartTime), null), "DefaultStartTime");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultFinishTime!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultFinishTime");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _DefaultFinishTime), null), "DefaultFinishTime");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MinutesPerDay!= null) {
            context.startElement("http://schemas.microsoft.com/project", "MinutesPerDay");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MinutesPerDay)), "MinutesPerDay");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MinutesPerWeek!= null) {
            context.startElement("http://schemas.microsoft.com/project", "MinutesPerWeek");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MinutesPerWeek)), "MinutesPerWeek");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DaysPerMonth!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DaysPerMonth");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DaysPerMonth)), "DaysPerMonth");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultTaskType!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultTaskType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DefaultTaskType)), "DefaultTaskType");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultFixedCostAccrual!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultFixedCostAccrual");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DefaultFixedCostAccrual)), "DefaultFixedCostAccrual");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DefaultStandardRate) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultStandardRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _DefaultStandardRate)), "DefaultStandardRate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DefaultOvertimeRate) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultOvertimeRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _DefaultOvertimeRate)), "DefaultOvertimeRate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DurationFormat!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_WorkFormat!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WorkFormat");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorkFormat)), "WorkFormat");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_EditableActualCosts) {
            context.startElement("http://schemas.microsoft.com/project", "EditableActualCosts");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EditableActualCosts)), "EditableActualCosts");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_HonorConstraints) {
            context.startElement("http://schemas.microsoft.com/project", "HonorConstraints");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _HonorConstraints)), "HonorConstraints");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EarnedValueMethod!= null) {
            context.startElement("http://schemas.microsoft.com/project", "EarnedValueMethod");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EarnedValueMethod)), "EarnedValueMethod");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_InsertedProjectsLikeSummary) {
            context.startElement("http://schemas.microsoft.com/project", "InsertedProjectsLikeSummary");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _InsertedProjectsLikeSummary)), "InsertedProjectsLikeSummary");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MultipleCriticalPaths) {
            context.startElement("http://schemas.microsoft.com/project", "MultipleCriticalPaths");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MultipleCriticalPaths)), "MultipleCriticalPaths");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_NewTasksEffortDriven) {
            context.startElement("http://schemas.microsoft.com/project", "NewTasksEffortDriven");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NewTasksEffortDriven)), "NewTasksEffortDriven");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_NewTasksEstimated) {
            context.startElement("http://schemas.microsoft.com/project", "NewTasksEstimated");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NewTasksEstimated)), "NewTasksEstimated");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SplitsInProgressTasks) {
            context.startElement("http://schemas.microsoft.com/project", "SplitsInProgressTasks");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SplitsInProgressTasks)), "SplitsInProgressTasks");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SpreadActualCost) {
            context.startElement("http://schemas.microsoft.com/project", "SpreadActualCost");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SpreadActualCost)), "SpreadActualCost");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SpreadPercentComplete) {
            context.startElement("http://schemas.microsoft.com/project", "SpreadPercentComplete");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SpreadPercentComplete)), "SpreadPercentComplete");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_TaskUpdatesResource) {
            context.startElement("http://schemas.microsoft.com/project", "TaskUpdatesResource");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _TaskUpdatesResource)), "TaskUpdatesResource");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FiscalYearStart) {
            context.startElement("http://schemas.microsoft.com/project", "FiscalYearStart");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _FiscalYearStart)), "FiscalYearStart");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_WeekStartDay!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WeekStartDay");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WeekStartDay)), "WeekStartDay");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveCompletedEndsBack) {
            context.startElement("http://schemas.microsoft.com/project", "MoveCompletedEndsBack");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveCompletedEndsBack)), "MoveCompletedEndsBack");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveRemainingStartsBack) {
            context.startElement("http://schemas.microsoft.com/project", "MoveRemainingStartsBack");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveRemainingStartsBack)), "MoveRemainingStartsBack");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveRemainingStartsForward) {
            context.startElement("http://schemas.microsoft.com/project", "MoveRemainingStartsForward");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveRemainingStartsForward)), "MoveRemainingStartsForward");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveCompletedEndsForward) {
            context.startElement("http://schemas.microsoft.com/project", "MoveCompletedEndsForward");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveCompletedEndsForward)), "MoveCompletedEndsForward");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_BaselineForEarnedValue!= null) {
            context.startElement("http://schemas.microsoft.com/project", "BaselineForEarnedValue");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BaselineForEarnedValue)), "BaselineForEarnedValue");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AutoAddNewResourcesAndTasks) {
            context.startElement("http://schemas.microsoft.com/project", "AutoAddNewResourcesAndTasks");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AutoAddNewResourcesAndTasks)), "AutoAddNewResourcesAndTasks");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_StatusDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "StatusDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StatusDate), null), "StatusDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrentDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrentDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CurrentDate), null), "CurrentDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MicrosoftProjectServerURL) {
            context.startElement("http://schemas.microsoft.com/project", "MicrosoftProjectServerURL");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MicrosoftProjectServerURL)), "MicrosoftProjectServerURL");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Autolink) {
            context.startElement("http://schemas.microsoft.com/project", "Autolink");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Autolink)), "Autolink");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NewTaskStartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "NewTaskStartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _NewTaskStartDate)), "NewTaskStartDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultTaskEVMethod!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultTaskEVMethod");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DefaultTaskEVMethod)), "DefaultTaskEVMethod");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ProjectExternallyEdited) {
            context.startElement("http://schemas.microsoft.com/project", "ProjectExternallyEdited");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ProjectExternallyEdited)), "ProjectExternallyEdited");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ExtendedCreationDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "ExtendedCreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ExtendedCreationDate), null), "ExtendedCreationDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ActualsInSync) {
            context.startElement("http://schemas.microsoft.com/project", "ActualsInSync");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ActualsInSync)), "ActualsInSync");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_RemoveFileProperties) {
            context.startElement("http://schemas.microsoft.com/project", "RemoveFileProperties");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RemoveFileProperties)), "RemoveFileProperties");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AdminProject) {
            context.startElement("http://schemas.microsoft.com/project", "AdminProject");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AdminProject)), "AdminProject");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OutlineCodes!= null) {
            context.startElement("http://schemas.microsoft.com/project", "OutlineCodes");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCodes), "OutlineCodes");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCodes), "OutlineCodes");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCodes), "OutlineCodes");
            context.endElement();
        }
        if (_WBSMasks!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WBSMasks");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WBSMasks), "WBSMasks");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WBSMasks), "WBSMasks");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _WBSMasks), "WBSMasks");
            context.endElement();
        }
        if (_ExtendedAttributes!= null) {
            context.startElement("http://schemas.microsoft.com/project", "ExtendedAttributes");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttributes), "ExtendedAttributes");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttributes), "ExtendedAttributes");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttributes), "ExtendedAttributes");
            context.endElement();
        }
        if (_Calendars!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Calendars");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
            context.endElement();
        }
        if (_Tasks!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Tasks");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
            context.endElement();
        }
        if (_Resources!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Resources");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
            context.endElement();
        }
        if (_Assignments!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Assignments");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Assignments), "Assignments");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Assignments), "Assignments");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Assignments), "Assignments");
            context.endElement();
        }
    }

    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.tapsterrock.mspdi.schema.ProjectType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u008aw\u00c7\u00d5ppsq\u0000~\u0000\u0000\u0088\u00f1\u00c2\u00c1ppsq\u0000~\u0000\u0000\u0087"
+"\\\u00ea\u00a1ppsq\u0000~\u0000\u0000\u0083\u00f5C\u0093ppsq\u0000~\u0000\u0000\u0082e\u00db9ppsq\u0000~\u0000\u0000\u0080j=Vppsq\u0000~\u0000\u0000}\u0099pPppsq\u0000~\u0000\u0000{"
+"\u00ca\u001f\u00beppsq\u0000~\u0000\u0000y\u00e2\u00d9\u008appsq\u0000~\u0000\u0000w\u00ce\u008a\u00ddppsq\u0000~\u0000\u0000v\u0013\u0018\u001eppsq\u0000~\u0000\u0000s\u00ff\u0007\u00f6ppsq\u0000~\u0000\u0000q"
+"\u00a1\u00ec\u00eeppsq\u0000~\u0000\u0000pd$~ppsq\u0000~\u0000\u0000ng\u00e8\u00f1ppsq\u0000~\u0000\u0000m\\\u0018\u00c5ppsq\u0000~\u0000\u0000k\u0005\u00e9Ippsq\u0000~\u0000\u0000h"
+"&\u00f7\u00e8ppsq\u0000~\u0000\u0000eL\"\"ppsq\u0000~\u0000\u0000c&[\u00ecppsq\u0000~\u0000\u0000`\u00ae.\u00f5ppsq\u0000~\u0000\u0000^W\t{ppsq\u0000~\u0000\u0000\\"
+"W+\u001eppsq\u0000~\u0000\u0000Z\'\u00edwppsq\u0000~\u0000\u0000W\u00ce\u00b9\u0012ppsq\u0000~\u0000\u0000VFB{ppsq\u0000~\u0000\u0000S\u00a7\u00f1Mppsq\u0000~\u0000\u0000Q"
+"\r\u00c9-ppsq\u0000~\u0000\u0000N\u00a8p\u00b2ppsq\u0000~\u0000\u0000M\u00adQ&ppsq\u0000~\u0000\u0000L\u009f\u0094\u0082ppsq\u0000~\u0000\u0000J\u00cd\u00b3\u00d3ppsq\u0000~\u0000\u0000I"
+"\u009c\u009b\u00d6ppsq\u0000~\u0000\u0000H\u0088\u0017\u00bfppsq\u0000~\u0000\u0000F\u0080\u0000\u00bcppsq\u0000~\u0000\u0000D\u0093[\u00ecppsq\u0000~\u0000\u0000B\u00ab\u00d1\u00d1ppsq\u0000~\u0000\u0000@"
+"\u00ff\u00bedppsq\u0000~\u0000\u0000@\u0011\u00e2\u00cfppsq\u0000~\u0000\u0000>\u00f2\u00a5\u00f9ppsq\u0000~\u0000\u0000<\u0092\u0087\u009appsq\u0000~\u0000\u00009\u00fa|\u00d6ppsq\u0000~\u0000\u00008"
+"\fm\u009cppsq\u0000~\u0000\u00005\u00d8VLppsq\u0000~\u0000\u00004Y\u00ec)ppsq\u0000~\u0000\u00003_\u00e7\u00c8ppsq\u0000~\u0000\u00001\n\u0099\u0011ppsq\u0000~\u0000\u0000/"
+"\u00c1\u00f2\u0090ppsq\u0000~\u0000\u0000-\u00a0\u00f3Yppsq\u0000~\u0000\u0000,H\u00f88ppsq\u0000~\u0000\u0000*#\u00e8\bppsq\u0000~\u0000\u0000(Cx\u0005ppsq\u0000~\u0000\u0000&"
+"\u00fa\u0089`ppsq\u0000~\u0000\u0000$<\u009fbppsq\u0000~\u0000\u0000 ru\u00ffppsq\u0000~\u0000\u0000\u001c\u00a8\u00e3\u00e4ppsq\u0000~\u0000\u0000\u001a_*\u00d0ppsq\u0000~\u0000\u0000\u0018"
+"X\u00fffppsq\u0000~\u0000\u0000\u0015lG\u0018ppsq\u0000~\u0000\u0000\u0013vl\u00dfppsq\u0000~\u0000\u0000\u0011\b\u00d1%ppsq\u0000~\u0000\u0000\u000e\u007f\\#ppsq\u0000~\u0000\u0000\f"
+"\u0019\u0011\u0098ppsq\u0000~\u0000\u0000\t7\u0015\u00f2ppsq\u0000~\u0000\u0000\u0006b\u008f\u00e9ppsq\u0000~\u0000\u0000\u0005\u0007\u00a2\u00acppsq\u0000~\u0000\u0000\u0003\u009f\bUppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u009e\u00d0\u00f5ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u009e\u00d0\u00easr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0001\u009e\u00d0\u00dfppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00ee\u0006\u00ceppsr\u0000\'com.sun.msv.datatype"
+".xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.da"
+"tatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFace"
+"tFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatyp"
+"e/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"iq\u0000~\u0000ZL\u0000\btypeNameq\u0000~\u0000ZL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000$http://schemas.microsoft.com/pr"
+"ojectpsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Prese"
+"rve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinA"
+"tomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000[t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stri"
+"ngq\u0000~\u0000a\u0001q\u0000~\u0000et\u0000\tmaxLength\u0000\u0000\u0000\u0010sr\u00000com.sun.msv.grammar.Express"
+"ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv."
+"util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000ZL\u0000\fnamespaceURIq\u0000"
+"~\u0000Zxpt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0000\u00b0\u00ca\fppsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Kxq\u0000~\u0000\u0003"
+"\u0000\u00b0\u00ca\u0001q\u0000~\u0000Opsq\u0000~\u0000Q\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000`q\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0000t"
+"q\u0000~\u0000fsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000ZL\u0000\fnamespaceURIq\u0000~\u0000Zxr\u0000\u001dcom.sun.msv.grammar.Name"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
+"-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000N\u0001psq\u0000~\u0000xt\u0000\u0003UIDq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u0000"
+"7[ppsq\u0000~\u0000J\u0002\u00007Pq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00007Eppsq\u0000~\u0000Q\u0001(\u00a2Uppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~"
+"\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0000\u00ffq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~"
+"\u0000H\u0000\u00d7\u0094\u00ebppsq\u0000~\u0000o\u0000\u00d7\u0094\u00e0q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0004N"
+"ameq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001h\u009aRppsq\u0000~\u0000J\u0001h\u009aGq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001h\u009a<ppsq\u0000~\u0000Q"
+"\u0000\u001f\u00cbEppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000est"
+"ring-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001H\u00ce\u00f2ppsq\u0000~\u0000o\u0001H\u00ce\u00e7q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000"
+"{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0005Titleq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001Z\u00ed8ppsq\u0000~\u0000J\u0001Z\u00ed-q\u0000~"
+"\u0000Op\u0000sq\u0000~\u0000\u0000\u0001Z\u00ed\"ppsq\u0000~\u0000Q\u0000A\u00cd\u0089ppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~"
+"\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001\u0019\u001f\u0094ppsq\u0000~\u0000o\u0001\u0019\u001f"
+"\u0089q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0007Subjectq\u0000~\u0000^q\u0000~\u0000~s"
+"q\u0000~\u0000H\u0002\u00d4\u0086\u0004ppsq\u0000~\u0000J\u0002\u00d4\u0085\u00f9q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00d4\u0085\u00eeppsq\u0000~\u0000Q\u0001)4\u00b1ppsq\u0000~\u0000Uq\u0000"
+"~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000"
+"~\u0000^sq\u0000~\u0000H\u0001\u00abQ8ppsq\u0000~\u0000o\u0001\u00abQ-q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000"
+"~\u0000xt\u0000\bCategoryq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u00e1\u00fb\u00a1ppsq\u0000~\u0000J\u0002\u00e1\u00fb\u0096q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002"
+"\u00e1\u00fb\u008bppsq\u0000~\u0000Q\u0001\u009fz\u00a1ppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000j"
+"sq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001B\u0080\u00e5ppsq\u0000~\u0000o\u0001B\u0080\u00daq\u0000~\u0000Opq\u0000~\u0000"
+"qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0007Companyq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002fJ\u0086pp"
+"sq\u0000~\u0000J\u0002fJ{q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002fJpppsq\u0000~\u0000Q\u0001I pppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000"
+"q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001\u001d"
+")\u00fbppsq\u0000~\u0000o\u0001\u001d)\u00f0q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0007Manag"
+"erq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u0089t\u00fdppsq\u0000~\u0000J\u0002\u0089t\u00f2q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u0089t\u00e7ppsq\u0000~\u0000Q\u0000"
+"0\u007f\fppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estr"
+"ing-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0002X\u00f5\u00d6ppsq\u0000~\u0000o\u0002X\u00f5\u00cbq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{"
+"q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0006Authorq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002m\u009b\u00b5ppsq\u0000~\u0000J\u0002m\u009b\u00aaq\u0000~"
+"\u0000Op\u0000sq\u0000~\u0000\u0000\u0002m\u009b\u009fppsq\u0000~\u0000Q\u0001Kn\u00d8ppsr\u0000%com.sun.msv.datatype.xsd.Dat"
+"eTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBas"
+"eType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\bdateTimeq\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0000\u00ddq"
+"\u0000~\u0000fsq\u0000~\u0000H\u0001\",\u00c2ppsq\u0000~\u0000o\u0001\",\u00b7q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq"
+"\u0000~\u0000xt\u0000\fCreationDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00f5\u00da4ppsq\u0000~\u0000J\u0001\u00f5\u00da)q\u0000~\u0000Op\u0000sq"
+"\u0000~\u0000\u0000\u0001\u00f5\u00da\u001eppsq\u0000~\u0000Q\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.xsd.IntegerTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Xxq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0007integerq\u0000~\u0000vsr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Wppq\u0000~\u0000v\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd."
+"NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0007decimalq\u0000~\u0000vq\u0000~\u0000\u00f0t\u0000\u000efract"
+"ionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0000\u00ebq\u0000~\u0000fsq\u0000~\u0000H\u0001\u0080\u00d7\u0013ppsq\u0000~\u0000o\u0001\u0080\u00d7\bq\u0000~\u0000"
+"Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\bRevisionq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000"
+"H\u0002\u00ec\u00b8Ippsq\u0000~\u0000J\u0002\u00ec\u00b8>q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00ec\u00b83ppq\u0000~\u0000\u00d9sq\u0000~\u0000H\u0001\u00a1IVppsq\u0000~\u0000o\u0001"
+"\u00a1IKq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\tLastSavedq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000H\u0002\u0006+eppsq\u0000~\u0000J\u0002\u0006+Zq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u0006+Oppsq\u0000~\u0000Q\u00001\u00ff3ppsr\u0000$"
+"com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000"
+"\u0007booleanq\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0001\u0007q\u0000~\u0000fsq\u0000~\u0000H\u0001\u00d4,\u0017ppsq\u0000~\u0000o\u0001\u00d4,\fq\u0000~\u0000"
+"Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0011ScheduleFromStartq\u0000~\u0000^q"
+"\u0000~\u0000~sq\u0000~\u0000H\u0002I\u00b9\u000fppsq\u0000~\u0000J\u0002I\u00b9\u0004q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002I\u00b8\u00f9ppq\u0000~\u0000\u00d9sq\u0000~\u0000H\u0000\u00feJ\u001c"
+"ppsq\u0000~\u0000o\u0000\u00feJ\u0011q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\tStartDa"
+"teq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0003\u00c9\u0092\u0016ppsq\u0000~\u0000J\u0003\u00c9\u0092\u000bq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0003\u00c9\u0092\u0000ppq\u0000~\u0000\u00d9sq"
+"\u0000~\u0000H\u0002~##ppsq\u0000~\u0000o\u0002~#\u0018q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000"
+"\nFinishDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0003\u00ca)^ppsq\u0000~\u0000J\u0003\u00ca)Sq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0003\u00ca)H"
+"ppsq\u0000~\u0000Q\u0001`{7ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000Vq\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000"
+"\u00eaq\u0000~\u0000\u00eat\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 "
+"?@\u0000\u0000\u0000\u0000\u0000\fsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Zxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0001("
+"t\u0000\u00017sq\u0000~\u0001(t\u0000\u00012sq\u0000~\u0001(t\u0000\u00016sq\u0000~\u0001(t\u0000\u00011sq\u0000~\u0001(t\u0000\u000210sq\u0000~\u0001(t\u0000\u00015sq\u0000~\u0001"
+"(t\u0000\u000211sq\u0000~\u0001(t\u0000\u00019sq\u0000~\u0001(t\u0000\u00014sq\u0000~\u0001(t\u0000\u00018sq\u0000~\u0001(t\u0000\u000212xq\u0000~\u0000jsq\u0000~\u0000kt"
+"\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0002i\u00ae\fppsq\u0000~\u0000o\u0002i\u00ae\u0001q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000"
+"xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000bFYStartDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u00bd\u00e9\u00f9ppsq"
+"\u0000~\u0000J\u0002\u00bd\u00e9\u00eeq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00bd\u00e9\u00e3ppq\u0000~\u0000\u00e7sq\u0000~\u0000H\u0002H\u00e6\u00d8ppsq\u0000~\u0000o\u0002H\u00e6\u00cdq\u0000~\u0000Op"
+"q\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0012CriticalSlackLimitq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000H\u0001H\u00ee\u00a0ppsq\u0000~\u0000J\u0001H\u00ee\u0095q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001H\u00ee\u008appq\u0000~\u0000\u00e7sq\u0000~\u0000H\u0000\u00d3\u00eb\u007fp"
+"psq\u0000~\u0000o\u0000\u00d3\u00ebtq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eCurrency"
+"Digitsq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00e0o\u00feppsq\u0000~\u0000J\u0001\u00e0o\u00f3q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00e0o\u00e8ppsq\u0000"
+"~\u0000Q\u0001K\u00ebPppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0000\u0014q\u0000~\u0000jsq\u0000~\u0000kt\u0000"
+"\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0000\u0094\u0084\u0093ppsq\u0000~\u0000o\u0000\u0094\u0084\u0088q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq"
+"\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eCurrencySymbolq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002%\u0010+pps"
+"q\u0000~\u0000J\u0002%\u0010 q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002%\u0010\u0015ppsq\u0000~\u0000Q\u0000\u0096\u009e\u00cbppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q"
+"\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sq\u0000~\u0001(t\u0000\u00013sq\u0000~\u0001(t\u0000\u00012sq\u0000~\u0001("
+"t\u0000\u00010sq\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001\u008eqEp"
+"psq\u0000~\u0000o\u0001\u008eq:q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0016Currency"
+"SymbolPositionq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001W\u00fb\u001cppsq\u0000~\u0000J\u0001W\u00fb\u0011q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001"
+"W\u00fb\u0006ppq\u0000~\u0000\u00e7sq\u0000~\u0000H\u0000\u00e2\u00f7\u00fbppsq\u0000~\u0000o\u0000\u00e2\u00f7\u00f0q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q"
+"\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000bCalendarUIDq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002 \u00ff2ppsq\u0000~\u0000J\u0002 \u00ff\'q\u0000~\u0000"
+"Op\u0000sq\u0000~\u0000\u0000\u0002 \u00ff\u001cppsq\u0000~\u0000Q\u0000\u001d\u00ca\\ppsr\u0000!com.sun.msv.datatype.xsd.Time"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00dbq\u0000~\u0000ft\u0000\u0004timeq\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0001\u0088q\u0000~\u0000fs"
+"q\u0000~\u0000H\u0002\u00034\u00bbppsq\u0000~\u0000o\u0002\u00034\u00b0q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt"
+"\u0000\u0010DefaultStartTimeq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001H\u00a6|ppsq\u0000~\u0000J\u0001H\u00a6qq\u0000~\u0000Op\u0000sq\u0000"
+"~\u0000\u0000\u0001H\u00a6fppq\u0000~\u0001\u0085sq\u0000~\u0000H\u0001*\u00dc\u0005ppsq\u0000~\u0000o\u0001*\u00db\u00faq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000"
+"~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0011DefaultFinishTimeq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002UN\u00b2ppsq\u0000~"
+"\u0000J\u0002UN\u00a7q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002UN\u009cppq\u0000~\u0000\u00e7sq\u0000~\u0000H\u0001\u00e0K\u0091ppsq\u0000~\u0000o\u0001\u00e0K\u0086q\u0000~\u0000Opq\u0000"
+"~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\rMinutesPerDayq\u0000~\u0000^q\u0000~\u0000~sq\u0000~"
+"\u0000H\u0000\u00fa\u0004\\ppsq\u0000~\u0000J\u0000\u00fa\u0004Qq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0000\u00fa\u0004Fppq\u0000~\u0000\u00e7sq\u0000~\u0000H\u0000\u0085\u0001;ppsq\u0000~\u0000o"
+"\u0000\u0085\u00010q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eMinutesPerWeekq"
+"\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001~j\u001eppsq\u0000~\u0000J\u0001~j\u0013q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001~j\bppq\u0000~\u0000\u00e7sq\u0000~\u0000"
+"H\u0001\tf\u00fdppsq\u0000~\u0000o\u0001\tf\u00f2q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\fDa"
+"ysPerMonthq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u00024\u0017Kppsq\u0000~\u0000J\u00024\u0017@q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u00024\u00175p"
+"psq\u0000~\u0000Q\u0000J\u0011\u008fppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?"
+"@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0001(t\u0000\u00012sq\u0000~\u0001(q\u0000~\u0001psq\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger"
+"-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001\u00ea\u0005\u00a1ppsq\u0000~\u0000o\u0001\u00ea\u0005\u0096q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~"
+"\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000fDefaultTaskTypeq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00ee\u000f5ppsq\u0000~\u0000J\u0001"
+"\u00ee\u000f*q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00ee\u000f\u001fppsq\u0000~\u0000Q\u0000\u00c5Cvppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000"
+"~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0001(t\u0000\u00013sq\u0000~\u0001(t\u0000\u00012sq\u0000~\u0001(t\u0000\u00011xq"
+"\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001(\u00cb\u00a4ppsq\u0000~\u0000o\u0001(\u00cb\u0099q\u0000~\u0000O"
+"pq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0017DefaultFixedCostAccrualq"
+"\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u0098\n\u00bfppsq\u0000~\u0000J\u0002\u0098\n\u00b4q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u0098\n\u00a9ppsq\u0000~\u0000Q\u0000Q\u00cf="
+"ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000f"
+"t\u0000\u0005floatq\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0001\u00dbq\u0000~\u0000fsq\u0000~\u0000H\u0002F;gppsq\u0000~\u0000o\u0002F;\\q\u0000~\u0000"
+"Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013DefaultStandardRateq\u0000~\u0000"
+"^q\u0000~\u0000~sq\u0000~\u0000H\u0002`\u001eZppsq\u0000~\u0000J\u0002`\u001eOq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002`\u001eDppq\u0000~\u0001\u00d7sq\u0000~\u0000H\u0002\u000e"
+"O\u0002ppsq\u0000~\u0000o\u0002\u000eN\u00f7q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013Defau"
+"ltOvertimeRateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u001f<\u00d1ppsq\u0000~\u0000J\u0001\u001f<\u00c6q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001"
+"\u001f<\u00bbppsq\u0000~\u0000Q\u0000+\u00ba\u0002ppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000"
+"\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0001(t\u0000\u00013sq\u0000~\u0001(t\u0000\u000241sq\u0000~\u0001(t\u0000\u000239sq\u0000~\u0001(t\u0000\u000236sq\u0000~\u0001("
+"t\u0000\u00016sq\u0000~\u0001(t\u0000\u00015sq\u0000~\u0001(t\u0000\u000237sq\u0000~\u0001(t\u0000\u000211sq\u0000~\u0001(t\u0000\u000240sq\u0000~\u0001(t\u0000\u00014sq\u0000"
+"~\u0001(t\u0000\u000212sq\u0000~\u0001(t\u0000\u000252sq\u0000~\u0001(t\u0000\u00017sq\u0000~\u0001(t\u0000\u000238sq\u0000~\u0001(t\u0000\u000220sq\u0000~\u0001(t\u0000\u0002"
+"42sq\u0000~\u0001(t\u0000\u000253sq\u0000~\u0001(t\u0000\u000243sq\u0000~\u0001(t\u0000\u000221sq\u0000~\u0001(t\u0000\u000210sq\u0000~\u0001(t\u0000\u000235sq\u0000"
+"~\u0001(t\u0000\u000244sq\u0000~\u0001(t\u0000\u00019sq\u0000~\u0001(t\u0000\u000219sq\u0000~\u0001(t\u0000\u00018sq\u0000~\u0001(t\u0000\u000251xq\u0000~\u0000jsq\u0000~"
+"\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0000\u00f3\u0082\u00b4ppsq\u0000~\u0000o\u0000\u00f3\u0082\u00a9q\u0000~\u0000Opq\u0000~\u0000qsq"
+"\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eDurationFormatq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0000\u00ed"
+"\u00db\u0090ppsq\u0000~\u0000J\u0000\u00ed\u00db\u0085q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0000\u00ed\u00dbzppsq\u0000~\u0000Q\u0000\"\n\u001cppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~"
+"\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sq\u0000~\u0001(t\u0000\u00013sq\u0000~\u0001(t\u0000\u00015s"
+"q\u0000~\u0001(t\u0000\u00012sq\u0000~\u0001(t\u0000\u00014sq\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq"
+"\u0000~\u0000^sq\u0000~\u0000H\u0000\u00cb\u00d1Yppsq\u0000~\u0000o\u0000\u00cb\u00d1Nq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq"
+"\u0000~\u0000xt\u0000\nWorkFormatq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00ac\u0013hppsq\u0000~\u0000J\u0001\u00ac\u0013]q\u0000~\u0000Op\u0000sq\u0000~"
+"\u0000\u0000\u0001\u00ac\u0013Rppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0001z\u0014\u001appsq\u0000~\u0000o\u0001z\u0014\u000fq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~"
+"\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013EditableActualCostsq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00e7\u008a\u0016ppsq\u0000"
+"~\u0000J\u0001\u00e7\u008a\u000bq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00e7\u008a\u0000ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u00b5\u008a\u00c8ppsq\u0000~\u0000o\u0001\u00b5\u008a\u00bdq\u0000~\u0000Opq"
+"\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010HonorConstraintsq\u0000~\u0000^q\u0000~\u0000~"
+"sq\u0000~\u0000H\u0001\u00ec\u00a4\u00cbppsq\u0000~\u0000J\u0001\u00ec\u00a4\u00c0q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00ec\u00a4\u00b5ppsq\u0000~\u0000Q\u0000\u0014\u00fe\'ppsq\u0000~\u0001\"q"
+"\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0001(q\u0000~\u0001psq"
+"\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001\u00d7\u00a6\u0089ppsq\u0000~\u0000"
+"o\u0001\u00d7\u00a6~q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0011EarnedValueMet"
+"hodq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\b\u0016\u00feppsq\u0000~\u0000J\u0002\b\u0016\u00f3q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\b\u0016\u00e8ppq\u0000~\u0001\u0004s"
+"q\u0000~\u0000H\u0001\u00d6\u0017\u00b0ppsq\u0000~\u0000o\u0001\u00d6\u0017\u00a5q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt"
+"\u0000\u001bInsertedProjectsLikeSummaryq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u0014\u0084\u0012ppsq\u0000~\u0000J\u0001\u0014\u0084"
+"\u0007q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u0014\u0083\u00fcppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0000\u00e2\u0084\u00c4ppsq\u0000~\u0000o\u0000\u00e2\u0084\u00b9q\u0000~\u0000Opq\u0000~\u0000qsq"
+"\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015MultipleCriticalPathsq\u0000~\u0000^q\u0000~\u0000~s"
+"q\u0000~\u0000H\u00011\u0017\u00f8ppsq\u0000~\u0000J\u00011\u0017\u00edq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u00011\u0017\u00e2ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0000\u00ff\u0018\u00aappsq\u0000"
+"~\u0000o\u0000\u00ff\u0018\u009fq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0014NewTasksEffo"
+"rtDrivenq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00d1\u00e0\u00aappsq\u0000~\u0000J\u0001\u00d1\u00e0\u009fq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00d1\u00e0\u0094ppq"
+"\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u009f\u00e1\\ppsq\u0000~\u0000o\u0001\u009f\u00e1Qq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq"
+"\u0000~\u0000xt\u0000\u0011NewTasksEstimatedq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\r\u00bc\u009fppsq\u0000~\u0000J\u0001\r\u00bc\u0094q\u0000~\u0000"
+"Op\u0000sq\u0000~\u0000\u0000\u0001\r\u00bc\u0089ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0000\u00db\u00bdQppsq\u0000~\u0000o\u0000\u00db\u00bdFq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq"
+"\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015SplitsInProgressTasksq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H"
+"\u0000\u00fb\u001f\u0087ppsq\u0000~\u0000J\u0000\u00fb\u001f|q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0000\u00fb\u001fqppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0000\u00c9 9ppsq\u0000~\u0000o\u0000\u00c9"
+" .q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010SpreadActualCostq"
+"\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002eXvppsq\u0000~\u0000J\u0002eXkq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002eX`ppq\u0000~\u0001\u0004sq\u0000~\u0000"
+"H\u00023Y(ppsq\u0000~\u0000o\u00023Y\u001dq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015Sp"
+"readPercentCompleteq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u009a(\u001bppsq\u0000~\u0000J\u0002\u009a(\u0010q\u0000~\u0000Op\u0000sq"
+"\u0000~\u0000\u0000\u0002\u009a(\u0005ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0002h(\u00cdppsq\u0000~\u0000o\u0002h(\u00c2q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q"
+"\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013TaskUpdatesResourceq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u009eQ)pps"
+"q\u0000~\u0000J\u0002\u009eQ\u001eq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u009eQ\u0013ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0002lQ\u00dbppsq\u0000~\u0000o\u0002lQ\u00d0q\u0000~\u0000O"
+"pq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000fFiscalYearStartq\u0000~\u0000^q\u0000~\u0000"
+"~sq\u0000~\u0000H\u0001\u0088v\u0092ppsq\u0000~\u0000J\u0001\u0088v\u0087q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u0088v|ppsq\u0000~\u0000Q\u0000\u00df\u00d6\u0013ppsq\u0000~\u0001\""
+"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0007sq\u0000~\u0001(t\u0000\u00013sq"
+"\u0000~\u0001(t\u0000\u00015sq\u0000~\u0001(t\u0000\u00012sq\u0000~\u0001(q\u0000~\u0001psq\u0000~\u0001(t\u0000\u00014sq\u0000~\u0001(t\u0000\u00016sq\u0000~\u0001(t\u0000\u00011x"
+"q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0000\u00a8\u00a0dppsq\u0000~\u0000o\u0000\u00a8\u00a0Yq\u0000~\u0000"
+"Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\fWeekStartDayq\u0000~\u0000^q\u0000~\u0000~s"
+"q\u0000~\u0000H\u0002Y4`ppsq\u0000~\u0000J\u0002Y4Uq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002Y4Jppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0002\'5\u0012ppsq\u0000"
+"~\u0000o\u0002\'5\u0007q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015MoveComplete"
+"dEndsBackq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002/=\u00a2ppsq\u0000~\u0000J\u0002/=\u0097q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002/=\u008cpp"
+"q\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u00fd>Tppsq\u0000~\u0000o\u0001\u00fd>Iq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~s"
+"q\u0000~\u0000xt\u0000\u0017MoveRemainingStartsBackq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00ff\u00deXppsq\u0000~\u0000J\u0001"
+"\u00ff\u00deMq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00ff\u00deBppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u00cd\u00df\nppsq\u0000~\u0000o\u0001\u00cd\u00de\u00ffq\u0000~\u0000Opq\u0000~\u0000q"
+"sq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u001aMoveRemainingStartsForwardq\u0000~\u0000"
+"^q\u0000~\u0000~sq\u0000~\u0000H\u0002W%uppsq\u0000~\u0000J\u0002W%jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002W%_ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0002%"
+"&\'ppsq\u0000~\u0000o\u0002%&\u001cq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0018MoveC"
+"ompletedEndsForwardq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002x,\u00f2ppsq\u0000~\u0000J\u0002x,\u00e7q\u0000~\u0000Op\u0000sq"
+"\u0000~\u0000\u0000\u0002x,\u00dcppsq\u0000~\u0000Q\u0001\u00958\u00a5ppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~"
+"\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u000bsq\u0000~\u0001(t\u0000\u000210sq\u0000~\u0001(t\u0000\u00013sq\u0000~\u0001(t\u0000\u00015sq\u0000~\u0001(t\u0000\u00017sq\u0000"
+"~\u0001(t\u0000\u00012sq\u0000~\u0001(q\u0000~\u0001psq\u0000~\u0001(t\u0000\u00019sq\u0000~\u0001(t\u0000\u00014sq\u0000~\u0001(t\u0000\u00018sq\u0000~\u0001(t\u0000\u00016sq"
+"\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0000\u00e2\u00f42ppsq\u0000~\u0000"
+"o\u0000\u00e2\u00f4\'q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0016BaselineForEar"
+"nedValueq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002%\u00c61ppsq\u0000~\u0000J\u0002%\u00c6&q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002%\u00c6\u001bppq"
+"\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u00f3\u00c6\u00e3ppsq\u0000~\u0000o\u0001\u00f3\u00c6\u00d8q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq"
+"\u0000~\u0000xt\u0000\u001bAutoAddNewResourcesAndTasksq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u00da\u00d5\u00c1ppsq\u0000~"
+"\u0000J\u0002\u00da\u00d5\u00b6q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00da\u00d5\u00abppq\u0000~\u0000\u00d9sq\u0000~\u0000H\u0001\u008ff\u00ceppsq\u0000~\u0000o\u0001\u008ff\u00c3q\u0000~\u0000Opq\u0000"
+"~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\nStatusDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002"
+"\u00de\u00f1\\ppsq\u0000~\u0000J\u0002\u00de\u00f1Qq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00de\u00f1Fppq\u0000~\u0000\u00d9sq\u0000~\u0000H\u0001\u0093\u0082ippsq\u0000~\u0000o\u0001\u0093\u0082"
+"^q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000bCurrentDateq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000H\u0002V/wppsq\u0000~\u0000J\u0002V/lq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002V/appq\u0000~\u0001\u0004sq\u0000~\u0000H\u0002$0)p"
+"psq\u0000~\u0000o\u0002$0\u001eq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0019Microsof"
+"tProjectServerURLq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u000b\u00d0\'ppsq\u0000~\u0000J\u0001\u000b\u00d0\u001cq\u0000~\u0000Op\u0000sq\u0000~"
+"\u0000\u0000\u0001\u000b\u00d0\u0011ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0000\u00d9\u00d0\u00d9ppsq\u0000~\u0000o\u0000\u00d9\u00d0\u00ceq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~"
+"\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\bAutolinkq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00fc;\u0088ppsq\u0000~\u0000J\u0001\u00fc;}q\u0000~\u0000"
+"Op\u0000sq\u0000~\u0000\u0000\u0001\u00fc;rppsq\u0000~\u0000Q\u00006\u00c9\u00e5ppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001"
+"%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0001(q\u0000~\u0001psq\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000fint"
+"eger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0001\u00c5q\u0088ppsq\u0000~\u0000o\u0001\u00c5q}q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000"
+"{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010NewTaskStartDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001=\u00c8kppsq"
+"\u0000~\u0000J\u0001=\u00c8`q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001=\u00c8Uppsq\u0000~\u0000Q\u0000E4\u00c2ppsq\u0000~\u0001\"q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000"
+"~\u0000\u00eaq\u0000~\u0000\u00eaq\u0000~\u0001%sq\u0000~\u0001&w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0001(q\u0000~\u0001psq\u0000~\u0001(t\u0000\u00011xq\u0000~\u0000j"
+"sq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000H\u0000\u00f8\u0093\u008eppsq\u0000~\u0000o\u0000\u00f8\u0093\u0083q\u0000~\u0000Opq\u0000~"
+"\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013DefaultTaskEVMethodq\u0000~\u0000^q\u0000~\u0000"
+"~sq\u0000~\u0000H\u0002]\u001b\u0003ppsq\u0000~\u0000J\u0002]\u001a\u00f8q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002]\u001a\u00edppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0002+\u001b\u00b5pps"
+"q\u0000~\u0000o\u0002+\u001b\u00aaq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0017ProjectExt"
+"ernallyEditedq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u0014\u0010#ppsq\u0000~\u0000J\u0002\u0014\u0010\u0018q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u0014"
+"\u0010\rppq\u0000~\u0000\u00d9sq\u0000~\u0000H\u0000\u00c8\u00a10ppsq\u0000~\u0000o\u0000\u00c8\u00a1%q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000"
+"~\u0000~sq\u0000~\u0000xt\u0000\u0014ExtendedCreationDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00bbr\u00bappsq\u0000~\u0000J"
+"\u0001\u00bbr\u00afq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00bbr\u00a4ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u0089slppsq\u0000~\u0000o\u0001\u0089saq\u0000~\u0000Opq\u0000~\u0000"
+"qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\rActualsInSyncq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H"
+"\u0002\u0014N\u00a8ppsq\u0000~\u0000J\u0002\u0014N\u009dq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u0014N\u0092ppq\u0000~\u0001\u0004sq\u0000~\u0000H\u0001\u00e2OZppsq\u0000~\u0000o\u0001\u00e2"
+"OOq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0014RemoveFilePropert"
+"iesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00e7F/ppsq\u0000~\u0000J\u0001\u00e7F$q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00e7F\u0019ppq\u0000~\u0001\u0004s"
+"q\u0000~\u0000H\u0001\u00b5F\u00e1ppsq\u0000~\u0000o\u0001\u00b5F\u00d6q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt"
+"\u0000\fAdminProjectq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00cfP\u008dppsq\u0000~\u0000J\u0001\u00cfP\u0082q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001"
+"\u00cfPwppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000~\u0000H\u0000\u00ee&\"ppsr\u0000 com.sun.msv.grammar.OneOrM"
+"oreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000~\u0000Opsr\u00002com.sun.msv.g"
+"rammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000"
+"~\u0000\u007fq\u0000~\u0003\u0080sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"yq\u0000~\u0000~sq\u0000~\u0000xt\u00009com.tapsterrock.mspdi.schema.ProjectType.Outl"
+"ineCodesTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq"
+"\u0000~\u0000H\u0000\u00e1*Eppsq\u0000~\u0000o\u0000\u00e1*:q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000"
+"\fOutlineCodesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0002\u00d0\u00cd\u0001ppsq\u0000~\u0000J\u0002\u00d0\u00cc\u00f6q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0002\u00d0"
+"\u00cc\u00ebppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000~\u0000H\u0000\u00ee&\"ppsq\u0000~\u0003{\u0000\u00ee&\u0017q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000~\u0000O"
+"pq\u0000~\u0003\u0080q\u0000~\u0003\u0082q\u0000~\u0000~sq\u0000~\u0000xt\u00005com.tapsterrock.mspdi.schema.Projec"
+"tType.WBSMasksTypeq\u0000~\u0003\u0085sq\u0000~\u0000H\u0001\u00e2\u00a6\u00b9ppsq\u0000~\u0000o\u0001\u00e2\u00a6\u00aeq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~"
+"\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\bWBSMasksq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u00fb\u009d\u00deppsq\u0000~"
+"\u0000J\u0001\u00fb\u009d\u00d3q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u00fb\u009d\u00c8ppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000~\u0000H\u0000\u00ee&\"ppsq\u0000~\u0003{\u0000\u00ee&\u0017"
+"q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000~\u0000Opq\u0000~\u0003\u0080q\u0000~\u0003\u0082q\u0000~\u0000~sq\u0000~\u0000xt\u0000?com.tapsterroc"
+"k.mspdi.schema.ProjectType.ExtendedAttributesTypeq\u0000~\u0003\u0085sq\u0000~\u0000H"
+"\u0001\rw\u0096ppsq\u0000~\u0000o\u0001\rw\u008bq\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0012Ext"
+"endedAttributesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u008fhUppsq\u0000~\u0000J\u0001\u008fhJq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000"
+"\u0001\u008fh?ppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000~\u0000H\u0000\u00ee&\"ppsq\u0000~\u0003{\u0000\u00ee&\u0017q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000~"
+"\u0000Opq\u0000~\u0003\u0080q\u0000~\u0003\u0082q\u0000~\u0000~sq\u0000~\u0000xt\u00006com.tapsterrock.mspdi.schema.Proj"
+"ectType.CalendarsTypeq\u0000~\u0003\u0085sq\u0000~\u0000H\u0000\u00a1B\rppsq\u0000~\u0000o\u0000\u00a1B\u0002q\u0000~\u0000Opq\u0000~\u0000qs"
+"q\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\tCalendarsq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0003g\u00a7\tpp"
+"sq\u0000~\u0000J\u0003g\u00a6\u00feq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0003g\u00a6\u00f3ppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000~\u0000H\u0000\u00ee&\"ppsq\u0000~\u0003{"
+"\u0000\u00ee&\u0017q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000~\u0000Opq\u0000~\u0003\u0080q\u0000~\u0003\u0082q\u0000~\u0000~sq\u0000~\u0000xt\u00002com.tapste"
+"rrock.mspdi.schema.ProjectType.TasksTypeq\u0000~\u0003\u0085sq\u0000~\u0000H\u0002y\u0080\u00c1ppsq\u0000"
+"~\u0000o\u0002y\u0080\u00b6q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0005Tasksq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000H\u0001\u0094\u00d8\u001bppsq\u0000~\u0000J\u0001\u0094\u00d8\u0010q\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000\u0001\u0094\u00d8\u0005ppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000"
+"~\u0000H\u0000\u00ee&\"ppsq\u0000~\u0003{\u0000\u00ee&\u0017q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000~\u0000Opq\u0000~\u0003\u0080q\u0000~\u0003\u0082q\u0000~\u0000~sq\u0000~"
+"\u0000xt\u00006com.tapsterrock.mspdi.schema.ProjectType.ResourcesTypeq"
+"\u0000~\u0003\u0085sq\u0000~\u0000H\u0000\u00a6\u00b1\u00d3ppsq\u0000~\u0000o\u0000\u00a6\u00b1\u00c8q\u0000~\u0000Opq\u0000~\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq"
+"\u0000~\u0000xt\u0000\tResourcesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H\u0001\u0086\u0005\u000fppsq\u0000~\u0000J\u0001\u0086\u0005\u0004q\u0000~\u0000Op\u0000sq\u0000~\u0000"
+"\u0000\u0001\u0086\u0004\u00f9ppsq\u0000~\u0000J\u0000\u00ee&-pp\u0000sq\u0000~\u0000H\u0000\u00ee&\"ppsq\u0000~\u0003{\u0000\u00ee&\u0017q\u0000~\u0000Opsq\u0000~\u0000o\u0000\u00ee&\u0014q\u0000"
+"~\u0000Opq\u0000~\u0003\u0080q\u0000~\u0003\u0082q\u0000~\u0000~sq\u0000~\u0000xt\u00008com.tapsterrock.mspdi.schema.Pro"
+"jectType.AssignmentsTypeq\u0000~\u0003\u0085sq\u0000~\u0000H\u0000\u0097\u00de\u00c7ppsq\u0000~\u0000o\u0000\u0097\u00de\u00bcq\u0000~\u0000Opq\u0000~"
+"\u0000qsq\u0000~\u0000xq\u0000~\u0000{q\u0000~\u0000|q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000bAssignmentsq\u0000~\u0000^q\u0000~\u0000~sr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthre"
+"sholdL\u0000\u0006parentq\u0000~\u0003\u00e0[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressi"
+"on;xp\u0000\u0000\u0001\u001d\u0000\u0000\u0001\u00ccpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002"
+"\u0000\u0000xp\u0000\u0000\u0005\u00ffppppppq\u0000~\u0002\u00aapq\u0000~\u0001[ppppppppppppppppppq\u0000~\u0003\u00dappq\u0000~\u0001Yppppp"
+"ppppppppppppppq\u0000~\u0000.ppppppppppppppppppppppq\u0000~\u0003Qpppppppppppppp"
+"ppppppppppppq\u0000~\u0001Lq\u0000~\u0001|ppq\u0000~\u0003\u00bepppppppppppppppppq\u0000~\u0001zpq\u0000~\u0000\u00adppp"
+"pq\u0000~\u0001\u00ddpppppppppq\u0000~\u0002mppq\u0000~\u0002\u00c6pppppq\u0000~\u0000\u0015pppppppppppq\u0000~\u0000\u001cq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u0006pq\u0000~\u0002\u00c4pppq\u0000~\u0001\u0010pppppq\u0000~\u0000\u00b9ppppppppppppq\u0000~\u0003(ppq\u0000~\u0001\u000eppppq\u0000~\u0000\u00a8"
+"pppppq\u0000~\u0003Xpppppppq\u0000~\u0003&pppppppq\u0000~\u0000\u00a6ppppq\u0000~\u0002Tq\u0000~\u0003Vq\u0000~\u0000\u0089ppppppp"
+"ppppppppq\u0000~\u0000Gppq\u0000~\u0000\u001fq\u0000~\u0002Rppppq\u0000~\u0000\u0012ppppppppppppppppq\u0000~\u0003appppp"
+"pq\u0000~\u0000\u00fbq\u0000~\u0000\u0018pppppppppppq\u0000~\u0002\u009cppq\u0000~\u0003\u008dppq\u0000~\u0003 q\u0000~\u0002-pq\u0000~\u0000\u00f9pppppppp"
+"ppppq\u0000~\u0002\u009aq\u0000~\u0002upq\u0000~\u0000\u00ccq\u0000~\u0003\u008bpq\u0000~\u0003\u001eq\u0000~\u0002+ppppq\u0000~\u0001\u00aapppppppppq\u0000~\u0000\u00d8q"
+"\u0000~\u0002\u00depq\u0000~\u0000\u00capq\u0000~\u0002\u00a5q\u0000~\u0002Lpppppppppq\u0000~\u0001\u00bcpppppq\u0000~\u0000\u00d6q\u0000~\u0002\u00dcpppq\u0000~\u0002Jpp"
+"ppq\u0000~\u0003\u0011ppppppppppppppppppppq\u0000~\u0000,pppppq\u0000~\u0002\u0084q\u0000~\u0000$pppppq\u0000~\u00009q\u0000~"
+"\u00004pppppppppppq\u0000~\u0000\tpq\u0000~\u0002\u0082pppppppppppppppppppq\u0000~\u0001\u00e4pppq\u0000~\u0001\u0018pppp"
+"q\u0000~\u0001upppq\u0000~\u0000?ppppppppq\u0000~\u0001\u00e2ppq\u0000~\u0000\u0095q\u0000~\u0001\u0016pq\u0000~\u0003\bppq\u0000~\u0003qpq\u0000~\u0000\u00e6pq\u0000"
+"~\u0003\u0086q\u0000~\u0000\u0014pq\u0000~\u0001}pppppppppppq\u0000~\u0003\u0006ppppq\u0000~\u0000\u00e4ppppppppppppq\u0000~\u0000\u000epppp"
+"q\u0000~\u0001\u00a1pppppppq\u0000~\u0001\u0084ppppppppppppq\u0000~\u0000Pq\u0000~\u0001\u009fppq\u0000~\u0002\u00d7ppppq\u0000~\u0002eq\u0000~\u0001\u0082"
+"pppppppppppq\u0000~\u0000Ipppppppq\u0000~\u0001\tppppppppppppppppppppppppppq\u0000~\u0002|p"
+"ppq\u0000~\u0002\u00e6pppq\u0000~\u0000)ppppppppppppq\u0000~\u0000\u0010q\u0000~\u0002zpppq\u0000~\u0002\u00e4ppppppppppppppp"
+"q\u0000~\u0003\u009bpppppq\u0000~\u0000\u00a1pppppppq\u0000~\u0000:ppppq\u0000~\u0002\u00bfppq\u0000~\u0003\u0099pppppppppppq\u0000~\u0000/p"
+"ppppppppppppppq\u0000~\u0001\u00ecpppq\u0000~\u0000%q\u0000~\u0001\u008apq\u0000~\u0000\u0013q\u0000~\u0002\u0094pppppppppppq\u0000~\u0002Dp"
+"q\u0000~\u0001\u00eappppq\u0000~\u0000=ppq\u0000~\u0002\u0092pppppppq\u0000~\u0001\u00e5pppq\u0000~\u0002Bpppq\u0000~\u0002\u00ceppppppppppq"
+"\u0000~\u0003\u00a9ppppppppppq\u0000~\u0002\u00ccpq\u0000~\u0000>ppppppppq\u0000~\u0003\u00a7ppq\u0000~\u0000!pppq\u0000~\u0000\u0017pppq\u0000~\u0000"
+"\u0007ppq\u0000~\u0002\u00c7pppppppppppppppq\u0000~\u0001Dppppq\u0000~\u0001 ppppq\u0000~\u0000Bpppppppppq\u0000~\u0001\u00cf"
+"pppq\u0000~\u00039ppq\u0000~\u0001\u001epq\u0000~\u0003)ppppq\u0000~\u00002pppq\u0000~\u0001\u0091pq\u0000~\u0003\u0094pppppppq\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u00f4ppppq\u0000~\u0000\u001apq\u0000~\u0001\u00b1ppq\u0000~\u0001\u008fppppq\u0000~\u0002&pq\u0000~\u0002\u008cpq\u0000~\u0003@pppq\u0000~\u0003hpppppq\u0000"
+"~\u0001\u00afppppppq\u0000~\u0001Sppq\u0000~\u0002\u008aq\u0000~\u0001\u00a2q\u0000~\u0003>pppq\u0000~\u0003fppppppppppppq\u0000~\u0001Qpppp"
+"q\u0000~\u0000<pppq\u0000~\u0001\u00c3ppppq\u0000~\u0003\u00c5pq\u0000~\u0000\u001bpq\u0000~\u0003\u0010pq\u0000~\u0002\u009dpppppq\u0000~\u0003!ppppq\u0000~\u0001\u00c1p"
+"pppq\u0000~\u0003\u00c3pppq\u0000~\u0003\u000eppppppppppppppppq\u0000~\u0003\u0019pppq\u0000~\u0000(pppq\u0000~\u0002\u00dfpppq\u0000~\u0002"
+"Mpppppppppppppq\u0000~\u0003}q\u0000~\u0003\u0090q\u0000~\u0003\u009eq\u0000~\u0003\u00acq\u0000~\u0003\u00baq\u0000~\u0003\u00c8q\u0000~\u0003\u00d6ppq\u0000~\u0003Ppq\u0000~"
+"\u0003zq\u0000~\u0003\u008fq\u0000~\u0003\u009dq\u0000~\u0001\u0092q\u0000~\u0003\u00abq\u0000~\u0003\u00b9q\u0000~\u0003\u00c7q\u0000~\u0003\u00d5pppppq\u0000~\u0000#ppppppq\u0000~\u0003Npp"
+"ppppppq\u0000~\u0002\u0085pppppppppppppq\u0000~\u0003\u00d3ppppppq\u0000~\u0003\u0001pppq\u0000~\u0000\u00d1pppppppppq\u0000~"
+"\u0002lq\u0000~\u0003\u00d1q\u0000~\u0000Cpppppppppppppppppppq\u0000~\u0002jppppq\u0000~\u00030ppppq\u0000~\u0001\u0099ppq\u0000~\u0000"
+"+q\u0000~\u0003\tppppppppppppq\u0000~\u0003.ppppq\u0000~\u0001\u0097pq\u0000~\u0003\u00b7pppppppppppppq\u0000~\u0000\u0090pppp"
+"pppq\u0000~\u0003\u00b5q\u0000~\u0000\u0011ppq\u0000~\u0000Apppppq\u0000~\u0000&pppq\u0000~\u0000\u008epppppppppppppq\u0000~\u0000Eq\u0000~\u0001"
+"\u0011pq\u0000~\u0003\u00a2ppppppppq\u0000~\u0000\bppppppppq\u0000~\u0003`pppppq\u0000~\u0000\u00b4ppppppq\u0000~\u0003Ypppppp"
+"q\u0000~\u0000\u0019pq\u0000~\u0003^ppq\u0000~\u0000\'q\u0000~\u0000\u0084pq\u0000~\u0000\u00b2q\u0000~\u0000\u000bpq\u0000~\u0002}ppppppppq\u0000~\u0000\u0005ppq\u0000~\u0002t"
+"pppq\u0000~\u0000\u0082ppppppppppppppq\u0000~\u0001Tppq\u0000~\u0002rppq\u0000~\u00003q\u0000~\u0002\u00a4q\u0000~\u0000\fpppq\u0000~\u0000\u00c0p"
+"pppppppppq\u0000~\u0000\u00fcpppq\u0000~\u00006q\u0000~\u0001Kq\u0000~\u0002\u00a2q\u0000~\u0003\u00b0pppq\u0000~\u0000\u00beppppq\u0000~\u0000\u009cppppq\u0000"
+"~\u0003Ipppppq\u0000~\u0001Ipppq\u0000~\u00008q\u0000~\u0000\npppppq\u0000~\u0000\u009apppppppq\u0000~\u0002\u0095ppppppppppq\u0000"
+"~\u0000\u00dfq\u0000~\u0002Eppppppq\u0000~\u00000q\u0000~\u00007pq\u0000~\u0002]pppppppppppppppq\u0000~\u0002\u00cfppq\u0000~\u00001ppp"
+"ppppppq\u0000~\u0000;pppppppq\u0000~\u0002=q\u0000~\u0001`ppppq\u0000~\u0003pppppq\u0000~\u0000Dppppq\u0000~\u0000\rq\u0000~\u0001\u00d6"
+"ppq\u0000~\u0000Fpppppq\u0000~\u00005pq\u0000~\u0003npppppppppq\u0000~\u0000*q\u0000~\u0001\u00d4ppppppppq\u0000~\u0000\"q\u0000~\u0000n"
+"pq\u0000~\u0000\u00c5pppppq\u0000~\u0001\u0019pppppppppppppppq\u0000~\u0002\u00d6q\u0000~\u0003\u00ccpppq\u0000~\u0002dpq\u0000~\u0001gpppq\u0000"
+"~\u0001\u009apppppppppq\u0000~\u0000-q\u0000~\u0002\u00d4pppq\u0000~\u0000 q\u0000~\u0002bq\u0000~\u0001\u0003q\u0000~\u0001eq\u0000~\u0003xpppppq\u0000~\u0002\u008d"
+"pppppq\u0000~\u0003ippppq\u0000~\u0001\u00a9q\u0000~\u0001\u0001q\u0000~\u0000@q\u0000~\u0003vpppppq\u0000~\u0003\u0018ppppppppppppq\u0000~\u0001"
+"\u00a7ppppppq\u0000~\u0000\u001epq\u0000~\u0003\u0016pq\u0000~\u0002\u00acppppppq\u0000~\u0000\u001dpppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class AssignmentsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Assignment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.class);
        }

        public java.util.List getAssignment() {
            return _Assignment;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Assignment.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Assignment");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Assignment.get(idx_0 ++)), "Assignment");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Assignment.get(idx_1 ++)), "Assignment");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Assignment.get(idx1 ++)), "Assignment");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Assignment.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Assignment.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0001\u009e\u0014\u00fdppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u009e\u0014\u00f2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u009e\u0014\u00efq\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u009e\u0014\u00e4ppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000Gcom.tapsterrock.mspdi.schema.ProjectType.AssignmentsTy"
+"pe.AssignmentTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-eleme"
+"ntssq\u0000~\u0000\u0000\u0000\u00af\u00ee\u00b2ppsq\u0000~\u0000\u0014\u0000\u00af\u00ee\u00a7q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeName"
+"q\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004type"
+"t\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\nAs"
+"signmentt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthres"
+"holdL\u0000\u0006parentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressio"
+"n;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000"
+"\u0000xp\u0000\u0000\u0000\u00bfq\u0000~\u0000#pppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppq\u0000~\u0000\u0013ppppppppppq\u0000~\u0000\u0012ppppppppppppp"
+"ppq\u0000~\u0000\u0010pppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005pp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class AssignmentTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.util.Calendar _Resume;
            protected java.math.BigInteger _TaskUID;
            protected boolean has_FixedMaterial;
            protected boolean _FixedMaterial;
            protected java.lang.String _Work;
            protected java.math.BigInteger _FinishVariance;
            protected java.math.BigInteger _StartVariance;
            protected java.lang.String _HyperlinkSubAddress;
            protected java.lang.String _RemainingOvertimeWork;
            protected java.lang.String _ActualWorkProtected;
            protected java.math.BigInteger _CostRateTable;
            protected java.lang.String _RemainingWork;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected java.lang.String _HyperlinkAddress;
            protected boolean has_Milestone;
            protected boolean _Milestone;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected java.math.BigDecimal _ActualCost;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected boolean has_UpdateNeeded;
            protected boolean _UpdateNeeded;
            protected java.lang.String _ActualOvertimeWorkProtected;
            protected java.math.BigInteger _LevelingDelay;
            protected java.math.BigDecimal _RemainingCost;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected java.lang.String _ActualOvertimeWork;
            protected java.math.BigInteger _LevelingDelayFormat;
            protected com.sun.xml.bind.util.ListImpl _Baseline = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.lang.String _Hyperlink;
            protected boolean has_LinkedFields;
            protected boolean _LinkedFields;
            protected com.sun.xml.bind.util.ListImpl _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected boolean has_CostVariance;
            protected float _CostVariance;
            protected boolean has_Overallocated;
            protected boolean _Overallocated;
            protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected boolean has_HasFixedRateUnits;
            protected boolean _HasFixedRateUnits;
            protected java.math.BigInteger _ResourceUID;
            protected java.lang.String _RegularWork;
            protected java.lang.String _OvertimeWork;
            protected java.math.BigInteger _WorkContour;
            protected boolean has_Units;
            protected float _Units;
            protected java.math.BigInteger _BookingType;
            protected boolean has_ResponsePending;
            protected boolean _ResponsePending;
            protected java.math.BigInteger _Delay;
            protected boolean has_Confirmed;
            protected boolean _Confirmed;
            protected java.util.Calendar _Stop;
            protected java.lang.String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.Calendar _ActualStart;
            protected java.lang.String _ActualWork;
            protected java.math.BigInteger _UID;
            protected boolean has_VAC;
            protected float _VAC;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.util.Calendar _ActualFinish;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.util.Calendar _CreationDate;
            protected boolean has_CV;
            protected float _CV;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.class);
            }

            public java.util.Calendar getResume() {
                return _Resume;
            }

            public void setResume(java.util.Calendar value) {
                _Resume = value;
            }

            public java.math.BigInteger getTaskUID() {
                return _TaskUID;
            }

            public void setTaskUID(java.math.BigInteger value) {
                _TaskUID = value;
            }

            public boolean isFixedMaterial() {
                return _FixedMaterial;
            }

            public void setFixedMaterial(boolean value) {
                _FixedMaterial = value;
                has_FixedMaterial = true;
            }

            public java.lang.String getWork() {
                return _Work;
            }

            public void setWork(java.lang.String value) {
                _Work = value;
            }

            public java.math.BigInteger getFinishVariance() {
                return _FinishVariance;
            }

            public void setFinishVariance(java.math.BigInteger value) {
                _FinishVariance = value;
            }

            public java.math.BigInteger getStartVariance() {
                return _StartVariance;
            }

            public void setStartVariance(java.math.BigInteger value) {
                _StartVariance = value;
            }

            public java.lang.String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(java.lang.String value) {
                _HyperlinkSubAddress = value;
            }

            public java.lang.String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(java.lang.String value) {
                _RemainingOvertimeWork = value;
            }

            public java.lang.String getActualWorkProtected() {
                return _ActualWorkProtected;
            }

            public void setActualWorkProtected(java.lang.String value) {
                _ActualWorkProtected = value;
            }

            public java.math.BigInteger getCostRateTable() {
                return _CostRateTable;
            }

            public void setCostRateTable(java.math.BigInteger value) {
                _CostRateTable = value;
            }

            public java.lang.String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(java.lang.String value) {
                _RemainingWork = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public java.lang.String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(java.lang.String value) {
                _HyperlinkAddress = value;
            }

            public boolean isMilestone() {
                return _Milestone;
            }

            public void setMilestone(boolean value) {
                _Milestone = value;
                has_Milestone = true;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public boolean isUpdateNeeded() {
                return _UpdateNeeded;
            }

            public void setUpdateNeeded(boolean value) {
                _UpdateNeeded = value;
                has_UpdateNeeded = true;
            }

            public java.lang.String getActualOvertimeWorkProtected() {
                return _ActualOvertimeWorkProtected;
            }

            public void setActualOvertimeWorkProtected(java.lang.String value) {
                _ActualOvertimeWorkProtected = value;
            }

            public java.math.BigInteger getLevelingDelay() {
                return _LevelingDelay;
            }

            public void setLevelingDelay(java.math.BigInteger value) {
                _LevelingDelay = value;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public java.lang.String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(java.lang.String value) {
                _ActualOvertimeWork = value;
            }

            public java.math.BigInteger getLevelingDelayFormat() {
                return _LevelingDelayFormat;
            }

            public void setLevelingDelayFormat(java.math.BigInteger value) {
                _LevelingDelayFormat = value;
            }

            public java.util.List getBaseline() {
                return _Baseline;
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.lang.String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(java.lang.String value) {
                _Hyperlink = value;
            }

            public boolean isLinkedFields() {
                return _LinkedFields;
            }

            public void setLinkedFields(boolean value) {
                _LinkedFields = value;
                has_LinkedFields = true;
            }

            public java.util.List getTimephasedData() {
                return _TimephasedData;
            }

            public float getCostVariance() {
                return _CostVariance;
            }

            public void setCostVariance(float value) {
                _CostVariance = value;
                has_CostVariance = true;
            }

            public boolean isOverallocated() {
                return _Overallocated;
            }

            public void setOverallocated(boolean value) {
                _Overallocated = value;
                has_Overallocated = true;
            }

            public java.util.List getExtendedAttribute() {
                return _ExtendedAttribute;
            }

            public boolean isHasFixedRateUnits() {
                return _HasFixedRateUnits;
            }

            public void setHasFixedRateUnits(boolean value) {
                _HasFixedRateUnits = value;
                has_HasFixedRateUnits = true;
            }

            public java.math.BigInteger getResourceUID() {
                return _ResourceUID;
            }

            public void setResourceUID(java.math.BigInteger value) {
                _ResourceUID = value;
            }

            public java.lang.String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(java.lang.String value) {
                _RegularWork = value;
            }

            public java.lang.String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(java.lang.String value) {
                _OvertimeWork = value;
            }

            public java.math.BigInteger getWorkContour() {
                return _WorkContour;
            }

            public void setWorkContour(java.math.BigInteger value) {
                _WorkContour = value;
            }

            public float getUnits() {
                return _Units;
            }

            public void setUnits(float value) {
                _Units = value;
                has_Units = true;
            }

            public java.math.BigInteger getBookingType() {
                return _BookingType;
            }

            public void setBookingType(java.math.BigInteger value) {
                _BookingType = value;
            }

            public boolean isResponsePending() {
                return _ResponsePending;
            }

            public void setResponsePending(boolean value) {
                _ResponsePending = value;
                has_ResponsePending = true;
            }

            public java.math.BigInteger getDelay() {
                return _Delay;
            }

            public void setDelay(java.math.BigInteger value) {
                _Delay = value;
            }

            public boolean isConfirmed() {
                return _Confirmed;
            }

            public void setConfirmed(boolean value) {
                _Confirmed = value;
                has_Confirmed = true;
            }

            public java.util.Calendar getStop() {
                return _Stop;
            }

            public void setStop(java.util.Calendar value) {
                _Stop = value;
            }

            public java.lang.String getNotes() {
                return _Notes;
            }

            public void setNotes(java.lang.String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.Calendar getActualStart() {
                return _ActualStart;
            }

            public void setActualStart(java.util.Calendar value) {
                _ActualStart = value;
            }

            public java.lang.String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(java.lang.String value) {
                _ActualWork = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public float getVAC() {
                return _VAC;
            }

            public void setVAC(float value) {
                _VAC = value;
                has_VAC = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.util.Calendar getActualFinish() {
                return _ActualFinish;
            }

            public void setActualFinish(java.util.Calendar value) {
                _ActualFinish = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.util.Calendar getCreationDate() {
                return _CreationDate;
            }

            public void setCreationDate(java.util.Calendar value) {
                _CreationDate = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx28 = 0;
                final int len28 = _Baseline.size();
                int idx32 = 0;
                final int len32 = _TimephasedData.size();
                int idx35 = 0;
                final int len35 = _ExtendedAttribute.size();
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_TaskUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "TaskUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _TaskUID)), "TaskUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ResourceUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ResourceUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ResourceUID)), "ResourceUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentWorkComplete)), "PercentWorkComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualCost)), "ActualCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualFinish), null), "ActualFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualOvertimeCost)), "ActualOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWork), "ActualOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualStart), null), "ActualStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWork), "ActualWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _ACWP)), "ACWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Confirmed) {
                    context.startElement("http://schemas.microsoft.com/project", "Confirmed");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Confirmed)), "Confirmed");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CostRateTable!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CostRateTable");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CostRateTable)), "CostRateTable");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CostVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "CostVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CostVariance)), "CostVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CV)), "CV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Delay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Delay");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Delay)), "Delay");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FinishVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FinishVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FinishVariance)), "FinishVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Hyperlink), "Hyperlink");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkAddress), "HyperlinkAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkSubAddress), "HyperlinkSubAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _WorkVariance)), "WorkVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_HasFixedRateUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "HasFixedRateUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _HasFixedRateUnits)), "HasFixedRateUnits");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_FixedMaterial) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedMaterial");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _FixedMaterial)), "FixedMaterial");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelay");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelay)), "LevelingDelay");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelayFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelayFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelayFormat)), "LevelingDelayFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LinkedFields) {
                    context.startElement("http://schemas.microsoft.com/project", "LinkedFields");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LinkedFields)), "LinkedFields");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Milestone) {
                    context.startElement("http://schemas.microsoft.com/project", "Milestone");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Milestone)), "Milestone");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Notes), "Notes");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Overallocated) {
                    context.startElement("http://schemas.microsoft.com/project", "Overallocated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Overallocated)), "Overallocated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeCost)), "OvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OvertimeWork), "OvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RegularWork), "RegularWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingCost)), "RemainingCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingOvertimeCost)), "RemainingOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingOvertimeWork), "RemainingOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingWork), "RemainingWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ResponsePending) {
                    context.startElement("http://schemas.microsoft.com/project", "ResponsePending");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ResponsePending)), "ResponsePending");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Stop!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Stop");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Stop), null), "Stop");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Resume!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Resume");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Resume), null), "Resume");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StartVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StartVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartVariance)), "StartVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Units) {
                    context.startElement("http://schemas.microsoft.com/project", "Units");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Units)), "Units");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_UpdateNeeded) {
                    context.startElement("http://schemas.microsoft.com/project", "UpdateNeeded");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _UpdateNeeded)), "UpdateNeeded");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_VAC) {
                    context.startElement("http://schemas.microsoft.com/project", "VAC");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _VAC)), "VAC");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Work), "Work");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WorkContour!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkContour");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorkContour)), "WorkContour");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_BookingType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BookingType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BookingType)), "BookingType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWorkProtected), "ActualWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWorkProtected), "ActualOvertimeWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CreationDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreationDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null), "CreationDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx35 != len35) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_108 = idx35;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_108 ++)), "ExtendedAttribute");
                    context.endNamespaceDecls();
                    int idx_109 = idx35;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_109 ++)), "ExtendedAttribute");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx35 ++)), "ExtendedAttribute");
                    context.endElement();
                }
                while (idx28 != len28) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_110 = idx28;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_110 ++)), "Baseline");
                    context.endNamespaceDecls();
                    int idx_111 = idx28;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_111 ++)), "Baseline");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx28 ++)), "Baseline");
                    context.endElement();
                }
                while (idx32 != len32) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_112 = idx32;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_112 ++)), "TimephasedData");
                    context.endNamespaceDecls();
                    int idx_113 = idx32;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_113 ++)), "TimephasedData");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx32 ++)), "TimephasedData");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx28 = 0;
                final int len28 = _Baseline.size();
                int idx32 = 0;
                final int len32 = _TimephasedData.size();
                int idx35 = 0;
                final int len35 = _ExtendedAttribute.size();
                while (idx35 != len35) {
                    idx35 += 1;
                }
                while (idx28 != len28) {
                    idx28 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx28 = 0;
                final int len28 = _Baseline.size();
                int idx32 = 0;
                final int len32 = _TimephasedData.size();
                int idx35 = 0;
                final int len35 = _ExtendedAttribute.size();
                while (idx35 != len35) {
                    idx35 += 1;
                }
                while (idx28 != len28) {
                    idx28 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u007f\u00ab\u00e5\u00a7ppsq\u0000~\u0000\u0000|\u00c5j\u00f8ppsq\u0000~\u0000\u0000y"
+"zn?ppsq\u0000~\u0000\u0000v\u00b8s\u00d7ppsq\u0000~\u0000\u0000sF\u00a9\u0092ppsq\u0000~\u0000\u0000p#=yppsq\u0000~\u0000\u0000k\u00ebg\u00f8ppsq\u0000~\u0000\u0000j"
+"\u00bc\u00a5Kppsq\u0000~\u0000\u0000i\u008e\u0094\u00beppsq\u0000~\u0000\u0000h\u0084\u00f3\u000bppsq\u0000~\u0000\u0000gTf\u00ffppsq\u0000~\u0000\u0000d\u0099\u00d6\u00f8ppsq\u0000~\u0000\u0000a"
+"\u00d3\\Mppsq\u0000~\u0000\u0000`G\u0005qppsq\u0000~\u0000\u0000^\u00c5t\u008dppsq\u0000~\u0000\u0000]\u00b8\u00f5\u0089ppsq\u0000~\u0000\u0000Z\u00b5\u00d3\u0016ppsq\u0000~\u0000\u0000W"
+"*\u001f:ppsq\u0000~\u0000\u0000T\u00a0\u00e6Uppsq\u0000~\u0000\u0000Rm\u00fcnppsq\u0000~\u0000\u0000OLM\u0095ppsq\u0000~\u0000\u0000L\u00ce\u00a1\"ppsq\u0000~\u0000\u0000J"
+"\u00de\u00b6\u00b5ppsq\u0000~\u0000\u0000I\u0016\u00fe4ppsq\u0000~\u0000\u0000F\\\u0005Pppsq\u0000~\u0000\u0000B6\u0092\u00b6ppsq\u0000~\u0000\u0000@\u00eeNyppsq\u0000~\u0000\u0000?"
+"\u00db`\u00a1ppsq\u0000~\u0000\u0000>2\u00e57ppsq\u0000~\u0000\u0000<\u00ca\u00b3\u0017ppsq\u0000~\u0000\u0000;\u0087\u00c5\u0086ppsq\u0000~\u0000\u00008\\6\u001fppsq\u0000~\u0000\u00005"
+"\u00c3\u00f2~ppsq\u0000~\u0000\u00003\u00a7\u0016\u00c9ppsq\u0000~\u0000\u00002\u0092\u0086\u00a7ppsq\u0000~\u0000\u00000x\u0000\u0006ppsq\u0000~\u0000\u0000-K\u0011\u00d3ppsq\u0000~\u0000\u0000+"
+"\u00b6q\u00aeppsq\u0000~\u0000\u0000*p\u00cexppsq\u0000~\u0000\u0000\'\u00d9\u0089\u00bcppsq\u0000~\u0000\u0000$ly\u0081ppsq\u0000~\u0000\u0000#\u001fV#ppsq\u0000~\u0000\u0000 "
+"\u0082\u0098\u009dppsq\u0000~\u0000\u0000\u001e\u00c9R\u00efppsq\u0000~\u0000\u0000\u001b\u00c4pjppsq\u0000~\u0000\u0000\u0019\u00802\u00e6ppsq\u0000~\u0000\u0000\u0017e\u00c9\u00bappsq\u0000~\u0000\u0000\u0015"
+"\u0014\u00ba\u0019ppsq\u0000~\u0000\u0000\u0012\u008e\u0011\u00e4ppsq\u0000~\u0000\u0000\u000f\u00c1\u00cc\u00f9ppsq\u0000~\u0000\u0000\f\u00fc|1ppsq\u0000~\u0000\u0000\n,\u00af\u00c9ppsq\u0000~\u0000\u0000\u0007"
+"\u0092\u00bf\u00a1ppsq\u0000~\u0000\u0000\u0005\u00e4\u009f\u00e4ppsq\u0000~\u0000\u0000\u0003\u00c0\u0088\u00d5ppsq\u0000~\u0000\u0000\u0002\u0085R\u00f6ppsr\u0000\'com.sun.msv.gra"
+"mmar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/m"
+"sv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003\u0001.\u00eb\u00c8pp\u0000sq\u0000~\u0000\u0000\u0001.\u00eb\u00bdppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.ms"
+"v.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatyp"
+"e.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/"
+"msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNa"
+"meq\u0000~\u0000LL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceP"
+"rocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexical"
+"ConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataT"
+"ypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL"
+"\u0000\bbaseTypeq\u0000~\u0000HL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/C"
+"oncreteType;L\u0000\tfacetNameq\u0000~\u0000Lxq\u0000~\u0000Kppq\u0000~\u0000S\u0001\u0000sr\u0000#com.sun.msv."
+"datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0007decimalq\u0000~\u0000S"
+"q\u0000~\u0000Zt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000LL\u0000\fnamespaceURIq\u0000~\u0000L"
+"xpq\u0000~\u0000Pq\u0000~\u0000Osr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001\u0000\u00b9\u00e8\u00b2ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000>xq\u0000~\u0000\u0003\u0000\u00b9\u00e8\u00a7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c"
+"\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000B\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0005QNameq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000jq\u0000"
+"~\u0000Osr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000LL\u0000\fnamespaceURIq\u0000~\u0000Lxr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-i"
+"nstancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000e\u0001psq\u0000~\u0000lt\u0000\u0003UIDt\u0000$http://schemas.mi"
+"crosoft.com/projectsq\u0000~\u0000a\u0001Vg)ppsq\u0000~\u0000=\u0001Vg\u001eq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001Vg\u0013pp"
+"q\u0000~\u0000Esq\u0000~\u0000a\u0000\u00e1d\bppsq\u0000~\u0000c\u0000\u00e1c\u00fdq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rs"
+"q\u0000~\u0000lt\u0000\u0007TaskUIDq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001;5\u00dappsq\u0000~\u0000=\u0001;5\u00cfq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000"
+"\u0001;5\u00c4ppq\u0000~\u0000Esq\u0000~\u0000a\u0000\u00c62\u00b9ppsq\u0000~\u0000c\u0000\u00c62\u00aeq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000p"
+"q\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bResourceUIDq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002$\u0017\nppsq\u0000~\u0000=\u0002$\u0016\u00ffq\u0000~"
+"\u0000fp\u0000sq\u0000~\u0000\u0000\u0002$\u0016\u00f4ppq\u0000~\u0000Esq\u0000~\u0000a\u0001\u00af\u0013\u00e9ppsq\u0000~\u0000c\u0001\u00af\u0013\u00deq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000l"
+"q\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013PercentWorkCompleteq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001"
+"\u00ae\u001f\u00b8ppsq\u0000~\u0000=\u0001\u00ae\u001f\u00adq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u00ae\u001f\u00a2ppsq\u0000~\u0000B\u0000\u00a9P\u0018ppq\u0000~\u0000Zq\u0000~\u0000^sq\u0000~"
+"\u0000_q\u0000~\u0000[q\u0000~\u0000Osq\u0000~\u0000a\u0001\u0004\u00cf\u0085ppsq\u0000~\u0000c\u0001\u0004\u00cfzq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000"
+"pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\nActualCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u0099\u00f0#ppsq\u0000~\u0000=\u0002\u0099\u00f0\u0018q\u0000~"
+"\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u0099\u00f0\rppsq\u0000~\u0000B\u0001Kn\u00d8ppsr\u0000%com.sun.msv.datatype.xsd.Dat"
+"eTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBas"
+"eType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\bdateTimeq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000\u00a0q"
+"\u0000~\u0000Osq\u0000~\u0000a\u0001N\u00810ppsq\u0000~\u0000c\u0001N\u0081%q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq"
+"\u0000~\u0000lt\u0000\fActualFinishq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00cf\u00cccppsq\u0000~\u0000=\u0002\u00cf\u00ccXq\u0000~\u0000fp\u0000sq"
+"\u0000~\u0000\u0000\u0002\u00cf\u00ccMppq\u0000~\u0000\u0092sq\u0000~\u0000a\u0002&|0ppsq\u0000~\u0000c\u0002&|%q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq"
+"\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0012ActualOvertimeCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00c5P\u00c3ppsq"
+"\u0000~\u0000=\u0002\u00c5P\u00b8q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00c5P\u00adppsq\u0000~\u0000B\u0001\u00c3<\u00f9ppsr\u0000%com.sun.msv.datat"
+"ype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\bdurationq\u0000~\u0000Sq\u0000"
+"~\u0000^sq\u0000~\u0000_q\u0000~\u0000\u00b5q\u0000~\u0000Osq\u0000~\u0000a\u0001\u0002\u0013\u00afppsq\u0000~\u0000c\u0001\u0002\u0013\u00a4q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000"
+"~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0012ActualOvertimeWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00ccD\u00e6"
+"ppsq\u0000~\u0000=\u0002\u00ccD\u00dbq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00ccD\u00d0ppq\u0000~\u0000\u009csq\u0000~\u0000a\u0001\u0080\u00d5\u00f3ppsq\u0000~\u0000c\u0001\u0080\u00d5\u00e8q\u0000"
+"~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bActualStartq\u0000~\u0000vq\u0000~\u0000r"
+"sq\u0000~\u0000a\u0002\u0086\u00a80ppsq\u0000~\u0000=\u0002\u0086\u00a8%q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u0086\u00a8\u001appq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0000\u00c3k\u001cppsq"
+"\u0000~\u0000c\u0000\u00c3k\u0011q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\nActualWorkq"
+"\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002Q\u000f\u009cppsq\u0000~\u0000=\u0002Q\u000f\u0091q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002Q\u000f\u0086ppsq\u0000~\u0000B\u0000Q\u00cf="
+"ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000O"
+"t\u0000\u0005floatq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000\u00d3q\u0000~\u0000Osq\u0000~\u0000a\u0001\u00ff@Dppsq\u0000~\u0000c\u0001\u00ff@9q\u0000~\u0000"
+"fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004ACWPq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u001ai"
+"\'ppsq\u0000~\u0000=\u0002\u001ai\u001cq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u001ai\u0011ppsq\u0000~\u0000B\u00001\u00ff3ppsr\u0000$com.sun.msv."
+"datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0007booleanq\u0000~\u0000"
+"Sq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000\u00e0q\u0000~\u0000Osq\u0000~\u0000a\u0001\u00e8i\u00d9ppsq\u0000~\u0000c\u0001\u00e8i\u00ceq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000"
+"lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\tConfirmedq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002D=\u007fppsq\u0000~"
+"\u0000=\u0002D=tq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002D=ippq\u0000~\u0000\u0092sq\u0000~\u0000a\u0001\u009a\u00edLppsq\u0000~\u0000c\u0001\u009a\u00edAq\u0000~\u0000fpq\u0000"
+"~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004Costq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003\u0004\u00e2\u0080pps"
+"q\u0000~\u0000=\u0003\u0004\u00e2uq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003\u0004\u00e2jppsq\u0000~\u0000B\u00019I\u00e1ppsr\u0000)com.sun.msv.data"
+"type.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/S"
+"et;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000Vq\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000~\u0000Nq\u0000~\u0000Nt\u0000\u000benumerationsr"
+"\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sr\u0000)com.sun.ms"
+"v.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Lxr\u0000\u0010j"
+"ava.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000\u00fat\u0000\u00012sq\u0000~\u0000\u00fat\u0000\u00010sq\u0000~\u0000\u00fat\u0000"
+"\u00014sq\u0000~\u0000\u00fat\u0000\u00011xq\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000finteger-derivedq\u0000~\u0000vsq\u0000~\u0000a\u0001\u00cb\u0098\u0084pps"
+"q\u0000~\u0000c\u0001\u00cb\u0098yq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rCostRateTa"
+"bleq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\u00b9E\u00a9ppsq\u0000~\u0000=\u0001\u00b9E\u009eq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u00b9E\u0093ppq\u0000~\u0000\u00cfs"
+"q\u0000~\u0000a\u0001gvQppsq\u0000~\u0000c\u0001gvFq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt"
+"\u0000\fCostVarianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u009c\u00bd\u0081ppsq\u0000~\u0000=\u0002\u009c\u00bdvq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002"
+"\u009c\u00bdkppq\u0000~\u0000\u00cfsq\u0000~\u0000a\u0002J\u00ee)ppsq\u0000~\u0000c\u0002J\u00ee\u001eq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq"
+"\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0002CVq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001M#Yppsq\u0000~\u0000=\u0001M#Nq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000"
+"\u0001M#Cppq\u0000~\u0000Esq\u0000~\u0000a\u0000\u00d8 8ppsq\u0000~\u0000c\u0000\u00d8 -q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000p"
+"q\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0005Delayq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003m\u00106ppsq\u0000~\u0000=\u0003m\u0010+q\u0000~\u0000fp\u0000sq"
+"\u0000~\u0000\u0000\u0003m\u0010 ppq\u0000~\u0000\u009csq\u0000~\u0000a\u0002!\u00a1Cppsq\u0000~\u0000c\u0002!\u00a18q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq"
+"\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0006Finishq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u0097D\u00b7ppsq\u0000~\u0000=\u0002\u0097D\u00acq\u0000~\u0000"
+"fp\u0000sq\u0000~\u0000\u0000\u0002\u0097D\u00a1ppq\u0000~\u0000Esq\u0000~\u0000a\u0002\"A\u0096ppsq\u0000~\u0000c\u0002\"A\u008bq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq"
+"\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000eFinishVarianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001E\u00a31pps"
+"q\u0000~\u0000=\u0001E\u00a3&q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001E\u00a3\u001bppsq\u0000~\u0000B\u0000\u008d\u00ac\u00cbppsr\u0000\'com.sun.msv.data"
+"type.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxq\u0000~\u0000\u00f5q\u0000~\u0000vpsr"
+"\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000R\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0006stringq\u0000~\u0001<\u0001q\u0000~\u0001>t\u0000\tmaxLen"
+"gth\u0000\u0000\u0002\u0000q\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000estring-derivedq\u0000~\u0000vsq\u0000~\u0000a\u0000\u00b7\u00f6Kppsq\u0000~\u0000c\u0000\u00b7"
+"\u00f6@q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\tHyperlinkq\u0000~\u0000vq\u0000~"
+"\u0000rsq\u0000~\u0000a\u0001\u0094\u00a0 ppsq\u0000~\u0000=\u0001\u0094\u00a0\u0015q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u0094\u00a0\nppsq\u0000~\u0000B\u0000Qp\u00b8ppsq\u0000~\u0001"
+"9q\u0000~\u0000vpq\u0000~\u0001<\u0000\u0000q\u0000~\u0001>q\u0000~\u0001>q\u0000~\u0001@\u0000\u0000\u0002\u0000q\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000estring-derive"
+"dq\u0000~\u0000vsq\u0000~\u0000a\u0001C/Mppsq\u0000~\u0000c\u0001C/Bq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000r"
+"sq\u0000~\u0000lt\u0000\u0010HyperlinkAddressq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003,\u00ee.ppsq\u0000~\u0000=\u0003,\u00ee#q\u0000~"
+"\u0000fp\u0000sq\u0000~\u0000\u0000\u0003,\u00ee\u0018ppsq\u0000~\u0000B\u0000\u00ef\u00cc\u00c1ppsq\u0000~\u00019q\u0000~\u0000vpq\u0000~\u0001<\u0000\u0000q\u0000~\u0001>q\u0000~\u0001>q\u0000~"
+"\u0001@\u0000\u0000\u0002\u0000q\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000estring-derivedq\u0000~\u0000vsq\u0000~\u0000a\u0002=!Rppsq\u0000~\u0000c\u0002=!"
+"Gq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013HyperlinkSubAddres"
+"sq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u001a\u0086\u009cppsq\u0000~\u0000=\u0002\u001a\u0086\u0091q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u001a\u0086\u0086ppq\u0000~\u0000\u00cfsq\u0000"
+"~\u0000a\u0001\u00c8\u00b7Dppsq\u0000~\u0000c\u0001\u00c8\u00b79q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\f"
+"WorkVarianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\u0014\u0090\u001dppsq\u0000~\u0000=\u0001\u0014\u0090\u0012q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u0014\u0090"
+"\u0007ppq\u0000~\u0000\u00ddsq\u0000~\u0000a\u0000\u00e2\u0090\u00cfppsq\u0000~\u0000c\u0000\u00e2\u0090\u00c4q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~"
+"\u0000rsq\u0000~\u0000lt\u0000\u0011HasFixedRateUnitsq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u001c\u00db\u00b0ppsq\u0000~\u0000=\u0002\u001c\u00db\u00a5"
+"q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u001c\u00db\u009appq\u0000~\u0000\u00ddsq\u0000~\u0000a\u0001\u00ea\u00dcbppsq\u0000~\u0000c\u0001\u00ea\u00dcWq\u0000~\u0000fpq\u0000~\u0000gsq\u0000"
+"~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rFixedMaterialq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u0098C\u009c"
+"ppsq\u0000~\u0000=\u0002\u0098C\u0091q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u0098C\u0086ppq\u0000~\u0000Esq\u0000~\u0000a\u0002#@{ppsq\u0000~\u0000c\u0002#@pq\u0000"
+"~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rLevelingDelayq\u0000~\u0000vq\u0000~"
+"\u0000rsq\u0000~\u0000a\u0003+\u008fbppsq\u0000~\u0000=\u0003+\u008fWq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003+\u008fLppsq\u0000~\u0000B\u0001\u00e2\u0019\u00f7ppsq\u0000~\u0000"
+"\u00f3q\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000~\u0000Nq\u0000~\u0000Nq\u0000~\u0000\u00f7sq\u0000~\u0000\u00f8w\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00fat\u0000\u00013s"
+"q\u0000~\u0000\u00fat\u0000\u000241sq\u0000~\u0000\u00fat\u0000\u000239sq\u0000~\u0000\u00fat\u0000\u000236sq\u0000~\u0000\u00fat\u0000\u00016sq\u0000~\u0000\u00fat\u0000\u00015sq\u0000~\u0000\u00fat\u0000"
+"\u000237sq\u0000~\u0000\u00fat\u0000\u000211sq\u0000~\u0000\u00fat\u0000\u000240sq\u0000~\u0000\u00fat\u0000\u00014sq\u0000~\u0000\u00fat\u0000\u000212sq\u0000~\u0000\u00fat\u0000\u000252sq\u0000"
+"~\u0000\u00fat\u0000\u00017sq\u0000~\u0000\u00fat\u0000\u000238sq\u0000~\u0000\u00fat\u0000\u000220sq\u0000~\u0000\u00fat\u0000\u000242sq\u0000~\u0000\u00fat\u0000\u000253sq\u0000~\u0000\u00fat\u0000\u0002"
+"43sq\u0000~\u0000\u00fat\u0000\u000221sq\u0000~\u0000\u00fat\u0000\u000210sq\u0000~\u0000\u00fat\u0000\u000235sq\u0000~\u0000\u00fat\u0000\u000244sq\u0000~\u0000\u00fat\u0000\u00019sq\u0000~"
+"\u0000\u00fat\u0000\u000219sq\u0000~\u0000\u00fat\u0000\u00018sq\u0000~\u0000\u00fat\u0000\u000251xq\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000finteger-derivedq\u0000"
+"~\u0000vsq\u0000~\u0000a\u0001IuPppsq\u0000~\u0000c\u0001IuEq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000"
+"~\u0000lt\u0000\u0013LevelingDelayFormatq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001B\u00ed\u008cppsq\u0000~\u0000=\u0001B\u00ed\u0081q\u0000~"
+"\u0000fp\u0000sq\u0000~\u0000\u0000\u0001B\u00edvppq\u0000~\u0000\u00ddsq\u0000~\u0000a\u0001\u0010\u00ee>ppsq\u0000~\u0000c\u0001\u0010\u00ee3q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000l"
+"q\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fLinkedFieldsq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001h2\u001bppsq"
+"\u0000~\u0000=\u0001h2\u0010q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001h2\u0005ppq\u0000~\u0000\u00ddsq\u0000~\u0000a\u000162\u00cdppsq\u0000~\u0000c\u000162\u00c2q\u0000~\u0000fp"
+"q\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\tMilestoneq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a"
+"\u0001\u00a8{eppsq\u0000~\u0000=\u0001\u00a8{Zq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u00a8{Oppsq\u0000~\u0000B\u0000\u0004\u0083\u00b5ppq\u0000~\u0001>q\u0000~\u0000^sq\u0000"
+"~\u0000_q\u0000~\u0001?q\u0000~\u0000Osq\u0000~\u0000a\u0001\u00a3\u00f7\u0095ppsq\u0000~\u0000c\u0001\u00a3\u00f7\u008aq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~"
+"\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0005Notesq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\u0012\u00ed\u00d3ppsq\u0000~\u0000=\u0001\u0012\u00ed\u00c8q\u0000~\u0000fp\u0000"
+"sq\u0000~\u0000\u0000\u0001\u0012\u00ed\u00bdppq\u0000~\u0000\u00ddsq\u0000~\u0000a\u0000\u00e0\u00ee\u0085ppsq\u0000~\u0000c\u0000\u00e0\u00eezq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000"
+"oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rOverallocatedq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001HD8ppsq\u0000~\u0000"
+"=\u0001HD-q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001HD\"ppq\u0000~\u0000\u0092sq\u0000~\u0000a\u0000\u009e\u00f4\u0005ppsq\u0000~\u0000c\u0000\u009e\u00f3\u00faq\u0000~\u0000fpq\u0000~"
+"\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fOvertimeCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a"
+"\u0004%r\u0095ppsq\u0000~\u0000=\u0004%r\u008aq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0004%r\u007fppq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0002b5\u0081ppsq\u0000~\u0000c\u0002b"
+"5vq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fOvertimeWorkq\u0000~\u0000v"
+"q\u0000~\u0000rsq\u0000~\u0000a\u0002\u00ba\u00f8\u00dfppsq\u0000~\u0000=\u0002\u00ba\u00f8\u00d4q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00ba\u00f8\u00c9ppq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0000\u00f7\u00bb"
+"\u00cbppsq\u0000~\u0000c\u0000\u00f7\u00bb\u00c0q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bRegula"
+"rWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\u00c7\u00b8|ppsq\u0000~\u0000=\u0001\u00c7\u00b8qq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u00c7\u00b8fppq\u0000~\u0000"
+"\u0092sq\u0000~\u0000a\u0001\u001ehIppsq\u0000~\u0000c\u0001\u001eh>q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000"
+"lt\u0000\rRemainingCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\u00ef\u00eahppsq\u0000~\u0000=\u0001\u00ef\u00ea]q\u0000~\u0000fp\u0000sq\u0000~"
+"\u0000\u0000\u0001\u00ef\u00eaRppq\u0000~\u0000\u0092sq\u0000~\u0000a\u0001F\u009a5ppsq\u0000~\u0000c\u0001F\u009a*q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~"
+"\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0015RemainingOvertimeCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002}\u00acnpps"
+"q\u0000~\u0000=\u0002}\u00accq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002}\u00acXppq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0000\u00baoZppsq\u0000~\u0000c\u0000\u00baoOq\u0000~\u0000f"
+"pq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0015RemainingOvertimeWorkq\u0000~"
+"\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003!\u00ae\u00d4ppsq\u0000~\u0000=\u0003!\u00ae\u00c9q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003!\u00ae\u00beppq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0001"
+"^q\u00c0ppsq\u0000~\u0000c\u0001^q\u00b5q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rRema"
+"iningWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u00022\u00e9\u00e2ppsq\u0000~\u0000=\u00022\u00e9\u00d7q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u00022\u00e9\u00ccpp"
+"q\u0000~\u0000\u00ddsq\u0000~\u0000a\u0002\u0000\u00ea\u0094ppsq\u0000~\u0000c\u0002\u0000\u00ea\u0089q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rs"
+"q\u0000~\u0000lt\u0000\u000fResponsePendingq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00898\u00e0ppsq\u0000~\u0000=\u0002\u00898\u00d5q\u0000~\u0000f"
+"p\u0000sq\u0000~\u0000\u0000\u0002\u00898\u00cappq\u0000~\u0000\u009csq\u0000~\u0000a\u0001=\u00c9\u00edppsq\u0000~\u0000c\u0001=\u00c9\u00e2q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000"
+"~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0005Startq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003\u008b\u00b3\u00d7ppsq\u0000~\u0000=\u0003\u008b\u00b3\u00ccq"
+"\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003\u008b\u00b3\u00c1ppq\u0000~\u0000\u009csq\u0000~\u0000a\u0002@D\u00e4ppsq\u0000~\u0000c\u0002@D\u00d9q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~"
+"\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004Stopq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003\u0003\"nppsq\u0000~\u0000=\u0003\u0003"
+"\"cq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003\u0003\"Xppq\u0000~\u0000\u009csq\u0000~\u0000a\u0001\u00b7\u00b3{ppsq\u0000~\u0000c\u0001\u00b7\u00b3pq\u0000~\u0000fpq\u0000~\u0000gs"
+"q\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0006Resumeq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\f~\u00ffppsq\u0000"
+"~\u0000=\u0001\f~\u00f4q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\f~\u00e9ppq\u0000~\u0000Esq\u0000~\u0000a\u0000\u0097{\u00deppsq\u0000~\u0000c\u0000\u0097{\u00d3q\u0000~\u0000fpq"
+"\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rStartVarianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000"
+"~\u0000a\u0001\u0081\u0090\u00dfppsq\u0000~\u0000=\u0001\u0081\u0090\u00d4q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u0081\u0090\u00c9ppq\u0000~\u0000\u00cfsq\u0000~\u0000a\u0001/\u00c1\u0087ppsq\u0000~\u0000"
+"c\u0001/\u00c1|q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0005Unitsq\u0000~\u0000vq\u0000~\u0000"
+"rsq\u0000~\u0000a\u0001\u008cV\u00d7ppsq\u0000~\u0000=\u0001\u008cV\u00ccq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001\u008cV\u00c1ppq\u0000~\u0000\u00ddsq\u0000~\u0000a\u0001ZW\u0089pps"
+"q\u0000~\u0000c\u0001ZW~q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fUpdateNeed"
+"edq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00c6z\u00a6ppsq\u0000~\u0000=\u0002\u00c6z\u009bq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00c6z\u0090ppq\u0000~\u0000\u00cfsq"
+"\u0000~\u0000a\u0002t\u00abNppsq\u0000~\u0000c\u0002t\u00abCq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000"
+"\u0003VACq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00ba\u0090\u0002ppsq\u0000~\u0000=\u0002\u00ba\u008f\u00f7q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00ba\u008f\u00ecppq\u0000~\u0000\u00b2"
+"sq\u0000~\u0000a\u0000\u00f7R\u00eeppsq\u0000~\u0000c\u0000\u00f7R\u00e3q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000l"
+"t\u0000\u0004Workq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u00010\u008c\u0007ppsq\u0000~\u0000=\u00010\u008b\u00fcq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u00010\u008b\u00f1ppsq"
+"\u0000~\u0000B\u00005\u00d3\u009eppsq\u0000~\u0000\u00f3q\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000~\u0000Nq\u0000~\u0000Nq\u0000~\u0000\u00f7sq\u0000~\u0000\u00f8w\f\u0000\u0000\u0000\u0010?@\u0000\u0000"
+"\u0000\u0000\u0000\tsq\u0000~\u0000\u00fat\u0000\u00013sq\u0000~\u0000\u00fat\u0000\u00015sq\u0000~\u0000\u00fat\u0000\u00017sq\u0000~\u0000\u00fat\u0000\u00012sq\u0000~\u0000\u00faq\u0000~\u0001\u0001sq\u0000~\u0000"
+"\u00fat\u0000\u00014sq\u0000~\u0000\u00fat\u0000\u00018sq\u0000~\u0000\u00fat\u0000\u00016sq\u0000~\u0000\u00fat\u0000\u00011xq\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000finteger-de"
+"rivedq\u0000~\u0000vsq\u0000~\u0000a\u0000\u00fa\u00b8Nppsq\u0000~\u0000c\u0000\u00fa\u00b8Cq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq"
+"\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bWorkContourq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001\t\u00a1\u00aeppsq\u0000~\u0000=\u0001\t\u00a1\u00a3q\u0000~\u0000"
+"fp\u0000sq\u0000~\u0000\u0000\u0001\t\u00a1\u0098ppq\u0000~\u0000\u00cfsq\u0000~\u0000a\u0000\u00b7\u00d2Vppsq\u0000~\u0000c\u0000\u00b7\u00d2Kq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq"
+"\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004BCWSq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001.\u0010\u0088ppsq\u0000~\u0000=\u0001.\u0010}q"
+"\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001.\u0010rppq\u0000~\u0000\u00cfsq\u0000~\u0000a\u0000\u00dcA0ppsq\u0000~\u0000c\u0000\u00dcA%q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~"
+"\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004BCWPq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0001.\u00c2\u00a8ppsq\u0000~\u0000=\u0001."
+"\u00c2\u009dq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0001.\u00c2\u0092ppsq\u0000~\u0000B\u0000\u0010X\u00c6ppsq\u0000~\u0000\u00f3q\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000~\u0000Nq\u0000~"
+"\u0000Nq\u0000~\u0000\u00f7sq\u0000~\u0000\u00f8w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00faq\u0000~\u0001\u0001sq\u0000~\u0000\u00fat\u0000\u00011xq\u0000~\u0000^sq\u0000~\u0000_"
+"t\u0000\u000finteger-derivedq\u0000~\u0000vsq\u0000~\u0000a\u0001\u001ei\u00c7ppsq\u0000~\u0000c\u0001\u001ei\u00bcq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~"
+"\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bBookingTypeq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u00047\u00d5|pps"
+"q\u0000~\u0000=\u00047\u00d5qq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u00047\u00d5fppq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0002t\u0098hppsq\u0000~\u0000c\u0002t\u0098]q\u0000~\u0000f"
+"pq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013ActualWorkProtectedq\u0000~\u0000v"
+"q\u0000~\u0000rsq\u0000~\u0000a\u0003#l\u0014ppsq\u0000~\u0000=\u0003#l\tq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003#k\u00feppq\u0000~\u0000\u00b2sq\u0000~\u0000a\u0001`/"
+"\u0000ppsq\u0000~\u0000c\u0001`.\u00f5q\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u001bActual"
+"OvertimeWorkProtectedq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003q\u00ca@ppsq\u0000~\u0000=\u0003q\u00ca5q\u0000~\u0000fp\u0000"
+"sq\u0000~\u0000\u0000\u0003q\u00ca*ppq\u0000~\u0000\u009csq\u0000~\u0000a\u0002&[Mppsq\u0000~\u0000c\u0002&[Bq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000"
+"oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fCreationDateq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00c1\u00facppsr\u0000 co"
+"m.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gra"
+"mmar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00c1\u00faXq\u0000~\u0000fpsq\u0000~\u0000=\u0002\u00c1\u00fa"
+"Uq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00c1\u00faJppsq\u0000~\u0000=\u0000\u00ee&-pp\u0000sq\u0000~\u0000a\u0000\u00ee&\"ppsq\u0000~\u0002\u00ba\u0000\u00ee&\u0017q\u0000~\u0000f"
+"psq\u0000~\u0000c\u0000\u00ee&\u0014q\u0000~\u0000fpsr\u00002com.sun.msv.grammar.Expression$AnyStrin"
+"gExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000sq\u0000~\u0002\u00c4sr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000mq\u0000~\u0000rsq\u0000~\u0000lt\u0000]com.tapster"
+"rock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType"
+".ExtendedAttributeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-"
+"elementssq\u0000~\u0000a\u0001\u00d3\u00d4\u0018ppsq\u0000~\u0000c\u0001\u00d3\u00d4\rq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~"
+"\u0000rsq\u0000~\u0000lt\u0000\u0011ExtendedAttributeq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0003J\u00fc\u00b4ppsq\u0000~\u0002\u00ba\u0003J\u00fc\u00a9"
+"q\u0000~\u0000fpsq\u0000~\u0000=\u0003J\u00fc\u00a6q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0003J\u00fc\u009bppsq\u0000~\u0000=\u0000\u00ee&-pp\u0000sq\u0000~\u0000a\u0000\u00ee&\"pp"
+"sq\u0000~\u0002\u00ba\u0000\u00ee&\u0017q\u0000~\u0000fpsq\u0000~\u0000c\u0000\u00ee&\u0014q\u0000~\u0000fpq\u0000~\u0002\u00c4q\u0000~\u0002\u00c6q\u0000~\u0000rsq\u0000~\u0000lt\u0000Tcom."
+"tapsterrock.mspdi.schema.ProjectType.AssignmentsType.Assignm"
+"entType.BaselineTypeq\u0000~\u0002\u00c9sq\u0000~\u0000a\u0002\\\u00d6ippsq\u0000~\u0000c\u0002\\\u00d6^q\u0000~\u0000fpq\u0000~\u0000gsq"
+"\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\bBaselineq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a\u0002\u00e6z\u00aappsq"
+"\u0000~\u0002\u00ba\u0002\u00e6z\u009fq\u0000~\u0000fpsq\u0000~\u0000=\u0002\u00e6z\u009cq\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000\u0002\u00e6z\u0091ppsq\u0000~\u0000=\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000a\u0000\u00ee&\"ppsq\u0000~\u0002\u00ba\u0000\u00ee&\u0017q\u0000~\u0000fpsq\u0000~\u0000c\u0000\u00ee&\u0014q\u0000~\u0000fpq\u0000~\u0002\u00c4q\u0000~\u0002\u00c6q\u0000~\u0000rsq\u0000~\u0000"
+"lt\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypeq\u0000~\u0002\u00c9sq\u0000~"
+"\u0000a\u0001\u00f8T_ppsq\u0000~\u0000c\u0001\u00f8TTq\u0000~\u0000fpq\u0000~\u0000gsq\u0000~\u0000lq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000eT"
+"imephasedDataq\u0000~\u0000vq\u0000~\u0000rsr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0002\u00ee[\u0000\u0005tablet\u0000!"
+"[Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00eb\u0000\u0000\u0001\u00ccpur\u0000![Lcom.sun.ms"
+"v.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0005\u00ffpppppppppppppq\u0000~\u0001\u00fepppp"
+"ppppppppq\u0000~\u0001\u00d3pppppppppppppppppppq\u0000~\u0000\u00e9pq\u0000~\u0001\u00d1pq\u0000~\u0002\u0016ppppppppppp"
+"pq\u0000~\u0001sppq\u0000~\u0000Aq\u0000~\u0001\u00bcq\u0000~\u0000\u00e7q\u0000~\u0001\u0010ppppppppppppppppq\u0000~\u0001bpppppppq\u0000~\u0000"
+"\fpppppppppppppq\u0000~\u0001`ppppppq\u0000~\u0000+pppppppq\u0000~\u0002\u00e8pppppppppppppppppp"
+"ppq\u0000~\u0000\"pppppppq\u0000~\u0001kpq\u0000~\u0000\u000fpppppppq\u0000~\u00007ppq\u0000~\u0001\u0082pppppppq\u0000~\u0002\u0006ppq\u0000"
+"~\u00010q\u0000~\u0002\rpppppppppq\u0000~\u0001\u0080pppppppppppq\u0000~\u0002\u000bppppppppppq\u0000~\u0001\u001fppppppp"
+"ppq\u0000~\u0000\u00dcppppq\u0000~\u0001\u00e5ppppppq\u0000~\u0001\u001dpppppppppq\u0000~\u0000\u00daq\u0000~\u00025pppq\u0000~\u0001\u00e3pq\u0000~\u0001C"
+"ppppq\u0000~\u0002\u0084pppppq\u0000~\u0000\u0094ppppq\u0000~\u00023ppppppq\u0000~\u0002%q\u0000~\u0002\u0093ppppq\u0000~\u0002\u00b4ppq\u0000~\u0000,"
+"pppppppq\u0000~\u0000\nppppq\u0000~\u0002#q\u0000~\u0002\u0091ppq\u0000~\u0001\bppppppppq\u0000~\u0001Opppppppppppppp"
+"ppppppq\u0000~\u0002\u00d9ppppppppq\u0000~\u0001\u00c3pppppppppq\u0000~\u0001\u00f5pppppppppppq\u0000~\u0001\u00c1pppppp"
+"pq\u0000~\u0001cpq\u0000~\u0001\u00f3ppppppppppppppq\u0000~\u0000\u0017ppppq\u0000~\u0001Jpppq\u0000~\u0000\u000bpq\u0000~\u0002\u009cpppppp"
+"ppppppq\u0000~\u0000)ppq\u0000~\u0001Hpppq\u0000~\u0001\u00d6pppppppppppq\u0000~\u0000.pq\u0000~\u0002\u001dppq\u0000~\u0002=ppq\u0000~"
+"\u0000bq\u0000~\u0000\u00c7pppppppq\u0000~\u0002\u00acppppppq\u0000~\u0002\u001bppq\u0000~\u0002;pppppppppppppq\u0000~\u0000\u00eappppp"
+"pppppppppppppppq\u0000~\u0000\u0015ppppppppppq\u0000~\u0000\u0012pppppq\u0000~\u0000%ppppppppppppq\u0000~"
+"\u0002\u00beq\u0000~\u0001\u00depppppppppq\u0000~\u0000\u0010ppq\u0000~\u0002\u00bcpq\u0000~\u0001\u00cbppppppq\u0000~\u0002|pq\u0000~\u0002\u00b9q\u0000~\u0000\u00bfpq\u0000~"
+"\u00004pppppppppq\u0000~\u0001\u00c9q\u0000~\u0002^pppppppppppppppppppq\u0000~\u0001(q\u0000~\u0001 pppppppppp"
+"q\u0000~\u0001zpppppppppq\u0000~\u0000\u00a9pppq\u0000~\u0000\u0089ppq\u0000~\u0000\u001appppq\u0000~\u0001xpppppppppq\u0000~\u0000\u00a7q\u0000~"
+"\u0000\u00cepq\u0000~\u0002\u0015q\u0000~\u0000\u0087pppppppppppppppppq\u0000~\u0000\u00ccq\u0000~\u0000\u0005pq\u0000~\u0001\u00e6q\u0000~\u0002\u0013pppq\u0000~\u0000\bp"
+"ppppppppppq\u0000~\u0000-ppppppppppppppppq\u0000~\u0000\u001fpq\u0000~\u0000\u0016pppppppppppppq\u0000~\u0000\u00b7"
+"pq\u0000~\u0002eppppppq\u0000~\u0000!ppppppppppppppq\u0000~\u0002cq\u0000~\u0002\u008bpppppppq\u0000~\u0002Mppppppp"
+"pppppq\u0000~\u0001[q\u0000~\u0002\u0089pppppppq\u0000~\u0002Kpq\u0000~\u0001\u0017ppppq\u0000~\u0000 q\u0000~\u0000\u0014q\u0000~\u0000\u00a2pppppq\u0000~"
+"\u0002.ppppppq\u0000~\u0000;pq\u0000~\u0001\u0015ppppq\u0000~\u0002Uppppppppq\u0000~\u0002Eppppppppppq\u0000~\u0002>pq\u0000~"
+"\u0002Spppppppq\u0000~\u0000\u0019q\u0000~\u0002Cppppppppppppq\u0000~\u0002\u00b3pppq\u0000~\u0000\u001bq\u0000~\u0002\u00a4ppppppq\u0000~\u0000\u001d"
+"q\u0000~\u0001\u00eeppppppq\u0000~\u0000\u00e2pq\u0000~\u0002\u00b1ppppppppppppppppppppppppppppppppq\u0000~\u0000\u000eq"
+"\u0000~\u0000\rpppppppppppppppppppppq\u0000~\u0000\u00d5pppppppppppppppppppppppppppppq"
+"\u0000~\u0000\u001epppppq\u0000~\u0001Vpppppppppppppppppppq\u0000~\u0001{pq\u0000~\u0001Tq\u0000~\u0001\u00c4ppppppppppq"
+"\u0000~\u0001rq\u0000~\u0002\u00e4q\u0000~\u0002\u00d5q\u0000~\u0002\u00c1q\u0000~\u0000\u008apppppppq\u0000~\u0002\u00e3q\u0000~\u0002\u00d4q\u0000~\u0002\u00c0pppppppq\u0000~\u0001ppp"
+"pppppq\u0000~\u0002\u008cppppppq\u0000~\u0000\u00c6ppppppppq\u0000~\u0002\u00abppq\u0000~\u0000\u00aappq\u0000~\u0000\u0006ppppppq\u0000~\u0000\u00c4p"
+"pq\u0000~\u0001\u0018pppppq\u0000~\u0000&q\u0000~\u0002\u00a9ppq\u0000~\u00005pppppppq\u0000~\u0002\u00caq\u0000~\u0002\u001epppppppq\u0000~\u0001jq\u0000~"
+"\u0002Vpppppq\u0000~\u0000yq\u0000~\u00008q\u0000~\u0002Fppppppppppppq\u0000~\u0001hppppppq\u0000~\u0000wq\u0000~\u0000\u00beppppp"
+"pppppppppppq\u0000~\u0000\u0081ppppq\u0000~\u0000\u00bcppppppppq\u0000~\u0000$q\u0000~\u0002\u00e1q\u0000~\u0001\'q\u0000~\u0001\u00fdppppq\u0000~"
+"\u0000\u007fq\u0000~\u0002]ppppq\u0000~\u0002\u000eq\u0000~\u0002\u00dfppppppppq\u0000~\u0001%q\u0000~\u0001\u00fbq\u0000~\u0002\u00deppppq\u0000~\u0002[pppppq\u0000"
+"~\u0001\u00ccppppppppppppq\u0000~\u0000<pppppppq\u0000~\u0000/ppppppppppppppq\u0000~\u00003ppppq\u0000~\u0000\u0007"
+"pppppppppq\u0000~\u0000\u001cppppppq\u0000~\u0000\u0013ppppppppppppq\u0000~\u00026pppppppppppppppppp"
+"pppppppq\u0000~\u0000\u0011ppq\u0000~\u0002&pppppppppq\u0000~\u00009pq\u0000~\u0000\u00b1pppppppppppppq\u0000~\u0002\u0005ppp"
+"ppppq\u0000~\u0000\u00afppppppppppppq\u0000~\u0001\u00f6q\u0000~\u0000\u009bq\u0000~\u0002\u0003ppppq\u0000~\u0002-q\u0000~\u0000#ppppppq\u0000~\u0001"
+"\u000fppppppq\u0000~\u0002\u00d2q\u0000~\u0000\u0099ppppq\u0000~\u0000\tq\u0000~\u0002+pppppq\u0000~\u0001/q\u0000~\u0002\u00d0q\u0000~\u0001\rppppppppp"
+"q\u0000~\u0002\u00cfq\u0000~\u0002Npppq\u0000~\u0000\u00f1ppppq\u0000~\u0001-ppq\u0000~\u00000pppppq\u0000~\u0000\u0091q\u0000~\u0000(ppppppq\u0000~\u0000\u00ef"
+"pppq\u0000~\u00017pppppppppq\u0000~\u0000\u008fppppppppq\u0000~\u0002\u00a3q\u0000~\u0000:pq\u0000~\u00015ppppq\u0000~\u0001\u00edppppp"
+"ppppppppq\u0000~\u0002\u00a1pppq\u0000~\u0001\u00ddpppq\u0000~\u0001\u00ebpppq\u0000~\u0000zppppq\u0000~\u00002ppppppppq\u0000~\u0001\u00dbp"
+"pppppppq\u0000~\u00006pq\u0000~\u0000\u0018ppppppppppppppq\u0000~\u0000\u0082ppppppppq\u0000~\u0000\'pppppppppp"
+"ppppppppppq\u0000~\u0002\u0083pppppppq\u0000~\u00001ppppppppppq\u0000~\u0000*ppq\u0000~\u0002\u0081pppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected boolean has_BCWP;
                protected float _BCWP;
                protected java.lang.String _Start;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected java.lang.String _Cost;
                protected java.lang.String _Finish;
                protected java.lang.String _Number;
                protected com.sun.xml.bind.util.ListImpl _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                protected java.lang.String _Work;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType.class);
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public java.lang.String getStart() {
                    return _Start;
                }

                public void setStart(java.lang.String value) {
                    _Start = value;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public java.lang.String getCost() {
                    return _Cost;
                }

                public void setCost(java.lang.String value) {
                    _Cost = value;
                }

                public java.lang.String getFinish() {
                    return _Finish;
                }

                public void setFinish(java.lang.String value) {
                    _Finish = value;
                }

                public java.lang.String getNumber() {
                    return _Number;
                }

                public void setNumber(java.lang.String value) {
                    _Number = value;
                }

                public java.util.List getTimephasedData() {
                    return _TimephasedData;
                }

                public java.lang.String getWork() {
                    return _Work;
                }

                public void setWork(java.lang.String value) {
                    _Work = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = _TimephasedData.size();
                    while (idx7 != len7) {
                        context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                        int idx_0 = idx7;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_0 ++)), "TimephasedData");
                        context.endNamespaceDecls();
                        int idx_1 = idx7;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_1 ++)), "TimephasedData");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx7 ++)), "TimephasedData");
                        context.endElement();
                    }
                    context.startElement("http://schemas.microsoft.com/project", "Number");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Number), "Number");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    if (_Start!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Start");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Start), "Start");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Finish!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Finish");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Finish), "Finish");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Work), "Work");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Cost!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Cost), "Cost");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = _TimephasedData.size();
                    while (idx7 != len7) {
                        idx7 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = _TimephasedData.size();
                    while (idx7 != len7) {
                        idx7 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000e\u00ee\u00a4nppsq\u0000~\u0000\u0000\r\\eVppsq\u0000~\u0000\u0000\u000b"
+"J\u00b7\u00d9ppsq\u0000~\u0000\u0000\n\u00a09\u00c7ppsq\u0000~\u0000\u0000\u0006\u00df\u00da\u00e2ppsq\u0000~\u0000\u0000\u0005\u009bKfppsq\u0000~\u0000\u0000\u0004\u00858\u00b2ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u0003L?ppsr\u0000 com.sun"
+".msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar."
+"UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u0003L4sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.Element"
+"Pattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
+"ass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUn"
+"declaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u0003L1q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000"
+"\u0000\u0003\u0003L&ppsq\u0000~\u0000\u0013\u0000\u00ee&-pp\u0000sq\u0000~\u0000\f\u0000\u00ee&\"ppsq\u0000~\u0000\u000e\u0000\u00ee&\u0017q\u0000~\u0000\u0012psr\u0000 com.sun."
+"msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000"
+"~\u0000\u0014xq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.Expression$AnyStr"
+"ingExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u001esr\u0000 com.sun.ms"
+"v.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.Nam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Epsilo"
+"nExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001fpsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~\u0000!t\u0000/com.tapsterrock.mspdi.schema.T"
+"imephasedDataTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-eleme"
+"ntssq\u0000~\u0000\f\u0002\u0015%\u00f4ppsq\u0000~\u0000\u001b\u0002\u0015%\u00e9q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000&L\u0000\btypeName"
+"q\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004type"
+"t\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000eTi"
+"mephasedDatat\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000$sq\u0000~"
+"\u0000\u0013\u0001\u0081\u00ecnpp\u0000sq\u0000~\u0000\u0000\u0001\u0081\u00eccppsq\u0000~\u0000,\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xs"
+"d.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00001q\u0000~\u00006t\u0000\u0006strings"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009\u0001q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000Jq\u0000~\u00006sq\u0000~\u0000\f\u0001}h\u00a9ppsq\u0000~\u0000\u001b\u0001}h\u009eq\u0000~"
+"\u0000\u0012pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0006Numberq\u0000~\u0000Dsq\u0000~\u0000\f\u0001\u0016\u0012\u00afp"
+"psq\u0000~\u0000\u0013\u0001\u0016\u0012\u00a4q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000\u0001\u0016\u0012\u0099ppq\u0000~\u0000Gsq\u0000~\u0000\f\u0001\u0011\u008e\u00dfppsq\u0000~\u0000\u001b\u0001\u0011\u008e\u00d4q\u0000~"
+"\u0000\u0012pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0005Startq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\f\u0001"
+"D\u008fwppsq\u0000~\u0000\u0013\u0001D\u008flq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000\u0001D\u008fappq\u0000~\u0000Gsq\u0000~\u0000\f\u0001@\u000b\u00a7ppsq\u0000~\u0000\u001b\u0001@\u000b"
+"\u009cq\u0000~\u0000\u0012pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0006Finishq\u0000~\u0000Dq\u0000~\u0000$sq"
+"\u0000~\u0000\f\u0003\u00c0^\u00e0ppsq\u0000~\u0000\u0013\u0003\u00c0^\u00d5q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000\u0003\u00c0^\u00cappsq\u0000~\u0000,\u0001\u00c3<\u00f9ppsr\u0000%com.s"
+"un.msv.datatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\bdur"
+"ationq\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000iq\u0000~\u00006sq\u0000~\u0000\f\u0001\u00fd!\u00ccppsq\u0000~\u0000\u001b\u0001\u00fd!\u00c1q\u0000~\u0000\u0012pq"
+"\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Workq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\f\u0000\u00aa~\rpp"
+"sq\u0000~\u0000\u0013\u0000\u00aa~\u0002q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000\u0000\u00aa}\u00f7ppq\u0000~\u0000Gsq\u0000~\u0000\f\u0000\u00a5\u00fa=ppsq\u0000~\u0000\u001b\u0000\u00a5\u00fa2q\u0000~\u0000"
+"\u0012pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Costq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\f\u0002\u0011\u00ad"
+"xppsq\u0000~\u0000\u0013\u0002\u0011\u00admq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000\u0002\u0011\u00adbppsq\u0000~\u0000,\u0000Q\u00cf=ppsr\u0000\"com.sun.msv."
+"datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xs"
+"d.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\u0005floatq\u0000~\u0000:q\u0000~\u0000<"
+"sq\u0000~\u0000=q\u0000~\u0000\u007fq\u0000~\u00006sq\u0000~\u0000\f\u0001\u00bf\u00de ppsq\u0000~\u0000\u001b\u0001\u00bf\u00de\u0015q\u0000~\u0000\u0012pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@"
+"q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004BCWSq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\f\u0001\u0092?\u0013ppsq\u0000~\u0000\u0013\u0001\u0092?\bq\u0000~\u0000\u0012"
+"p\u0000sq\u0000~\u0000\u0000\u0001\u0092>\u00fdppq\u0000~\u0000{sq\u0000~\u0000\f\u0001@o\u00bbppsq\u0000~\u0000\u001b\u0001@o\u00b0q\u0000~\u0000\u0012pq\u0000~\u0000/sq\u0000~\u0000%q\u0000"
+"~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004BCWPq\u0000~\u0000Dq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~"
+"\u0000\u008f[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000!\u0000\u0000\u00009pur\u0000"
+"![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppq\u0000"
+"~\u0000\rppq\u0000~\u0000*ppppppq\u0000~\u0000zpppppppppppq\u0000~\u0000^q\u0000~\u0000Npppppq\u0000~\u0000]q\u0000~\u0000Fq\u0000~"
+"\u0000\tq\u0000~\u0000xpppppppppppq\u0000~\u0000spppq\u0000~\u0000\u0089ppq\u0000~\u0000[q\u0000~\u0000rq\u0000~\u0000\u000bpppppppppq\u0000~"
+"\u0000Vppppppq\u0000~\u0000Uppq\u0000~\u0000pq\u0000~\u0000\u0007pppppppppppppppppq\u0000~\u0000Sppppq\u0000~\u0000\u0081pppp"
+"ppppq\u0000~\u0000kppppppq\u0000~\u0000\u0005pppq\u0000~\u0000eq\u0000~\u0000\u0006ppppppppppq\u0000~\u0000\u001apppppppppq\u0000~"
+"\u0000cq\u0000~\u0000\u0019pppppppppppq\u0000~\u0000\u0088ppppq\u0000~\u0000\nppppppppq\u0000~\u0000\u0017pppppppq\u0000~\u0000\u0086ppp"
+"ppq\u0000~\u0000\u0010q\u0000~\u0000\bpp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------------------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  15 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 16;
                                        return ;
                                    }
                                    state = 18;
                                    continue outer;
                                case  12 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 19;
                                        return ;
                                    }
                                    state = 21;
                                    continue outer;
                                case  3 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                                case  1 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  24 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  21 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 22;
                                        return ;
                                    }
                                    state = 24;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  11 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  20 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 21;
                                        return ;
                                    }
                                    break;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  23 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 24;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  17 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 18;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  24 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  8 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  14 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  24 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  24 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  10 :
                                        eatText1(value);
                                        state = 11;
                                        return ;
                                    case  4 :
                                        eatText2(value);
                                        state = 5;
                                        return ;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  16 :
                                        eatText3(value);
                                        state = 17;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  22 :
                                        eatText4(value);
                                        state = 23;
                                        return ;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  19 :
                                        eatText5(value);
                                        state = 20;
                                        return ;
                                    case  7 :
                                        eatText6(value);
                                        state = 8;
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  13 :
                                        eatText7(value);
                                        state = 14;
                                        return ;
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Finish = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Number = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Cost = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWP = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWS = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText6(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Start = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText7(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected java.lang.String _Value;
                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public java.lang.String getValue() {
                    return _Value;
                }

                public void setValue(java.lang.String value) {
                    _Value = value;
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Value), "Value");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\ne\u0006kppsq\u0000~\u0000\u0000\u0007\u00d5\u00ad\u00cdppsq\u0000~\u0000\u0000\u0005"
+"\u009d\u00b7\u007fppsq\u0000~\u0000\u0000\u0004\u0007\u0007qppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001\u0001\u00f9z;ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom"
+".sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAtt"
+"ributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00f9z0sr\u0000\u0011java.lang.Boolean\u00cd "
+"r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001\u00f9z%ppsr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006pp"
+"sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFace"
+"tst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/St"
+"ring;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$C"
+"ollapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigi"
+"tsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataT"
+"ypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needV"
+"alueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"
+"datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001bppq\u0000~\u0000#\u0001\u0000sr"
+"\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft"
+"\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\t\u0001\u0084w\u001appsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0001"
+"\u0084w\u000fq\u0000~\u0000\u0010psq\u0000~\u0000\u0012\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#c"
+"om.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instances"
+"r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u00009t\u0000\u0003UIDt\u0000$http://schemas.microsoft."
+"com/projectq\u0000~\u0000?sq\u0000~\u0000\t\u0002\r\u008d1ppsq\u0000~\u0000\u000b\u0002\r\u008d&q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0002\r\u008d\u001bppsq\u0000"
+"~\u0000\u0012\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000"
+"/q\u0000~\u0000Jq\u0000~\u0000\u001fsq\u0000~\u0000\t\u0002\t\tappsq\u0000~\u00002\u0002\t\tVq\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000="
+"q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007FieldIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0001\u0096\u00b0\tppsq\u0000~\u0000\u000b\u0001\u0096\u00af\u00feq\u0000~\u0000\u0010p\u0000"
+"sq\u0000~\u0000\u0000\u0001\u0096\u00af\u00f3ppq\u0000~\u0000Gsq\u0000~\u0000\t\u0001\u0092,9ppsq\u0000~\u00002\u0001\u0092,.q\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000"
+"<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u00027\u00f6Ippsq\u0000~\u0000\u000b\u00027\u00f6>q\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u00027\u00f63ppq\u0000~\u0000\u0015sq\u0000~\u0000\t\u0001\u00c2\u00f3(ppsq\u0000~\u00002\u0001\u00c2\u00f3\u001dq\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009"
+"q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007ValueIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0002\u008fX\u0099ppsq\u0000~\u0000\u000b\u0002"
+"\u008fX\u008eq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0002\u008fX\u0083ppsq\u0000~\u0000\u0012\u0001\u00e0_\u0002ppsr\u0000)com.sun.msv.datatype.x"
+"sd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u0000"
+"9com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7"
+"Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000Cpq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011java"
+".util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.data"
+"type.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001cxr\u0000\u0010java.la"
+"ng.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000nt\u0000\u000241sq\u0000~\u0000nt\u0000\u000239sq\u0000~\u0000nt\u0000\u000236s"
+"q\u0000~\u0000nt\u0000\u00016sq\u0000~\u0000nt\u0000\u00015sq\u0000~\u0000nt\u0000\u000237sq\u0000~\u0000nt\u0000\u000211sq\u0000~\u0000nt\u0000\u000240sq\u0000~\u0000nt\u0000"
+"\u00014sq\u0000~\u0000nt\u0000\u000212sq\u0000~\u0000nt\u0000\u000252sq\u0000~\u0000nt\u0000\u00017sq\u0000~\u0000nt\u0000\u000238sq\u0000~\u0000nt\u0000\u000220sq\u0000~"
+"\u0000nt\u0000\u000242sq\u0000~\u0000nt\u0000\u000253sq\u0000~\u0000nt\u0000\u000243sq\u0000~\u0000nt\u0000\u000221sq\u0000~\u0000nt\u0000\u000210sq\u0000~\u0000nt\u0000\u0002"
+"35sq\u0000~\u0000nt\u0000\u000244sq\u0000~\u0000nt\u0000\u00019sq\u0000~\u0000nt\u0000\u000219sq\u0000~\u0000nt\u0000\u00018sq\u0000~\u0000nt\u0000\u000251xq\u0000~\u0000"
+".sq\u0000~\u0000/t\u0000\u000finteger-derivedq\u0000~\u0000Csq\u0000~\u0000\t\u0000\u00ae\u00f9|ppsq\u0000~\u00002\u0000\u00ae\u00f9qq\u0000~\u0000\u0010pq\u0000"
+"~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000eDurationFormatq\u0000~\u0000Cq\u0000~\u0000?sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0000\u00ac[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u0000\u0013\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppq\u0000~\u0000\u0005ppppppppppq\u0000~\u0000^pppppq\u0000~\u0000\bppppppppppp"
+"ppppppppppppppq\u0000~\u0000]ppppppppq\u0000~\u0000Npppppq\u0000~\u0000\u00a6q\u0000~\u0000Fpq\u0000~\u00001pppq\u0000~\u0000"
+"[pq\u0000~\u0000\u0006pppppppppppppq\u0000~\u0000Dppppppppq\u0000~\u0000eppq\u0000~\u0000\u0011ppppppppppppppp"
+"pppq\u0000~\u0000cppq\u0000~\u0000\npppppppq\u0000~\u0000Vppppppq\u0000~\u0000Upppppppppppppppppppppq"
+"\u0000~\u0000Sppppppppppppppppppppppppppppq\u0000~\u0000\u0007pp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  9 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  12 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  14 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  8 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        eatText1(value);
                                        state = 8;
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  13 :
                                        eatText2(value);
                                        state = 14;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  1 :
                                        eatText3(value);
                                        state = 2;
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  4 :
                                        eatText4(value);
                                        state = 5;
                                        return ;
                                    case  10 :
                                        eatText5(value);
                                        state = 11;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Value = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  126 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 127;
                                    return ;
                                }
                                state = 129;
                                continue outer;
                            case  147 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 148;
                                    return ;
                                }
                                state = 150;
                                continue outer;
                            case  6 :
                                if (("ResourceUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  93 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 94;
                                    return ;
                                }
                                state = 96;
                                continue outer;
                            case  138 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 139;
                                    return ;
                                }
                                state = 141;
                                continue outer;
                            case  129 :
                                if (("Units" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 130;
                                    return ;
                                }
                                state = 132;
                                continue outer;
                            case  75 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 76;
                                    return ;
                                }
                                state = 78;
                                continue outer;
                            case  153 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 154;
                                    return ;
                                }
                                state = 156;
                                continue outer;
                            case  163 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  36 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 37;
                                    return ;
                                }
                                state = 39;
                                continue outer;
                            case  135 :
                                if (("VAC" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 136;
                                    return ;
                                }
                                state = 138;
                                continue outer;
                            case  57 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 58;
                                    return ;
                                }
                                state = 60;
                                continue outer;
                            case  66 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 67;
                                    return ;
                                }
                                state = 69;
                                continue outer;
                            case  42 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 43;
                                    return ;
                                }
                                state = 45;
                                continue outer;
                            case  165 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 163;
                                    return ;
                                }
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 166;
                                    return ;
                                }
                                state = 168;
                                continue outer;
                            case  78 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 79;
                                    return ;
                                }
                                state = 81;
                                continue outer;
                            case  63 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 64;
                                    return ;
                                }
                                state = 66;
                                continue outer;
                            case  144 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 145;
                                    return ;
                                }
                                state = 147;
                                continue outer;
                            case  81 :
                                if (("LinkedFields" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 82;
                                    return ;
                                }
                                state = 84;
                                continue outer;
                            case  166 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.class), 167, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.class), 167, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  168 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 166;
                                    return ;
                                }
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 169;
                                    return ;
                                }
                                state = 171;
                                continue outer;
                            case  117 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 118;
                                    return ;
                                }
                                state = 120;
                                continue outer;
                            case  21 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  156 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 157;
                                    return ;
                                }
                                state = 159;
                                continue outer;
                            case  90 :
                                if (("Overallocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 91;
                                    return ;
                                }
                                state = 93;
                                continue outer;
                            case  169 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 170, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 170, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  114 :
                                if (("ResponsePending" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 115;
                                    return ;
                                }
                                state = 117;
                                continue outer;
                            case  159 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 160;
                                    return ;
                                }
                                state = 162;
                                continue outer;
                            case  24 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  99 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 100;
                                    return ;
                                }
                                state = 102;
                                continue outer;
                            case  150 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 151;
                                    return ;
                                }
                                state = 153;
                                continue outer;
                            case  123 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 124;
                                    return ;
                                }
                                state = 126;
                                continue outer;
                            case  111 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 112;
                                    return ;
                                }
                                state = 114;
                                continue outer;
                            case  12 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  84 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 85;
                                    return ;
                                }
                                state = 87;
                                continue outer;
                            case  45 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 46;
                                    return ;
                                }
                                state = 48;
                                continue outer;
                            case  39 :
                                if (("CostRateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 40;
                                    return ;
                                }
                                state = 42;
                                continue outer;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  108 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 109;
                                    return ;
                                }
                                state = 111;
                                continue outer;
                            case  102 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 103;
                                    return ;
                                }
                                state = 105;
                                continue outer;
                            case  162 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 163;
                                    return ;
                                }
                                state = 165;
                                continue outer;
                            case  87 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 88;
                                    return ;
                                }
                                state = 90;
                                continue outer;
                            case  27 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  72 :
                                if (("FixedMaterial" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 73;
                                    return ;
                                }
                                state = 75;
                                continue outer;
                            case  105 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 106;
                                    return ;
                                }
                                state = 108;
                                continue outer;
                            case  96 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 97;
                                    return ;
                                }
                                state = 99;
                                continue outer;
                            case  69 :
                                if (("HasFixedRateUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 70;
                                    return ;
                                }
                                state = 72;
                                continue outer;
                            case  3 :
                                if (("TaskUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  171 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 169;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  30 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  15 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  33 :
                                if (("Confirmed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  132 :
                                if (("UpdateNeeded" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 133;
                                    return ;
                                }
                                state = 135;
                                continue outer;
                            case  60 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 61;
                                    return ;
                                }
                                state = 63;
                                continue outer;
                            case  141 :
                                if (("WorkContour" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 142;
                                    return ;
                                }
                                state = 144;
                                continue outer;
                            case  54 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 55;
                                    return ;
                                }
                                state = 57;
                                continue outer;
                            case  18 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  51 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 52;
                                    return ;
                                }
                                state = 54;
                                continue outer;
                            case  120 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 121;
                                    return ;
                                }
                                state = 123;
                                continue outer;
                            case  48 :
                                if (("Delay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 49;
                                    return ;
                                }
                                state = 51;
                                continue outer;
                            case  9 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  126 :
                                state = 129;
                                continue outer;
                            case  17 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  62 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 63;
                                    return ;
                                }
                                break;
                            case  149 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 150;
                                    return ;
                                }
                                break;
                            case  74 :
                                if (("FixedMaterial" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 75;
                                    return ;
                                }
                                break;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  47 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 48;
                                    return ;
                                }
                                break;
                            case  23 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  155 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 156;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  140 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 141;
                                    return ;
                                }
                                break;
                            case  38 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 39;
                                    return ;
                                }
                                break;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  32 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  41 :
                                if (("CostRateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 42;
                                    return ;
                                }
                                break;
                            case  20 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  146 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 147;
                                    return ;
                                }
                                break;
                            case  131 :
                                if (("Units" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 132;
                                    return ;
                                }
                                break;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  119 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 120;
                                    return ;
                                }
                                break;
                            case  86 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 87;
                                    return ;
                                }
                                break;
                            case  44 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 45;
                                    return ;
                                }
                                break;
                            case  163 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname)));
                                return ;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  164 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 165;
                                    return ;
                                }
                                break;
                            case  77 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 78;
                                    return ;
                                }
                                break;
                            case  68 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 69;
                                    return ;
                                }
                                break;
                            case  89 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 90;
                                    return ;
                                }
                                break;
                            case  122 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 123;
                                    return ;
                                }
                                break;
                            case  92 :
                                if (("Overallocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 93;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("ResourceUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  137 :
                                if (("VAC" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 138;
                                    return ;
                                }
                                break;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  152 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 153;
                                    return ;
                                }
                                break;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  104 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 105;
                                    return ;
                                }
                                break;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  65 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 66;
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  98 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 99;
                                    return ;
                                }
                                break;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  26 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  95 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 96;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  134 :
                                if (("UpdateNeeded" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 135;
                                    return ;
                                }
                                break;
                            case  158 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 159;
                                    return ;
                                }
                                break;
                            case  101 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 102;
                                    return ;
                                }
                                break;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  80 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 81;
                                    return ;
                                }
                                break;
                            case  14 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  56 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 57;
                                    return ;
                                }
                                break;
                            case  167 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 168;
                                    return ;
                                }
                                break;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  83 :
                                if (("LinkedFields" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 84;
                                    return ;
                                }
                                break;
                            case  113 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 114;
                                    return ;
                                }
                                break;
                            case  170 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 171;
                                    return ;
                                }
                                break;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  35 :
                                if (("Confirmed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  71 :
                                if (("HasFixedRateUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 72;
                                    return ;
                                }
                                break;
                            case  116 :
                                if (("ResponsePending" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 117;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  53 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 54;
                                    return ;
                                }
                                break;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  50 :
                                if (("Delay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 51;
                                    return ;
                                }
                                break;
                            case  171 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  161 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 162;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("TaskUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  125 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 126;
                                    return ;
                                }
                                break;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  110 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 111;
                                    return ;
                                }
                                break;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  143 :
                                if (("WorkContour" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 144;
                                    return ;
                                }
                                break;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  59 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 60;
                                    return ;
                                }
                                break;
                            case  107 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 108;
                                    return ;
                                }
                                break;
                            case  128 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 129;
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  126 :
                                state = 129;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  163 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname)));
                                return ;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  171 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  126 :
                                state = 129;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  163 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname)));
                                return ;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  171 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  126 :
                                    state = 129;
                                    continue outer;
                                case  148 :
                                    eatText1(value);
                                    state = 149;
                                    return ;
                                case  118 :
                                    eatText2(value);
                                    state = 119;
                                    return ;
                                case  19 :
                                    eatText3(value);
                                    state = 20;
                                    return ;
                                case  79 :
                                    eatText4(value);
                                    state = 80;
                                    return ;
                                case  127 :
                                    eatText5(value);
                                    state = 128;
                                    return ;
                                case  43 :
                                    eatText6(value);
                                    state = 44;
                                    return ;
                                case  147 :
                                    state = 150;
                                    continue outer;
                                case  64 :
                                    eatText7(value);
                                    state = 65;
                                    return ;
                                case  139 :
                                    eatText8(value);
                                    state = 140;
                                    return ;
                                case  55 :
                                    eatText9(value);
                                    state = 56;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  93 :
                                    state = 96;
                                    continue outer;
                                case  109 :
                                    eatText10(value);
                                    state = 110;
                                    return ;
                                case  138 :
                                    state = 141;
                                    continue outer;
                                case  13 :
                                    eatText11(value);
                                    state = 14;
                                    return ;
                                case  129 :
                                    state = 132;
                                    continue outer;
                                case  75 :
                                    state = 78;
                                    continue outer;
                                case  157 :
                                    eatText12(value);
                                    state = 158;
                                    return ;
                                case  145 :
                                    eatText13(value);
                                    state = 146;
                                    return ;
                                case  115 :
                                    eatText14(value);
                                    state = 116;
                                    return ;
                                case  100 :
                                    eatText15(value);
                                    state = 101;
                                    return ;
                                case  153 :
                                    state = 156;
                                    continue outer;
                                case  163 :
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, value)));
                                    return ;
                                case  36 :
                                    state = 39;
                                    continue outer;
                                case  97 :
                                    eatText16(value);
                                    state = 98;
                                    return ;
                                case  135 :
                                    state = 138;
                                    continue outer;
                                case  37 :
                                    eatText17(value);
                                    state = 38;
                                    return ;
                                case  94 :
                                    eatText18(value);
                                    state = 95;
                                    return ;
                                case  160 :
                                    eatText19(value);
                                    state = 161;
                                    return ;
                                case  57 :
                                    state = 60;
                                    continue outer;
                                case  66 :
                                    state = 69;
                                    continue outer;
                                case  133 :
                                    eatText20(value);
                                    state = 134;
                                    return ;
                                case  42 :
                                    state = 45;
                                    continue outer;
                                case  165 :
                                    state = 168;
                                    continue outer;
                                case  78 :
                                    state = 81;
                                    continue outer;
                                case  63 :
                                    state = 66;
                                    continue outer;
                                case  144 :
                                    state = 147;
                                    continue outer;
                                case  81 :
                                    state = 84;
                                    continue outer;
                                case  168 :
                                    state = 171;
                                    continue outer;
                                case  117 :
                                    state = 120;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  76 :
                                    eatText21(value);
                                    state = 77;
                                    return ;
                                case  7 :
                                    eatText22(value);
                                    state = 8;
                                    return ;
                                case  156 :
                                    state = 159;
                                    continue outer;
                                case  90 :
                                    state = 93;
                                    continue outer;
                                case  112 :
                                    eatText23(value);
                                    state = 113;
                                    return ;
                                case  85 :
                                    eatText24(value);
                                    state = 86;
                                    return ;
                                case  154 :
                                    eatText25(value);
                                    state = 155;
                                    return ;
                                case  114 :
                                    state = 117;
                                    continue outer;
                                case  159 :
                                    state = 162;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  99 :
                                    state = 102;
                                    continue outer;
                                case  73 :
                                    eatText26(value);
                                    state = 74;
                                    return ;
                                case  150 :
                                    state = 153;
                                    continue outer;
                                case  67 :
                                    eatText27(value);
                                    state = 68;
                                    return ;
                                case  124 :
                                    eatText28(value);
                                    state = 125;
                                    return ;
                                case  123 :
                                    state = 126;
                                    continue outer;
                                case  111 :
                                    state = 114;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  84 :
                                    state = 87;
                                    continue outer;
                                case  45 :
                                    state = 48;
                                    continue outer;
                                case  10 :
                                    eatText29(value);
                                    state = 11;
                                    return ;
                                case  58 :
                                    eatText30(value);
                                    state = 59;
                                    return ;
                                case  39 :
                                    state = 42;
                                    continue outer;
                                case  108 :
                                    state = 111;
                                    continue outer;
                                case  102 :
                                    state = 105;
                                    continue outer;
                                case  162 :
                                    state = 165;
                                    continue outer;
                                case  87 :
                                    state = 90;
                                    continue outer;
                                case  16 :
                                    eatText31(value);
                                    state = 17;
                                    return ;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  130 :
                                    eatText32(value);
                                    state = 131;
                                    return ;
                                case  136 :
                                    eatText33(value);
                                    state = 137;
                                    return ;
                                case  4 :
                                    eatText34(value);
                                    state = 5;
                                    return ;
                                case  72 :
                                    state = 75;
                                    continue outer;
                                case  105 :
                                    state = 108;
                                    continue outer;
                                case  96 :
                                    state = 99;
                                    continue outer;
                                case  142 :
                                    eatText35(value);
                                    state = 143;
                                    return ;
                                case  69 :
                                    state = 72;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  171 :
                                    revertToParentFromText(value);
                                    return ;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  46 :
                                    eatText36(value);
                                    state = 47;
                                    return ;
                                case  91 :
                                    eatText37(value);
                                    state = 92;
                                    return ;
                                case  52 :
                                    eatText38(value);
                                    state = 53;
                                    return ;
                                case  151 :
                                    eatText39(value);
                                    state = 152;
                                    return ;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  106 :
                                    eatText40(value);
                                    state = 107;
                                    return ;
                                case  132 :
                                    state = 135;
                                    continue outer;
                                case  61 :
                                    eatText41(value);
                                    state = 62;
                                    return ;
                                case  60 :
                                    state = 63;
                                    continue outer;
                                case  1 :
                                    eatText42(value);
                                    state = 2;
                                    return ;
                                case  25 :
                                    eatText43(value);
                                    state = 26;
                                    return ;
                                case  141 :
                                    state = 144;
                                    continue outer;
                                case  22 :
                                    eatText44(value);
                                    state = 23;
                                    return ;
                                case  54 :
                                    state = 57;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  51 :
                                    state = 54;
                                    continue outer;
                                case  103 :
                                    eatText45(value);
                                    state = 104;
                                    return ;
                                case  40 :
                                    eatText46(value);
                                    state = 41;
                                    return ;
                                case  70 :
                                    eatText47(value);
                                    state = 71;
                                    return ;
                                case  120 :
                                    state = 123;
                                    continue outer;
                                case  48 :
                                    state = 51;
                                    continue outer;
                                case  82 :
                                    eatText48(value);
                                    state = 83;
                                    return ;
                                case  121 :
                                    eatText49(value);
                                    state = 122;
                                    return ;
                                case  49 :
                                    eatText50(value);
                                    state = 50;
                                    return ;
                                case  34 :
                                    eatText51(value);
                                    state = 35;
                                    return ;
                                case  28 :
                                    eatText52(value);
                                    state = 29;
                                    return ;
                                case  88 :
                                    eatText53(value);
                                    state = 89;
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  31 :
                                    eatText54(value);
                                    state = 32;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelayFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StartVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CostVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkSubAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FinishVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText12(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText13(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWS = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText14(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResponsePending = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ResponsePending = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText15(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RegularWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText16(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText17(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText18(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText19(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText20(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UpdateNeeded = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_UpdateNeeded = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText21(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText22(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResourceUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText23(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText24(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Milestone = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Milestone = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText25(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText26(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FixedMaterial = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_FixedMaterial = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText27(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_WorkVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText28(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Resume = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText29(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentWorkComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText30(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Hyperlink = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText31(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText32(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Units = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Units = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText33(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _VAC = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_VAC = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText34(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _TaskUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText35(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkContour = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText36(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText37(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Overallocated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Overallocated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText38(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText39(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BookingType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText40(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText41(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText42(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText43(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText44(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText45(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText46(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostRateTable = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText47(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HasFixedRateUnits = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_HasFixedRateUnits = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText48(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LinkedFields = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LinkedFields = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText49(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Stop = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText50(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Delay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText51(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Confirmed = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Confirmed = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText52(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText53(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Notes = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText54(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ACWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ACWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _Assignment.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class CalendarsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Calendar = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.class);
        }

        public java.util.List getCalendar() {
            return _Calendar;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Calendar.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Calendar");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Calendar.get(idx_0 ++)), "Calendar");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Calendar.get(idx_1 ++)), "Calendar");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Calendar.get(idx1 ++)), "Calendar");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Calendar.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Calendar.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003"
+"I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean"
+";L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002\u00b4\u0095\u0091ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00b4\u0095\u008epp\u0000sr\u0000\u001fc"
+"om.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gra"
+"mmar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00b4\u0095\u0083p"
+"psq\u0000~\u0000\u0006\u0000\u00ee&-pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u000b\u0000\u00ee&\"ppsq\u0000~\u0000\u0000\u0000\u00ee&\u0017sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.E"
+"xpression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0011\u0001q\u0000~"
+"\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017psr\u0000#co"
+"m.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012L"
+"java/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000Ccom.tapsterroc"
+"k.mspdi.schema.ProjectType.CalendarsType.CalendarTypet\u0000+http"
+"://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000e\u0001\u00c6oQppsq\u0000~\u0000\u0013\u0001\u00c6o"
+"Fq\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lco"
+"m/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w"
+"3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom."
+"sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/200"
+"1/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\bCalendart\u0000$http://schemas."
+"microsoft.com/projectsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000>[\u0000\u0005tablet\u0000![L"
+"com/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0005\u0000\u0000\u00009pur\u0000![Lcom.sun.msv."
+"grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0010pq\u0000"
+"~\u0000\fppppppppq\u0000~\u0000\u000fppppq\u0000~\u0000\u0005pppppppppppppq\u0000~\u0000\"ppppppppppppppppp"
+"ppppppp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class CalendarTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType _WeekDays;
            protected boolean has_IsBaseCalendar;
            protected boolean _IsBaseCalendar;
            protected java.math.BigInteger _BaseCalendarUID;
            protected java.lang.String _Name;
            protected java.math.BigInteger _UID;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.class);
            }

            public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType getWeekDays() {
                return _WeekDays;
            }

            public void setWeekDays(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType value) {
                _WeekDays = value;
            }

            public boolean isIsBaseCalendar() {
                return _IsBaseCalendar;
            }

            public void setIsBaseCalendar(boolean value) {
                _IsBaseCalendar = value;
                has_IsBaseCalendar = true;
            }

            public java.math.BigInteger getBaseCalendarUID() {
                return _BaseCalendarUID;
            }

            public void setBaseCalendarUID(java.math.BigInteger value) {
                _BaseCalendarUID = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Name), "Name");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsBaseCalendar) {
                    context.startElement("http://schemas.microsoft.com/project", "IsBaseCalendar");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsBaseCalendar)), "IsBaseCalendar");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_BaseCalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BaseCalendarUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BaseCalendarUID)), "BaseCalendarUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WeekDays!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WeekDays");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WeekDays), "WeekDays");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WeekDays), "WeekDays");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _WeekDays), "WeekDays");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\f\u00c5!\u00d4ppsq\u0000~\u0000\u0000\t\u00ff\u00ed\bppsq\u0000~\u0000\u0000\u0007"
+"o\t\u00d4ppsq\u0000~\u0000\u0000\u0006`n\u00dfppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000"
+"\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclare"
+"dAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00b2\u00b8\u0093pp\u0000sq\u0000~\u0000\u0000\u0002\u00b2\u00b8\u0088ppsr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.xsd.IntegerTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatat"
+"ypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamesp"
+"aceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.L"
+"com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"
+".w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.dat"
+"atype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun."
+"msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z"
+"\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0014L\u0000\fconcre"
+"teTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetName"
+"q\u0000~\u0000\u0018xq\u0000~\u0000\u0017ppq\u0000~\u0000\u001f\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007decimalq\u0000~\u0000\u001fq\u0000~\u0000&t\u0000\u000efractionDigits\u0000\u0000"
+"\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L"
+"\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000\u001dcom.sun."
+"msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002=\u00b5}ppsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nx"
+"q\u0000~\u0000\u0003\u0002=\u00b5rsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000e\u0000"
+"\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015"
+"q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00006q\u0000~\u0000\u001bsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceUR"
+"Iq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~"
+"\u00001\u0001psq\u0000~\u00008t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000"
+"-\u0003\u00ad\u00b6Gppsq\u0000~\u0000\t\u0003\u00ad\u00b6<q\u0000~\u00002p\u0000sq\u0000~\u0000\u0000\u0003\u00ad\u00b61ppsq\u0000~\u0000\u000e\u0001V\u00ad\u00eeppsr\u0000\'com.sun."
+"msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009co"
+"m.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca"
+"\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000Bpsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001e\u0000\u0000sr\u0000#com.sun.msv.datatype.x"
+"sd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006string"
+"q\u0000~\u0000K\u0001q\u0000~\u0000Mt\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000estring-derivedq\u0000~\u0000B"
+"sq\u0000~\u0000-\u0002W\b>ppsq\u0000~\u0000/\u0002W\b3q\u0000~\u00002pq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008"
+"t\u0000\u0004Nameq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-\u0001\u000e\u009a\u00f0ppsq\u0000~\u0000\t\u0001\u000e\u009a\u00e5q\u0000~\u00002p\u0000sq\u0000~\u0000\u0000\u0001\u000e\u009a\u00dappsq"
+"\u0000~\u0000\u000e\u00001\u00ff3ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007booleanq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000]q\u0000~\u0000\u001bsq\u0000~\u0000-\u0000\u00dc\u009b\u00a2pp"
+"sq\u0000~\u0000/\u0000\u00dc\u009b\u0097q\u0000~\u00002pq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000eIsBaseCal"
+"endarq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-\u0002\u0090\u00e3/ppsq\u0000~\u0000\t\u0002\u0090\u00e3$q\u0000~\u00002p\u0000sq\u0000~\u0000\u0000\u0002\u0090\u00e3\u0019ppq\u0000~\u0000"
+"\u0011sq\u0000~\u0000-\u0002\u001b\u00e0\u000eppsq\u0000~\u0000/\u0002\u001b\u00e0\u0003q\u0000~\u00002pq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000"
+"8t\u0000\u000fBaseCalendarUIDq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-\u0002\u00c54\u00c7ppsq\u0000~\u0000\t\u0002\u00c54\u00bcq\u0000~\u00002p\u0000sq"
+"\u0000~\u0000\u0000\u0002\u00c54\u00b1ppsq\u0000~\u0000\t\u0000\u00ee&-pp\u0000sq\u0000~\u0000-\u0000\u00ee&\"ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u00002psq\u0000~\u0000/\u0000\u00ee&\u0014q\u0000~\u00002psr\u00002com.sun."
+"msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000"
+"\u0000\u0000\bq\u0000~\u0000?q\u0000~\u0000vsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u00009q\u0000~\u0000>sq\u0000~\u00008t\u0000Pcom.tapsterrock.mspdi.schema.ProjectType"
+".CalendarsType.CalendarType.WeekDaysTypet\u0000+http://java.sun.c"
+"om/jaxb/xjc/dummy-elementssq\u0000~\u0000-\u0001\u00d7\u000e\u007fppsq\u0000~\u0000/\u0001\u00d7\u000etq\u0000~\u00002pq\u0000~\u00003s"
+"q\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\bWeekDaysq\u0000~\u0000Bq\u0000~\u0000>sr\u0000\"com.sun.m"
+"sv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/m"
+"sv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramm"
+"ar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL"
+"\u0000\u0006parentq\u0000~\u0000\u0082[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000"
+"\u0000\u0000\u0014\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000"
+"\u0000\u00bfq\u0000~\u0000npppppppppppq\u0000~\u0000Yppppq\u0000~\u0000_ppppq\u0000~\u0000lpq\u0000~\u0000\bpppq\u0000~\u0000|ppppp"
+"q\u0000~\u0000Rq\u0000~\u0000Wppppq\u0000~\u0000gpppppppq\u0000~\u0000.ppppppppppppppq\u0000~\u0000\u0007ppppppppq\u0000"
+"~\u0000fpppppppq\u0000~\u0000\rpppppppppppppq\u0000~\u0000dppq\u0000~\u0000Epppppppppppppppppppp"
+"pq\u0000~\u0000Cppppppppppppppppq\u0000~\u0000sppppppppppq\u0000~\u0000pppppppppppppppq\u0000~\u0000"
+"\u0006ppppppppppppppppppppppppppq\u0000~\u0000\u0005p"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  6 :
                                if (("IsBaseCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  15 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  9 :
                                if (("BaseCalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  3 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  13 :
                                if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  12 :
                                if (("WeekDays" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  11 :
                                if (("BaseCalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  15 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  8 :
                                if (("IsBaseCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  13 :
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  14 :
                                if (("WeekDays" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                state = 9;
                                continue outer;
                            case  15 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  13 :
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                state = 9;
                                continue outer;
                            case  15 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  13 :
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  4 :
                                    eatText1(value);
                                    state = 5;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  15 :
                                    revertToParentFromText(value);
                                    return ;
                                case  10 :
                                    eatText2(value);
                                    state = 11;
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  1 :
                                    eatText3(value);
                                    state = 2;
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  13 :
                                    _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, value));
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  7 :
                                    eatText4(value);
                                    state = 8;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Name = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BaseCalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsBaseCalendar = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsBaseCalendar = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

            public static class WeekDaysTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _WeekDay = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.class);
                }

                public java.util.List getWeekDay() {
                    return _WeekDay;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _WeekDay.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "WeekDay");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WeekDay.get(idx_0 ++)), "WeekDay");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WeekDay.get(idx_1 ++)), "WeekDay");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _WeekDay.get(idx1 ++)), "WeekDay");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _WeekDay.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _WeekDay.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0001\u008b\u00aa\u00b1ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u008b\u00aa\u00a6sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u008b\u00aa\u00a3q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u008b\u00aa\u0098ppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000\\com.tapsterrock.mspdi.schema.ProjectType.CalendarsType"
+".CalendarType.WeekDaysType.WeekDayTypet\u0000+http://java.sun.com"
+"/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000\u0000\u009d\u0084fppsq\u0000~\u0000\u0014\u0000\u009d\u0084[q\u0000~\u0000\npsr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000"
+"~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-ins"
+"tanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0007WeekDayt\u0000$http://schemas.microsoft.com/pr"
+"ojectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002"
+"\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/msv"
+"/grammar/Expression;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Exp"
+"ression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppp"
+"ppppppq\u0000~\u0000\u0010pppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000#ppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~"
+"\u0000\u0013ppppppppppq\u0000~\u0000\u0012ppppppppppppppppppppppppppppppppppppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("DayType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _WeekDay.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  2 :
                                    if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

                public static class WeekDayTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected boolean has_DayWorking;
                    protected boolean _DayWorking;
                    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType _WorkingTimes;
                    protected java.math.BigInteger _DayType;
                    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType _TimePeriod;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.class);
                    }

                    public boolean isDayWorking() {
                        return _DayWorking;
                    }

                    public void setDayWorking(boolean value) {
                        _DayWorking = value;
                        has_DayWorking = true;
                    }

                    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType getWorkingTimes() {
                        return _WorkingTimes;
                    }

                    public void setWorkingTimes(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType value) {
                        _WorkingTimes = value;
                    }

                    public java.math.BigInteger getDayType() {
                        return _DayType;
                    }

                    public void setDayType(java.math.BigInteger value) {
                        _DayType = value;
                    }

                    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType getTimePeriod() {
                        return _TimePeriod;
                    }

                    public void setTimePeriod(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType value) {
                        _TimePeriod = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "DayType");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DayType)), "DayType");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (has_DayWorking) {
                            context.startElement("http://schemas.microsoft.com/project", "DayWorking");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DayWorking)), "DayWorking");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_TimePeriod!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "TimePeriod");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimePeriod), "TimePeriod");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimePeriod), "TimePeriod");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimePeriod), "TimePeriod");
                            context.endElement();
                        }
                        if (_WorkingTimes!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "WorkingTimes");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WorkingTimes), "WorkingTimes");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WorkingTimes), "WorkingTimes");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _WorkingTimes), "WorkingTimes");
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\t\u00cb\u00a7qppsq\u0000~\u0000\u0000\u0006\u00b4\u0092\u00ceppsq\u0000~\u0000\u0000\u0005"
+"?\u009f\u0093ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv"
+".grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL"
+"\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00a5Y\u00b2pp\u0000sq\u0000~\u0000\u0000\u0003\u00a5Y\u00a7ppsr\u0000\u001bcom.sun.msv."
+"grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"
+"type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"
+"\u0000~\u0000\u0003\u0001\u00f9\u00b5{ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xs"
+"d.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012"
+"needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XS"
+"DatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Con"
+"creteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0017L\u0000\b"
+"typeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000$http://schemas.microsoft.com/projectpsr\u0000"
+"5com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\n"
+"baseFacetsq\u0000~\u0000\u0015xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integerq\u0000~\u0000\u001e"
+"sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I"
+"\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConst"
+"raintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0014ppq\u0000~\u0000\u001e\u0001\u0000sr\u0000#com.sun.msv.datatype"
+".xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u0000\u001eq\u0000~\u0000*t\u0000\u000e"
+"fractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000#t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD"
+"\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bsr\u0000)com.sun.msv.datatype.xsd.Intege"
+"rValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0017xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094"
+"\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u00000t\u0000\u00015sq\u0000~\u00000t\u0000\u00017sq\u0000~\u00000t\u0000\u00012sq\u0000~\u00000t\u0000\u00010sq\u0000~\u00000t\u0000\u0001"
+"4sq\u0000~\u00000t\u0000\u00016sq\u0000~\u00000t\u0000\u00011xsr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpt\u0000"
+"\u000finteger-derivedq\u0000~\u0000\u001bsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00ab\u00a4\'ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0001\u00ab\u00a4\u001csr\u0000\u0011java.lang.Bool"
+"ean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\r\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.dataty"
+"pe.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0005QNameq\u0000~\u0000\u001eq\u0000~\u0000Csq\u0000~"
+"\u0000Dq\u0000~\u0000Pq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.gramm"
+"ar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XM"
+"LSchema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000K\u0001psq\u0000~\u0000Rt\u0000\u0007DayTypeq\u0000~\u0000\u001bsq"
+"\u0000~\u0000G\u0001\u009aE\u00dcppsq\u0000~\u0000\b\u0001\u009aE\u00d1q\u0000~\u0000Lp\u0000sq\u0000~\u0000\u0000\u0001\u009aE\u00c6ppsq\u0000~\u0000\r\u00001\u00ff3ppsr\u0000$com.s"
+"un.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0007bool"
+"eanq\u0000~\u0000\u001eq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000bq\u0000~\u0000$sq\u0000~\u0000G\u0001hF\u008eppsq\u0000~\u0000I\u0001hF\u0083q\u0000~\u0000Lpq\u0000~"
+"\u0000Msq\u0000~\u0000Rq\u0000~\u0000Uq\u0000~\u0000Vq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\nDayWorkingq\u0000~\u0000\u001bq\u0000~\u0000Xsq\u0000~\u0000G\u0001t"
+"\u00f36ppsq\u0000~\u0000\b\u0001t\u00f3+q\u0000~\u0000Lp\u0000sq\u0000~\u0000\u0000\u0001t\u00f3 ppsq\u0000~\u0000\b\u0000\u00ee&-pp\u0000sq\u0000~\u0000G\u0000\u00ee&\"ppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u0000Lpsq\u0000~\u0000"
+"I\u0000\u00ee&\u0014q\u0000~\u0000Lpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000Yq\u0000~\u0000ssr\u0000 com.sun.msv.grammar."
+"AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000kcom.tapsterrock.m"
+"spdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysT"
+"ype.WeekDayType.TimePeriodTypet\u0000+http://java.sun.com/jaxb/xj"
+"c/dummy-elementssq\u0000~\u0000G\u0000\u0086\u00cc\u00eeppsq\u0000~\u0000I\u0000\u0086\u00cc\u00e3q\u0000~\u0000Lpq\u0000~\u0000Msq\u0000~\u0000Rq\u0000~\u0000U"
+"q\u0000~\u0000Vq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\nTimePeriodq\u0000~\u0000\u001bq\u0000~\u0000Xsq\u0000~\u0000G\u0003\u0017\u0014\u009eppsq\u0000~\u0000\b\u0003\u0017\u0014"
+"\u0093q\u0000~\u0000Lp\u0000sq\u0000~\u0000\u0000\u0003\u0017\u0014\u0088ppsq\u0000~\u0000\b\u0000\u00ee&-pp\u0000sq\u0000~\u0000G\u0000\u00ee&\"ppsq\u0000~\u0000n\u0000\u00ee&\u0017q\u0000~\u0000L"
+"psq\u0000~\u0000I\u0000\u00ee&\u0014q\u0000~\u0000Lpq\u0000~\u0000sq\u0000~\u0000uq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000mcom.tapsterrock.msp"
+"di.schema.ProjectType.CalendarsType.CalendarType.WeekDaysTyp"
+"e.WeekDayType.WorkingTimesTypeq\u0000~\u0000xsq\u0000~\u0000G\u0002(\u00eeVppsq\u0000~\u0000I\u0002(\u00eeKq\u0000~"
+"\u0000Lpq\u0000~\u0000Msq\u0000~\u0000Rq\u0000~\u0000Uq\u0000~\u0000Vq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\fWorkingTimesq\u0000~\u0000\u001bq\u0000~\u0000X"
+"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTable"
+"t\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com."
+"sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005count"
+"I\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u008d[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/E"
+"xpression;xp\u0000\u0000\u0000\u0012\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68"
+"D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpq\u0000~\u0000\\ppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppq\u0000~\u0000\u0006pppppq\u0000~\u0000Hppppp"
+"pppppppppq\u0000~\u0000\fppppppppppppppppq\u0000~\u0000\u0007ppppppppppq\u0000~\u0000kpppppppppq"
+"\u0000~\u0000pq\u0000~\u0000\u0083pppppppppq\u0000~\u0000mq\u0000~\u0000iq\u0000~\u0000\u0082q\u0000~\u0000\u0080pppq\u0000~\u0000ypppppppppppppp"
+"q\u0000~\u0000~q\u0000~\u0000^ppppq\u0000~\u0000dq\u0000~\u0000\u0087pppppppppppppp"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public static class TimePeriodTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                    {

                        protected java.util.Calendar _ToDate;
                        protected java.util.Calendar _FromDate;
                        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                        private static com.sun.msv.grammar.Grammar schemaFragment;

                        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType.class);
                        }

                        public java.util.Calendar getToDate() {
                            return _ToDate;
                        }

                        public void setToDate(java.util.Calendar value) {
                            _ToDate = value;
                        }

                        public java.util.Calendar getFromDate() {
                            return _FromDate;
                        }

                        public void setFromDate(java.util.Calendar value) {
                            _FromDate = value;
                        }

                        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.Unmarshaller(context);
                        }

                        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            if (_FromDate!= null) {
                                context.startElement("http://schemas.microsoft.com/project", "FromDate");
                                context.endNamespaceDecls();
                                context.endAttributes();
                                try {
                                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FromDate), null), "FromDate");
                                } catch (java.lang.Exception e) {
                                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                }
                                context.endElement();
                            }
                            if (_ToDate!= null) {
                                context.startElement("http://schemas.microsoft.com/project", "ToDate");
                                context.endNamespaceDecls();
                                context.endAttributes();
                                try {
                                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ToDate), null), "ToDate");
                                } catch (java.lang.Exception e) {
                                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                }
                                context.endElement();
                            }
                        }

                        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                        }

                        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                        }

                        public java.lang.Class getPrimaryInterface() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType.class);
                        }

                        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                            if (schemaFragment == null) {
                                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\u00f7|5ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00af\u0094\u00bfppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00af\u0094"
+"\u00b4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0003\u00af\u0094\u00a9ppsr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003\u0001Kn\u00d8ppsr\u0000%com.sun.msv.datatype.xsd.DateTim"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseTyp"
+"e\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpace"
+"t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:/"
+"/www.w3.org/2001/XMLSchemat\u0000\bdateTimesr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\np"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsq\u0000~\u0000\u0006\u0002d%\u00ccppsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\tx"
+"q\u0000~\u0000\u0003\u0002d%\u00c1q\u0000~\u0000\rpsq\u0000~\u0000\u000f\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.Qnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000*q\u0000~\u0000"
+"\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-ins"
+"tancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\f\u0001psq\u0000~\u0000,t\u0000\bFromDatet\u0000$http://schemas"
+".microsoft.com/projectq\u0000~\u00002sq\u0000~\u0000\u0006\u0003G\u00e7qppsq\u0000~\u0000\b\u0003G\u00e7fq\u0000~\u0000\rp\u0000sq\u0000~"
+"\u0000\u0000\u0003G\u00e7[ppq\u0000~\u0000\u0012sq\u0000~\u0000\u0006\u0001\u00fcx~ppsq\u0000~\u0000%\u0001\u00fcxsq\u0000~\u0000\rpq\u0000~\u0000\'sq\u0000~\u0000,q\u0000~\u0000/q\u0000~"
+"\u00000q\u0000~\u00002sq\u0000~\u0000,t\u0000\u0006ToDateq\u0000~\u00006q\u0000~\u00002sr\u0000\"com.sun.msv.grammar.Expr"
+"essionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expr"
+"essionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPo"
+"ol$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000@[\u0000"
+"\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lc"
+"om.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppp"
+"ppppppppppq\u0000~\u00009pppppppppppq\u0000~\u0000\u0005pppppppppq\u0000~\u00007ppppppppppppppp"
+"pppppppq\u0000~\u0000$pppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppq\u0000~\u0000:pppppppppppppppppppppppppq\u0000~\u0000\u000epppppppppppppp"
+"pppppppq\u0000~\u0000\u0007pppppppppppppp"));
                            }
                            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                        }

                        public class Unmarshaller
                            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                        {


                            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                super(context, "-------");
                            }

                            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                                this(context);
                                state = startState;
                            }

                            public java.lang.Object owner() {
                                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.this;
                            }

                            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  6 :
                                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                            return ;
                                        case  3 :
                                            if (("ToDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.pushAttributes(__atts, true);
                                                state = 4;
                                                return ;
                                            }
                                            state = 6;
                                            continue outer;
                                        case  0 :
                                            if (("FromDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.pushAttributes(__atts, true);
                                                state = 1;
                                                return ;
                                            }
                                            state = 3;
                                            continue outer;
                                    }
                                    super.enterElement(___uri, ___local, ___qname, __atts);
                                    break;
                                }
                            }

                            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  6 :
                                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                            return ;
                                        case  2 :
                                            if (("FromDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.popAttributes();
                                                state = 3;
                                                return ;
                                            }
                                            break;
                                        case  5 :
                                            if (("ToDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.popAttributes();
                                                state = 6;
                                                return ;
                                            }
                                            break;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                    }
                                    super.leaveElement(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  6 :
                                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                    }
                                    super.enterAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  6 :
                                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                    }
                                    super.leaveAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void handleText(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    try {
                                        switch (state) {
                                            case  6 :
                                                revertToParentFromText(value);
                                                return ;
                                            case  1 :
                                                eatText1(value);
                                                state = 2;
                                                return ;
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  4 :
                                                eatText2(value);
                                                state = 5;
                                                return ;
                                        }
                                    } catch (java.lang.RuntimeException e) {
                                        handleUnexpectedTextException(value, e);
                                    }
                                    break;
                                }
                            }

                            private void eatText1(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                try {
                                    _FromDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                } catch (java.lang.Exception e) {
                                    handleParseConversionException(e);
                                }
                            }

                            private void eatText2(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                try {
                                    _ToDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                } catch (java.lang.Exception e) {
                                    handleParseConversionException(e);
                                }
                            }

                        }

                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  12 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  3 :
                                        if (("DayWorking" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                    case  10 :
                                        if (("WorkingTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                            return ;
                                        }
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                        return ;
                                    case  6 :
                                        if (("TimePeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, false);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        if (("WorkingTimes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, false);
                                            state = 10;
                                            return ;
                                        }
                                        state = 12;
                                        continue outer;
                                    case  0 :
                                        if (("DayType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                    case  7 :
                                        if (("FromDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                            return ;
                                        }
                                        if (("ToDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                            return ;
                                        }
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                        return ;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  12 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  2 :
                                        if (("DayType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  5 :
                                        if (("DayWorking" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  8 :
                                        if (("TimePeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  10 :
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname));
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname));
                                        return ;
                                    case  11 :
                                        if (("WorkingTimes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  12 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  10 :
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname));
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname));
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  12 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  10 :
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname));
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname));
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  12 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  4 :
                                            eatText1(value);
                                            state = 5;
                                            return ;
                                        case  10 :
                                            _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, value));
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  9 :
                                            state = 12;
                                            continue outer;
                                        case  1 :
                                            eatText2(value);
                                            state = 2;
                                            return ;
                                        case  7 :
                                            _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, value));
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _DayWorking = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_DayWorking = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _DayType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                    public static class WorkingTimesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                    {

                        protected com.sun.xml.bind.util.ListImpl _WorkingTime = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                        private static com.sun.msv.grammar.Grammar schemaFragment;

                        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.class);
                        }

                        public java.util.List getWorkingTime() {
                            return _WorkingTime;
                        }

                        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.Unmarshaller(context);
                        }

                        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = _WorkingTime.size();
                            while (idx1 != len1) {
                                context.startElement("http://schemas.microsoft.com/project", "WorkingTime");
                                int idx_0 = idx1;
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WorkingTime.get(idx_0 ++)), "WorkingTime");
                                context.endNamespaceDecls();
                                int idx_1 = idx1;
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WorkingTime.get(idx_1 ++)), "WorkingTime");
                                context.endAttributes();
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _WorkingTime.get(idx1 ++)), "WorkingTime");
                                context.endElement();
                            }
                        }

                        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = _WorkingTime.size();
                            while (idx1 != len1) {
                                idx1 += 1;
                            }
                        }

                        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = _WorkingTime.size();
                            while (idx1 != len1) {
                                idx1 += 1;
                            }
                        }

                        public java.lang.Class getPrimaryInterface() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.class);
                        }

                        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                            if (schemaFragment == null) {
                                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000f\u00b0\u0098\fppsr\u0000\u001fcom.sun.msv.gramm"
+"ar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u000f\u00b0\u0098\u0001sr\u0000\u0011java.lang.Boolean\u00cd r\u0080"
+"\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPatte"
+"rn\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;x"
+"r\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecla"
+"redAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003#Q\u008dq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u0003#Q\u0082"
+"ppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsr\u0000 com.sun.msv.grammar.OneOrMore"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003"
+"expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u0000\tpsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\tpsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\b\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000}com.tapsterrock.mspdi.schema.ProjectType.CalendarsType"
+".CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.Work"
+"ingTimeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000"
+"~\u0000\u0000\u00025+Pppsq\u0000~\u0000\u0014\u00025+Eq\u0000~\u0000\tpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002"
+"L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.s"
+"un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatyp"
+"e.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XS"
+"DatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL"
+"\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor"
+";xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000bWorkingT"
+"imet\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\u0000\f\u008dFoppsq\u0000~\u0000\u0006"
+"\f\u008dFdq\u0000~\u0000\tpsq\u0000~\u0000\n\u0003#Q\u008dq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u0003#Q\u0082ppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee"
+"&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~"
+"\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u00025+Pppsq\u0000~\u0000\u0014\u00025+Eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000"
+"\u0000\ti\u00f4\u00d2ppsq\u0000~\u0000\u0006\ti\u00f4\u00c7q\u0000~\u0000\tpsq\u0000~\u0000\n\u0003#Q\u008dq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u0003#Q\u0082ppsq\u0000~\u0000\n\u0000\u00ee"
+"&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u00025+Pppsq\u0000~\u0000\u0014\u00025+Eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000"
+"~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0006F\u00a35ppsq\u0000~\u0000\u0006\u0006F\u00a3*q\u0000~\u0000\tpsq\u0000~\u0000\n\u0003#Q\u008dq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u0003"
+"#Q\u0082ppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000"
+"\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u00025+Pppsq\u0000~\u0000\u0014\u00025+Eq\u0000~\u0000\t"
+"pq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0003#Q\u0098ppsq\u0000~\u0000\n\u0003#Q\u008dq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u0003#Q\u0082"
+"ppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u00025+Pppsq\u0000~\u0000\u0014\u00025+Eq\u0000~\u0000\tpq\u0000"
+"~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;q\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006pa"
+"rentq\u0000~\u0000j[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u001d\u0000"
+"\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpp"
+"pppppppppq\u0000~\u0000_ppppq\u0000~\u0000Uq\u0000~\u0000#q\u0000~\u0000Gq\u0000~\u0000Rq\u0000~\u0000]q\u0000~\u0000gpppppq\u0000~\u0000Tpp"
+"ppq\u0000~\u0000Jppppppppppq\u0000~\u0000Ippppq\u0000~\u0000?ppppppppppq\u0000~\u0000>ppppq\u0000~\u0000\u0007ppppp"
+"pppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppq\u0000~\u0000\u0013q\u0000~\u0000Dq\u0000~\u0000Oq\u0000~\u0000Zq\u0000~\u0000dppppppq\u0000~\u0000\u0010q\u0000~\u0000Cq\u0000~\u0000Nq\u0000~\u0000"
+"Yq\u0000~\u0000cppppppppppppppppppppppppppppq\u0000~\u0000\u000eq\u0000~\u0000Aq\u0000~\u0000Lq\u0000~\u0000Wq\u0000~\u0000ap"
+"ppppp"));
                            }
                            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                        }

                        public class Unmarshaller
                            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                        {


                            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                super(context, "---");
                            }

                            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                                this(context);
                                state = startState;
                            }

                            public java.lang.Object owner() {
                                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.this;
                            }

                            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            if (("FromTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                                return ;
                                            }
                                            if (("ToTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                                return ;
                                            }
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                            return ;
                                        case  0 :
                                            if (("WorkingTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.pushAttributes(__atts, false);
                                                state = 1;
                                                return ;
                                            }
                                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                            return ;
                                    }
                                    super.enterElement(___uri, ___local, ___qname, __atts);
                                    break;
                                }
                            }

                            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                            return ;
                                        case  2 :
                                            if (("WorkingTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.popAttributes();
                                                state = 0;
                                                return ;
                                            }
                                            break;
                                        case  0 :
                                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.leaveElement(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                            return ;
                                        case  0 :
                                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.enterAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                            return ;
                                        case  0 :
                                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.leaveAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void handleText(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    try {
                                        switch (state) {
                                            case  1 :
                                                _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, value)));
                                                return ;
                                            case  0 :
                                                revertToParentFromText(value);
                                                return ;
                                        }
                                    } catch (java.lang.RuntimeException e) {
                                        handleUnexpectedTextException(value, e);
                                    }
                                    break;
                                }
                            }

                        }

                        public static class WorkingTimeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                        {

                            protected java.util.Calendar _ToTime;
                            protected java.util.Calendar _FromTime;
                            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                            private static com.sun.msv.grammar.Grammar schemaFragment;

                            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType.class);
                            }

                            public java.util.Calendar getToTime() {
                                return _ToTime;
                            }

                            public void setToTime(java.util.Calendar value) {
                                _ToTime = value;
                            }

                            public java.util.Calendar getFromTime() {
                                return _FromTime;
                            }

                            public void setFromTime(java.util.Calendar value) {
                                _FromTime = value;
                            }

                            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.Unmarshaller(context);
                            }

                            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                                if (_FromTime!= null) {
                                    context.startElement("http://schemas.microsoft.com/project", "FromTime");
                                    context.endNamespaceDecls();
                                    context.endAttributes();
                                    try {
                                        context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FromTime), null), "FromTime");
                                    } catch (java.lang.Exception e) {
                                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endElement();
                                }
                                if (_ToTime!= null) {
                                    context.startElement("http://schemas.microsoft.com/project", "ToTime");
                                    context.endNamespaceDecls();
                                    context.endAttributes();
                                    try {
                                        context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ToTime), null), "ToTime");
                                    } catch (java.lang.Exception e) {
                                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endElement();
                                }
                            }

                            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                            }

                            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                            }

                            public java.lang.Class getPrimaryInterface() {
                                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType.class);
                            }

                            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                                if (schemaFragment == null) {
                                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002a\u00b0\u00f7ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001j$pppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001j$"
+"esr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001j$Zppsr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003\u0000\u001d\u00ca\\ppsr\u0000!com.sun.msv.datatype.xsd.TimeTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a"
+"@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamesp"
+"aceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.L"
+"com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"
+".w3.org/2001/XMLSchemat\u0000\u0004timesr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramma"
+"r.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom"
+".sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnames"
+"paceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsq\u0000~\u0000\u0006\u0001LY\u00f9ppsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0001LY"
+"\u00eeq\u0000~\u0000\rpsq\u0000~\u0000\u000f\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000*q\u0000~\u0000\u001bsr\u0000#com"
+".sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u0000"
+"0com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\f\u0001psq\u0000~\u0000,t\u0000\bFromTimet\u0000$http://schemas.microso"
+"ft.com/projectq\u0000~\u00002sq\u0000~\u0000\u0006\u0000\u00f7\u008c\u0082ppsq\u0000~\u0000\b\u0000\u00f7\u008cwq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0000\u0000\u00f7\u008clpp"
+"q\u0000~\u0000\u0012sq\u0000~\u0000\u0006\u0000\u00d9\u00c2\u000bppsq\u0000~\u0000%\u0000\u00d9\u00c2\u0000q\u0000~\u0000\rpq\u0000~\u0000\'sq\u0000~\u0000,q\u0000~\u0000/q\u0000~\u00000q\u0000~\u00002s"
+"q\u0000~\u0000,t\u0000\u0006ToTimeq\u0000~\u00006q\u0000~\u00002sr\u0000\"com.sun.msv.grammar.ExpressionPo"
+"ol\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPo"
+"ol$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Close"
+"dHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000@[\u0000\u0005tablet\u0000"
+"![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.m"
+"sv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppq\u0000~\u00007ppp"
+"pppppppppppppppppppppppq\u0000~\u0000:pppppppppppppppppppq\u0000~\u0000\u000epppppppp"
+"pppppppppppppq\u0000~\u0000\u0007pppppppppppppppppq\u0000~\u0000\u0005ppppppppq\u0000~\u0000$ppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppq\u0000~\u00009pppppppp"));
                                }
                                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                            }

                            public class Unmarshaller
                                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                            {


                                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                    super(context, "-------");
                                }

                                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                                    this(context);
                                    state = startState;
                                }

                                public java.lang.Object owner() {
                                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.this;
                                }

                                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  3 :
                                                if (("ToTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.pushAttributes(__atts, true);
                                                    state = 4;
                                                    return ;
                                                }
                                                state = 6;
                                                continue outer;
                                            case  0 :
                                                if (("FromTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.pushAttributes(__atts, true);
                                                    state = 1;
                                                    return ;
                                                }
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                                return ;
                                        }
                                        super.enterElement(___uri, ___local, ___qname, __atts);
                                        break;
                                    }
                                }

                                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                                return ;
                                            case  2 :
                                                if (("FromTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.popAttributes();
                                                    state = 3;
                                                    return ;
                                                }
                                                break;
                                            case  5 :
                                                if (("ToTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.popAttributes();
                                                    state = 6;
                                                    return ;
                                                }
                                                break;
                                        }
                                        super.leaveElement(___uri, ___local, ___qname);
                                        break;
                                    }
                                }

                                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                                return ;
                                        }
                                        super.enterAttribute(___uri, ___local, ___qname);
                                        break;
                                    }
                                }

                                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                                return ;
                                        }
                                        super.leaveAttribute(___uri, ___local, ___qname);
                                        break;
                                    }
                                }

                                public void handleText(final java.lang.String value)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        try {
                                            switch (state) {
                                                case  1 :
                                                    eatText1(value);
                                                    state = 2;
                                                    return ;
                                                case  3 :
                                                    state = 6;
                                                    continue outer;
                                                case  0 :
                                                    state = 3;
                                                    continue outer;
                                                case  6 :
                                                    revertToParentFromText(value);
                                                    return ;
                                                case  4 :
                                                    eatText2(value);
                                                    state = 5;
                                                    return ;
                                            }
                                        } catch (java.lang.RuntimeException e) {
                                            handleUnexpectedTextException(value, e);
                                        }
                                        break;
                                    }
                                }

                                private void eatText1(final java.lang.String value)
                                    throws org.xml.sax.SAXException
                                {
                                    try {
                                        _FromTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                    } catch (java.lang.Exception e) {
                                        handleParseConversionException(e);
                                    }
                                }

                                private void eatText2(final java.lang.String value)
                                    throws org.xml.sax.SAXException
                                {
                                    try {
                                        _ToTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                    } catch (java.lang.Exception e) {
                                        handleParseConversionException(e);
                                    }
                                }

                            }

                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _Calendar.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  3 :
                            if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class ExtendedAttributesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.class);
        }

        public java.util.List getExtendedAttribute() {
            return _ExtendedAttribute;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _ExtendedAttribute.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_0 ++)), "ExtendedAttribute");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_1 ++)), "ExtendedAttribute");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx1 ++)), "ExtendedAttribute");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _ExtendedAttribute.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _ExtendedAttribute.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00036\u00f8\u0002ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00036\u00f7\u00f7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00036\u00f7\u00f4q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u00036\u00f7\u00e9ppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000Ucom.tapsterrock.mspdi.schema.ProjectType.ExtendedAttri"
+"butesType.ExtendedAttributeTypet\u0000+http://java.sun.com/jaxb/x"
+"jc/dummy-elementssq\u0000~\u0000\u0000\u0002H\u00d1\u00b7ppsq\u0000~\u0000\u0014\u0002H\u00d1\u00acq\u0000~\u0000\npsr\u0000\u001bcom.sun.msv"
+".grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dat"
+"atype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;x"
+"q\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun"
+".msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000"
+"~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd"
+"/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000"
+"\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Colla"
+"pse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPai"
+"r\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000"
+"/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0011ExtendedAttributet\u0000$http://schemas.microsoft.com"
+"/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHa"
+"sh;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8"
+"\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/"
+"msv/grammar/Expression;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar."
+"Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppq\u0000~\u0000\u0010pppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppq\u0000"
+"~\u0000#ppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000\u0013ppppppppppq\u0000~\u0000\u0012pppppppppppppppppppppppppppppppppppppppp"
+"ppp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected boolean has_AppendNewValues;
            protected boolean _AppendNewValues;
            protected com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType _ValueList;
            protected java.lang.String _FieldID;
            protected java.lang.String _FieldName;
            protected java.math.BigInteger _ValuelistSortOrder;
            protected java.math.BigInteger _CalculationType;
            protected java.math.BigInteger _RollupType;
            protected java.lang.String _Default;
            protected boolean has_RestrictValues;
            protected boolean _RestrictValues;
            protected java.lang.String _Formula;
            protected java.lang.String _PhoneticAlias;
            protected java.lang.String _Alias;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.class);
            }

            public boolean isAppendNewValues() {
                return _AppendNewValues;
            }

            public void setAppendNewValues(boolean value) {
                _AppendNewValues = value;
                has_AppendNewValues = true;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType getValueList() {
                return _ValueList;
            }

            public void setValueList(com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType value) {
                _ValueList = value;
            }

            public java.lang.String getFieldID() {
                return _FieldID;
            }

            public void setFieldID(java.lang.String value) {
                _FieldID = value;
            }

            public java.lang.String getFieldName() {
                return _FieldName;
            }

            public void setFieldName(java.lang.String value) {
                _FieldName = value;
            }

            public java.math.BigInteger getValuelistSortOrder() {
                return _ValuelistSortOrder;
            }

            public void setValuelistSortOrder(java.math.BigInteger value) {
                _ValuelistSortOrder = value;
            }

            public java.math.BigInteger getCalculationType() {
                return _CalculationType;
            }

            public void setCalculationType(java.math.BigInteger value) {
                _CalculationType = value;
            }

            public java.math.BigInteger getRollupType() {
                return _RollupType;
            }

            public void setRollupType(java.math.BigInteger value) {
                _RollupType = value;
            }

            public java.lang.String getDefault() {
                return _Default;
            }

            public void setDefault(java.lang.String value) {
                _Default = value;
            }

            public boolean isRestrictValues() {
                return _RestrictValues;
            }

            public void setRestrictValues(boolean value) {
                _RestrictValues = value;
                has_RestrictValues = true;
            }

            public java.lang.String getFormula() {
                return _Formula;
            }

            public void setFormula(java.lang.String value) {
                _Formula = value;
            }

            public java.lang.String getPhoneticAlias() {
                return _PhoneticAlias;
            }

            public void setPhoneticAlias(java.lang.String value) {
                _PhoneticAlias = value;
            }

            public java.lang.String getAlias() {
                return _Alias;
            }

            public void setAlias(java.lang.String value) {
                _Alias = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FieldID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldID), "FieldID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FieldName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldName");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldName), "FieldName");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Alias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Alias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Alias), "Alias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PhoneticAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhoneticAlias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _PhoneticAlias), "PhoneticAlias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RollupType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RollupType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _RollupType)), "RollupType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CalculationType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalculationType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalculationType)), "CalculationType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Formula!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Formula");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Formula), "Formula");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_RestrictValues) {
                    context.startElement("http://schemas.microsoft.com/project", "RestrictValues");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RestrictValues)), "RestrictValues");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ValuelistSortOrder!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ValuelistSortOrder");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValuelistSortOrder)), "ValuelistSortOrder");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_AppendNewValues) {
                    context.startElement("http://schemas.microsoft.com/project", "AppendNewValues");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AppendNewValues)), "AppendNewValues");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Default!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Default");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Default), "Default");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ValueList!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ValueList");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ValueList), "ValueList");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ValueList), "ValueList");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ValueList), "ValueList");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0017\u00a8\u00e5\u00d5ppsq\u0000~\u0000\u0000\u0016\u0016C\u00c8ppsq\u0000~\u0000\u0000\u0015"
+"\bX\u008dppsq\u0000~\u0000\u0000\u0012\u00c4v\u0095ppsq\u0000~\u0000\u0000\u000f\u0084U\u0012ppsq\u0000~\u0000\u0000\u000e\u0086^\u0012ppsq\u0000~\u0000\u0000\f\u001e\u00b6\u0004ppsq\u0000~\u0000\u0000\n"
+"\u000f]\u00efppsq\u0000~\u0000\u0000\u0007\u0007f\u00a7ppsq\u0000~\u0000\u0000\u0002\u00f4I\u0017ppsq\u0000~\u0000\u0000\u0001\u00f4\u00fbZppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001I\u00ec\u0013ppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001I\u00ec"
+"\bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001I\u00eb\u00fdppsr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.B"
+"uiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Conc"
+"reteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeIm"
+"pl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeName"
+"q\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u0000%q\u0000~\u0000$sq\u0000~\u0000\u0010\u0001EhCp"
+"psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L"
+"\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003\u0001Eh8q\u0000~\u0000\u0017psq\u0000~\u0000\u0019\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\'q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00003q\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expre"
+"ssion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0016\u0001psq\u0000~\u00007t\u0000"
+"\u0007FieldIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000=sq\u0000~\u0000\u0010\u0000\u00ab"
+"\u000fBppsq\u0000~\u0000\u0012\u0000\u00ab\u000f7q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0000\u00ab\u000f,ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010\u0000\u00a6\u008brppsq\u0000~\u0000.\u0000\u00a6\u008bg"
+"q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\tFieldNameq\u0000~\u0000Aq\u0000~\u0000="
+"sq\u0000~\u0000\u0010\u0000\u00ffM\u00b8ppsq\u0000~\u0000\u0012\u0000\u00ffM\u00adq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0000\u00ffM\u00a2ppsq\u0000~\u0000\u0019\u00007\u00a7\u0080ppsr\u0000\'com"
+".sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthx"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lc"
+"om/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lco"
+"m/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000!xq\u0000~\u0000 q"
+"\u0000~\u0000Apq\u0000~\u0000(\u0000\u0000q\u0000~\u0000#q\u0000~\u0000#t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000estring-d"
+"erivedq\u0000~\u0000Asq\u0000~\u0000\u0010\u0000\u00c7\u00a6\u001dppsq\u0000~\u0000.\u0000\u00c7\u00a6\u0012q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;"
+"q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Aliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0004\u0013\u001d\u008bppsq\u0000~\u0000\u0012\u0004\u0013\u001d\u0080q\u0000~\u0000\u0017p\u0000sq"
+"\u0000~\u0000\u0000\u0004\u0013\u001duppsq\u0000~\u0000\u0019\u0001\u009a\u0086\u0094ppsq\u0000~\u0000Nq\u0000~\u0000Apq\u0000~\u0000(\u0000\u0000q\u0000~\u0000#q\u0000~\u0000#q\u0000~\u0000T\u0000\u0000\u00002"
+"q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000estring-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010\u0002x\u0096\u00dcppsq\u0000~\u0000.\u0002x\u0096\u00d1q\u0000~\u0000\u0017"
+"pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\rPhoneticAliasq\u0000~\u0000Aq\u0000~\u0000=s"
+"q\u0000~\u0000\u0010\u0003\u0007\u00f7Cppsq\u0000~\u0000\u0012\u0003\u0007\u00f78q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0003\u0007\u00f7-ppsq\u0000~\u0000\u0019\u0001;\u0000\\ppsr\u0000)com."
+"sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000f"
+"Ljava/util/Set;xq\u0000~\u0000Oq\u0000~\u0000Apq\u0000~\u00005\u0000\u0000sr\u0000$com.sun.msv.datatype.x"
+"sd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Intege"
+"rDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Qxq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007integ"
+"erq\u0000~\u00005sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexic"
+"alConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Pppq\u0000~\u00005\u0001\u0000sr\u0000#com.sun.msv.d"
+"atatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u00005q"
+"\u0000~\u0000wt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000qt\u0000\u000benumerationsr\u0000\u0011java.util.Ha"
+"shSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bsr\u0000)com.sun.msv.datatype.xsd"
+".IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000!xr\u0000\u0010java.lang.Numbe"
+"r\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000}t\u0000\u00015sq\u0000~\u0000}t\u0000\u00017sq\u0000~\u0000}t\u0000\u00012sq\u0000~\u0000}t\u0000\u00010sq"
+"\u0000~\u0000}t\u0000\u00014sq\u0000~\u0000}t\u0000\u00016sq\u0000~\u0000}t\u0000\u00011xq\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000finteger-derivedq\u0000"
+"~\u0000Asq\u0000~\u0000\u0010\u0001\u00cc\u00f6\u00ccppsq\u0000~\u0000.\u0001\u00cc\u00f6\u00c1q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000"
+"~\u00007t\u0000\nRollupTypeq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0002\u000fX\u0010ppsq\u0000~\u0000\u0012\u0002\u000fX\u0005q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000"
+"\u0000\u0002\u000fW\u00fappsq\u0000~\u0000\u0019\u0000\u0018v\u00e4ppsq\u0000~\u0000lq\u0000~\u0000Apq\u0000~\u00005\u0000\u0000q\u0000~\u0000qq\u0000~\u0000qq\u0000~\u0000zsq\u0000~\u0000{w"
+"\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000}t\u0000\u00012sq\u0000~\u0000}q\u0000~\u0000\u0088sq\u0000~\u0000}t\u0000\u00011xq\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000fi"
+"nteger-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010\u0001\u00f6\u00e1\u0011ppsq\u0000~\u0000.\u0001\u00f6\u00e1\u0006q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000"
+"~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000fCalculationTypeq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0002g\u00a8\tpps"
+"q\u0000~\u0000\u0012\u0002g\u00a7\u00feq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002g\u00a7\u00f3ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010\u0002c$9ppsq\u0000~\u0000.\u0002c$.q\u0000~\u0000\u0017"
+"pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007Formulaq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0000"
+"\u00fd\u00f6\u00fbppsq\u0000~\u0000\u0012\u0000\u00fd\u00f6\u00f0q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0000\u00fd\u00f6\u00e5ppsq\u0000~\u0000\u0019\u00001\u00ff3ppsr\u0000$com.sun.ms"
+"v.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007booleanq\u0000"
+"~\u00005q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000\u00b6q\u0000~\u0000$sq\u0000~\u0000\u0010\u0000\u00cb\u00f7\u00adppsq\u0000~\u0000.\u0000\u00cb\u00f7\u00a2q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000"
+"~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000eRestrictValuesq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0003@!"
+"~ppsq\u0000~\u0000\u0012\u0003@!sq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0003@!hppsq\u0000~\u0000\u0019\u0001\u00e2~\u00e3ppsq\u0000~\u0000lq\u0000~\u0000Apq\u0000~\u0000"
+"5\u0000\u0000q\u0000~\u0000qq\u0000~\u0000qq\u0000~\u0000zsq\u0000~\u0000{w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000}q\u0000~\u0000\u0088sq\u0000~\u0000}t\u0000\u00011x"
+"q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000finteger-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010\u0001]\u00a2\u0080ppsq\u0000~\u0000.\u0001]\u00a2uq\u0000~\u0000"
+"\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0012ValuelistSortOrderq\u0000~\u0000A"
+"q\u0000~\u0000=sq\u0000~\u0000\u0010\u0002C\u00e1\u00f3ppsq\u0000~\u0000\u0012\u0002C\u00e1\u00e8q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002C\u00e1\u00ddppq\u0000~\u0000\u00b3sq\u0000~\u0000\u0010\u0002\u0011\u00e2"
+"\u00a5ppsq\u0000~\u0000.\u0002\u0011\u00e2\u009aq\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000fAppend"
+"NewValuesq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0001\r\u00eb6ppsq\u0000~\u0000\u0012\u0001\r\u00eb+q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001\r\u00eb pp"
+"q\u0000~\u0000\u001csq\u0000~\u0000\u0010\u0001\tgfppsq\u0000~\u0000.\u0001\tg[q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=s"
+"q\u0000~\u00007t\u0000\u0007Defaultq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0001\u0092\u00a2\bppsq\u0000~\u0000\u0012\u0001\u0092\u00a1\u00fdq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000"
+"\u0001\u0092\u00a1\u00f2ppsq\u0000~\u0000\u0012\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0010\u0000\u00ee&\"ppsr\u0000 com.sun.msv.grammar.OneOr"
+"MoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u0000\u0017psq\u0000~\u0000.\u0000\u00ee&\u0014q\u0000~\u0000\u0017psr\u00002com.sun.msv."
+"grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq"
+"\u0000~\u0000>q\u0000~\u0000\u00e7sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u00008q\u0000~\u0000=sq\u0000~\u00007t\u0000ccom.tapsterrock.mspdi.schema.ProjectType.Ext"
+"endedAttributesType.ExtendedAttributeType.ValueListTypet\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0010\u0000\u00a4{\u00c0ppsq\u0000~\u0000.\u0000"
+"\u00a4{\u00b5q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\tValueListq\u0000~\u0000Aq\u0000"
+"~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"
+"blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"
+"om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005co"
+"untI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00f3[\u0000\u0005tablet\u0000![Lcom/sun/msv/gramma"
+"r/Expression;xp\u0000\u0000\u00001\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression"
+";\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfq\u0000~\u0000\u000epppq\u0000~\u0000\u0007pq\u0000~\u0000\u0011pq\u0000~\u0000Bppppppq\u0000~\u0000^q\u0000~\u0000\u00bdp"
+"pq\u0000~\u0000\u000fpq\u0000~\u0000\u00a3ppq\u0000~\u0000\u00abppppppq\u0000~\u0000\u00aappq\u0000~\u0000\u0091ppq\u0000~\u0000\\ppppq\u0000~\u0000\rppppppp"
+"pppq\u0000~\u0000\u00a8ppppq\u0000~\u0000cq\u0000~\u0000\u0005ppq\u0000~\u0000\tpppppppppq\u0000~\u0000\u0098q\u0000~\u0000\u00b2ppppq\u0000~\u0000\u00b8ppp"
+"q\u0000~\u0000\bpppq\u0000~\u0000\u00cfppq\u0000~\u0000\u00dfpq\u0000~\u0000\u00d0ppq\u0000~\u0000\u0096q\u0000~\u0000\u000bq\u0000~\u0000\u00b0q\u0000~\u0000\u00d8ppppq\u0000~\u0000\u00d7ppp"
+"ppq\u0000~\u0000\u00cdppq\u0000~\u0000\u00ddppppq\u0000~\u0000Wq\u0000~\u0000\u00edq\u0000~\u0000jpppppq\u0000~\u0000\u00d5ppppppppq\u0000~\u0000\u0006ppq\u0000"
+"~\u0000\u00e4pppq\u0000~\u0000hppppq\u0000~\u0000Lpq\u0000~\u0000\u00e1pppppq\u0000~\u0000\nppppq\u0000~\u0000\u00c8ppppppppq\u0000~\u0000Jq\u0000"
+"~\u0000-pq\u0000~\u0000Eppppq\u0000~\u0000\u0018pq\u0000~\u0000Dppppppq\u0000~\u0000\u00bfppq\u0000~\u0000\fppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  36 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  34 :
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ValueList = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                            case  12 :
                                if (("RollupType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  0 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  6 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  18 :
                                if (("Formula" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  24 :
                                if (("ValuelistSortOrder" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  30 :
                                if (("Default" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  15 :
                                if (("CalculationType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  21 :
                                if (("RestrictValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  9 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  27 :
                                if (("AppendNewValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  3 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  33 :
                                if (("ValueList" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  2 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  36 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  26 :
                                if (("ValuelistSortOrder" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  23 :
                                if (("RestrictValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  14 :
                                if (("RollupType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  20 :
                                if (("Formula" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  17 :
                                if (("CalculationType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  35 :
                                if (("ValueList" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  29 :
                                if (("AppendNewValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  32 :
                                if (("Default" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  5 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  8 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  36 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  36 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  10 :
                                    eatText1(value);
                                    state = 11;
                                    return ;
                                case  36 :
                                    revertToParentFromText(value);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  22 :
                                    eatText2(value);
                                    state = 23;
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  19 :
                                    eatText3(value);
                                    state = 20;
                                    return ;
                                case  31 :
                                    eatText4(value);
                                    state = 32;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  28 :
                                    eatText5(value);
                                    state = 29;
                                    return ;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  25 :
                                    eatText6(value);
                                    state = 26;
                                    return ;
                                case  13 :
                                    eatText7(value);
                                    state = 14;
                                    return ;
                                case  7 :
                                    eatText8(value);
                                    state = 8;
                                    return ;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  4 :
                                    eatText9(value);
                                    state = 5;
                                    return ;
                                case  16 :
                                    eatText10(value);
                                    state = 17;
                                    return ;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  1 :
                                    eatText11(value);
                                    state = 2;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PhoneticAlias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RestrictValues = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_RestrictValues = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Formula = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Default = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AppendNewValues = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_AppendNewValues = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ValuelistSortOrder = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RollupType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Alias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldName = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CalculationType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldID = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

            public static class ValueListTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Value = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.class);
                }

                public java.util.List getValue() {
                    return _Value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Value.get(idx_0 ++)), "Value");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Value.get(idx_1 ++)), "Value");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003"
+"I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean"
+";L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00039\u008b\u001eppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00039\u008b\u001bpp\u0000sr\u0000\u001fc"
+"om.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gra"
+"mmar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00039\u008b\u0010p"
+"psq\u0000~\u0000\u0006\u0000\u00ee&-pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u000b\u0000\u00ee&\"ppsq\u0000~\u0000\u0000\u0000\u00ee&\u0017sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.E"
+"xpression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0011\u0001q\u0000~"
+"\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017psr\u0000#co"
+"m.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012L"
+"java/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000mcom.tapsterroc"
+"k.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAt"
+"tributeType.ValueListType.ValueTypet\u0000+http://java.sun.com/ja"
+"xb/xjc/dummy-elementssq\u0000~\u0000\u000e\u0002Kd\u00deppsq\u0000~\u0000\u0013\u0002Kd\u00d3q\u0000~\u0000\u0012psr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com"
+".sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceU"
+"riq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
+"/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSche"
+"mat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$C"
+"ollapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSe"
+"tExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.Strin"
+"gPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/"
+"q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"
+"ceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0005Valuet\u0000$http://schemas.microsoft.com/project"
+"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTable"
+"t\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com."
+"sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005count"
+"I\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000>[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/E"
+"xpression;xp\u0000\u0000\u0000\u0005\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68"
+"D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppq\u0000~\u0000\u0010pppq\u0000~\u0000\fppppppq\u0000~\u0000\u000fppppp"
+"pq\u0000~\u0000\u0005pppppppppppppq\u0000~\u0000\"pppppppppppppppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, value)));
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

                public static class ValueTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _Value;
                    protected java.lang.String _Description;
                    protected java.math.BigInteger _ID;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType.class);
                    }

                    public java.lang.String getValue() {
                        return _Value;
                    }

                    public void setValue(java.lang.String value) {
                        _Value = value;
                    }

                    public java.lang.String getDescription() {
                        return _Description;
                    }

                    public void setDescription(java.lang.String value) {
                        _Description = value;
                    }

                    public java.math.BigInteger getID() {
                        return _ID;
                    }

                    public void setID(java.math.BigInteger value) {
                        _ID = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "ID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ID)), "ID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (_Value!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Value");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Value), "Value");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Description!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Description");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Description), "Description");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/g"
+"rammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expres"
+"sion\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Lja"
+"va/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u0090\u00dclppsq\u0000~\u0000\u0000\u0002z\\\u00c5ppsr\u0000\'c"
+"om.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClas"
+"st\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.E"
+"lementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentM"
+"odelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00e3Z\u001cpp\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00e3Z\u0011ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.ms"
+"v.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatyp"
+"e.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/"
+"msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNa"
+"meq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceP"
+"rocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexical"
+"ConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataT"
+"ypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL"
+"\u0000\bbaseTypeq\u0000~\u0000\u0013L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/C"
+"oncreteType;L\u0000\tfacetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016ppq\u0000~\u0000\u001e\u0001\u0000sr\u0000#com.sun.msv."
+"datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000\u001e"
+"q\u0000~\u0000%t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017"
+"xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001\u0001nW\u0006ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\bxq\u0000~\u0000\u0003\u0001nV\u00fbsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c"
+"\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\r\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNameq\u0000~\u0000\u001eq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00005q\u0000"
+"~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-i"
+"nstancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u00000\u0001psq\u0000~\u00007t\u0000\u0002IDt\u0000$http://schemas.mic"
+"rosoft.com/projectsq\u0000~\u0000,\u0000\u0097\u0002\u0094ppsq\u0000~\u0000\u0007\u0000\u0097\u0002\u0089q\u0000~\u00001p\u0000sq\u0000~\u0000\u000b\u0000\u0097\u0002~pps"
+"q\u0000~\u0000\r\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0006stringsr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001d\u0001q\u0000~\u0000)sq\u0000"
+"~\u0000*q\u0000~\u0000Hq\u0000~\u0000\u001asq\u0000~\u0000,\u0000\u0092~\u00c4ppsq\u0000~\u0000.\u0000\u0092~\u00b9q\u0000~\u00001pq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~"
+"\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Valueq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000,\u0002\u0016\u007f\u0092ppsq\u0000~\u0000\u0007\u0002\u0016\u007f\u0087q\u0000~\u00001p\u0000"
+"sq\u0000~\u0000\u000b\u0002\u0016\u007f|ppq\u0000~\u0000Esq\u0000~\u0000,\u0002\u0011\u00fb\u00c2ppsq\u0000~\u0000.\u0002\u0011\u00fb\u00b7q\u0000~\u00001pq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000"
+":q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000bDescriptionq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.gra"
+"mmar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gra"
+"mmar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Exp"
+"ressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006pare"
+"ntq\u0000~\u0000Z[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\n\u0000\u0000\u0000"
+"9pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppp"
+"ppppppppppppq\u0000~\u0000\u0005pppppppppq\u0000~\u0000Tppppppq\u0000~\u0000Spppppppppppppppppp"
+"pppq\u0000~\u0000Qpppppppppppppppppppppppppppppppppppppq\u0000~\u0000Lppppppq\u0000~\u0000"
+"Dpppppppppppppppppppppq\u0000~\u0000Bppppppppq\u0000~\u0000\u0006ppppq\u0000~\u0000-ppppppppppp"
+"ppppppppppppppppppppq\u0000~\u0000\fpppppppppppppppppppppp"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 5;
                                            return ;
                                        }
                                        if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 3;
                                            return ;
                                        }
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  4 :
                                        if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  5 :
                                            eatText1(value);
                                            state = 6;
                                            return ;
                                        case  3 :
                                            eatText2(value);
                                            state = 4;
                                            return ;
                                        case  0 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  1 :
                                            eatText3(value);
                                            state = 2;
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Value = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _ID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Description = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("RollupType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("CalculationType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Formula" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("RestrictValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("ValuelistSortOrder" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("AppendNewValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Default" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("ValueList" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        case  3 :
                            if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  2 :
                            if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  1 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, value)));
                                return ;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class OutlineCodesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _OutlineCode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.class);
        }

        public java.util.List getOutlineCode() {
            return _OutlineCode;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _OutlineCode.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_0 ++)), "OutlineCode");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_1 ++)), "OutlineCode");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx1 ++)), "OutlineCode");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _OutlineCode.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _OutlineCode.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0003\u000e-\u008bppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u000e-\u0080sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u000e-}q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u000e-rppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000Icom.tapsterrock.mspdi.schema.ProjectType.OutlineCodesT"
+"ype.OutlineCodeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000\u0000\u0002 \u0007@ppsq\u0000~\u0000\u0014\u0002 \u00075q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008apps"
+"r\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNa"
+"meq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceP"
+"rocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000b"
+"OutlineCodet\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"c"
+"om.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lc"
+"om/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.m"
+"sv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tth"
+"resholdL\u0000\u0006parentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expres"
+"sion;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7"
+"\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppq\u0000~\u0000\u0010pppppppppppppq\u0000~\u0000\bppppppppppq\u0000"
+"~\u0000\u0005ppq\u0000~\u0000#pppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0013ppppppppppq\u0000~"
+"\u0000\u0012ppppppppppppppppppppppppppppppppppppppppppp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected boolean has_Enterprise;
            protected boolean _Enterprise;
            protected java.lang.String _FieldID;
            protected java.math.BigInteger _EnterpriseOutlineCodeAlias;
            protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType _Values;
            protected java.lang.String _FieldName;
            protected boolean has_OnlyTableValuesAllowed;
            protected boolean _OnlyTableValuesAllowed;
            protected boolean has_LeafOnly;
            protected boolean _LeafOnly;
            protected boolean has_ResourceSubstitutionEnabled;
            protected boolean _ResourceSubstitutionEnabled;
            protected boolean has_AllLevelsRequired;
            protected boolean _AllLevelsRequired;
            protected java.lang.String _PhoneticAlias;
            protected java.lang.String _Alias;
            protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType _Masks;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.class);
            }

            public boolean isEnterprise() {
                return _Enterprise;
            }

            public void setEnterprise(boolean value) {
                _Enterprise = value;
                has_Enterprise = true;
            }

            public java.lang.String getFieldID() {
                return _FieldID;
            }

            public void setFieldID(java.lang.String value) {
                _FieldID = value;
            }

            public java.math.BigInteger getEnterpriseOutlineCodeAlias() {
                return _EnterpriseOutlineCodeAlias;
            }

            public void setEnterpriseOutlineCodeAlias(java.math.BigInteger value) {
                _EnterpriseOutlineCodeAlias = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType getValues() {
                return _Values;
            }

            public void setValues(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType value) {
                _Values = value;
            }

            public java.lang.String getFieldName() {
                return _FieldName;
            }

            public void setFieldName(java.lang.String value) {
                _FieldName = value;
            }

            public boolean isOnlyTableValuesAllowed() {
                return _OnlyTableValuesAllowed;
            }

            public void setOnlyTableValuesAllowed(boolean value) {
                _OnlyTableValuesAllowed = value;
                has_OnlyTableValuesAllowed = true;
            }

            public boolean isLeafOnly() {
                return _LeafOnly;
            }

            public void setLeafOnly(boolean value) {
                _LeafOnly = value;
                has_LeafOnly = true;
            }

            public boolean isResourceSubstitutionEnabled() {
                return _ResourceSubstitutionEnabled;
            }

            public void setResourceSubstitutionEnabled(boolean value) {
                _ResourceSubstitutionEnabled = value;
                has_ResourceSubstitutionEnabled = true;
            }

            public boolean isAllLevelsRequired() {
                return _AllLevelsRequired;
            }

            public void setAllLevelsRequired(boolean value) {
                _AllLevelsRequired = value;
                has_AllLevelsRequired = true;
            }

            public java.lang.String getPhoneticAlias() {
                return _PhoneticAlias;
            }

            public void setPhoneticAlias(java.lang.String value) {
                _PhoneticAlias = value;
            }

            public java.lang.String getAlias() {
                return _Alias;
            }

            public void setAlias(java.lang.String value) {
                _Alias = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType getMasks() {
                return _Masks;
            }

            public void setMasks(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType value) {
                _Masks = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FieldID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldID), "FieldID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FieldName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldName");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldName), "FieldName");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Alias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Alias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Alias), "Alias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PhoneticAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhoneticAlias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _PhoneticAlias), "PhoneticAlias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Values!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Values");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Values), "Values");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Values), "Values");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Values), "Values");
                    context.endElement();
                }
                if (has_Enterprise) {
                    context.startElement("http://schemas.microsoft.com/project", "Enterprise");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Enterprise)), "Enterprise");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EnterpriseOutlineCodeAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EnterpriseOutlineCodeAlias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EnterpriseOutlineCodeAlias)), "EnterpriseOutlineCodeAlias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ResourceSubstitutionEnabled) {
                    context.startElement("http://schemas.microsoft.com/project", "ResourceSubstitutionEnabled");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ResourceSubstitutionEnabled)), "ResourceSubstitutionEnabled");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LeafOnly) {
                    context.startElement("http://schemas.microsoft.com/project", "LeafOnly");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LeafOnly)), "LeafOnly");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_AllLevelsRequired) {
                    context.startElement("http://schemas.microsoft.com/project", "AllLevelsRequired");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AllLevelsRequired)), "AllLevelsRequired");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_OnlyTableValuesAllowed) {
                    context.startElement("http://schemas.microsoft.com/project", "OnlyTableValuesAllowed");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OnlyTableValuesAllowed)), "OnlyTableValuesAllowed");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Masks!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Masks");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Masks), "Masks");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Masks), "Masks");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Masks), "Masks");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0015\u008a\u0019eppsq\u0000~\u0000\u0000\u0013sf\u00c6ppsq\u0000~\u0000\u0000\u0011"
+"/yEppsq\u0000~\u0000\u0000\u0010+Xippsq\u0000~\u0000\u0000\u000e\u0011|?ppsq\u0000~\u0000\u0000\f5\u00cenppsq\u0000~\u0000\u0000\nG\u0093)ppsq\u0000~\u0000\u0000\t"
+"i\u00da\u00cfppsq\u0000~\u0000\u0000\u0007\u00b2T\u00ceppsq\u0000~\u0000\u0000\u0005\u00f3\u00837ppsq\u0000~\u0000\u0000\u0004\u009a\u00e3\u0089ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002Y\u00c6bppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002Y\u00c6"
+"Wsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002Y\u00c6Lppsr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.B"
+"uiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Conc"
+"reteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeIm"
+"pl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeName"
+"q\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u0000%q\u0000~\u0000$sq\u0000~\u0000\u0010\u0002UB\u0092p"
+"psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L"
+"\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003\u0002UB\u0087q\u0000~\u0000\u0017psq\u0000~\u0000\u0019\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0005QNamesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\'q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00003q\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expre"
+"ssion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0016\u0001psq\u0000~\u00007t\u0000"
+"\u0007FieldIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000=sq\u0000~\u0000\u0010\u0002A"
+"\u001d\"ppsq\u0000~\u0000\u0012\u0002A\u001d\u0017q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002A\u001d\fppq\u0000~\u0000\u001csq\u0000~\u0000\u0010\u0002<\u0099Rppsq\u0000~\u0000.\u0002<\u0099G"
+"q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\tFieldNameq\u0000~\u0000Aq\u0000~\u0000="
+"sq\u0000~\u0000\u0010\u0001X\u009f\u00a9ppsq\u0000~\u0000\u0012\u0001X\u009f\u009eq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001X\u009f\u0093ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010\u0001T\u001b\u00d9ppsq"
+"\u0000~\u0000.\u0001T\u001b\u00ceq\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Aliasq\u0000~\u0000Aq"
+"\u0000~\u0000=sq\u0000~\u0000\u0010\u0001\u00be\u00d1\u0092ppsq\u0000~\u0000\u0012\u0001\u00be\u00d1\u0087q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001\u00be\u00d1|ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010\u0001\u00baM\u00c2"
+"ppsq\u0000~\u0000.\u0001\u00baM\u00b7q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\rPhoneti"
+"cAliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0001\u00b7\u0085\u00fcppsq\u0000~\u0000\u0012\u0001\u00b7\u0085\u00f1q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001\u00b7\u0085\u00e6ppsq\u0000"
+"~\u0000\u0012\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0010\u0000\u00ee&\"ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u0000\u0017psq\u0000~\u0000.\u0000\u00ee&\u0014q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.E"
+"xpression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000>q\u0000~\u0000d"
+"sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=sq"
+"\u0000~\u00007t\u0000Tcom.tapsterrock.mspdi.schema.ProjectType.OutlineCodes"
+"Type.OutlineCodeType.ValuesTypet\u0000+http://java.sun.com/jaxb/x"
+"jc/dummy-elementssq\u0000~\u0000\u0010\u0000\u00c9_\u00b4ppsq\u0000~\u0000.\u0000\u00c9_\u00a9q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000"
+":q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0006Valuesq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0000\u00dd\u00b8Uppsq\u0000~\u0000\u0012\u0000\u00dd\u00b8Jq\u0000"
+"~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0000\u00dd\u00b8?ppsq\u0000~\u0000\u0019\u00001\u00ff3ppsr\u0000$com.sun.msv.datatype.xsd.Bo"
+"oleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007booleanq\u0000~\u00005q\u0000~\u0000*sq\u0000~\u0000+q\u0000~"
+"\u0000uq\u0000~\u0000$sq\u0000~\u0000\u0010\u0000\u00ab\u00b9\u0007ppsq\u0000~\u0000.\u0000\u00ab\u00b8\u00fcq\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000"
+"=sq\u0000~\u00007t\u0000\nEnterpriseq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0001\u00ee;@ppsq\u0000~\u0000\u0012\u0001\u00ee;5q\u0000~\u0000\u0017p\u0000s"
+"q\u0000~\u0000\u0000\u0001\u00ee;*ppsq\u0000~\u0000\u0019\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.xsd.IntegerT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedTyp"
+"e\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSData"
+"typeImpl;xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007integerq\u0000~\u00005sr\u0000,com.sun.msv.datatype."
+"xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.da"
+"tatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*"
+"com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFa"
+"cetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0082L\u0000\fconcreteType"
+"t\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000!x"
+"q\u0000~\u0000 ppq\u0000~\u00005\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u00005q\u0000~\u0000\u008bt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000"
+"*sq\u0000~\u0000+q\u0000~\u0000\u0084q\u0000~\u0000$sq\u0000~\u0000\u0010\u0001y8\u001fppsq\u0000~\u0000.\u0001y8\u0014q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000"
+":q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u001aEnterpriseOutlineCodeAliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~"
+"\u0000\u0010\u0001\u00db\u00ad\u00ccppsq\u0000~\u0000\u0012\u0001\u00db\u00ad\u00c1q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0001\u00db\u00ad\u00b6ppq\u0000~\u0000rsq\u0000~\u0000\u0010\u0001\u00a9\u00ae~ppsq\u0000~\u0000."
+"\u0001\u00a9\u00aesq\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u001bResourceSubstit"
+"utionEnabledq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0002\u0019\u00dc%ppsq\u0000~\u0000\u0012\u0002\u0019\u00dc\u001aq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002\u0019\u00dc"
+"\u000fppq\u0000~\u0000rsq\u0000~\u0000\u0010\u0001\u00e7\u00dc\u00d7ppsq\u0000~\u0000.\u0001\u00e7\u00dc\u00ccq\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~"
+"\u0000=sq\u0000~\u00007t\u0000\bLeafOnlyq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0001\u0004 \u00d7ppsq\u0000~\u0000\u0012\u0001\u0004 \u00ccq\u0000~\u0000\u0017p\u0000sq"
+"\u0000~\u0000\u0000\u0001\u0004 \u00c1ppq\u0000~\u0000rsq\u0000~\u0000\u0010\u0000\u00d2!\u0089ppsq\u0000~\u0000.\u0000\u00d2!~q\u0000~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q"
+"\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0011AllLevelsRequiredq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0002C\u00ed|ppsq\u0000"
+"~\u0000\u0012\u0002C\u00edqq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002C\u00edfppq\u0000~\u0000rsq\u0000~\u0000\u0010\u0002\u0011\u00ee.ppsq\u0000~\u0000.\u0002\u0011\u00ee#q\u0000~\u0000\u0017pq"
+"\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0016OnlyTableValuesAllowedq\u0000~\u0000"
+"Aq\u0000~\u0000=sq\u0000~\u0000\u0010\u0002\u0016\u00b2\u009appsq\u0000~\u0000\u0012\u0002\u0016\u00b2\u008fq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000\u0002\u0016\u00b2\u0084ppsq\u0000~\u0000\u0012\u0000\u00ee&-pp\u0000"
+"sq\u0000~\u0000\u0010\u0000\u00ee&\"ppsq\u0000~\u0000_\u0000\u00ee&\u0017q\u0000~\u0000\u0017psq\u0000~\u0000.\u0000\u00ee&\u0014q\u0000~\u0000\u0017pq\u0000~\u0000dq\u0000~\u0000fq\u0000~\u0000=s"
+"q\u0000~\u00007t\u0000Scom.tapsterrock.mspdi.schema.ProjectType.OutlineCode"
+"sType.OutlineCodeType.MasksTypeq\u0000~\u0000isq\u0000~\u0000\u0010\u0001(\u008cRppsq\u0000~\u0000.\u0001(\u008cGq\u0000"
+"~\u0000\u0017pq\u0000~\u00000sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Masksq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"co"
+"m.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lco"
+"m/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.ms"
+"v.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthr"
+"esholdL\u0000\u0006parentq\u0000~\u0000\u00c3[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Express"
+"ion;xp\u0000\u0000\u00003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n"
+"\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppq\u0000~\u0000\u0096q\u0000~\u0000\u00acq\u0000~\u0000\u0005ppq\u0000~\u0000\u0097pq\u0000~\u0000\u000bpppppppppq\u0000~\u0000-pppp"
+"q\u0000~\u0000\u0094pq\u0000~\u0000\u0018q\u0000~\u0000\tpppppppppq\u0000~\u0000\u00a6ppppq\u0000~\u0000\u00a7ppppq\u0000~\u0000\u0007q\u0000~\u0000\u0011q\u0000~\u0000Mq\u0000"
+"~\u0000\u000eppppq\u0000~\u0000Lpq\u0000~\u0000\u0006pq\u0000~\u0000\u00a4q\u0000~\u0000\\pppppq\u0000~\u0000\fppq\u0000~\u0000Eppppppq\u0000~\u0000Dq\u0000~"
+"\u0000Jppppq\u0000~\u0000Uq\u0000~\u0000Zppppq\u0000~\u0000jq\u0000~\u0000Tppppppppq\u0000~\u0000Bpppppq\u0000~\u0000qpq\u0000~\u0000\u00b6p"
+"pq\u0000~\u0000wpq\u0000~\u0000Rppq\u0000~\u0000\u009eq\u0000~\u0000\u008fpppq\u0000~\u0000\u009fppppppq\u0000~\u0000opq\u0000~\u0000\u00b4ppppq\u0000~\u0000aq\u0000"
+"~\u0000\u00b9q\u0000~\u0000\u00bdq\u0000~\u0000\u009cpppppppq\u0000~\u0000^q\u0000~\u0000\u00b8pq\u0000~\u0000~ppppppq\u0000~\u0000\u000fppppppppppppq"
+"\u0000~\u0000\rpq\u0000~\u0000|pq\u0000~\u0000\bq\u0000~\u0000\u00aepppq\u0000~\u0000\u00afpppppppppq\u0000~\u0000\np"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class MasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Mask = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.class);
                }

                public java.util.List getMask() {
                    return _Mask;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Mask.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Mask");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Mask.get(idx_0 ++)), "Mask");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Mask.get(idx_1 ++)), "Mask");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Mask.get(idx1 ++)), "Mask");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Mask.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Mask.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0001\u00b0\u0017Jppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00b0\u0017?sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00b0\u0017<q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00b0\u00171ppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000\\com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesT"
+"ype.OutlineCodeType.MasksType.MaskTypet\u0000+http://java.sun.com"
+"/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000\u0000\u00c1\u00f0\u00ffppsq\u0000~\u0000\u0014\u0000\u00c1\u00f0\u00f4q\u0000~\u0000\npsr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000"
+"~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-ins"
+"tanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Maskt\u0000$http://schemas.microsoft.com/proje"
+"ctq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\be"
+"xpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xps"
+"r\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I"
+"\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/msv/gr"
+"ammar/Expression;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expres"
+"sion;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppq\u0000~\u0000\u0010ppppppppppppp"
+"q\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000#ppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0013p"
+"pppppppppq\u0000~\u0000\u0012ppppppppppppppppppppppppppppppppppppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class MaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _Separator;
                    protected java.math.BigInteger _Type;
                    protected java.math.BigInteger _Length;
                    protected java.math.BigInteger _Level;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType.class);
                    }

                    public java.lang.String getSeparator() {
                        return _Separator;
                    }

                    public void setSeparator(java.lang.String value) {
                        _Separator = value;
                    }

                    public java.math.BigInteger getType() {
                        return _Type;
                    }

                    public void setType(java.math.BigInteger value) {
                        _Type = value;
                    }

                    public java.math.BigInteger getLength() {
                        return _Length;
                    }

                    public void setLength(java.math.BigInteger value) {
                        _Length = value;
                    }

                    public java.math.BigInteger getLevel() {
                        return _Level;
                    }

                    public void setLevel(java.math.BigInteger value) {
                        _Level = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_Level!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Level");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Level)), "Level");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Type!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Type");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Length!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Length");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Length)), "Length");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Separator!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Separator");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Separator), "Separator");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\u008a:\u00c4ppsq\u0000~\u0000\u0000\u0005\u0095R4ppsq\u0000~\u0000\u0000\u0003"
+"\u00de\u00b6:ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001`\u0080yp"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001`\u0080nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001`\u0080cppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004"
+"namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun."
+"msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datat"
+"ype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/su"
+"n/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btype"
+"Nameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpac"
+"eProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr"
+"\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexic"
+"alConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Dat"
+"aTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFla"
+"gL\u0000\bbaseTypeq\u0000~\u0000\u0017L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd"
+"/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001bxq\u0000~\u0000\u001appq\u0000~\u0000\"\u0001\u0000sr\u0000#com.sun.ms"
+"v.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0007decimalq\u0000~"
+"\u0000\"q\u0000~\u0000)t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expressi"
+"on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.u"
+"til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~"
+"\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~\u0000\u001esq\u0000~\u0000\b\u0000\u00eb}Xppsr\u0000 com.sun.msv.grammar.AttributeE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00eb}Mq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0011\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0005QNameq\u0000~\u0000\"q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u00006q\u0000~\u0000\u001esr\u0000#com.sun.msv.g"
+"rammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespa"
+"ceURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004t"
+"ypet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.m"
+"sv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\t"
+"sq\u0000~\u0000\u000e\u0001psq\u0000~\u00008t\u0000\u0005Levelt\u0000$http://schemas.microsoft.com/projec"
+"tq\u0000~\u0000>sq\u0000~\u0000\b\u0002~5\u00bcppsq\u0000~\u0000\n\u0002~5\u00b1q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002~5\u00a6ppsq\u0000~\u0000\u0011\u0000\u008a\u00fdupps"
+"r\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006va"
+"luest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeW"
+"ithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000Bpq\u0000~\u0000\"\u0000\u0000q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001dt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000"
+"\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\u0005valueq\u0000~\u0000\u001bxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000Nt\u0000\u0001"
+"2sq\u0000~\u0000Nt\u0000\u00010sq\u0000~\u0000Nt\u0000\u00011xq\u0000~\u0000-sq\u0000~\u0000.t\u0000\u000finteger-derivedq\u0000~\u0000Bsq\u0000~"
+"\u0000\b\u0001\u00f38,ppsq\u0000~\u00001\u0001\u00f38!q\u0000~\u0000\u000fpq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004T"
+"ypeq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\b\u0001\u00b6\u009b\u00f5ppsq\u0000~\u0000\n\u0001\u00b6\u009b\u00eaq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0001\u00b6\u009b\u00dfppq\u0000~\u0000\u0014s"
+"q\u0000~\u0000\b\u0001A\u0098\u00d4ppsq\u0000~\u00001\u0001A\u0098\u00c9q\u0000~\u0000\u000fpq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t"
+"\u0000\u0006Lengthq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\b\u0000\u00f4\u00e8\u008bppsq\u0000~\u0000\n\u0000\u00f4\u00e8\u0080q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0000\u00f4\u00e8upps"
+"q\u0000~\u0000\u0011\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0006stringsr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!\u0001q\u0000~\u0000-sq\u0000"
+"~\u0000.q\u0000~\u0000mq\u0000~\u0000\u001esq\u0000~\u0000\b\u0000\u00f0d\u00bbppsq\u0000~\u00001\u0000\u00f0d\u00b0q\u0000~\u0000\u000fpq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~"
+"\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\tSeparatorq\u0000~\u0000Bq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000"
+"w[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000f\u0000\u0000\u00009pur\u0000!"
+"[Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppp"
+"ppq\u0000~\u0000gppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppq\u0000~\u00000"
+"ppppppppq\u0000~\u0000\u0005pppppq\u0000~\u0000Zppppppppppppppq\u0000~\u0000\u0007pq\u0000~\u0000\u0010ppppq\u0000~\u0000bppp"
+"pppppppppppppq\u0000~\u0000\tppppppppppppppq\u0000~\u0000apppppppppppppq\u0000~\u0000Eppppp"
+"ppq\u0000~\u0000_pppppppppppppq\u0000~\u0000Cpppppppppppq\u0000~\u0000qppppppq\u0000~\u0000ipppppppp"
+"p"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 10;
                                            return ;
                                        }
                                        state = 12;
                                        continue outer;
                                    case  6 :
                                        if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  3 :
                                        if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  2 :
                                        if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  5 :
                                        if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  8 :
                                        if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  11 :
                                        if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  9 :
                                            state = 12;
                                            continue outer;
                                        case  10 :
                                            eatText1(value);
                                            state = 11;
                                            return ;
                                        case  1 :
                                            eatText2(value);
                                            state = 2;
                                            return ;
                                        case  7 :
                                            eatText3(value);
                                            state = 8;
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  12 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  4 :
                                            eatText4(value);
                                            state = 5;
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Separator = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Level = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Length = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                case  0 :
                                    if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, value)));
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  27 :
                                if (("AllLevelsRequired" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  0 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  34 :
                                if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  36 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  24 :
                                if (("LeafOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  33 :
                                if (("Masks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  9 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  15 :
                                if (("Enterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  21 :
                                if (("ResourceSubstitutionEnabled" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  18 :
                                if (("EnterpriseOutlineCodeAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  30 :
                                if (("OnlyTableValuesAllowed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  12 :
                                if (("Values" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  13 :
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  3 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  6 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  27 :
                                state = 30;
                                continue outer;
                            case  11 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  34 :
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  20 :
                                if (("EnterpriseOutlineCodeAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  17 :
                                if (("Enterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  26 :
                                if (("LeafOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  2 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  35 :
                                if (("Masks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  5 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  14 :
                                if (("Values" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("AllLevelsRequired" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  23 :
                                if (("ResourceSubstitutionEnabled" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  13 :
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  32 :
                                if (("OnlyTableValuesAllowed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  27 :
                                state = 30;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  34 :
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  13 :
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  27 :
                                state = 30;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  34 :
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  13 :
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  10 :
                                    eatText1(value);
                                    state = 11;
                                    return ;
                                case  34 :
                                    _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, value));
                                    return ;
                                case  36 :
                                    revertToParentFromText(value);
                                    return ;
                                case  28 :
                                    eatText2(value);
                                    state = 29;
                                    return ;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  22 :
                                    eatText3(value);
                                    state = 23;
                                    return ;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  16 :
                                    eatText4(value);
                                    state = 17;
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  19 :
                                    eatText5(value);
                                    state = 20;
                                    return ;
                                case  31 :
                                    eatText6(value);
                                    state = 32;
                                    return ;
                                case  25 :
                                    eatText7(value);
                                    state = 26;
                                    return ;
                                case  7 :
                                    eatText8(value);
                                    state = 8;
                                    return ;
                                case  1 :
                                    eatText9(value);
                                    state = 2;
                                    return ;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  4 :
                                    eatText10(value);
                                    state = 5;
                                    return ;
                                case  13 :
                                    _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, value));
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PhoneticAlias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AllLevelsRequired = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_AllLevelsRequired = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResourceSubstitutionEnabled = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ResourceSubstitutionEnabled = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Enterprise = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Enterprise = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EnterpriseOutlineCodeAlias = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OnlyTableValuesAllowed = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_OnlyTableValuesAllowed = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LeafOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LeafOnly = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Alias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldID = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldName = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

            public static class ValuesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Value = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.class);
                }

                public java.util.List getValue() {
                    return _Value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00ee&;ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&0sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&-q\u0000~\u0000\np\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000"
+"~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002com.sun.msv."
+"grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bs"
+"q\u0000~\u0000\t\u0001q\u0000~\u0000\u0014sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv."
+"grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~"
+"\u0000\u0015psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001cxq\u0000~\u0000\u0017t\u0000Zcom.t"
+"apsterrock.mspdi.schema.ProjectType.OutlineCodesType.Outline"
+"CodeType.ValuesType.Valuet\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementsq\u0000~\u0000\u001asr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Close"
+"dHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0"
+"N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000![\u0000\u0005tablet\u0000![Lcom/s"
+"un/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.gramm"
+"ar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0010pppppppp"
+"ppq\u0000~\u0000\u000fpppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005pppppppppppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "--");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  0 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    state = 1;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 1;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 1;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 1;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  1 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  0 :
                                        state = 1;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

                public static class ValueImpl
                    extends com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl
                    implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value.class);
                    }

                    public java.lang.String ____jaxb_ri____getNamespaceURI() {
                        return "http://schemas.microsoft.com/project";
                    }

                    public java.lang.String ____jaxb_ri____getLocalName() {
                        return "Value";
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        super.serializeURIs(context);
                        context.endNamespaceDecls();
                        super.serializeAttributes(context);
                        context.endAttributes();
                        super.serializeBody(context);
                        context.endElement();
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\t\u00fa|\u0080p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\t\u00fa|uppsr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\b\b<4\u00ffppsq\u0000~\u0000\n\u0006\u00b3WVppsq\u0000~\u0000\n\u0004\u00b4d\u0085ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0002J\u0007\u00f1ppsq\u0000~\u0000\u0000\u0002J\u0007\u00e6sr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0002J\u0007\u00dbppsr\u0000\u001bcom.sun.msv.grammar.D"
+"ataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006e"
+"xceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000u\u0003\u0006p"
+"psr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com."
+"sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFac"
+"etst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.m"
+"sv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv."
+"datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
+".xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/S"
+"tring;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDig"
+"itsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.Data"
+"TypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.dat"
+"atype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012need"
+"ValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u001aL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv"
+"/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001exq\u0000~\u0000\u001dppq\u0000~\u0000%\u0001\u0000s"
+"r\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!"
+"t\u0000\u0007decimalq\u0000~\u0000%q\u0000~\u0000,t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.gra"
+"mmar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nppsr\u0000\u001b"
+"com.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fna"
+"mespaceURIq\u0000~\u0000\u001expq\u0000~\u0000\"q\u0000~\u0000!sq\u0000~\u0000\u000e\u0001\u00d5\u0004\u00d0ppsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004"
+"\u0001\u00d5\u0004\u00c5q\u0000~\u0000\u0012psq\u0000~\u0000\u0014\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0005QNameq\u0000~\u0000%q\u0000~\u00000sq\u0000~\u00001q\u0000~\u00009q\u0000~\u0000!sr\u0000#"
+"com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instance"
+"sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tsq\u0000~\u0000\u0011\u0001psq\u0000~\u0000;t\u0000\u0007ValueIDt\u0000$http://schemas.micro"
+"soft.com/projectq\u0000~\u0000Asq\u0000~\u0000\u000e\u0002j\\\u007fppsq\u0000~\u0000\u0000\u0002j\\tq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0007\u0002j\\i"
+"ppq\u0000~\u0000\u0017sq\u0000~\u0000\u000e\u0001\u00f5Y^ppsq\u0000~\u00004\u0001\u00f5YSq\u0000~\u0000\u0012pq\u0000~\u00006sq\u0000~\u0000;q\u0000~\u0000>q\u0000~\u0000?q\u0000~\u0000"
+"Asq\u0000~\u0000;t\u0000\rParentValueIDq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u000e\u0001\u00fe\u00f2\u00bcppsq\u0000~\u0000\u0000\u0001\u00fe\u00f2\u00b1q\u0000~\u0000\u0012"
+"p\u0000sq\u0000~\u0000\u0007\u0001\u00fe\u00f2\u00a6ppsq\u0000~\u0000\u0014\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.Strin"
+"gType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0006stringsr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000$\u0001q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000Tq\u0000~\u0000!sq\u0000~\u0000\u000e\u0001\u00fan\u00ecppsq\u0000~\u00004\u0001\u00fan\u00e1q\u0000~\u0000\u0012pq\u0000~\u0000"
+"6sq\u0000~\u0000;q\u0000~\u0000>q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0005Valueq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u000e\u0001\u0088\u00dd\u0094ppsq"
+"\u0000~\u0000\u0000\u0001\u0088\u00dd\u0089q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0007\u0001\u0088\u00dd~ppq\u0000~\u0000Qsq\u0000~\u0000\u000e\u0001\u0084Y\u00c4ppsq\u0000~\u00004\u0001\u0084Y\u00b9q\u0000~\u0000\u0012p"
+"q\u0000~\u00006sq\u0000~\u0000;q\u0000~\u0000>q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bDescriptionq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~"
+"\u0000\u000e\u0001\u00beGqppsq\u0000~\u00004\u0001\u00beGfq\u0000~\u0000\u0012pq\u0000~\u00006sq\u0000~\u0000;q\u0000~\u0000>q\u0000~\u0000?q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0005V"
+"alueq\u0000~\u0000Esr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;x"
+"psr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000"
+"\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000k[\u0000\u0005tablet\u0000![Lcom/sun/msv/"
+"grammar/Expression;xp\u0000\u0000\u0000\u0011\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expr"
+"ession;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppq\u0000~\u0000`ppppppq\u0000~\u0000_pppq\u0000~\u0000\u0013ppq\u0000~"
+"\u0000Ippppppppppppppq\u0000~\u0000]pppq\u0000~\u0000\u000fppppppppppppq\u0000~\u0000Hpppppppppppppp"
+"pq\u0000~\u0000\tpppppq\u0000~\u0000Fppppppppppppq\u0000~\u0000epppppppppppppppppppppq\u0000~\u0000\fp"
+"pppq\u0000~\u0000Xppppppq\u0000~\u0000Ppppppppppppppq\u0000~\u0000\rpppppppq\u0000~\u0000Nppppppppppp"
+"pppppppppppq\u0000~\u0000\u000bpppppppppq\u0000~\u00003ppppppppppppp"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "----");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        if (("ParentValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  0 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, false);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                    case  3 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        spawnHandlerFromLeaveElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  2 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        spawnHandlerFromEnterAttribute((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        spawnHandlerFromLeaveAttribute((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  1 :
                                            spawnHandlerFromText((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, value);
                                            return ;
                                        case  3 :
                                            revertToParentFromText(value);
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                    }

                }

                public static class ValueTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _Value;
                    protected java.lang.String _Description;
                    protected java.math.BigInteger _ValueID;
                    protected java.math.BigInteger _ParentValueID;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType.class);
                    }

                    public java.lang.String getValue() {
                        return _Value;
                    }

                    public void setValue(java.lang.String value) {
                        _Value = value;
                    }

                    public java.lang.String getDescription() {
                        return _Description;
                    }

                    public void setDescription(java.lang.String value) {
                        _Description = value;
                    }

                    public java.math.BigInteger getValueID() {
                        return _ValueID;
                    }

                    public void setValueID(java.math.BigInteger value) {
                        _ValueID = value;
                    }

                    public java.math.BigInteger getParentValueID() {
                        return _ParentValueID;
                    }

                    public void setParentValueID(java.math.BigInteger value) {
                        _ParentValueID = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_ValueID!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "ValueID");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_ParentValueID!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "ParentValueID");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ParentValueID)), "ParentValueID");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Value!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Value");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Value), "Value");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Description!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Description");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Description), "Description");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/g"
+"rammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expres"
+"sion\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Lja"
+"va/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\b<4\u00ffppsq\u0000~\u0000\u0000\u0006\u00b3WVppsq\u0000~\u0000"
+"\u0000\u0004\u00b4d\u0085ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002J\u0007"
+"\u00f1ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\t"
+"nameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.g"
+"rammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\f"
+"contentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002J\u0007\u00e6sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z"
+"\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0001\u0002J\u0007\u00dbppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype"
+".xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Inte"
+"gerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseType"
+"q\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTyp"
+"e;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001bppq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun.msv.datatype.x"
+"sd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efr"
+"actionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~"
+"\u0000\u001fsq\u0000~\u0000\b\u0001\u00d5\u0004\u00d0ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0001\u00d5\u0004\u00c5q\u0000~\u0000\u000fpsq\u0000~\u0000\u0012\u0000\u0083\u00d3\u008appsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005"
+"QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Simpl"
+"eNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr"
+"\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~"
+"\u00009t\u0000\u0007ValueIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000?sq\u0000~"
+"\u0000\b\u0002j\\\u007fppsq\u0000~\u0000\n\u0002j\\tq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0002j\\ippq\u0000~\u0000\u0015sq\u0000~\u0000\b\u0001\u00f5Y^ppsq\u0000~\u00002"
+"\u0001\u00f5YSq\u0000~\u0000\u000fpq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\rParentValueIDq\u0000"
+"~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\b\u0001\u00fe\u00f2\u00bcppsq\u0000~\u0000\n\u0001\u00fe\u00f2\u00b1q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0001\u00fe\u00f2\u00a6ppsq\u0000~\u0000\u0012\u0000\u0004\u0083\u00b5p"
+"psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwa"
+"ysValidxq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000Rq\u0000"
+"~\u0000\u001fsq\u0000~\u0000\b\u0001\u00fan\u00ecppsq\u0000~\u00002\u0001\u00fan\u00e1q\u0000~\u0000\u000fpq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000"
+"~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\b\u0001\u0088\u00dd\u0094ppsq\u0000~\u0000\n\u0001\u0088\u00dd\u0089q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0001\u0088\u00dd~"
+"ppq\u0000~\u0000Osq\u0000~\u0000\b\u0001\u0084Y\u00c4ppsq\u0000~\u00002\u0001\u0084Y\u00b9q\u0000~\u0000\u000fpq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000"
+"?sq\u0000~\u00009t\u0000\u000bDescriptionq\u0000~\u0000Cq\u0000~\u0000?sr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000d[\u0000\u0005"
+"tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000f\u0000\u0000\u00009pur\u0000![Lco"
+"m.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppq\u0000~\u0000^pp"
+"ppppq\u0000~\u0000]pppq\u0000~\u0000\u0011ppq\u0000~\u0000Gppppppppppppppq\u0000~\u0000[pppq\u0000~\u0000\tppppppppp"
+"pppq\u0000~\u0000Fpppppppppppppppppppppq\u0000~\u0000Dpppppppppppppppppppppppppp"
+"ppppppppq\u0000~\u0000\u0006ppppq\u0000~\u0000Vppppppq\u0000~\u0000Npppppppppppppq\u0000~\u0000\u0007pppppppq\u0000"
+"~\u0000Lppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppq\u0000~\u00001ppppppppppppp"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "---------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 5;
                                            return ;
                                        }
                                        if (("ParentValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 3;
                                            return ;
                                        }
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  8 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if (("ParentValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  4 :
                                        if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  0 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  3 :
                                            eatText1(value);
                                            state = 4;
                                            return ;
                                        case  7 :
                                            eatText2(value);
                                            state = 8;
                                            return ;
                                        case  5 :
                                            eatText3(value);
                                            state = 6;
                                            return ;
                                        case  1 :
                                            eatText4(value);
                                            state = 2;
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Description = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Value = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _ParentValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Values" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Enterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("EnterpriseOutlineCodeAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("ResourceSubstitutionEnabled" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("LeafOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("AllLevelsRequired" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("OnlyTableValuesAllowed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Masks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        case  0 :
                            if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  1 :
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, value)));
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class ResourcesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Resource = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.class);
        }

        public java.util.List getResource() {
            return _Resource;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Resource.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Resource");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Resource.get(idx_0 ++)), "Resource");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Resource.get(idx_1 ++)), "Resource");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Resource.get(idx1 ++)), "Resource");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Resource.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Resource.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002(\u0096fppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002(\u0096[sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002(\u0096Xq\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002(\u0096Mppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000Ccom.tapsterrock.mspdi.schema.ProjectType.ResourcesType"
+".ResourceTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementss"
+"q\u0000~\u0000\u0000\u0001:p\u001bppsq\u0000~\u0000\u0014\u0001:p\u0010q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~"
+"\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000"
+"\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)h"
+"ttp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\bResour"
+"cet\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.ms"
+"v.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/ms"
+"v/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramma"
+"r.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000"
+"\u0006parentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000"
+"\u0000\u0006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000"
+"\u00bfppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000#ppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppq\u0000~\u0000\u0013ppppppppppq\u0000~\u0000\u0012ppppppppppppppp"
+"pppppppppppppq\u0000~\u0000\u0010pppppppppppppq\u0000~\u0000\b"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ResourceTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.lang.String _EmailAddress;
            protected java.math.BigInteger _StandardRateFormat;
            protected java.lang.String _Phonetics;
            protected java.lang.String _NTAccount;
            protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType _AvailabilityPeriods;
            protected boolean has_IsEnterprise;
            protected boolean _IsEnterprise;
            protected java.lang.String _Group;
            protected java.lang.String _Work;
            protected java.util.Calendar _AvailableFrom;
            protected java.math.BigInteger _CalendarUID;
            protected java.math.BigInteger _WorkGroup;
            protected java.lang.String _HyperlinkSubAddress;
            protected java.lang.String _RemainingOvertimeWork;
            protected java.lang.String _ActualWorkProtected;
            protected java.lang.String _RemainingWork;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected java.lang.String _HyperlinkAddress;
            protected boolean has_MaxUnits;
            protected float _MaxUnits;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected java.math.BigDecimal _ActualCost;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected boolean has_IsInactive;
            protected boolean _IsInactive;
            protected java.lang.String _ActualOvertimeWorkProtected;
            protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType _Rates;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _RemainingCost;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected java.lang.String _ActualOvertimeWork;
            protected boolean has_IsGeneric;
            protected boolean _IsGeneric;
            protected com.sun.xml.bind.util.ListImpl _Baseline = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.lang.String _Hyperlink;
            protected java.math.BigInteger _ID;
            protected boolean has_CanLevel;
            protected boolean _CanLevel;
            protected java.math.BigInteger _Type;
            protected boolean has_IsNull;
            protected boolean _IsNull;
            protected com.sun.xml.bind.util.ListImpl _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected boolean has_CostVariance;
            protected float _CostVariance;
            protected boolean has_PeakUnits;
            protected float _PeakUnits;
            protected java.math.BigDecimal _CostPerUse;
            protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.math.BigInteger _AccrueAt;
            protected java.math.BigInteger _OvertimeRateFormat;
            protected java.lang.String _Code;
            protected java.lang.String _RegularWork;
            protected java.lang.String _Name;
            protected java.lang.String _OvertimeWork;
            protected java.lang.String _Initials;
            protected java.math.BigDecimal _StandardRate;
            protected boolean has_SV;
            protected float _SV;
            protected java.lang.String _ActiveDirectoryGUID;
            protected java.math.BigInteger _BookingType;
            protected java.lang.String _Notes;
            protected java.util.Calendar _Finish;
            protected com.sun.xml.bind.util.ListImpl _OutlineCode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.lang.String _ActualWork;
            protected java.math.BigInteger _UID;
            protected boolean has_OverAllocated;
            protected boolean _OverAllocated;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.lang.String _MaterialLabel;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.util.Calendar _AvailableTo;
            protected java.math.BigDecimal _OvertimeRate;
            protected java.util.Calendar _CreationDate;
            protected boolean has_CV;
            protected float _CV;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.class);
            }

            public java.lang.String getEmailAddress() {
                return _EmailAddress;
            }

            public void setEmailAddress(java.lang.String value) {
                _EmailAddress = value;
            }

            public java.math.BigInteger getStandardRateFormat() {
                return _StandardRateFormat;
            }

            public void setStandardRateFormat(java.math.BigInteger value) {
                _StandardRateFormat = value;
            }

            public java.lang.String getPhonetics() {
                return _Phonetics;
            }

            public void setPhonetics(java.lang.String value) {
                _Phonetics = value;
            }

            public java.lang.String getNTAccount() {
                return _NTAccount;
            }

            public void setNTAccount(java.lang.String value) {
                _NTAccount = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType getAvailabilityPeriods() {
                return _AvailabilityPeriods;
            }

            public void setAvailabilityPeriods(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType value) {
                _AvailabilityPeriods = value;
            }

            public boolean isIsEnterprise() {
                return _IsEnterprise;
            }

            public void setIsEnterprise(boolean value) {
                _IsEnterprise = value;
                has_IsEnterprise = true;
            }

            public java.lang.String getGroup() {
                return _Group;
            }

            public void setGroup(java.lang.String value) {
                _Group = value;
            }

            public java.lang.String getWork() {
                return _Work;
            }

            public void setWork(java.lang.String value) {
                _Work = value;
            }

            public java.util.Calendar getAvailableFrom() {
                return _AvailableFrom;
            }

            public void setAvailableFrom(java.util.Calendar value) {
                _AvailableFrom = value;
            }

            public java.math.BigInteger getCalendarUID() {
                return _CalendarUID;
            }

            public void setCalendarUID(java.math.BigInteger value) {
                _CalendarUID = value;
            }

            public java.math.BigInteger getWorkGroup() {
                return _WorkGroup;
            }

            public void setWorkGroup(java.math.BigInteger value) {
                _WorkGroup = value;
            }

            public java.lang.String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(java.lang.String value) {
                _HyperlinkSubAddress = value;
            }

            public java.lang.String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(java.lang.String value) {
                _RemainingOvertimeWork = value;
            }

            public java.lang.String getActualWorkProtected() {
                return _ActualWorkProtected;
            }

            public void setActualWorkProtected(java.lang.String value) {
                _ActualWorkProtected = value;
            }

            public java.lang.String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(java.lang.String value) {
                _RemainingWork = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public java.lang.String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(java.lang.String value) {
                _HyperlinkAddress = value;
            }

            public float getMaxUnits() {
                return _MaxUnits;
            }

            public void setMaxUnits(float value) {
                _MaxUnits = value;
                has_MaxUnits = true;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public boolean isIsInactive() {
                return _IsInactive;
            }

            public void setIsInactive(boolean value) {
                _IsInactive = value;
                has_IsInactive = true;
            }

            public java.lang.String getActualOvertimeWorkProtected() {
                return _ActualOvertimeWorkProtected;
            }

            public void setActualOvertimeWorkProtected(java.lang.String value) {
                _ActualOvertimeWorkProtected = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType getRates() {
                return _Rates;
            }

            public void setRates(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType value) {
                _Rates = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public java.lang.String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(java.lang.String value) {
                _ActualOvertimeWork = value;
            }

            public boolean isIsGeneric() {
                return _IsGeneric;
            }

            public void setIsGeneric(boolean value) {
                _IsGeneric = value;
                has_IsGeneric = true;
            }

            public java.util.List getBaseline() {
                return _Baseline;
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.lang.String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(java.lang.String value) {
                _Hyperlink = value;
            }

            public java.math.BigInteger getID() {
                return _ID;
            }

            public void setID(java.math.BigInteger value) {
                _ID = value;
            }

            public boolean isCanLevel() {
                return _CanLevel;
            }

            public void setCanLevel(boolean value) {
                _CanLevel = value;
                has_CanLevel = true;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public boolean isIsNull() {
                return _IsNull;
            }

            public void setIsNull(boolean value) {
                _IsNull = value;
                has_IsNull = true;
            }

            public java.util.List getTimephasedData() {
                return _TimephasedData;
            }

            public float getCostVariance() {
                return _CostVariance;
            }

            public void setCostVariance(float value) {
                _CostVariance = value;
                has_CostVariance = true;
            }

            public float getPeakUnits() {
                return _PeakUnits;
            }

            public void setPeakUnits(float value) {
                _PeakUnits = value;
                has_PeakUnits = true;
            }

            public java.math.BigDecimal getCostPerUse() {
                return _CostPerUse;
            }

            public void setCostPerUse(java.math.BigDecimal value) {
                _CostPerUse = value;
            }

            public java.util.List getExtendedAttribute() {
                return _ExtendedAttribute;
            }

            public java.math.BigInteger getAccrueAt() {
                return _AccrueAt;
            }

            public void setAccrueAt(java.math.BigInteger value) {
                _AccrueAt = value;
            }

            public java.math.BigInteger getOvertimeRateFormat() {
                return _OvertimeRateFormat;
            }

            public void setOvertimeRateFormat(java.math.BigInteger value) {
                _OvertimeRateFormat = value;
            }

            public java.lang.String getCode() {
                return _Code;
            }

            public void setCode(java.lang.String value) {
                _Code = value;
            }

            public java.lang.String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(java.lang.String value) {
                _RegularWork = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.lang.String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(java.lang.String value) {
                _OvertimeWork = value;
            }

            public java.lang.String getInitials() {
                return _Initials;
            }

            public void setInitials(java.lang.String value) {
                _Initials = value;
            }

            public java.math.BigDecimal getStandardRate() {
                return _StandardRate;
            }

            public void setStandardRate(java.math.BigDecimal value) {
                _StandardRate = value;
            }

            public float getSV() {
                return _SV;
            }

            public void setSV(float value) {
                _SV = value;
                has_SV = true;
            }

            public java.lang.String getActiveDirectoryGUID() {
                return _ActiveDirectoryGUID;
            }

            public void setActiveDirectoryGUID(java.lang.String value) {
                _ActiveDirectoryGUID = value;
            }

            public java.math.BigInteger getBookingType() {
                return _BookingType;
            }

            public void setBookingType(java.math.BigInteger value) {
                _BookingType = value;
            }

            public java.lang.String getNotes() {
                return _Notes;
            }

            public void setNotes(java.lang.String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.List getOutlineCode() {
                return _OutlineCode;
            }

            public java.lang.String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(java.lang.String value) {
                _ActualWork = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public boolean isOverAllocated() {
                return _OverAllocated;
            }

            public void setOverAllocated(boolean value) {
                _OverAllocated = value;
                has_OverAllocated = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.lang.String getMaterialLabel() {
                return _MaterialLabel;
            }

            public void setMaterialLabel(java.lang.String value) {
                _MaterialLabel = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.util.Calendar getAvailableTo() {
                return _AvailableTo;
            }

            public void setAvailableTo(java.util.Calendar value) {
                _AvailableTo = value;
            }

            public java.math.BigDecimal getOvertimeRate() {
                return _OvertimeRate;
            }

            public void setOvertimeRate(java.math.BigDecimal value) {
                _OvertimeRate = value;
            }

            public java.util.Calendar getCreationDate() {
                return _CreationDate;
            }

            public void setCreationDate(java.util.Calendar value) {
                _CreationDate = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx32 = 0;
                final int len32 = _Baseline.size();
                int idx39 = 0;
                final int len39 = _TimephasedData.size();
                int idx43 = 0;
                final int len43 = _ExtendedAttribute.size();
                int idx57 = 0;
                final int len57 = _OutlineCode.size();
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_ID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ID)), "ID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Name), "Name");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Type!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Type");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsNull) {
                    context.startElement("http://schemas.microsoft.com/project", "IsNull");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsNull)), "IsNull");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Initials!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Initials");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Initials), "Initials");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Phonetics!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Phonetics");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Phonetics), "Phonetics");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_NTAccount!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "NTAccount");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _NTAccount), "NTAccount");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_MaterialLabel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "MaterialLabel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _MaterialLabel), "MaterialLabel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Code!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Code");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Code), "Code");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Group!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Group");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Group), "Group");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WorkGroup!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkGroup");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorkGroup)), "WorkGroup");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EmailAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EmailAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _EmailAddress), "EmailAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Hyperlink), "Hyperlink");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkAddress), "HyperlinkAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkSubAddress), "HyperlinkSubAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_MaxUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "MaxUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _MaxUnits)), "MaxUnits");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_PeakUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "PeakUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _PeakUnits)), "PeakUnits");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_OverAllocated) {
                    context.startElement("http://schemas.microsoft.com/project", "OverAllocated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OverAllocated)), "OverAllocated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_AvailableFrom!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailableFrom");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableFrom), null), "AvailableFrom");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_AvailableTo!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailableTo");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableTo), null), "AvailableTo");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CanLevel) {
                    context.startElement("http://schemas.microsoft.com/project", "CanLevel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CanLevel)), "CanLevel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_AccrueAt!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AccrueAt");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _AccrueAt)), "AccrueAt");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Work), "Work");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RegularWork), "RegularWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OvertimeWork), "OvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWork), "ActualWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingWork), "RemainingWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWork), "ActualOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingOvertimeWork), "RemainingOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentWorkComplete)), "PercentWorkComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StandardRate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StandardRate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _StandardRate)), "StandardRate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StandardRateFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StandardRateFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StandardRateFormat)), "StandardRateFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeRate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeRate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeRate)), "OvertimeRate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeRateFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeRateFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _OvertimeRateFormat)), "OvertimeRateFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeCost)), "OvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CostPerUse!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CostPerUse");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _CostPerUse)), "CostPerUse");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualCost)), "ActualCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualOvertimeCost)), "ActualOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingCost)), "RemainingCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingOvertimeCost)), "RemainingOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _WorkVariance)), "WorkVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CostVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "CostVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CostVariance)), "CostVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_SV) {
                    context.startElement("http://schemas.microsoft.com/project", "SV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _SV)), "SV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CV)), "CV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _ACWP)), "ACWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalendarUID)), "CalendarUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Notes), "Notes");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsGeneric) {
                    context.startElement("http://schemas.microsoft.com/project", "IsGeneric");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsGeneric)), "IsGeneric");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsInactive) {
                    context.startElement("http://schemas.microsoft.com/project", "IsInactive");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsInactive)), "IsInactive");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsEnterprise) {
                    context.startElement("http://schemas.microsoft.com/project", "IsEnterprise");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsEnterprise)), "IsEnterprise");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_BookingType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BookingType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BookingType)), "BookingType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWorkProtected), "ActualWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWorkProtected), "ActualOvertimeWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActiveDirectoryGUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActiveDirectoryGUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActiveDirectoryGUID), "ActiveDirectoryGUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CreationDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreationDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null), "CreationDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx43 != len43) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_122 = idx43;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_122 ++)), "ExtendedAttribute");
                    context.endNamespaceDecls();
                    int idx_123 = idx43;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_123 ++)), "ExtendedAttribute");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx43 ++)), "ExtendedAttribute");
                    context.endElement();
                }
                while (idx32 != len32) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_124 = idx32;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_124 ++)), "Baseline");
                    context.endNamespaceDecls();
                    int idx_125 = idx32;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_125 ++)), "Baseline");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx32 ++)), "Baseline");
                    context.endElement();
                }
                while (idx57 != len57) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                    int idx_126 = idx57;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_126 ++)), "OutlineCode");
                    context.endNamespaceDecls();
                    int idx_127 = idx57;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_127 ++)), "OutlineCode");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx57 ++)), "OutlineCode");
                    context.endElement();
                }
                if (_AvailabilityPeriods!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailabilityPeriods");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriods), "AvailabilityPeriods");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriods), "AvailabilityPeriods");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriods), "AvailabilityPeriods");
                    context.endElement();
                }
                if (_Rates!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Rates");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Rates), "Rates");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Rates), "Rates");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Rates), "Rates");
                    context.endElement();
                }
                while (idx39 != len39) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_132 = idx39;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_132 ++)), "TimephasedData");
                    context.endNamespaceDecls();
                    int idx_133 = idx39;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_133 ++)), "TimephasedData");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx39 ++)), "TimephasedData");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx32 = 0;
                final int len32 = _Baseline.size();
                int idx39 = 0;
                final int len39 = _TimephasedData.size();
                int idx43 = 0;
                final int len43 = _ExtendedAttribute.size();
                int idx57 = 0;
                final int len57 = _OutlineCode.size();
                while (idx43 != len43) {
                    idx43 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
                while (idx57 != len57) {
                    idx57 += 1;
                }
                while (idx39 != len39) {
                    idx39 += 1;
                }
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx32 = 0;
                final int len32 = _Baseline.size();
                int idx39 = 0;
                final int len39 = _TimephasedData.size();
                int idx43 = 0;
                final int len43 = _ExtendedAttribute.size();
                int idx57 = 0;
                final int len57 = _OutlineCode.size();
                while (idx43 != len43) {
                    idx43 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
                while (idx57 != len57) {
                    idx57 += 1;
                }
                while (idx39 != len39) {
                    idx39 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00a0\u00c3\u00c4\'ppsq\u0000~\u0000\u0000\u009e\u00a4A\u00f9ppsq\u0000~\u0000\u0000\u009c"
+"\u0088VFppsq\u0000~\u0000\u0000\u0099t\u00ac\u00b2ppsq\u0000~\u0000\u0000\u0096\u00fa_\u0011ppsq\u0000~\u0000\u0000\u0093\u00d3\u00ac\u009eppsq\u0000~\u0000\u0000\u0090\u00c9\u00f1\u0007ppsq\u0000~\u0000\u0000\u008e"
+"\u00d1e5ppsq\u0000~\u0000\u0000\u008c\n\u0007\u001eppsq\u0000~\u0000\u0000\u0088\u00f2c.ppsq\u0000~\u0000\u0000\u0084\u00b8A\u00b7ppsq\u0000~\u0000\u0000\u0082\u0015\u008bDppsq\u0000~\u0000\u0000\u007f"
+"\u00c28\u00eeppsq\u0000~\u0000\u0000}\u00e8\u00ad\u000eppsq\u0000~\u0000\u0000{\u00efo\u0095ppsq\u0000~\u0000\u0000zH\u00cc\u00a6ppsq\u0000~\u0000\u0000x\u00ebgippsq\u0000~\u0000\u0000v"
+"{\u009a\u00c4ppsq\u0000~\u0000\u0000t=\u0003\u0000ppsq\u0000~\u0000\u0000r\u0082&\u00c1ppsq\u0000~\u0000\u0000p\u00c5\u00ed\u00b5ppsq\u0000~\u0000\u0000o}{bppsq\u0000~\u0000\u0000m"
+"\u00ac6\u00c3ppsq\u0000~\u0000\u0000j\u00de\u00c0\u001fppsq\u0000~\u0000\u0000h^j\u0011ppsq\u0000~\u0000\u0000f\u008a}\u0096ppsq\u0000~\u0000\u0000c\u00a0\u00c5/ppsq\u0000~\u0000\u0000`"
+"\u0094\u009f\u00c1ppsq\u0000~\u0000\u0000^\u00aa\u0086ippsq\u0000~\u0000\u0000\\-\u00f7\u0087ppsq\u0000~\u0000\u0000Y\u0004\u0099/ppsq\u0000~\u0000\u0000V\u0092f-ppsq\u0000~\u0000\u0000S"
+"\u0082|\tppsq\u0000~\u0000\u0000Q~\u00cd\tppsq\u0000~\u0000\u0000N\u0097\u00c3_ppsq\u0000~\u0000\u0000Mk\u009b$ppsq\u0000~\u0000\u0000I\u00ae\u0098appsq\u0000~\u0000\u0000G"
+"5\u00c3fppsq\u0000~\u0000\u0000D\t\u008e\u00cappsq\u0000~\u0000\u0000@6\u0098\u0019ppsq\u0000~\u0000\u0000<\u00ca\u00958ppsq\u0000~\u0000\u0000:\u001f\u0097\u00f7ppsq\u0000~\u0000\u00007"
+"-\u0087\u00afppsq\u0000~\u0000\u00004\u00fcv\u00e3ppsq\u0000~\u0000\u00003\u00e3\u00ef\u00e5ppsq\u0000~\u0000\u00001DL\u00abppsq\u0000~\u0000\u0000-\u00a4aAppsq\u0000~\u0000\u0000*"
+"%7\u0080ppsq\u0000~\u0000\u0000\'\u00e8T\u00c5ppsq\u0000~\u0000\u0000&\u00e3\u0092(ppsq\u0000~\u0000\u0000&\u0005P\u00f4ppsq\u0000~\u0000\u0000#z\u0083\u00c9ppsq\u0000~\u0000\u0000!"
+"`\u00f6(ppsq\u0000~\u0000\u0000  \u00d9\u0082ppsq\u0000~\u0000\u0000\u001ek\u00c35ppsq\u0000~\u0000\u0000\u001bI\u0085Cppsq\u0000~\u0000\u0000\u0018\u0090A\u00beppsq\u0000~\u0000\u0000\u0015"
+"\u0012\u00d9\u0000ppsq\u0000~\u0000\u0000\u0013dz\u0016ppsq\u0000~\u0000\u0000\u0010\u001d\u00cb6ppsq\u0000~\u0000\u0000\r\u00d8\u00b5eppsq\u0000~\u0000\u0000\f\n:dppsq\u0000~\u0000\u0000\t"
+"\u0001\u00d0\u0095ppsq\u0000~\u0000\u0000\b?\n\u0019ppsq\u0000~\u0000\u0000\u0006\u001c\u008b\u00b8ppsq\u0000~\u0000\u0000\u0004:H\bppsr\u0000\'com.sun.msv.gra"
+"mmar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/m"
+"sv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003\u0002\u00c4\u001cDpp\u0000sq\u0000~\u0000\u0000\u0002\u00c4\u001c9ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
+"met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.ms"
+"v.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatyp"
+"e.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/"
+"msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNa"
+"meq\u0000~\u0000VL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceP"
+"rocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexical"
+"ConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataT"
+"ypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL"
+"\u0000\bbaseTypeq\u0000~\u0000RL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/C"
+"oncreteType;L\u0000\tfacetNameq\u0000~\u0000Vxq\u0000~\u0000Uppq\u0000~\u0000]\u0001\u0000sr\u0000#com.sun.msv."
+"datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0007decimalq\u0000~\u0000]"
+"q\u0000~\u0000dt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000VL\u0000\fnamespaceURIq\u0000~\u0000V"
+"xpq\u0000~\u0000Zq\u0000~\u0000Ysr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001\u0002O\u0019.ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Hxq\u0000~\u0000\u0003\u0002O\u0019#sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c"
+"\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000L\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.Qn"
+"ameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0005QNameq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000tq\u0000"
+"~\u0000Ysr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000VL\u0000\fnamespaceURIq\u0000~\u0000Vxr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-i"
+"nstancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000o\u0001psq\u0000~\u0000vt\u0000\u0003UIDt\u0000$http://schemas.mi"
+"crosoft.com/projectsq\u0000~\u0000k\u0001v+\u00bfppsq\u0000~\u0000G\u0001v+\u00b4q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001v+\u00a9pp"
+"q\u0000~\u0000Osq\u0000~\u0000k\u0001\u0001(\u009eppsq\u0000~\u0000m\u0001\u0001(\u0093q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|s"
+"q\u0000~\u0000vt\u0000\u0002IDq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00e2C\u00abppsq\u0000~\u0000G\u0001\u00e2C\u00a0q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00e2C\u0095p"
+"psq\u0000~\u0000L\u0000\u00bb]]ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWith"
+"ValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000`q\u0000~\u0000\u0080psr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\\\u0000\u0000s"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0006stringq\u0000~\u0000\u0091\u0001q\u0000~\u0000\u0093t\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000"
+"~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001&\u00e63ppsq\u0000~\u0000m\u0001&\u00e6(q\u0000~\u0000ppq\u0000~\u0000qsq"
+"\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Nameq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\"~\\ppsq\u0000~\u0000G"
+"\u0002\"~Qq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\"~Fppsq\u0000~\u0000L\u0000\u00052\u00c8ppsr\u0000)com.sun.msv.datatype."
+"xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq"
+"\u0000~\u0000\u008eq\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xt\u0000\u000benumerationsr\u0000\u0011java.util.HashS"
+"et\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sr\u0000)com.sun.msv.datatype.xsd.In"
+"tegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Vxr\u0000\u0010java.lang.Number\u0086\u00ac"
+"\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010sq\u0000~\u0000\u00a7t\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080"
+"sq\u0000~\u0000k\u0002\u001dKyppsq\u0000~\u0000m\u0002\u001dKnq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000v"
+"t\u0000\u0004Typeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0000\u00c2\u00c6wppsq\u0000~\u0000G\u0000\u00c2\u00c6lq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0000\u00c2\u00c6appsq"
+"\u0000~\u0000L\u00001\u00ff3ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0007booleanq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000\u00baq\u0000~\u0000Ysq\u0000~\u0000k\u0000\u0090\u00c7)pp"
+"sq\u0000~\u0000m\u0000\u0090\u00c7\u001eq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0006IsNullq\u0000~"
+"\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\bi\u00cappsq\u0000~\u0000G\u0003\bi\u00bfq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\bi\u00b4ppsq\u0000~\u0000L\u0001\u00a2 \u00d2pp"
+"sq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-d"
+"erivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001fH\u00ddppsq\u0000~\u0000m\u0001fH\u00d2q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000z"
+"q\u0000~\u0000|sq\u0000~\u0000vt\u0000\bInitialsq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00cez\u00fcppsq\u0000~\u0000G\u0001\u00cez\u00f1q\u0000~\u0000pp"
+"\u0000sq\u0000~\u0000\u0000\u0001\u00cez\u00e6ppsq\u0000~\u0000L\u0001\u000b\u000ftppsq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000"
+"\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0000\u00c3kmppsq\u0000~\u0000m\u0000\u00c3kbq\u0000"
+"~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tPhoneticsq\u0000~\u0000\u0080q\u0000~\u0000|sq"
+"\u0000~\u0000k\u0002E\u0015\u00ccppsq\u0000~\u0000G\u0002E\u0015\u00c1q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002E\u0015\u00b6ppsq\u0000~\u0000L\u0000\u00c6 \u0084ppsq\u0000~\u0000\u008dq\u0000~"
+"\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~"
+"\u0000\u0080sq\u0000~\u0000k\u0001~\u00f5-ppsq\u0000~\u0000m\u0001~\u00f5\"q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~"
+"\u0000vt\u0000\tNTAccountq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003F\u00ae\u00dbppsq\u0000~\u0000G\u0003F\u00ae\u00d0q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003"
+"F\u00ae\u00c5ppsq\u0000~\u0000L\u0001\u00ad\u0081\u00e2ppsq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000h"
+"sq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001\u0099,\u00deppsq\u0000~\u0000m\u0001\u0099,\u00d3q\u0000~\u0000ppq\u0000~\u0000"
+"qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rMaterialLabelq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k"
+"\u0001\u00ae^\u00e5ppsq\u0000~\u0000G\u0001\u00ae^\u00daq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00ae^\u00cfppsq\u0000~\u0000L\u0000\u00a8VHppsq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq"
+"\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq"
+"\u0000~\u0000k\u0001\u0006\b\u0082ppsq\u0000~\u0000m\u0001\u0006\bwq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000"
+"\u0004Codeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003}h\u00b9ppsq\u0000~\u0000G\u0003}h\u00aeq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003}h\u00a3ppsq\u0000~"
+"\u0000L\u0001a\u00af\u008cppsq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000e"
+"string-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0002\u001b\u00b9\u0012ppsq\u0000~\u0000m\u0002\u001b\u00b9\u0007q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000"
+"~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0005Groupq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00b9C\u0080ppsq\u0000~\u0000G\u0002\u00b9Cuq"
+"\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00b9Cjppsq\u0000~\u0000L\u0001\u00b3$\u00edppsq\u0000~\u0000\u00a1q\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq"
+"\u0000~\u0000\u00a4sq\u0000~\u0000\u00a5w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sq\u0000~\u0000\u00a7t\u0000\u00013sq\u0000~\u0000\u00a7t\u0000\u00012sq\u0000~\u0000\u00a7q\u0000~\u0000\u00aasq\u0000~\u0000"
+"\u00a7t\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001\u0006\u001exppsq\u0000~\u0000m\u0001\u0006"
+"\u001emq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tWorkGroupq\u0000~\u0000\u0080q\u0000~"
+"\u0000|sq\u0000~\u0000k\u0003\"=\u00edppsq\u0000~\u0000G\u0003\"=\u00e2q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\"=\u00d7ppsq\u0000~\u0000L\u0001\u00e1*\u00bcppsq\u0000~\u0000"
+"\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derive"
+"dq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001A\u0013\u0016ppsq\u0000~\u0000m\u0001A\u0013\u000bq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|"
+"sq\u0000~\u0000vt\u0000\fEmailAddressq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00b5\u0016Hppsq\u0000~\u0000G\u0001\u00b5\u0016=q\u0000~\u0000pp\u0000"
+"sq\u0000~\u0000\u0000\u0001\u00b5\u00162ppsq\u0000~\u0000L\u0000yX\u00ffppsq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000"
+"\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001;\u00bd.ppsq\u0000~\u0000m\u0001;\u00bd#q\u0000~"
+"\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tHyperlinkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000"
+"~\u0000k\u0001@\u001c\u00a1ppsq\u0000~\u0000G\u0001@\u001c\u0096q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001@\u001c\u008bppsq\u0000~\u0000L\u0000\u0095|\u00fcppsq\u0000~\u0000\u008dq\u0000~\u0000"
+"\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000"
+"\u0080sq\u0000~\u0000k\u0000\u00aa\u009f\u008appsq\u0000~\u0000m\u0000\u00aa\u009f\u007fq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000"
+"vt\u0000\u0010HyperlinkAddressq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u0019\u008d\u009cppsq\u0000~\u0000G\u0002\u0019\u008d\u0091q\u0000~\u0000pp\u0000s"
+"q\u0000~\u0000\u0000\u0002\u0019\u008d\u0086ppsq\u0000~\u0000L\u0000\u00e2t\nppsq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0002"
+"\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u00017\u0019wppsq\u0000~\u0000m\u00017\u0019lq\u0000~\u0000"
+"ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013HyperlinkSubAddressq\u0000~\u0000"
+"\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u008a\u00cd&ppsq\u0000~\u0000G\u0002\u008a\u00cd\u001bq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u008a\u00cd\u0010ppsq\u0000~\u0000L\u0000Q\u00cf=pps"
+"r\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun."
+"msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0005"
+"floatq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0001Tq\u0000~\u0000Ysq\u0000~\u0000k\u00028\u00fd\u00ceppsq\u0000~\u0000m\u00028\u00fd\u00c3q\u0000~\u0000ppq"
+"\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\bMaxUnitsq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0000\u00de"
+"A/ppsq\u0000~\u0000G\u0000\u00deA$q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0000\u00deA\u0019ppq\u0000~\u0001Psq\u0000~\u0000k\u0000\u008cq\u00d7ppsq\u0000~\u0000m\u0000\u008cq\u00cc"
+"q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tPeakUnitsq\u0000~\u0000\u0080q\u0000~\u0000|"
+"sq\u0000~\u0000k\u0001\u0004\u00c2\u0098ppsq\u0000~\u0000G\u0001\u0004\u00c2\u008dq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u0004\u00c2\u0082ppq\u0000~\u0000\u00b7sq\u0000~\u0000k\u0000\u00d2\u00c3Jppsq"
+"\u0000~\u0000m\u0000\u00d2\u00c3?q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rOverAllocat"
+"edq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002<\u00e2\u00b6ppsq\u0000~\u0000G\u0002<\u00e2\u00abq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002<\u00e2\u00a0ppsq\u0000~\u0000L\u0001"
+"Kn\u00d8ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+")com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Sq"
+"\u0000~\u0000Yt\u0000\bdateTimeq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0001rq\u0000~\u0000Ysq\u0000~\u0000k\u0000\u00f1s\u00c3ppsq\u0000~\u0000m\u0000"
+"\u00f1s\u00b8q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rAvailableFromq\u0000~"
+"\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\u007f)\u00bcppsq\u0000~\u0000G\u0003\u007f)\u00b1q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u007f)\u00a6ppq\u0000~\u0001nsq\u0000~\u0000k\u0002"
+"3\u00ba\u00c9ppsq\u0000~\u0000m\u00023\u00ba\u00beq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bAvai"
+"lableToq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\u009f\u00ebeppsq\u0000~\u0000G\u0003\u009f\u00ebZq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u009f\u00ebOppq\u0000"
+"~\u0001nsq\u0000~\u0000k\u0002T|rppsq\u0000~\u0000m\u0002T|gq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000"
+"~\u0000vt\u0000\u0005Startq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u009f\u00a35ppsq\u0000~\u0000G\u0002\u009f\u00a3*q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u009f\u00a3\u001f"
+"ppq\u0000~\u0001nsq\u0000~\u0000k\u0001T4Bppsq\u0000~\u0000m\u0001T47q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000"
+"|sq\u0000~\u0000vt\u0000\u0006Finishq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u0018\u0086\u00f9ppsq\u0000~\u0000G\u0001\u0018\u0086\u00eeq\u0000~\u0000pp\u0000sq\u0000~\u0000"
+"\u0000\u0001\u0018\u0086\u00e3ppq\u0000~\u0000\u00b7sq\u0000~\u0000k\u0000\u00e6\u0087\u00abppsq\u0000~\u0000m\u0000\u00e6\u0087\u00a0q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000"
+"zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\bCanLevelq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u00021\u0010\u00c7ppsq\u0000~\u0000G\u00021\u0010\u00bcq\u0000~\u0000p"
+"p\u0000sq\u0000~\u0000\u0000\u00021\u0010\u00b1ppsq\u0000~\u0000L\u0001\u0019\u009c>ppsq\u0000~\u0000\u00a1q\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a4"
+"sq\u0000~\u0000\u00a5w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000\u00a7t\u0000\u00013sq\u0000~\u0000\u00a7t\u0000\u00012sq\u0000~\u0000\u00a7t\u0000\u00011xq\u0000~\u0000hsq\u0000~"
+"\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001\u0017tnppsq\u0000~\u0000m\u0001\u0017tcq\u0000~\u0000ppq\u0000~\u0000qsq"
+"\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\bAccrueAtq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00f2\u0010Cppsq"
+"\u0000~\u0000G\u0002\u00f2\u00108q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00f2\u0010-ppsq\u0000~\u0000L\u0001\u00c3<\u00f9ppsr\u0000%com.sun.msv.datat"
+"ype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\bdurationq\u0000~\u0000]q\u0000"
+"~\u0000hsq\u0000~\u0000iq\u0000~\u0001\u00b2q\u0000~\u0000Ysq\u0000~\u0000k\u0001.\u00d3/ppsq\u0000~\u0000m\u0001.\u00d3$q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000"
+"~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Workq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00aa\u00fd<ppsq\u0000~\u0000G\u0002\u00aa\u00fd1q\u0000"
+"~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00aa\u00fd&ppq\u0000~\u0001\u00afsq\u0000~\u0000k\u0000\u00e7\u00c0(ppsq\u0000~\u0000m\u0000\u00e7\u00c0\u001dq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000"
+"vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bRegularWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003l\u0002\u00dcppsq"
+"\u0000~\u0000G\u0003l\u0002\u00d1q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003l\u0002\u00c6ppq\u0000~\u0001\u00afsq\u0000~\u0000k\u0001\u00a8\u00c5\u00c8ppsq\u0000~\u0000m\u0001\u00a8\u00c5\u00bdq\u0000~\u0000pp"
+"q\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fOvertimeWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000"
+"~\u0000k\u0003\u00d2\u00f6\u00acppsq\u0000~\u0000G\u0003\u00d2\u00f6\u00a1q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u00d2\u00f6\u0096ppq\u0000~\u0001\u00afsq\u0000~\u0000k\u0002\u000f\u00b9\u0098ppsq\u0000~\u0000"
+"m\u0002\u000f\u00b9\u008dq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\nActualWorkq\u0000~\u0000"
+"\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003,4\u0097ppsq\u0000~\u0000G\u0003,4\u008cq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003,4\u0081ppq\u0000~\u0001\u00afsq\u0000~\u0000k\u0001h"
+"\u00f7\u0083ppsq\u0000~\u0000m\u0001h\u00f7xq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rRemai"
+"ningWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002x\u00d4\u00f6ppsq\u0000~\u0000G\u0002x\u00d4\u00ebq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002x\u00d4\u00e0ppq"
+"\u0000~\u0001\u00afsq\u0000~\u0000k\u0000\u00b5\u0097\u00e2ppsq\u0000~\u0000m\u0000\u00b5\u0097\u00d7q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq"
+"\u0000~\u0000vt\u0000\u0012ActualOvertimeWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\u00bd\u0002\u00beppsq\u0000~\u0000G\u0003\u00bd\u0002\u00b3q\u0000~"
+"\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u00bd\u0002\u00a8ppq\u0000~\u0001\u00afsq\u0000~\u0000k\u0001\u00f9\u00c5\u00aappsq\u0000~\u0000m\u0001\u00f9\u00c5\u009fq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000v"
+"q\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0015RemainingOvertimeWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000"
+"k\u0001,(6ppsq\u0000~\u0000G\u0001,(+q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001,( ppq\u0000~\u0000Osq\u0000~\u0000k\u0000\u00b7%\u0015ppsq\u0000~\u0000m\u0000"
+"\u00b7%\nq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013PercentWorkCompl"
+"eteq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00e7\t\u00a5ppsq\u0000~\u0000G\u0002\u00e7\t\u009aq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00e7\t\u008fppsq\u0000~\u0000L"
+"\u0000\u00a9P\u0018ppq\u0000~\u0000dq\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000eq\u0000~\u0000Ysq\u0000~\u0000k\u0002=\u00b9rppsq\u0000~\u0000m\u0002=\u00b9gq\u0000~\u0000pp"
+"q\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fStandardRateq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000"
+"~\u0000k\u0002\u0003\u00ae\u00fbppsq\u0000~\u0000G\u0002\u0003\u00ae\u00f0q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u0003\u00ae\u00e5ppsq\u0000~\u0000L\u0000\u0099\u00e9,ppsq\u0000~\u0000\u00a1q\u0000~\u0000"
+"\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a4sq\u0000~\u0000\u00a5w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0007sq\u0000~\u0000\u00a7t\u0000\u00013sq\u0000~\u0000\u00a7"
+"t\u0000\u00015sq\u0000~\u0000\u00a7t\u0000\u00017sq\u0000~\u0000\u00a7t\u0000\u00012sq\u0000~\u0000\u00a7t\u0000\u00014sq\u0000~\u0000\u00a7t\u0000\u00018sq\u0000~\u0000\u00a7t\u0000\u00011xq\u0000~\u0000h"
+"sq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001i\u00c5\u00b4ppsq\u0000~\u0000m\u0001i\u00c5\u00a9q\u0000~\u0000ppq\u0000~"
+"\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012StandardRateFormatq\u0000~\u0000\u0080q\u0000~\u0000|"
+"sq\u0000~\u0000k\u0003\u000f\u00ea\u001fppsq\u0000~\u0000G\u0003\u000f\u00ea\u0014q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u000f\u00ea\tppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0002f\u0099\u00ecppsq"
+"\u0000~\u0000m\u0002f\u0099\u00e1q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Costq\u0000~\u0000\u0080q\u0000"
+"~\u0000|sq\u0000~\u0000k\u0002r2\u00fdppsq\u0000~\u0000G\u0002r2\u00f2q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002r2\u00e7ppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0001\u00c8\u00e2\u00cap"
+"psq\u0000~\u0000m\u0001\u00c8\u00e2\u00bfq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fOvertime"
+"Rateq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003)^Sppsq\u0000~\u0000G\u0003)^Hq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003)^=ppsq\u0000~\u0000"
+"L\u0001;\u00ae\u0099ppsq\u0000~\u0000\u00a1q\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a4sq\u0000~\u0000\u00a5w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000"
+"\u0006sq\u0000~\u0000\u00a7t\u0000\u00013sq\u0000~\u0000\u00a7t\u0000\u00015sq\u0000~\u0000\u00a7t\u0000\u00017sq\u0000~\u0000\u00a7t\u0000\u00012sq\u0000~\u0000\u00a7t\u0000\u00014sq\u0000~\u0000\u00a7t\u0000\u0001"
+"1xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001\u00ed\u00af\u009fppsq\u0000~\u0000m\u0001\u00ed\u00af\u0094q\u0000"
+"~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012OvertimeRateFormatq\u0000~"
+"\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002|\u008e\u00ddppsq\u0000~\u0000G\u0002|\u008e\u00d2q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002|\u008e\u00c7ppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0001"
+"\u00d3>\u00aappsq\u0000~\u0000m\u0001\u00d3>\u009fq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fOver"
+"timeCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00ea\u0019Sppsq\u0000~\u0000G\u0001\u00ea\u0019Hq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00ea\u0019=ppq"
+"\u0000~\u0001\u00f4sq\u0000~\u0000k\u0001@\u00c9 ppsq\u0000~\u0000m\u0001@\u00c9\u0015q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq"
+"\u0000~\u0000vt\u0000\nCostPerUseq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\f%ippsq\u0000~\u0000G\u0003\f%^q\u0000~\u0000pp\u0000sq\u0000~"
+"\u0000\u0000\u0003\f%Sppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0002b\u00d56ppsq\u0000~\u0000m\u0002b\u00d5+q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~"
+"\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\nActualCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00e9\u00b8bppsq\u0000~\u0000G\u0002\u00e9\u00b8Wq\u0000"
+"~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00e9\u00b8Lppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0002@h/ppsq\u0000~\u0000m\u0002@h$q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000"
+"vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012ActualOvertimeCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001"
+"\u00d3\u00ecvppsq\u0000~\u0000G\u0001\u00d3\u00eckq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00d3\u00ec`ppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0001*\u009cCppsq\u0000~\u0000m\u0001*\u009c"
+"8q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rRemainingCostq\u0000~\u0000\u0080"
+"q\u0000~\u0000|sq\u0000~\u0000k\u0002\u0080V\tppsq\u0000~\u0000G\u0002\u0080U\u00feq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u0080U\u00f3ppq\u0000~\u0001\u00f4sq\u0000~\u0000k\u0001\u00d7\u0005"
+"\u00d6ppsq\u0000~\u0000m\u0001\u00d7\u0005\u00cbq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0015Remain"
+"ingOvertimeCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00cdv\u009fppsq\u0000~\u0000G\u0002\u00cdv\u0094q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000"
+"\u0002\u00cdv\u0089ppq\u0000~\u0001Psq\u0000~\u0000k\u0002{\u00a7Gppsq\u0000~\u0000m\u0002{\u00a7<q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000z"
+"q\u0000~\u0000|sq\u0000~\u0000vt\u0000\fWorkVarianceq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00d1D\u009appsq\u0000~\u0000G\u0001\u00d1D\u008fq\u0000"
+"~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00d1D\u0084ppq\u0000~\u0001Psq\u0000~\u0000k\u0001\u007fuBppsq\u0000~\u0000m\u0001\u007fu7q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000"
+"vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fCostVarianceq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001HrNpps"
+"q\u0000~\u0000G\u0001HrCq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001Hr8ppq\u0000~\u0001Psq\u0000~\u0000k\u0000\u00f6\u00a2\u00f6ppsq\u0000~\u0000m\u0000\u00f6\u00a2\u00ebq\u0000~\u0000p"
+"pq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0002SVq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00bc9\u0007pp"
+"sq\u0000~\u0000G\u0001\u00bc8\u00fcq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00bc8\u00f1ppq\u0000~\u0001Psq\u0000~\u0000k\u0001ji\u00afppsq\u0000~\u0000m\u0001ji\u00a4q\u0000~\u0000"
+"ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0002CVq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00ba\u00dc:p"
+"psq\u0000~\u0000G\u0001\u00ba\u00dc/q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00ba\u00dc$ppq\u0000~\u0001Psq\u0000~\u0000k\u0001i\f\u00e2ppsq\u0000~\u0000m\u0001i\f\u00d7q\u0000~"
+"\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004ACWPq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002>"
+"\u0097\u00bfppsq\u0000~\u0000G\u0002>\u0097\u00b4q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002>\u0097\u00a9ppq\u0000~\u0000Osq\u0000~\u0000k\u0001\u00c9\u0094\u009eppsq\u0000~\u0000m\u0001\u00c9\u0094\u0093"
+"q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bCalendarUIDq\u0000~\u0000\u0080q\u0000~"
+"\u0000|sq\u0000~\u0000k\u0002o\u00cc\u00a0ppsq\u0000~\u0000G\u0002o\u00cc\u0095q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002o\u00cc\u008appsq\u0000~\u0000L\u0000\u0004\u0083\u00b5ppq\u0000~\u0000\u0093"
+"q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000\u0094q\u0000~\u0000Ysq\u0000~\u0000k\u0002kH\u00d0ppsq\u0000~\u0000m\u0002kH\u00c5q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000v"
+"q\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0005Notesq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001]e8ppsq\u0000~\u0000G\u0001]e"
+"-q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001]e\"ppq\u0000~\u0001Psq\u0000~\u0000k\u0001\u000b\u0095\u00e0ppsq\u0000~\u0000m\u0001\u000b\u0095\u00d5q\u0000~\u0000ppq\u0000~\u0000qsq"
+"\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004BCWSq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00a6\u00a2\u00eappsq\u0000~\u0000G"
+"\u0001\u00a6\u00a2\u00dfq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00a6\u00a2\u00d4ppq\u0000~\u0001Psq\u0000~\u0000k\u0001T\u00d3\u0092ppsq\u0000~\u0000m\u0001T\u00d3\u0087q\u0000~\u0000ppq\u0000~\u0000"
+"qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004BCWPq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00f9=tppsq\u0000"
+"~\u0000G\u0001\u00f9=iq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00f9=^ppq\u0000~\u0000\u00b7sq\u0000~\u0000k\u0001\u00c7>&ppsq\u0000~\u0000m\u0001\u00c7>\u001bq\u0000~\u0000ppq"
+"\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tIsGenericq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001"
+"\u00d9\u008b\u00dbppsq\u0000~\u0000G\u0001\u00d9\u008b\u00d0q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00d9\u008b\u00c5ppq\u0000~\u0000\u00b7sq\u0000~\u0000k\u0001\u00a7\u008c\u008dppsq\u0000~\u0000m\u0001\u00a7\u008c"
+"\u0082q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\nIsInactiveq\u0000~\u0000\u0080q\u0000~"
+"\u0000|sq\u0000~\u0000k\u0002SRQppsq\u0000~\u0000G\u0002SRFq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002SR;ppq\u0000~\u0000\u00b7sq\u0000~\u0000k\u0002!S\u0003pp"
+"sq\u0000~\u0000m\u0002!R\u00f8q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fIsEnterpr"
+"iseq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u00a2\u00b6nppsq\u0000~\u0000G\u0002\u00a2\u00b6cq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00a2\u00b6Xppsq\u0000~\u0000L"
+"\u0001\u00cd\u001e^ppsq\u0000~\u0000\u00a1q\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a4sq\u0000~\u0000\u00a5w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002"
+"sq\u0000~\u0000\u00a7q\u0000~\u0000\u00aasq\u0000~\u0000\u00a7t\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~"
+"\u0000k\u0000\u00d5\u0097\u00f5ppsq\u0000~\u0000m\u0000\u00d5\u0097\u00eaq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bB"
+"ookingTypeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0004:!rppsq\u0000~\u0000G\u0004:!gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0004:!\\p"
+"pq\u0000~\u0001\u00afsq\u0000~\u0000k\u0002v\u00e4^ppsq\u0000~\u0000m\u0002v\u00e4Sq\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|"
+"sq\u0000~\u0000vt\u0000\u0013ActualWorkProtectedq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\u0017\u00a3\u00ebppsq\u0000~\u0000G\u0003\u0017\u00a3\u00e0"
+"q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u0017\u00a3\u00d5ppq\u0000~\u0001\u00afsq\u0000~\u0000k\u0001Tf\u00d7ppsq\u0000~\u0000m\u0001Tf\u00ccq\u0000~\u0000ppq\u0000~\u0000qsq\u0000"
+"~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u001bActualOvertimeWorkProtectedq\u0000~\u0000\u0080q"
+"\u0000~\u0000|sq\u0000~\u0000k\u0002\u00c7^\u0012ppsq\u0000~\u0000G\u0002\u00c7^\u0007q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u00c7]\u00fcppsq\u0000~\u0000L\u0001l\u00b5%ppsq\u0000"
+"~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000\u0091\u0000\u0000q\u0000~\u0000\u0093q\u0000~\u0000\u0093q\u0000~\u0000\u0095\u0000\u0000\u0000\u0010q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-deri"
+"vedq\u0000~\u0000\u0080sq\u0000~\u0000k\u0001Z\u00a8\u00d2ppsq\u0000~\u0000m\u0001Z\u00a8\u00c7q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~"
+"\u0000|sq\u0000~\u0000vt\u0000\u0013ActiveDirectoryGUIDq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0001\u00f8\u008b\u00cdppsq\u0000~\u0000G\u0001\u00f8"
+"\u008b\u00c2q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0001\u00f8\u008b\u00b7ppq\u0000~\u0001nsq\u0000~\u0000k\u0000\u00ad\u001c\u00dappsq\u0000~\u0000m\u0000\u00ad\u001c\u00cfq\u0000~\u0000ppq\u0000~\u0000qs"
+"q\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fCreationDateq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003\t\u00bb"
+"\u0092ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.su"
+"n.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\t\u00bb\u0087q\u0000~\u0000pp"
+"sq\u0000~\u0000G\u0003\t\u00bb\u0084q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\t\u00bbyppsq\u0000~\u0000G\u0000\u00ee&-pp\u0000sq\u0000~\u0000k\u0000\u00ee&\"ppsq\u0000~\u0003\u0006"
+"\u0000\u00ee&\u0017q\u0000~\u0000ppsq\u0000~\u0000m\u0000\u00ee&\u0014q\u0000~\u0000ppsr\u00002com.sun.msv.grammar.Expression"
+"$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000}q\u0000~\u0003\u0010sr\u0000 com.s"
+"un.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000wq\u0000~\u0000|sq\u0000~\u0000vt\u0000Yco"
+"m.tapsterrock.mspdi.schema.ProjectType.ResourcesType.Resourc"
+"eType.ExtendedAttributeTypet\u0000+http://java.sun.com/jaxb/xjc/d"
+"ummy-elementssq\u0000~\u0000k\u0002\u001b\u0095Gppsq\u0000~\u0000m\u0002\u001b\u0095<q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~"
+"\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0011ExtendedAttributeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0003&\u00b2nppsq\u0000~\u0003"
+"\u0006\u0003&\u00b2cq\u0000~\u0000ppsq\u0000~\u0000G\u0003&\u00b2`q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003&\u00b2Uppsq\u0000~\u0000G\u0000\u00ee&-pp\u0000sq\u0000~\u0000k\u0000"
+"\u00ee&\"ppsq\u0000~\u0003\u0006\u0000\u00ee&\u0017q\u0000~\u0000ppsq\u0000~\u0000m\u0000\u00ee&\u0014q\u0000~\u0000ppq\u0000~\u0003\u0010q\u0000~\u0003\u0012q\u0000~\u0000|sq\u0000~\u0000vt\u0000"
+"Pcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.Reso"
+"urceType.BaselineTypeq\u0000~\u0003\u0015sq\u0000~\u0000k\u00028\u008c#ppsq\u0000~\u0000m\u00028\u008c\u0018q\u0000~\u0000ppq\u0000~\u0000qs"
+"q\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\bBaselineq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002zM\u009cpps"
+"q\u0000~\u0003\u0006\u0002zM\u0091q\u0000~\u0000ppsq\u0000~\u0000G\u0002zM\u008eq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002zM\u0083ppsq\u0000~\u0000G\u0000\u00ee&-pp\u0000sq\u0000"
+"~\u0000k\u0000\u00ee&\"ppsq\u0000~\u0003\u0006\u0000\u00ee&\u0017q\u0000~\u0000ppsq\u0000~\u0000m\u0000\u00ee&\u0014q\u0000~\u0000ppq\u0000~\u0003\u0010q\u0000~\u0003\u0012q\u0000~\u0000|sq\u0000~"
+"\u0000vt\u0000Scom.tapsterrock.mspdi.schema.ProjectType.ResourcesType."
+"ResourceType.OutlineCodeTypeq\u0000~\u0003\u0015sq\u0000~\u0000k\u0001\u008c\'Qppsq\u0000~\u0000m\u0001\u008c\'Fq\u0000~\u0000p"
+"pq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bOutlineCodeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000"
+"~\u0000k\u0003\u0013\u00a9\u008fppsq\u0000~\u0000G\u0003\u0013\u00a9\u0084q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0003\u0013\u00a9yppsq\u0000~\u0000G\u0000\u00ee&-pp\u0000sq\u0000~\u0000k\u0000\u00ee&"
+"\"ppsq\u0000~\u0003\u0006\u0000\u00ee&\u0017q\u0000~\u0000ppsq\u0000~\u0000m\u0000\u00ee&\u0014q\u0000~\u0000ppq\u0000~\u0003\u0010q\u0000~\u0003\u0012q\u0000~\u0000|sq\u0000~\u0000vt\u0000[c"
+"om.tapsterrock.mspdi.schema.ProjectType.ResourcesType.Resour"
+"ceType.AvailabilityPeriodsTypeq\u0000~\u0003\u0015sq\u0000~\u0000k\u0002%\u0083Gppsq\u0000~\u0000m\u0002%\u0083<q\u0000~"
+"\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013AvailabilityPeriodsq\u0000~"
+"\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u001b\u00eb\u00aeppsq\u0000~\u0000G\u0002\u001b\u00eb\u00a3q\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u001b\u00eb\u0098ppsq\u0000~\u0000G\u0000\u00ee&-pp"
+"\u0000sq\u0000~\u0000k\u0000\u00ee&\"ppsq\u0000~\u0003\u0006\u0000\u00ee&\u0017q\u0000~\u0000ppsq\u0000~\u0000m\u0000\u00ee&\u0014q\u0000~\u0000ppq\u0000~\u0003\u0010q\u0000~\u0003\u0012q\u0000~\u0000|"
+"sq\u0000~\u0000vt\u0000Mcom.tapsterrock.mspdi.schema.ProjectType.ResourcesT"
+"ype.ResourceType.RatesTypeq\u0000~\u0003\u0015sq\u0000~\u0000k\u0001-\u00c5fppsq\u0000~\u0000m\u0001-\u00c5[q\u0000~\u0000ppq"
+"\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0005Ratesq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000k\u0002\u001f\u0082)p"
+"psq\u0000~\u0003\u0006\u0002\u001f\u0082\u001eq\u0000~\u0000ppsq\u0000~\u0000G\u0002\u001f\u0082\u001bq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000\u0002\u001f\u0082\u0010ppsq\u0000~\u0000G\u0000\u00ee&-pp\u0000s"
+"q\u0000~\u0000k\u0000\u00ee&\"ppsq\u0000~\u0003\u0006\u0000\u00ee&\u0017q\u0000~\u0000ppsq\u0000~\u0000m\u0000\u00ee&\u0014q\u0000~\u0000ppq\u0000~\u0003\u0010q\u0000~\u0003\u0012q\u0000~\u0000|sq"
+"\u0000~\u0000vt\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypeq\u0000~\u0003\u0015s"
+"q\u0000~\u0000k\u00011[\u00deppsq\u0000~\u0000m\u00011[\u00d3q\u0000~\u0000ppq\u0000~\u0000qsq\u0000~\u0000vq\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000|sq\u0000~\u0000vt"
+"\u0000\u000eTimephasedDataq\u0000~\u0000\u0080q\u0000~\u0000|sr\u0000\"com.sun.msv.grammar.Expression"
+"Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"
+"Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"
+"sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0003e[\u0000\u0005table"
+"t\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0001\u001a\u0000\u0000\u0001\u00ccpur\u0000![Lcom.sun"
+".msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0005\u00ffpppq\u0000~\u0000\u008bq\u0000~\u00015pppppp"
+"pppppq\u0000~\u0000\u0083q\u0000~\u0001\u0083q\u0000~\u0002bppq\u0000~\u0001cppq\u0000~\u0002\u0082q\u0000~\u0000\u0089q\u0000~\u0002\u00a4pppppq\u0000~\u0002\u008aq\u0000~\u0000!p"
+"pppq\u0000~\u0000\u0081q\u0000~\u0001\u0081ppq\u0000~\u0001]q\u0000~\u0001mq\u0000~\u0001\u00dcppq\u0000~\u0001\u00ebq\u0000~\u0001\u0018pppppppppppppppq\u0000~"
+"\u0001[q\u0000~\u0001kpq\u0000~\u0001\u00e3pq\u0000~\u0001\u00e9q\u0000~\u0000<ppppppppppppppppppq\u0000~\u0001\u00e1ppppppppppq\u0000~"
+"\u0002jpppppppq\u0000~\u0002\u0019pq\u0000~\u0000Bq\u0000~\u0000&pppppppppppppppq\u0000~\u0000\u0019ppppppq\u0000~\u00008pppp"
+"ppppppppppppppppppppq\u0000~\u0000\u00dbppq\u0000~\u0001$pq\u0000~\u0000\u00e7pppppq\u0000~\u0002Ypq\u0000~\u0000-pppppp"
+"ppq\u0000~\u0000\u00d9ppppq\u0000~\u0000\u00e5q\u0000~\u0000>ppppq\u0000~\u0002Wppppppppppq\u0000~\u0003_pq\u0000~\u0001|ppppppppp"
+"pppppppppppq\u0000~\u0000\u001cpppppppppq\u0000~\u0003Bpq\u0000~\u0002\u009apppppppppppppppppppppppq"
+"\u0000~\u0000\u0005ppq\u0000~\u0001\u00a7pq\u0000~\u0000\u00e0pppppppppq\u0000~\u0001\u0004q\u0000~\u0002Rq\u0000~\u0001+pppppq\u0000~\u0000\nppppq\u0000~\u0001\u008b"
+"ppppppppppq\u0000~\u0001)ppq\u0000~\u0002\u00c4pppppppq\u0000~\u0001\u0089ppppppppppq\u0000~\u0001^q\u0000~\u0003\u0016pppppp"
+"pq\u0000~\u0003-pq\u0000~\u0000\u00bcpq\u0000~\u0002\u00b3pppppq\u0000~\u0002 ppq\u0000~\u0001Hq\u0000~\u0003+ppppppppppq\u0000~\u0000\u001aq\u0000~\u0002\u00b1"
+"q\u0000~\u0002\u00abq\u0000~\u0003*pq\u0000~\u0000\u009fpq\u0000~\u0002\u001eppppppppppppppppq\u0000~\u0002\u00a9ppq\u0000~\u0000\u009dq\u0000~\u0000\u0084pq\u0000~\u0000"
+".ppppppppppppppppq\u0000~\u0002\u00dcppppppq\u0000~\u0000+q\u0000~\u0002\u00ecpppq\u0000~\u0001\u00ecpq\u0000~\u0001\u001fpppppppp"
+"ppppppppq\u0000~\u0001\u000bppq\u0000~\u0001\u00d4pq\u0000~\u0001\u001dppppppq\u0000~\u0000\u00afpppppppppq\u0000~\u0001\tpppppppq\u0000"
+"~\u0000\u000bppppq\u0000~\u00010pppq\u0000~\u0001\u00cbpq\u0000~\u0002\u00ffppppppppppppppq\u0000~\u00003pppq\u0000~\u0001\u00aeq\u0000~\u0001\u00c9pq"
+"\u0000~\u0002\u00fdppq\u0000~\u0002\u00ccpppppppppppq\u0000~\u0000\u0015pq\u0000~\u0000;q\u0000~\u0000\u00d4q\u0000~\u0001\u00acpq\u0000~\u0000\u00cfpq\u0000~\u0000\u001dppppp"
+"pppq\u0000~\u0002\u00bcpppq\u0000~\u00002pppppq\u0000~\u0002yq\u0000~\u0001\u0094q\u0000~\u0000\u00cdppppppppppppppppppq\u0000~\u0000)q"
+"\u0000~\u0002wq\u0000~\u0000\u0006pq\u0000~\u0000\u00f8pppppppppq\u0000~\u0000\u0010pppq\u0000~\u0001\u009bppppppppppppq\u0000~\u0002Zq\u0000~\u0000Kp"
+"ppppppq\u0000~\u0001\u0099pppppppppppppppq\u0000~\u0002\u00b4q\u0000~\u0001\u00dbpppppq\u0000~\u0001fpppppppppppppp"
+"pq\u0000~\u0002\u00acq\u0000~\u0001\u00d9pppppq\u0000~\u0000Fpppppppq\u0000~\u0000(q\u0000~\u0000Appppq\u0000~\u0000\u00f3pppppppppq\u0000~\u0001"
+"\u00c4q\u0000~\u0002\u00f3pq\u0000~\u0002\u00f8ppq\u0000~\u0000Epppppq\u0000~\u0000\u00f1pppppppppq\u0000~\u0002\u00f1pppppppppq\u0000~\u0000\u001fppp"
+"pppppppppppq\u0000~\u0001\u00bcppppppppppq\u0000~\u0000\'ppppq\u0000~\u0002\u00d3q\u0000~\u0003\u001eppppppppppppq\u0000~"
+"\u0003\u001cpppq\u0000~\u0001{q\u0000~\u0002Appq\u0000~\u0002\u00d1ppq\u0000~\u0003\u001bpq\u0000~\u0002Ippq\u0000~\u0002!pppppppppq\u0000~\u0001yq\u0000~\u0002"
+"?pppppppq\u0000~\u0002Gpppppq\u0000~\u0000\"ppppq\u0000~\u00000q\u0000~\u0000\u00ecpppq\u0000~\u0000\rppq\u0000~\u0000Cpppppppp"
+"pq\u0000~\u0001Cpppq\u0000~\u0000\u00c3ppppq\u0000~\u0000:q\u0000~\u0002zq\u0000~\u0000 q\u0000~\u0002(pppppq\u0000~\u00009pppq\u0000~\u0001Apppq"
+"\u0000~\u0000\u00c1pppq\u0000~\u0000@pppq\u0000~\u0002&ppppq\u0000~\u00001q\u0000~\u0000\u0016ppppppppppppq\u0000~\u0000\u0098q\u0000~\u00034pppp"
+"pppppppppppppppppppq\u0000~\u0001\u00f3ppppppppq\u0000~\u0000\u0014q\u0000~\u0000\u0011q\u0000~\u0000\u001eppppppppppq\u0000~"
+"\u0001\u00f1ppppq\u0000~\u0002\u00e4pppq\u0000~\u0001Oppppppppq\u0000~\u0000\u00ffq\u0000~\u0003Ipppppppppppq\u0000~\u0001Mppppppp"
+"pq\u0000~\u0000\u00fdq\u0000~\u0003Gpq\u0000~\u0000\u0017ppppppq\u0000~\u0000lpppppppppppq\u0000~\u0003\rq\u0000~\u0003!q\u0000~\u00030q\u0000~\u0003>q"
+"\u0000~\u0003Lq\u0000~\u0003[pppppq\u0000~\u0003\fq\u0000~\u0003 q\u0000~\u0002\u00ebq\u0000~\u0003/q\u0000~\u0003=q\u0000~\u0003Kq\u0000~\u0003Zppppppppppp"
+"pq\u0000~\u0001\u0084ppppq\u0000~\u0002\u00e9ppq\u0000~\u0002:q\u0000~\u0001\u00d3ppppppppq\u0000~\u0001<q\u0000~\u0002\u0091pppq\u0000~\u0001\u00e4pppq\u0000~\u0001"
+"tpq\u0000~\u0000?q\u0000~\u0002\u0011q\u0000~\u0001\u00d1pppppppppq\u0000~\u0002\u008fpppq\u0000~\u0000\tppppppppppppppppq\u0000~\u0000D"
+"pppppq\u0000~\u0002qpppppppppq\u0000~\u00007pppppppppppq\u0000~\u0002opppppppppq\u0000~\u0000$pppppp"
+"ppppppppppppppppppq\u0000~\u0002appppppppppq\u0000~\u0000\u0007ppq\u0000~\u0000=pppppppq\u0000~\u00006q\u0000~"
+"\u0002_pppppppppppppppppq\u0000~\u0002\u00a1pppq\u0000~\u0002Bppq\u0000~\u00005pppq\u0000~\u0000\u00c8pq\u0000~\u0002Jppppppp"
+"pq\u0000~\u0002\u009fpq\u0000~\u0000\u0012pppppppq\u0000~\u0001Vpq\u0000~\u0003Xppppppppq\u0000~\u0002iq\u0000~\u0002\u00c3pppq\u0000~\u0003Vppq\u0000"
+"~\u0002\u0018pppppppq\u0000~\u0003Upppppq\u0000~\u0002gq\u0000~\u0002\u00c1q\u0000~\u0003;pppppq\u0000~\u0002\u0016q\u0000~\u0000\u00b6pq\u0000~\u0001\u00c3q\u0000~\u0000"
+"4pppppq\u0000~\u0001\u00fdpppppq\u0000~\u00039ppq\u0000~\u0000\u0013pppq\u0000~\u0000\u00b4pq\u0000~\u0001\u00c1q\u0000~\u0003%pppppq\u0000~\u0001\u00fbppq"
+"\u0000~\u0002\u0081q\u0000~\u0001\u008cppppppq\u0000~\u0002\u0089ppppppq\u0000~\u0001\u00bbppppppq\u0000~\u0002\u007fpppq\u0000~\u0002\u0092pppq\u0000~\u0002\u0087pp"
+"pq\u0000~\u0001\u00f6ppq\u0000~\u0001\u00b9ppppq\u0000~\u0000\u000eppppq\u0000~\u0000\u001bq\u0000~\u0003\npppppppppq\u0000~\u0000\u000fppq\u0000~\u0003\bppp"
+"pppppppq\u0000~\u0003\u0005ppq\u0000~\u0002rppppppppppppppppppppppppppppppppppppq\u0000~\u0002Q"
+"q\u0000~\u0000%ppppppppq\u0000~\u0000/pppq\u0000~\u0002\u0099ppppppq\u0000~\u0002\u00cbq\u0000~\u0002Oq\u0000~\u0000\bppppppppppppq"
+"\u0000~\u0002\u0097ppppppq\u0000~\u0002\u00c9q\u0000~\u0001\u00ccpppppq\u0000~\u0000\u0018q\u0000~\u0002\u00bbpppq\u0000~\u0000,pppppq\u0000~\u0000*q\u0000~\u0001\u0093pp"
+"q\u0000~\u0001\u00b4ppppppq\u0000~\u0002\u00b9pq\u0000~\u0003\u0000q\u0000~\u0003Ppppppppq\u0000~\u0001\u0091q\u0000~\u0000#pppppppppppppppp"
+"pq\u0000~\u0002\u00e3ppppq\u0000~\u0000\fppppppppppppppppq\u0000~\u0002\u00e1ppq\u0000~\u00017ppppppppppppppppq"
+"\u0000~\u0001e"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class AvailabilityPeriodsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _AvailabilityPeriod = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.class);
                }

                public java.util.List getAvailabilityPeriod() {
                    return _AvailabilityPeriod;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _AvailabilityPeriod.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "AvailabilityPeriod");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriod.get(idx_0 ++)), "AvailabilityPeriod");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriod.get(idx_1 ++)), "AvailabilityPeriod");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriod.get(idx1 ++)), "AvailabilityPeriod");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _AvailabilityPeriod.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _AvailabilityPeriod.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002\u00af\u00034ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00af\u0003)sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00af\u0003&q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00af\u0003\u001bppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000rcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType"
+".ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType"
+"t\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000\u0001\u00c0\u00dc\u00e9ppsq"
+"\u0000~\u0000\u0014\u0001\u00c0\u00dc\u00deq\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002d"
+"tt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dL"
+"com/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.data"
+"type.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Bu"
+"iltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concr"
+"eteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImp"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv."
+"grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\npps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000"
+"\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3."
+"org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0012AvailabilityPeriodt"
+"\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006pa"
+"rentq\u0000~\u0000?[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0006\u0000"
+"\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpp"
+"ppq\u0000~\u0000\u0005ppq\u0000~\u0000#pppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000\u0013ppppppppppq\u0000~\u0000\u0012pppppppppppppppppp"
+"ppppq\u0000~\u0000\u0010pppppppppppppq\u0000~\u0000\bpppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class AvailabilityPeriodTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.util.Calendar _AvailableFrom;
                    protected java.util.Calendar _AvailableTo;
                    protected boolean has_AvailableUnits;
                    protected float _AvailableUnits;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType.class);
                    }

                    public java.util.Calendar getAvailableFrom() {
                        return _AvailableFrom;
                    }

                    public void setAvailableFrom(java.util.Calendar value) {
                        _AvailableFrom = value;
                    }

                    public java.util.Calendar getAvailableTo() {
                        return _AvailableTo;
                    }

                    public void setAvailableTo(java.util.Calendar value) {
                        _AvailableTo = value;
                    }

                    public float getAvailableUnits() {
                        return _AvailableUnits;
                    }

                    public void setAvailableUnits(float value) {
                        _AvailableUnits = value;
                        has_AvailableUnits = true;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_AvailableFrom!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableFrom");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableFrom), null), "AvailableFrom");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_AvailableTo!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableTo");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableTo), null), "AvailableTo");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (has_AvailableUnits) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableUnits");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _AvailableUnits)), "AvailableUnits");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\u00d0\u00c6#ppsq\u0000~\u0000\u0000\u0005I^\u00c8ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002i)!ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0002i)\u0016sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0002i)\u000bppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001Kn\u00d8ppsr\u0000%com.sun.msv.datatype"
+".xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.Dat"
+"eTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L"
+"\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor"
+";xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\bdateTimesr\u00005com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+",com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csq\u0000~\u0000\u0007\u0001\u001d\u00ba.ppsr\u0000 "
+"com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnam"
+"eClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001\u001d\u00ba#q\u0000~\u0000\u000epsq\u0000~\u0000\u0010\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datat"
+"ype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QNameq\u0000~\u0000 q\u0000~\u0000\"sq\u0000"
+"~\u0000#q\u0000~\u0000+q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.gram"
+"mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/X"
+"MLSchema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\r\u0001psq\u0000~\u0000-t\u0000\rAvailableFrom"
+"t\u0000$http://schemas.microsoft.com/projectq\u0000~\u00003sq\u0000~\u0000\u0007\u0002\u00e05\u00a2ppsq\u0000~"
+"\u0000\t\u0002\u00e05\u0097q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000\u0002\u00e05\u008cppq\u0000~\u0000\u0013sq\u0000~\u0000\u0007\u0001\u0094\u00c6\u00afppsq\u0000~\u0000&\u0001\u0094\u00c6\u00a4q\u0000~\u0000\u000epq\u0000"
+"~\u0000(sq\u0000~\u0000-q\u0000~\u00000q\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000-t\u0000\u000bAvailableToq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000\u0007"
+"\u0001\u0087gVppsq\u0000~\u0000\t\u0001\u0087gKq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000\u0001\u0087g@ppsq\u0000~\u0000\u0010\u0000Q\u00cf=ppsr\u0000\"com.sun.m"
+"sv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype"
+".xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005floatq\u0000~\u0000 q\u0000"
+"~\u0000\"sq\u0000~\u0000#q\u0000~\u0000Gq\u0000~\u0000\u001csq\u0000~\u0000\u0007\u00015\u0097\u00feppsq\u0000~\u0000&\u00015\u0097\u00f3q\u0000~\u0000\u000epq\u0000~\u0000(sq\u0000~\u0000-q\u0000"
+"~\u00000q\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000-t\u0000\u000eAvailableUnitsq\u0000~\u00007q\u0000~\u00003sr\u0000\"com.sun.ms"
+"v.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/ms"
+"v/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramma"
+"r.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000"
+"\u0006parentq\u0000~\u0000O[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000"
+"\u0000\u000b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000"
+"\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000\u000fppppppppppppppppq\u0000~\u0000:ppppq\u0000~\u0000\bppppppppq\u0000~\u0000Bpppppppq\u0000~\u00008"
+"pppppppppppq\u0000~\u0000\u0005pq\u0000~\u0000@pppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000%ppppppppppppq\u0000~\u0000Ipppq\u0000~\u0000;ppq\u0000~\u0000\u0006pppppp"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "----------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        state = 3;
                                        continue outer;
                                    case  9 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  6 :
                                        if (("AvailableUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  8 :
                                        if (("AvailableUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  9 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  5 :
                                        if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  2 :
                                        if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  9 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  9 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  7 :
                                            eatText1(value);
                                            state = 8;
                                            return ;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  9 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  1 :
                                            eatText2(value);
                                            state = 2;
                                            return ;
                                        case  4 :
                                            eatText3(value);
                                            state = 5;
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _AvailableUnits = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_AvailableUnits = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _AvailableFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _AvailableTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  1 :
                                    if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("AvailableUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                case  3 :
                                    if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  1 :
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  2 :
                                    if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  1 :
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  1 :
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  1 :
                                        _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, value)));
                                        return ;
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected boolean has_BCWP;
                protected float _BCWP;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected boolean has_Cost;
                protected float _Cost;
                protected java.math.BigInteger _Number;
                protected java.lang.String _Work;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType.class);
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public float getCost() {
                    return _Cost;
                }

                public void setCost(float value) {
                    _Cost = value;
                    has_Cost = true;
                }

                public java.math.BigInteger getNumber() {
                    return _Number;
                }

                public void setNumber(java.math.BigInteger value) {
                    _Number = value;
                }

                public java.lang.String getWork() {
                    return _Work;
                }

                public void setWork(java.lang.String value) {
                    _Work = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    context.startElement("http://schemas.microsoft.com/project", "Number");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Number)), "Number");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Work), "Work");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_Cost) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Cost)), "Cost");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000b\u0086W\u000eppsq\u0000~\u0000\u0000\n Ufppsq\u0000~\u0000\u0000\b"
+"3|~ppsq\u0000~\u0000\u0000\u0006\u0082K\u00c2ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000"
+"\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclare"
+"dAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u009d1+pp\u0000sq\u0000~\u0000\u0000\u0002\u009d1 ppsr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.xsd.IntegerTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatat"
+"ypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamesp"
+"aceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.L"
+"com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"
+".w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.dat"
+"atype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun."
+"msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z"
+"\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0014L\u0000\fconcre"
+"teTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetName"
+"q\u0000~\u0000\u0018xq\u0000~\u0000\u0017ppq\u0000~\u0000\u001f\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007decimalq\u0000~\u0000\u001fq\u0000~\u0000&t\u0000\u000efractionDigits\u0000\u0000"
+"\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L"
+"\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000\u001dcom.sun."
+"msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002(.\u0015ppsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nx"
+"q\u0000~\u0000\u0003\u0002(.\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000e\u0000"
+"\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015"
+"q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00006q\u0000~\u0000\u001bsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceUR"
+"Iq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~"
+"\u00001\u0001psq\u0000~\u00008t\u0000\u0006Numbert\u0000$http://schemas.microsoft.com/projectsq"
+"\u0000~\u0000-\u0003\u00e5\u001a\u0092ppsq\u0000~\u0000\t\u0003\u00e5\u001a\u0087q\u0000~\u00002p\u0000sq\u0000~\u0000\u0000\u0003\u00e5\u001a|ppsq\u0000~\u0000\u000e\u0001\u00c3<\u00f9ppsr\u0000%com.s"
+"un.msv.datatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\bdur"
+"ationq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Iq\u0000~\u0000\u001bsq\u0000~\u0000-\u0002!\u00dd~ppsq\u0000~\u0000/\u0002!\u00ddsq\u0000~\u00002pq"
+"\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004Workq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-\u0001\u00b10\u00b7pp"
+"sq\u0000~\u0000\t\u0001\u00b10\u00acq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000\u0001\u00b10\u00a1ppsq\u0000~\u0000\u000e\u0000Q\u00cf=ppsr\u0000\"com.sun.msv.dat"
+"atype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.F"
+"loatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005floatq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000"
+"~\u0000+q\u0000~\u0000Wq\u0000~\u0000\u001bsq\u0000~\u0000-\u0001_a_ppsq\u0000~\u0000/\u0001_aTq\u0000~\u00002pq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;q\u0000~"
+"\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004Costq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-\u0001\u00ec\u00d8\u00e3ppsq\u0000~\u0000\t\u0001\u00ec\u00d8\u00d8q\u0000~\u00002p\u0000s"
+"q\u0000~\u0000\u0000\u0001\u00ec\u00d8\u00cdppq\u0000~\u0000Ssq\u0000~\u0000-\u0001\u009b\t\u008bppsq\u0000~\u0000/\u0001\u009b\t\u0080q\u0000~\u00002pq\u0000~\u00003sq\u0000~\u00008q\u0000~\u0000;"
+"q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004BCWSq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-\u0001f\u0001\u00a3ppsq\u0000~\u0000\t\u0001f\u0001\u0098q\u0000~\u00002"
+"p\u0000sq\u0000~\u0000\u0000\u0001f\u0001\u008dppq\u0000~\u0000Ssq\u0000~\u0000-\u0001\u00142Kppsq\u0000~\u0000/\u0001\u00142@q\u0000~\u00002pq\u0000~\u00003sq\u0000~\u00008q\u0000"
+"~\u0000;q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004BCWPq\u0000~\u0000Bq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~"
+"\u0000o[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0012\u0000\u0000\u00009pur\u0000"
+"![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppp"
+"pppppppppppppppppppppq\u0000~\u0000\bpppppq\u0000~\u0000hppppppppq\u0000~\u0000.ppppppppq\u0000~"
+"\u0000apppq\u0000~\u0000fppq\u0000~\u0000Rpppppppppppppppq\u0000~\u0000\rpppppq\u0000~\u0000Ppppppppppppq\u0000"
+"~\u0000Kppppppppppq\u0000~\u0000Epppppq\u0000~\u0000\u0006pppppq\u0000~\u0000\u0007ppppq\u0000~\u0000ippppq\u0000~\u0000Cpppp"
+"pppppppppppppppq\u0000~\u0000Ypppppppppq\u0000~\u0000`ppppppppppppppppq\u0000~\u0000\u0005ppppq"
+"\u0000~\u0000^pppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  9 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  8 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  14 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  13 :
                                        eatText1(value);
                                        state = 14;
                                        return ;
                                    case  10 :
                                        eatText2(value);
                                        state = 11;
                                        return ;
                                    case  4 :
                                        eatText3(value);
                                        state = 5;
                                        return ;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  7 :
                                        eatText4(value);
                                        state = 8;
                                        return ;
                                    case  1 :
                                        eatText5(value);
                                        state = 2;
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWP = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWS = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Cost = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Cost = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Number = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected java.lang.String _Value;
                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public java.lang.String getValue() {
                    return _Value;
                }

                public void setValue(java.lang.String value) {
                    _Value = value;
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Value), "Value");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\b\u0005\u0085\u00f0ppsq\u0000~\u0000\u0000\u0006U\u00c7\u009cppsq\u0000~\u0000\u0000\u0004"
+"j]\u0005ppsq\u0000~\u0000\u0000\u0002;\u00a3Zppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001\u0001!ncppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom"
+".sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAtt"
+"ributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001!nXsr\u0000\u0011java.lang.Boolean\u00cd "
+"r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001!nMppsr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006pp"
+"sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFace"
+"tst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/St"
+"ring;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$C"
+"ollapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigi"
+"tsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataT"
+"ypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needV"
+"alueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"
+"datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001bppq\u0000~\u0000#\u0001\u0000sr"
+"\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft"
+"\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\t\u0000\u00ackBppsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000"
+"\u00ack7q\u0000~\u0000\u0010psq\u0000~\u0000\u0012\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#c"
+"om.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instances"
+"r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u00009t\u0000\u0003UIDt\u0000$http://schemas.microsoft."
+"com/projectq\u0000~\u0000?sq\u0000~\u0000\t\u0001\u001a4\u00f2ppsq\u0000~\u0000\u000b\u0001\u001a4\u00e7q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0001\u001a4\u00dcppsq\u0000"
+"~\u0000\u0012\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000"
+"/q\u0000~\u0000Jq\u0000~\u0000\u001fsq\u0000~\u0000\t\u0001\u0015\u00b1\"ppsq\u0000~\u00002\u0001\u0015\u00b1\u0017q\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000="
+"q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007FieldIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0002.\u00b9\u00a6ppsq\u0000~\u0000\u000b\u0002.\u00b9\u009bq\u0000~\u0000\u0010p\u0000"
+"sq\u0000~\u0000\u0000\u0002.\u00b9\u0090ppq\u0000~\u0000Gsq\u0000~\u0000\t\u0002*5\u00d6ppsq\u0000~\u00002\u0002*5\u00cbq\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000"
+"<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0001\u00ebj\u0092ppsq\u0000~\u0000\u000b\u0001\u00ebj\u0087q\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0001\u00ebj|ppq\u0000~\u0000\u0015sq\u0000~\u0000\t\u0001vgqppsq\u0000~\u00002\u0001vgfq\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009"
+"q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007ValueIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0001\u00af\u00beOppsq\u0000~\u0000\u000b\u0001"
+"\u00af\u00beDq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0001\u00af\u00be9ppsq\u0000~\u0000\u0012\u0000\u00cc\u00b7\u00f0ppsr\u0000)com.sun.msv.datatype.x"
+"sd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u0000"
+"9com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7"
+"Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000Cpq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011java"
+".util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.data"
+"type.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001cxr\u0000\u0010java.la"
+"ng.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000nt\u0000\u000241sq\u0000~\u0000nt\u0000\u000239sq\u0000~\u0000nt\u0000\u000236s"
+"q\u0000~\u0000nt\u0000\u00016sq\u0000~\u0000nt\u0000\u00015sq\u0000~\u0000nt\u0000\u000237sq\u0000~\u0000nt\u0000\u000211sq\u0000~\u0000nt\u0000\u000240sq\u0000~\u0000nt\u0000"
+"\u00014sq\u0000~\u0000nt\u0000\u000212sq\u0000~\u0000nt\u0000\u000252sq\u0000~\u0000nt\u0000\u00017sq\u0000~\u0000nt\u0000\u000238sq\u0000~\u0000nt\u0000\u000220sq\u0000~"
+"\u0000nt\u0000\u000242sq\u0000~\u0000nt\u0000\u000253sq\u0000~\u0000nt\u0000\u000243sq\u0000~\u0000nt\u0000\u000221sq\u0000~\u0000nt\u0000\u000210sq\u0000~\u0000nt\u0000\u0002"
+"35sq\u0000~\u0000nt\u0000\u000244sq\u0000~\u0000nt\u0000\u00019sq\u0000~\u0000nt\u0000\u000219sq\u0000~\u0000nt\u0000\u00018sq\u0000~\u0000nt\u0000\u000251xq\u0000~\u0000"
+".sq\u0000~\u0000/t\u0000\u000finteger-derivedq\u0000~\u0000Csq\u0000~\u0000\t\u0000\u00e3\u0006Dppsq\u0000~\u00002\u0000\u00e3\u00069q\u0000~\u0000\u0010pq\u0000"
+"~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000eDurationFormatq\u0000~\u0000Cq\u0000~\u0000?sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0000\u00ac[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u0000\u0013\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppq\u0000~\u0000Sppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u00001ppppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000\u0011pppppppq\u0000~\u0000^pppq\u0000~\u0000\bpppppq\u0000~\u0000\u00a6q\u0000~"
+"\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0000\nppq\u0000~\u0000Nppppppq\u0000~\u0000Fpppppppq\u0000~\u0000]pq\u0000~\u0000epq\u0000~\u0000Vp"
+"pppppq\u0000~\u0000Uppq\u0000~\u0000Dpppppppq\u0000~\u0000[pq\u0000~\u0000cpppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  12 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  8 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  14 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  7 :
                                        eatText2(value);
                                        state = 8;
                                        return ;
                                    case  13 :
                                        eatText3(value);
                                        state = 14;
                                        return ;
                                    case  4 :
                                        eatText4(value);
                                        state = 5;
                                        return ;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  10 :
                                        eatText5(value);
                                        state = 11;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Value = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType.class);
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u00f3|`ppsq\u0000~\u0000\u0000\u0002bZZppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00caP\u00cbppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00caP\u00c0sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0001\u00caP\u00b5ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype"
+".xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Inte"
+"gerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseType"
+"q\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTyp"
+"e;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019ppq\u0000~\u0000!\u0001\u0000sr\u0000#com.sun.msv.datatype.x"
+"sd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007decimalq\u0000~\u0000!q\u0000~\u0000(t\u0000\u000efr"
+"actionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u0007\u0001UM\u00aappsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001UM\u009fq\u0000~\u0000\u000epsq\u0000~\u0000\u0010\u0000\u0083\u00d3\u008appsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0005"
+"QNameq\u0000~\u0000!q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u00005q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.Simpl"
+"eNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr"
+"\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\r\u0001psq\u0000~"
+"\u00007t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000=sq\u0000~\u0000\u0007\u0000\u0098"
+"\t\u008appsq\u0000~\u0000\t\u0000\u0098\t\u007fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000\u0000\u0098\ttppsq\u0000~\u0000\u0010\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv"
+".datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001dt\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 \u0001q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000Hq\u0000~\u0000\u001dsq\u0000~\u0000\u0007\u0000\u0093\u0085\u00bapps"
+"q\u0000~\u00000\u0000\u0093\u0085\u00afq\u0000~\u0000\u000epq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007FieldIDq\u0000~"
+"\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0007\u0002\u0091\"\u0001ppsq\u0000~\u0000\t\u0002\u0091!\u00f6q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000\u0002\u0091!\u00ebppq\u0000~\u0000\u0013sq\u0000~\u0000\u0007\u0002"
+"\u001c\u001e\u00e0ppsq\u0000~\u00000\u0002\u001c\u001e\u00d5q\u0000~\u0000\u000epq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007Valu"
+"eIDq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHa"
+"sh;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8"
+"\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000Z[\u0000\u0005tablet\u0000![Lcom/sun/"
+"msv/grammar/Expression;xp\u0000\u0000\u0000\u000b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar."
+"Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppq\u0000~\u0000Bpppppppppp"
+"ppq\u0000~\u0000/pppppppppppppppppppppq\u0000~\u0000\u0005pppppppppq\u0000~\u0000\u000fppppppppppppp"
+"ppq\u0000~\u0000Tpppppq\u0000~\u0000\bpppppppppppppppppppppq\u0000~\u0000\u0006pppq\u0000~\u0000Sppppppppp"
+"ppppppppppppq\u0000~\u0000Qppppppppppppppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0000Lppppppq\u0000~\u0000Dpppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  7 :
                                        eatText1(value);
                                        state = 8;
                                        return ;
                                    case  9 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        eatText2(value);
                                        state = 2;
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  4 :
                                        eatText3(value);
                                        state = 5;
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class RatesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Rate = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.class);
                }

                public java.util.List getRate() {
                    return _Rate;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Rate.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Rate");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Rate.get(idx_0 ++)), "Rate");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Rate.get(idx_1 ++)), "Rate");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Rate.get(idx1 ++)), "Rate");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Rate.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Rate.size();
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp7\u0099\u00c7qppsr\u0000\u001fcom.sun.msv.gramm"
+"ar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00017\u0099\u00c7fsr\u0000\u0011java.lang.Boolean\u00cd r\u0080"
+"\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPatte"
+"rn\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;x"
+"r\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecla"
+"redAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cb"
+"ppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsr\u0000 com.sun.msv.grammar.OneOrMore"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003"
+"expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00ee&\u0017q\u0000~\u0000\tpsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\tpsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\b\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000Vcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType"
+".ResourceType.RatesType.RateTypet\u0000+http://java.sun.com/jaxb/"
+"xjc/dummy-elementssq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpsr\u0000\u001bcom.sun.ms"
+"v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"
+"tatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"
+"xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.su"
+"n.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq"
+"\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Coll"
+"apse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~"
+"\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Ratet\u0000$http://schemas.microsoft.com/projectsq\u0000~"
+"\u0000\u00005`m\u008bppsq\u0000~\u0000\u00065`m\u0080q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000"
+"\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q"
+"\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u00003\'\u0013\u00a5ppsq\u0000~\u0000\u00063\'\u0013\u009aq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006"
+"\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~"
+"\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000"
+"\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u00000\u00ed\u00b9\u00bfppsq\u0000~\u0000\u00060\u00ed\u00b9\u00b4q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6"
+"q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tp"
+"sq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099pps"
+"q\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000.\u00b4_\u00d9ppsq\u0000~\u0000\u0006.\u00b4_\u00ceq\u0000~"
+"\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000"
+"~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\""
+"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000,{\u0005\u00f3pp"
+"sq\u0000~\u0000\u0006,{\u0005\u00e8q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq"
+"\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000"
+";sq\u0000~\u0000\u0000*A\u00ac\rppsq\u0000~\u0000\u0006*A\u00ac\u0002q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq"
+"\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q"
+"\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000(\bR\'ppsq\u0000~\u0000\u0006(\bR\u001cq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000s"
+"q\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee"
+"&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3"
+"\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000%\u00ce\u00f8Appsq\u0000~\u0000\u0006%\u00ce\u00f86q\u0000~\u0000\tpsq\u0000~\u0000"
+"\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q"
+"\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K"
+"3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000#\u0095\u009e[ppsq\u0000~\u0000\u0006#\u0095"
+"\u009ePq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\""
+"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!"
+"q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000!"
+"\\Duppsq\u0000~\u0000\u0006!\\Djq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-"
+"pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000"
+"\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u001f\"\u00ea\u008fppsq\u0000~\u0000\u0006\u001f\"\u00ea\u0084q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y"
+"\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq"
+"\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u001c\u00e9\u0090\u00a9ppsq\u0000~\u0000\u0006\u001c\u00e9\u0090\u009eq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~"
+"\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000"
+"~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~"
+"\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u001a\u00b06\u00c3ppsq\u0000~\u0000\u0006\u001a\u00b06\u00b8q\u0000~\u0000\tp"
+"sq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011"
+"\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000"
+"~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0018v\u00dc\u00ddppsq\u0000"
+"~\u0000\u0006\u0018v\u00dc\u00d2q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000"
+"\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq"
+"\u0000~\u0000\u0000\u0016=\u0082\u00f7ppsq\u0000~\u0000\u0006\u0016=\u0082\u00ecq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000"
+"\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u0000"
+"8q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0014\u0004)\u0011ppsq\u0000~\u0000\u0006\u0014\u0004)\u0006q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~"
+"\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q"
+"\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000"
+"~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0011\u00ca\u00cf+ppsq\u0000~\u0000\u0006\u0011\u00ca\u00cf q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029"
+"Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000"
+"\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099p"
+"psq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u000f\u0091uEppsq\u0000~\u0000\u0006\u000f\u0091u:q"
+"\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"pps"
+"q\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~"
+"\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\rX\u001b_"
+"ppsq\u0000~\u0000\u0006\rX\u001bTq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000"
+"sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000"
+"~\u0000;sq\u0000~\u0000\u0000\u000b\u001e\u00c1yppsq\u0000~\u0000\u0006\u000b\u001e\u00c1nq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbpp"
+"sq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000"
+"(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\b\u00e5g\u0093ppsq\u0000~\u0000\u0006\b\u00e5g\u0088q\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp"
+"\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014"
+"\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001"
+"K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0006\u00ac\r\u00adppsq\u0000~\u0000\u0006\u0006\u00ac\r\u00a2q\u0000~\u0000\tpsq\u0000"
+"~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&"
+"\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000"
+"\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000\u0004r\u00b3\u00c7ppsq\u0000~\u0000\u0006"
+"\u0004r\u00b3\u00bcq\u0000~\u0000\tpsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee"
+"&\"ppsq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~"
+"\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000"
+"\u0000\u00029Y\u00e1ppsq\u0000~\u0000\n\u00029Y\u00d6q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006\u00029Y\u00cbppsq\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0000\u0000\u00ee&\"p"
+"psq\u0000~\u0000\u0011\u0000\u00ee&\u0017q\u0000~\u0000\tpsq\u0000~\u0000\u0014\u0000\u00ee&\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q"
+"\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001K3\u0099ppsq\u0000~\u0000\u0014\u0001K3\u008eq\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dsr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0001F[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u0000\u0095\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppq\u0000~\u0001Cq\u0000~\u00019q\u0000~\u0001.q\u0000~\u0001#q\u0000~\u0001\u0018q\u0000~\u0001\rq\u0000~\u0001\u0002q\u0000~\u0000\u00f7q\u0000~\u0000\u00ecq\u0000~\u0000\u00e1q\u0000~\u0000\u00d6q"
+"\u0000~\u0000#q\u0000~\u0000Gq\u0000~\u0000Rq\u0000~\u0000]q\u0000~\u0000hq\u0000~\u0000sq\u0000~\u0000~q\u0000~\u0000\u0089q\u0000~\u0000\u0094q\u0000~\u0000\u009fq\u0000~\u0000\u00aaq\u0000~\u0000\u00b5q"
+"\u0000~\u0000\u00c0q\u0000~\u0000\u00cbq\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000?ppppppppppq\u0000~\u0000>ppppppq\u0000~\u0000Jpppppppppp"
+"q\u0000~\u0000Ippppppq\u0000~\u0000Uppppppppppq\u0000~\u0000Tppppppq\u0000~\u0000`ppppppppppq\u0000~\u0000_ppp"
+"pppq\u0000~\u0000kppppppppppq\u0000~\u0000jq\u0000~\u0001@q\u0000~\u00016q\u0000~\u0001+q\u0000~\u0001 q\u0000~\u0001\u0015q\u0000~\u0001\nq\u0000~\u0000\u00ffq\u0000"
+"~\u0000\u00f4q\u0000~\u0000\u00e9q\u0000~\u0000\u00deq\u0000~\u0000\u0013q\u0000~\u0001?q\u0000~\u00015q\u0000~\u0001*q\u0000~\u0001\u001fq\u0000~\u0001\u0014q\u0000~\u0001\tq\u0000~\u0000\u00feq\u0000~\u0000\u00f3q\u0000"
+"~\u0000\u00e8q\u0000~\u0000\u00ddq\u0000~\u0000\u00d2q\u0000~\u0000Dq\u0000~\u0000Oq\u0000~\u0000Zq\u0000~\u0000\u0010q\u0000~\u0000Cq\u0000~\u0000Nq\u0000~\u0000Yq\u0000~\u0000dq\u0000~\u0000oq\u0000"
+"~\u0000zq\u0000~\u0000\u0085q\u0000~\u0000\u0090q\u0000~\u0000\u009bq\u0000~\u0000\u00a6q\u0000~\u0000\u00b1q\u0000~\u0000\u00bcq\u0000~\u0000\u00c7q\u0000~\u0000eq\u0000~\u0000pq\u0000~\u0000{q\u0000~\u0000\u0086q\u0000"
+"~\u0000\u0091q\u0000~\u0000\u009cq\u0000~\u0000\u00a7q\u0000~\u0000\u00b2q\u0000~\u0000\u00bdq\u0000~\u0000\u00c8q\u0000~\u0000\u00d3q\u0000~\u0000\u008cq\u0000~\u0000\u0081q\u0000~\u0000\u0080q\u0000~\u0000\u008bq\u0000~\u0000vq\u0000"
+"~\u0000uppppq\u0000~\u0000\u0097ppppppppppq\u0000~\u0000\u0096ppppppq\u0000~\u0000\u00a2ppppppppppq\u0000~\u0000\u00a1ppppppq"
+"\u0000~\u0000\u00adppppppppppq\u0000~\u0000\u00acppppppq\u0000~\u0000\u00b8ppppppppppq\u0000~\u0000\u00b7ppppppq\u0000~\u0000\u00c3pppp"
+"ppppppq\u0000~\u0000\u00c2ppppppq\u0000~\u0000\u00ceppppppppppq\u0000~\u0000\u00cdppppppq\u0000~\u0000\u00d9ppppppppppq\u0000"
+"~\u0000\u00d8ppppppq\u0000~\u0000\u00e4ppppppppppq\u0000~\u0000\u00e3ppppppq\u0000~\u0000\u00efppppppppppq\u0000~\u0000\u00eeppppp"
+"pq\u0000~\u0000\u00fappppppppppq\u0000~\u0000\u00f9ppppppq\u0000~\u0001\u0005ppppppppppq\u0000~\u0001\u0004ppppppq\u0000~\u0001\u0010pp"
+"ppppppppq\u0000~\u0001\u000fppppppq\u0000~\u0001\u001bppppppppppq\u0000~\u0001\u001appppppq\u0000~\u0001&pppppppppp"
+"q\u0000~\u0001%ppppppq\u0000~\u00011ppppppq\u0000~\u0001=q\u0000~\u00013q\u0000~\u0001(q\u0000~\u0001\u001dq\u0000~\u00010q\u0000~\u0001\u0012q\u0000~\u0001\u0007q\u0000~"
+"\u0000\u00fcq\u0000~\u0000\u00f1q\u0000~\u0000\u00e6q\u0000~\u0000\u00dbq\u0000~\u0000\u00d0q\u0000~\u0000\u000eq\u0000~\u0000Aq\u0000~\u0000Lq\u0000~\u0000Wq\u0000~\u0000bq\u0000~\u0000mq\u0000~\u0000xq\u0000~"
+"\u0000\u0083q\u0000~\u0000\u008eq\u0000~\u0000\u0099q\u0000~\u0001;q\u0000~\u0000\u00a4q\u0000~\u0000\u00afq\u0000~\u0000\u00baq\u0000~\u0000\u00c5pppppppppppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class RateTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.util.Calendar _RatesFrom;
                    protected java.math.BigDecimal _CostPerUse;
                    protected java.math.BigInteger _StandardRateFormat;
                    protected java.math.BigInteger _RateTable;
                    protected java.math.BigInteger _OvertimeRateFormat;
                    protected java.util.Calendar _RatesTo;
                    protected java.math.BigDecimal _OvertimeRate;
                    protected java.math.BigDecimal _StandardRate;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType.class);
                    }

                    public java.util.Calendar getRatesFrom() {
                        return _RatesFrom;
                    }

                    public void setRatesFrom(java.util.Calendar value) {
                        _RatesFrom = value;
                    }

                    public java.math.BigDecimal getCostPerUse() {
                        return _CostPerUse;
                    }

                    public void setCostPerUse(java.math.BigDecimal value) {
                        _CostPerUse = value;
                    }

                    public java.math.BigInteger getStandardRateFormat() {
                        return _StandardRateFormat;
                    }

                    public void setStandardRateFormat(java.math.BigInteger value) {
                        _StandardRateFormat = value;
                    }

                    public java.math.BigInteger getRateTable() {
                        return _RateTable;
                    }

                    public void setRateTable(java.math.BigInteger value) {
                        _RateTable = value;
                    }

                    public java.math.BigInteger getOvertimeRateFormat() {
                        return _OvertimeRateFormat;
                    }

                    public void setOvertimeRateFormat(java.math.BigInteger value) {
                        _OvertimeRateFormat = value;
                    }

                    public java.util.Calendar getRatesTo() {
                        return _RatesTo;
                    }

                    public void setRatesTo(java.util.Calendar value) {
                        _RatesTo = value;
                    }

                    public java.math.BigDecimal getOvertimeRate() {
                        return _OvertimeRate;
                    }

                    public void setOvertimeRate(java.math.BigDecimal value) {
                        _OvertimeRate = value;
                    }

                    public java.math.BigDecimal getStandardRate() {
                        return _StandardRate;
                    }

                    public void setStandardRate(java.math.BigDecimal value) {
                        _StandardRate = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "RatesFrom");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _RatesFrom), null), "RatesFrom");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        context.startElement("http://schemas.microsoft.com/project", "RatesTo");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _RatesTo), null), "RatesTo");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (_RateTable!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "RateTable");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _RateTable)), "RateTable");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_StandardRate!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "StandardRate");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _StandardRate)), "StandardRate");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_StandardRateFormat!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "StandardRateFormat");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StandardRateFormat)), "StandardRateFormat");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_OvertimeRate!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "OvertimeRate");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeRate)), "OvertimeRate");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_OvertimeRateFormat!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "OvertimeRateFormat");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _OvertimeRateFormat)), "OvertimeRateFormat");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_CostPerUse!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "CostPerUse");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _CostPerUse)), "CostPerUse");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0012\u00c4\u00b5\u00aeppsq\u0000~\u0000\u0000\u0010\u00c7\u00d3Nppsq\u0000~\u0000\u0000\u000e"
+"\u00abnhppsq\u0000~\u0000\u0000\u000b\u00d1\n\u00e0ppsq\u0000~\u0000\u0000\nE\u0012jppsq\u0000~\u0000\u0000\u0007\u0098\u00ac\u0011ppsq\u0000~\u0000\u0000\u00050\u009f\u008bppsr\u0000\'com"
+".sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst"
+"\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Ele"
+"mentExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMod"
+"elq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002]\u00c1\u00adpp\u0000sq\u0000~\u0000\u0000\u0002]\u00c1\u00a2ppsr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001Kn\u00d8ppsr"
+"\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.su"
+"n.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/St"
+"ring;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\bdateTimesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullS"
+"etExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.Stri"
+"ngPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000"
+"\u001eq\u0000~\u0000\u001dsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u0012R\u00c5"
+"ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002"
+"L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003\u0001\u0012R\u00basr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z"
+"\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0011\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0005QNameq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u0000/q\u0000~\u0000\u001dsr\u0000"
+"#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanc"
+"esr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000*\u0001psq\u0000~\u00001t\u0000\tRatesFromt\u0000$http://schemas.mi"
+"crosoft.com/projectsq\u0000~\u0000\f\u0002\u00d2\u00dd\u00d9pp\u0000sq\u0000~\u0000\u0000\u0002\u00d2\u00dd\u00ceppq\u0000~\u0000\u0014sq\u0000~\u0000&\u0001\u0087n\u00f1p"
+"psq\u0000~\u0000(\u0001\u0087n\u00e6q\u0000~\u0000+pq\u0000~\u0000,sq\u0000~\u00001q\u0000~\u00004q\u0000~\u00005q\u0000~\u00007sq\u0000~\u00001t\u0000\u0007RatesToq"
+"\u0000~\u0000;sq\u0000~\u0000&\u0002h\f\u0081ppsq\u0000~\u0000\f\u0002h\fvq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000\u0002h\fkppsq\u0000~\u0000\u0011\u0000s\u00f7qppsr\u0000"
+")com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valu"
+"est\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWit"
+"hValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueChec"
+"kFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;"
+"L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\t"
+"facetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019q\u0000~\u0000;pq\u0000~\u0000!\u0000\u0000sr\u0000$com.sun.msv.datatype.xs"
+"d.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Integer"
+"DerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Kxq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007intege"
+"rq\u0000~\u0000!sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexica"
+"lConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Jppq\u0000~\u0000!\u0001\u0000sr\u0000#com.sun.msv.da"
+"tatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007decimalq\u0000~\u0000!q\u0000"
+"~\u0000Vt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Pt\u0000\u000benumerationsr\u0000\u0011java.util.Has"
+"hSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd."
+"IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001axr\u0000\u0010java.lang.Number"
+"\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000\\t\u0000\u00012sq\u0000~\u0000\\t\u0000\u00010sq\u0000~\u0000\\t\u0000\u00014sq\u0000~\u0000\\t\u0000\u00011xq\u0000"
+"~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000;sq\u0000~\u0000&\u0001\u00f4\u0014\u00f5ppsq\u0000~\u0000(\u0001\u00f4\u0014\u00eaq\u0000~\u0000+p"
+"q\u0000~\u0000,sq\u0000~\u00001q\u0000~\u00004q\u0000~\u00005q\u0000~\u00007sq\u0000~\u00001t\u0000\tRateTableq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&"
+"\u0002\u00acfTppsq\u0000~\u0000\f\u0002\u00acfIq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000\u0002\u00acf>ppsq\u0000~\u0000\u0011\u0000\u00a9P\u0018ppq\u0000~\u0000Vq\u0000~\u0000#sq\u0000"
+"~\u0000$q\u0000~\u0000Wq\u0000~\u0000\u001dsq\u0000~\u0000&\u0002\u0003\u0016!ppsq\u0000~\u0000(\u0002\u0003\u0016\u0016q\u0000~\u0000+pq\u0000~\u0000,sq\u0000~\u00001q\u0000~\u00004q\u0000~"
+"\u00005q\u0000~\u00007sq\u0000~\u00001t\u0000\fStandardRateq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&\u0001\u008b\u00f8qppsq\u0000~\u0000\f\u0001\u008b\u00f8f"
+"q\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000\u0001\u008b\u00f8[ppsq\u0000~\u0000\u0011\u0000<ERppsq\u0000~\u0000Gq\u0000~\u0000;pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000P"
+"q\u0000~\u0000Ysq\u0000~\u0000Zw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000\\t\u0000\u00013sq\u0000~\u0000\\t\u0000\u00015sq\u0000~\u0000\\t\u0000\u00017sq\u0000~\u0000"
+"\\t\u0000\u00012sq\u0000~\u0000\\t\u0000\u00014sq\u0000~\u0000\\t\u0000\u00011xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000;"
+"sq\u0000~\u0000&\u0001O\u00b3\u0004ppsq\u0000~\u0000(\u0001O\u00b2\u00f9q\u0000~\u0000+pq\u0000~\u0000,sq\u0000~\u00001q\u0000~\u00004q\u0000~\u00005q\u0000~\u00007sq\u0000~\u00001"
+"t\u0000\u0012StandardRateFormatq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&\u0002\u00dac\u0083ppsq\u0000~\u0000\f\u0002\u00dacxq\u0000~\u0000+p\u0000"
+"sq\u0000~\u0000\u0000\u0002\u00dacmppq\u0000~\u0000rsq\u0000~\u0000&\u00021\u0013Pppsq\u0000~\u0000(\u00021\u0013Eq\u0000~\u0000+pq\u0000~\u0000,sq\u0000~\u00001q\u0000~\u0000"
+"4q\u0000~\u00005q\u0000~\u00007sq\u0000~\u00001t\u0000\fOvertimeRateq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&\u0002\u001cd\u00e1ppsq\u0000~\u0000\f"
+"\u0002\u001cd\u00d6q\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000\u0002\u001cd\u00cbppsq\u0000~\u0000\u0011\u0000\u008f\u00f0\u00dappsq\u0000~\u0000Gq\u0000~\u0000;pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000Pq"
+"\u0000~\u0000Pq\u0000~\u0000Ysq\u0000~\u0000Zw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000\\t\u0000\u00013sq\u0000~\u0000\\t\u0000\u00015sq\u0000~\u0000\\t\u0000\u00017s"
+"q\u0000~\u0000\\t\u0000\u00012sq\u0000~\u0000\\t\u0000\u00014sq\u0000~\u0000\\t\u0000\u00011xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq"
+"\u0000~\u0000;sq\u0000~\u0000&\u0001\u008cs\u00ecppsq\u0000~\u0000(\u0001\u008cs\u00e1q\u0000~\u0000+pq\u0000~\u0000,sq\u0000~\u00001q\u0000~\u00004q\u0000~\u00005q\u0000~\u00007sq"
+"\u0000~\u00001t\u0000\u0012OvertimeRateFormatq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&\u0001\u00fc\u00e2[ppsq\u0000~\u0000\f\u0001\u00fc\u00e2Pq\u0000~"
+"\u0000+p\u0000sq\u0000~\u0000\u0000\u0001\u00fc\u00e2Eppq\u0000~\u0000rsq\u0000~\u0000&\u0001S\u0092(ppsq\u0000~\u0000(\u0001S\u0092\u001dq\u0000~\u0000+pq\u0000~\u0000,sq\u0000~\u00001"
+"q\u0000~\u00004q\u0000~\u00005q\u0000~\u00007sq\u0000~\u00001t\u0000\nCostPerUseq\u0000~\u0000;q\u0000~\u00007sr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006p"
+"arentq\u0000~\u0000\u00bc[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u001d"
+"\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfq"
+"\u0000~\u0000\u0005ppppppppppq\u0000~\u0000\u00aepppppppppppq\u0000~\u0000\u009cpppppq\u0000~\u0000\u0007ppq\u0000~\u0000\u0094pppppppp"
+"pppq\u0000~\u0000=q\u0000~\u0000\u009appppq\u0000~\u0000\tppq\u0000~\u0000\u008dq\u0000~\u0000\u0092ppq\u0000~\u0000jpppppppppppppppq\u0000~\u0000"
+"\u0010pppq\u0000~\u0000qpq\u0000~\u0000\u0006ppppq\u0000~\u0000{q\u0000~\u0000\u0095q\u0000~\u0000\u00b5ppppppppppppq\u0000~\u0000oppppppq\u0000~"
+"\u0000yq\u0000~\u0000\u00b3pppppppppppppppppppppq\u0000~\u0000tpppppppq\u0000~\u0000\nq\u0000~\u0000\u00b6pppppq\u0000~\u0000\u000b"
+"ppppq\u0000~\u0000>pppppppq\u0000~\u0000Epppq\u0000~\u0000\bppppppppppppppppq\u0000~\u0000\'q\u0000~\u0000Cppppp"
+"pppppp"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------------------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  21 :
                                        if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 22;
                                            return ;
                                        }
                                        state = 24;
                                        continue outer;
                                    case  3 :
                                        if (("RatesTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        break;
                                    case  18 :
                                        if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 19;
                                            return ;
                                        }
                                        state = 21;
                                        continue outer;
                                    case  6 :
                                        if (("RateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        if (("RatesFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                    case  12 :
                                        if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 13;
                                            return ;
                                        }
                                        state = 15;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  9 :
                                        if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 10;
                                            return ;
                                        }
                                        state = 12;
                                        continue outer;
                                    case  15 :
                                        if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 16;
                                            return ;
                                        }
                                        state = 18;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  2 :
                                        if (("RatesFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  17 :
                                        if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 18;
                                            return ;
                                        }
                                        break;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  5 :
                                        if (("RatesTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  8 :
                                        if (("RateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  20 :
                                        if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 21;
                                            return ;
                                        }
                                        break;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  14 :
                                        if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 15;
                                            return ;
                                        }
                                        break;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  11 :
                                        if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  23 :
                                        if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 24;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  10 :
                                            eatText1(value);
                                            state = 11;
                                            return ;
                                        case  21 :
                                            state = 24;
                                            continue outer;
                                        case  18 :
                                            state = 21;
                                            continue outer;
                                        case  7 :
                                            eatText2(value);
                                            state = 8;
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  22 :
                                            eatText3(value);
                                            state = 23;
                                            return ;
                                        case  12 :
                                            state = 15;
                                            continue outer;
                                        case  24 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  16 :
                                            eatText4(value);
                                            state = 17;
                                            return ;
                                        case  19 :
                                            eatText5(value);
                                            state = 20;
                                            return ;
                                        case  4 :
                                            eatText6(value);
                                            state = 5;
                                            return ;
                                        case  13 :
                                            eatText7(value);
                                            state = 14;
                                            return ;
                                        case  1 :
                                            eatText8(value);
                                            state = 2;
                                            return ;
                                        case  9 :
                                            state = 12;
                                            continue outer;
                                        case  15 :
                                            state = 18;
                                            continue outer;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _StandardRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _RateTable = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _CostPerUse = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _OvertimeRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText5(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _OvertimeRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText6(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _RatesTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText7(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _StandardRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText8(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _RatesFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "---");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    if (("RatesFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _Rate.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    if (("Rate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("Rate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 136;
                                    return ;
                                }
                                state = 138;
                                continue outer;
                            case  129 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 130;
                                    return ;
                                }
                                state = 132;
                                continue outer;
                            case  198 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 199;
                                    return ;
                                }
                                state = 201;
                                continue outer;
                            case  147 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 148;
                                    return ;
                                }
                                state = 150;
                                continue outer;
                            case  69 :
                                if (("CanLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 70;
                                    return ;
                                }
                                state = 72;
                                continue outer;
                            case  54 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 55;
                                    return ;
                                }
                                state = 57;
                                continue outer;
                            case  12 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  177 :
                                if (("ActiveDirectoryGUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 178;
                                    return ;
                                }
                                state = 180;
                                continue outer;
                            case  45 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 46;
                                    return ;
                                }
                                state = 48;
                                continue outer;
                            case  81 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 82;
                                    return ;
                                }
                                state = 84;
                                continue outer;
                            case  42 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 43;
                                    return ;
                                }
                                state = 45;
                                continue outer;
                            case  156 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 157;
                                    return ;
                                }
                                state = 159;
                                continue outer;
                            case  93 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 94;
                                    return ;
                                }
                                state = 96;
                                continue outer;
                            case  195 :
                                if (("Rates" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 196;
                                    return ;
                                }
                                state = 198;
                                continue outer;
                            case  183 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 184;
                                    return ;
                                }
                                state = 186;
                                continue outer;
                            case  141 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 142;
                                    return ;
                                }
                                state = 144;
                                continue outer;
                            case  153 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 154;
                                    return ;
                                }
                                state = 156;
                                continue outer;
                            case  123 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 124;
                                    return ;
                                }
                                state = 126;
                                continue outer;
                            case  48 :
                                if (("MaxUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 49;
                                    return ;
                                }
                                state = 51;
                                continue outer;
                            case  192 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 190;
                                    return ;
                                }
                                if (("AvailabilityPeriods" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 193;
                                    return ;
                                }
                                state = 195;
                                continue outer;
                            case  24 :
                                if (("MaterialLabel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  159 :
                                if (("IsGeneric" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 160;
                                    return ;
                                }
                                state = 162;
                                continue outer;
                            case  90 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 91;
                                    return ;
                                }
                                state = 93;
                                continue outer;
                            case  196 :
                                if (("Rate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  51 :
                                if (("PeakUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 52;
                                    return ;
                                }
                                state = 54;
                                continue outer;
                            case  9 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  102 :
                                if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 103;
                                    return ;
                                }
                                state = 105;
                                continue outer;
                            case  150 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 151;
                                    return ;
                                }
                                state = 153;
                                continue outer;
                            case  36 :
                                if (("EmailAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 37;
                                    return ;
                                }
                                state = 39;
                                continue outer;
                            case  66 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 67;
                                    return ;
                                }
                                state = 69;
                                continue outer;
                            case  84 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 85;
                                    return ;
                                }
                                state = 87;
                                continue outer;
                            case  171 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 172;
                                    return ;
                                }
                                state = 174;
                                continue outer;
                            case  39 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 40;
                                    return ;
                                }
                                state = 42;
                                continue outer;
                            case  120 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 121;
                                    return ;
                                }
                                state = 123;
                                continue outer;
                            case  30 :
                                if (("Group" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  187 :
                                if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.class), 188, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  168 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 169;
                                    return ;
                                }
                                state = 171;
                                continue outer;
                            case  6 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  21 :
                                if (("NTAccount" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  114 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 115;
                                    return ;
                                }
                                state = 117;
                                continue outer;
                            case  99 :
                                if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 100;
                                    return ;
                                }
                                state = 102;
                                continue outer;
                            case  105 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 106;
                                    return ;
                                }
                                state = 108;
                                continue outer;
                            case  117 :
                                if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 118;
                                    return ;
                                }
                                state = 120;
                                continue outer;
                            case  60 :
                                if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 61;
                                    return ;
                                }
                                state = 63;
                                continue outer;
                            case  190 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  165 :
                                if (("IsEnterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 166;
                                    return ;
                                }
                                state = 168;
                                continue outer;
                            case  162 :
                                if (("IsInactive" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 163;
                                    return ;
                                }
                                state = 165;
                                continue outer;
                            case  126 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 127;
                                    return ;
                                }
                                state = 129;
                                continue outer;
                            case  186 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 184;
                                    return ;
                                }
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 187;
                                    return ;
                                }
                                state = 189;
                                continue outer;
                            case  138 :
                                if (("SV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 139;
                                    return ;
                                }
                                state = 141;
                                continue outer;
                            case  63 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 64;
                                    return ;
                                }
                                state = 66;
                                continue outer;
                            case  33 :
                                if (("WorkGroup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  193 :
                                if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  199 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 200, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 200, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  27 :
                                if (("Code" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  3 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  144 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 145;
                                    return ;
                                }
                                state = 147;
                                continue outer;
                            case  180 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 181;
                                    return ;
                                }
                                state = 183;
                                continue outer;
                            case  184 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  108 :
                                if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 109;
                                    return ;
                                }
                                state = 111;
                                continue outer;
                            case  18 :
                                if (("Phonetics" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  87 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 88;
                                    return ;
                                }
                                state = 90;
                                continue outer;
                            case  132 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 133;
                                    return ;
                                }
                                state = 135;
                                continue outer;
                            case  96 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 97;
                                    return ;
                                }
                                state = 99;
                                continue outer;
                            case  189 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 187;
                                    return ;
                                }
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 190;
                                    return ;
                                }
                                state = 192;
                                continue outer;
                            case  72 :
                                if (("AccrueAt" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 73;
                                    return ;
                                }
                                state = 75;
                                continue outer;
                            case  57 :
                                if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 58;
                                    return ;
                                }
                                state = 60;
                                continue outer;
                            case  111 :
                                if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 112;
                                    return ;
                                }
                                state = 114;
                                continue outer;
                            case  75 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 76;
                                    return ;
                                }
                                state = 78;
                                continue outer;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  174 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 175;
                                    return ;
                                }
                                state = 177;
                                continue outer;
                            case  201 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 199;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  15 :
                                if (("Initials" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  78 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 79;
                                    return ;
                                }
                                state = 81;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                state = 138;
                                continue outer;
                            case  83 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 84;
                                    return ;
                                }
                                break;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  116 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 117;
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  20 :
                                if (("Phonetics" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  89 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 90;
                                    return ;
                                }
                                break;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  65 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 66;
                                    return ;
                                }
                                break;
                            case  95 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 96;
                                    return ;
                                }
                                break;
                            case  35 :
                                if (("WorkGroup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  56 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 57;
                                    return ;
                                }
                                break;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  38 :
                                if (("EmailAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 39;
                                    return ;
                                }
                                break;
                            case  41 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 42;
                                    return ;
                                }
                                break;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  196 :
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname));
                                return ;
                            case  17 :
                                if (("Initials" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  53 :
                                if (("PeakUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 54;
                                    return ;
                                }
                                break;
                            case  77 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 78;
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  32 :
                                if (("Group" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  161 :
                                if (("IsGeneric" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 162;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("Code" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  8 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  170 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 171;
                                    return ;
                                }
                                break;
                            case  176 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 177;
                                    return ;
                                }
                                break;
                            case  182 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 183;
                                    return ;
                                }
                                break;
                            case  158 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 159;
                                    return ;
                                }
                                break;
                            case  191 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 192;
                                    return ;
                                }
                                break;
                            case  167 :
                                if (("IsEnterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 168;
                                    return ;
                                }
                                break;
                            case  110 :
                                if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 111;
                                    return ;
                                }
                                break;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  197 :
                                if (("Rates" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 198;
                                    return ;
                                }
                                break;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  164 :
                                if (("IsInactive" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 165;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  149 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 150;
                                    return ;
                                }
                                break;
                            case  80 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 81;
                                    return ;
                                }
                                break;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  14 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  50 :
                                if (("MaxUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 51;
                                    return ;
                                }
                                break;
                            case  44 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 45;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  128 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 129;
                                    return ;
                                }
                                break;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  119 :
                                if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 120;
                                    return ;
                                }
                                break;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  190 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname)));
                                return ;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  23 :
                                if (("NTAccount" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  92 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 93;
                                    return ;
                                }
                                break;
                            case  134 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 135;
                                    return ;
                                }
                                break;
                            case  68 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 69;
                                    return ;
                                }
                                break;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  185 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 186;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  200 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 201;
                                    return ;
                                }
                                break;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  193 :
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname));
                                return ;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  137 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 138;
                                    return ;
                                }
                                break;
                            case  104 :
                                if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 105;
                                    return ;
                                }
                                break;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  155 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 156;
                                    return ;
                                }
                                break;
                            case  107 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 108;
                                    return ;
                                }
                                break;
                            case  131 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 132;
                                    return ;
                                }
                                break;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  184 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname)));
                                return ;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  125 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 126;
                                    return ;
                                }
                                break;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  74 :
                                if (("AccrueAt" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 75;
                                    return ;
                                }
                                break;
                            case  59 :
                                if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 60;
                                    return ;
                                }
                                break;
                            case  62 :
                                if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 63;
                                    return ;
                                }
                                break;
                            case  146 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 147;
                                    return ;
                                }
                                break;
                            case  194 :
                                if (("AvailabilityPeriods" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 195;
                                    return ;
                                }
                                break;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  122 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 123;
                                    return ;
                                }
                                break;
                            case  152 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 153;
                                    return ;
                                }
                                break;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  140 :
                                if (("SV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 141;
                                    return ;
                                }
                                break;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  113 :
                                if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 114;
                                    return ;
                                }
                                break;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  47 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 48;
                                    return ;
                                }
                                break;
                            case  86 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 87;
                                    return ;
                                }
                                break;
                            case  143 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 144;
                                    return ;
                                }
                                break;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  98 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 99;
                                    return ;
                                }
                                break;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  71 :
                                if (("CanLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 72;
                                    return ;
                                }
                                break;
                            case  188 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 189;
                                    return ;
                                }
                                break;
                            case  173 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 174;
                                    return ;
                                }
                                break;
                            case  26 :
                                if (("MaterialLabel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  201 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  101 :
                                if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 102;
                                    return ;
                                }
                                break;
                            case  179 :
                                if (("ActiveDirectoryGUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 180;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                state = 138;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  196 :
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname));
                                return ;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  190 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname)));
                                return ;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  193 :
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname));
                                return ;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  184 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname)));
                                return ;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  201 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                state = 138;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  196 :
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname));
                                return ;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  190 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname)));
                                return ;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  193 :
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname));
                                return ;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  184 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname)));
                                return ;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  201 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  76 :
                                    eatText1(value);
                                    state = 77;
                                    return ;
                                case  135 :
                                    state = 138;
                                    continue outer;
                                case  129 :
                                    state = 132;
                                    continue outer;
                                case  198 :
                                    state = 201;
                                    continue outer;
                                case  147 :
                                    state = 150;
                                    continue outer;
                                case  69 :
                                    state = 72;
                                    continue outer;
                                case  54 :
                                    state = 57;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  177 :
                                    state = 180;
                                    continue outer;
                                case  45 :
                                    state = 48;
                                    continue outer;
                                case  81 :
                                    state = 84;
                                    continue outer;
                                case  67 :
                                    eatText2(value);
                                    state = 68;
                                    return ;
                                case  70 :
                                    eatText3(value);
                                    state = 71;
                                    return ;
                                case  42 :
                                    state = 45;
                                    continue outer;
                                case  156 :
                                    state = 159;
                                    continue outer;
                                case  93 :
                                    state = 96;
                                    continue outer;
                                case  148 :
                                    eatText4(value);
                                    state = 149;
                                    return ;
                                case  19 :
                                    eatText5(value);
                                    state = 20;
                                    return ;
                                case  195 :
                                    state = 198;
                                    continue outer;
                                case  121 :
                                    eatText6(value);
                                    state = 122;
                                    return ;
                                case  183 :
                                    state = 186;
                                    continue outer;
                                case  141 :
                                    state = 144;
                                    continue outer;
                                case  153 :
                                    state = 156;
                                    continue outer;
                                case  123 :
                                    state = 126;
                                    continue outer;
                                case  48 :
                                    state = 51;
                                    continue outer;
                                case  64 :
                                    eatText7(value);
                                    state = 65;
                                    return ;
                                case  118 :
                                    eatText8(value);
                                    state = 119;
                                    return ;
                                case  192 :
                                    state = 195;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  159 :
                                    state = 162;
                                    continue outer;
                                case  90 :
                                    state = 93;
                                    continue outer;
                                case  196 :
                                    _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, value));
                                    return ;
                                case  51 :
                                    state = 54;
                                    continue outer;
                                case  43 :
                                    eatText9(value);
                                    state = 44;
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  102 :
                                    state = 105;
                                    continue outer;
                                case  150 :
                                    state = 153;
                                    continue outer;
                                case  82 :
                                    eatText10(value);
                                    state = 83;
                                    return ;
                                case  4 :
                                    eatText11(value);
                                    state = 5;
                                    return ;
                                case  175 :
                                    eatText12(value);
                                    state = 176;
                                    return ;
                                case  178 :
                                    eatText13(value);
                                    state = 179;
                                    return ;
                                case  10 :
                                    eatText14(value);
                                    state = 11;
                                    return ;
                                case  36 :
                                    state = 39;
                                    continue outer;
                                case  115 :
                                    eatText15(value);
                                    state = 116;
                                    return ;
                                case  166 :
                                    eatText16(value);
                                    state = 167;
                                    return ;
                                case  66 :
                                    state = 69;
                                    continue outer;
                                case  49 :
                                    eatText17(value);
                                    state = 50;
                                    return ;
                                case  94 :
                                    eatText18(value);
                                    state = 95;
                                    return ;
                                case  61 :
                                    eatText19(value);
                                    state = 62;
                                    return ;
                                case  84 :
                                    state = 87;
                                    continue outer;
                                case  171 :
                                    state = 174;
                                    continue outer;
                                case  39 :
                                    state = 42;
                                    continue outer;
                                case  124 :
                                    eatText20(value);
                                    state = 125;
                                    return ;
                                case  120 :
                                    state = 123;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  106 :
                                    eatText21(value);
                                    state = 107;
                                    return ;
                                case  139 :
                                    eatText22(value);
                                    state = 140;
                                    return ;
                                case  168 :
                                    state = 171;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  114 :
                                    state = 117;
                                    continue outer;
                                case  99 :
                                    state = 102;
                                    continue outer;
                                case  105 :
                                    state = 108;
                                    continue outer;
                                case  117 :
                                    state = 120;
                                    continue outer;
                                case  60 :
                                    state = 63;
                                    continue outer;
                                case  190 :
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, value)));
                                    return ;
                                case  7 :
                                    eatText23(value);
                                    state = 8;
                                    return ;
                                case  165 :
                                    state = 168;
                                    continue outer;
                                case  162 :
                                    state = 165;
                                    continue outer;
                                case  126 :
                                    state = 129;
                                    continue outer;
                                case  157 :
                                    eatText24(value);
                                    state = 158;
                                    return ;
                                case  37 :
                                    eatText25(value);
                                    state = 38;
                                    return ;
                                case  186 :
                                    state = 189;
                                    continue outer;
                                case  181 :
                                    eatText26(value);
                                    state = 182;
                                    return ;
                                case  97 :
                                    eatText27(value);
                                    state = 98;
                                    return ;
                                case  103 :
                                    eatText28(value);
                                    state = 104;
                                    return ;
                                case  138 :
                                    state = 141;
                                    continue outer;
                                case  63 :
                                    state = 66;
                                    continue outer;
                                case  172 :
                                    eatText29(value);
                                    state = 173;
                                    return ;
                                case  16 :
                                    eatText30(value);
                                    state = 17;
                                    return ;
                                case  154 :
                                    eatText31(value);
                                    state = 155;
                                    return ;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  163 :
                                    eatText32(value);
                                    state = 164;
                                    return ;
                                case  193 :
                                    _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, value));
                                    return ;
                                case  58 :
                                    eatText33(value);
                                    state = 59;
                                    return ;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  28 :
                                    eatText34(value);
                                    state = 29;
                                    return ;
                                case  145 :
                                    eatText35(value);
                                    state = 146;
                                    return ;
                                case  144 :
                                    state = 147;
                                    continue outer;
                                case  91 :
                                    eatText36(value);
                                    state = 92;
                                    return ;
                                case  180 :
                                    state = 183;
                                    continue outer;
                                case  184 :
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, value)));
                                    return ;
                                case  151 :
                                    eatText37(value);
                                    state = 152;
                                    return ;
                                case  55 :
                                    eatText38(value);
                                    state = 56;
                                    return ;
                                case  108 :
                                    state = 111;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  88 :
                                    eatText39(value);
                                    state = 89;
                                    return ;
                                case  87 :
                                    state = 90;
                                    continue outer;
                                case  13 :
                                    eatText40(value);
                                    state = 14;
                                    return ;
                                case  73 :
                                    eatText41(value);
                                    state = 74;
                                    return ;
                                case  160 :
                                    eatText42(value);
                                    state = 161;
                                    return ;
                                case  112 :
                                    eatText43(value);
                                    state = 113;
                                    return ;
                                case  132 :
                                    state = 135;
                                    continue outer;
                                case  96 :
                                    state = 99;
                                    continue outer;
                                case  109 :
                                    eatText44(value);
                                    state = 110;
                                    return ;
                                case  46 :
                                    eatText45(value);
                                    state = 47;
                                    return ;
                                case  189 :
                                    state = 192;
                                    continue outer;
                                case  72 :
                                    state = 75;
                                    continue outer;
                                case  57 :
                                    state = 60;
                                    continue outer;
                                case  111 :
                                    state = 114;
                                    continue outer;
                                case  85 :
                                    eatText46(value);
                                    state = 86;
                                    return ;
                                case  133 :
                                    eatText47(value);
                                    state = 134;
                                    return ;
                                case  22 :
                                    eatText48(value);
                                    state = 23;
                                    return ;
                                case  75 :
                                    state = 78;
                                    continue outer;
                                case  130 :
                                    eatText49(value);
                                    state = 131;
                                    return ;
                                case  31 :
                                    eatText50(value);
                                    state = 32;
                                    return ;
                                case  127 :
                                    eatText51(value);
                                    state = 128;
                                    return ;
                                case  1 :
                                    eatText52(value);
                                    state = 2;
                                    return ;
                                case  174 :
                                    state = 177;
                                    continue outer;
                                case  25 :
                                    eatText53(value);
                                    state = 26;
                                    return ;
                                case  142 :
                                    eatText54(value);
                                    state = 143;
                                    return ;
                                case  40 :
                                    eatText55(value);
                                    state = 41;
                                    return ;
                                case  79 :
                                    eatText56(value);
                                    state = 80;
                                    return ;
                                case  169 :
                                    eatText57(value);
                                    state = 170;
                                    return ;
                                case  34 :
                                    eatText58(value);
                                    state = 35;
                                    return ;
                                case  100 :
                                    eatText59(value);
                                    state = 101;
                                    return ;
                                case  52 :
                                    eatText60(value);
                                    state = 53;
                                    return ;
                                case  201 :
                                    revertToParentFromText(value);
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  78 :
                                    state = 81;
                                    continue outer;
                                case  136 :
                                    eatText61(value);
                                    state = 137;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CanLevel = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CanLevel = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Phonetics = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostPerUse = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText12(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText13(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActiveDirectoryGUID = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText14(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText15(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText16(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsEnterprise = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsEnterprise = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText17(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _MaxUnits = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_MaxUnits = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText18(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText19(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AvailableTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText20(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText21(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText22(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _SV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_SV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText23(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Name = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText24(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText25(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EmailAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText26(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText27(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentWorkComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText28(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StandardRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText29(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText30(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Initials = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText31(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWS = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText32(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsInactive = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsInactive = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText33(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AvailableFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText34(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Code = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText35(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ACWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ACWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText36(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText37(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Notes = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText38(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OverAllocated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_OverAllocated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText39(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText40(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsNull = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsNull = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText41(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AccrueAt = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText42(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsGeneric = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsGeneric = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText43(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText44(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText45(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkSubAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText46(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText47(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_WorkVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText48(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _NTAccount = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText49(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText50(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Group = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText51(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText52(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText53(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _MaterialLabel = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText54(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText55(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Hyperlink = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText56(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RegularWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText57(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BookingType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText58(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkGroup = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText59(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StandardRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText60(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PeakUnits = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_PeakUnits = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText61(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CostVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _Resource.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class TasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Task = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.class);
        }

        public java.util.List getTask() {
            return _Task;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Task.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Task");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Task.get(idx_0 ++)), "Task");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Task.get(idx_1 ++)), "Task");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Task.get(idx1 ++)), "Task");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Task.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Task.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0001\u00ac\u00f5\u00edppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00ac\u00f5\u00e2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00ac\u00f5\u00dfq\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv"
+".grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00ac\u00f5\u00d4ppsq\u0000~\u0000\u000b\u0000\u00ee&-pp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00ee&\"ppsq\u0000~\u0000\u0006\u0000\u00ee&\u0017q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00ee&\u0014q\u0000~\u0000\npsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000;com.tapsterrock.mspdi.schema.ProjectType.TasksType.Tas"
+"kTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000\u0000\u00be\u00cf"
+"\u00a2ppsq\u0000~\u0000\u0014\u0000\u00be\u00cf\u0097q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004nam"
+"et\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv"
+".datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000"
+"\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Taskt\u0000$http://"
+"schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.Ex"
+"pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
+"pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
+"Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000?"
+"[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0006\u0000\u0000\u00009pur\u0000!["
+"Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppq\u0000~\u0000\u0010p"
+"ppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000#ppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppq\u0000~\u0000\u0013ppppppppppq\u0000~\u0000\u0012ppppppppppppppppppp"
+"pppppppppppppppppppppppp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class TaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.util.Calendar _LateFinish;
            protected java.util.Calendar _PreLeveledStart;
            protected boolean has_Summary;
            protected boolean _Summary;
            protected java.util.Calendar _Resume;
            protected boolean has_Recurring;
            protected boolean _Recurring;
            protected boolean has_Critical;
            protected boolean _Critical;
            protected java.util.Calendar _CreateDate;
            protected java.lang.String _Work;
            protected java.util.Calendar _PreLeveledFinish;
            protected boolean has_Estimated;
            protected boolean _Estimated;
            protected boolean has_IgnoreResourceCalendar;
            protected boolean _IgnoreResourceCalendar;
            protected java.math.BigInteger _StartVariance;
            protected java.math.BigInteger _FinishVariance;
            protected java.math.BigInteger _CalendarUID;
            protected java.lang.String _HyperlinkSubAddress;
            protected java.lang.String _RemainingOvertimeWork;
            protected boolean has_IsSubprojectReadOnly;
            protected boolean _IsSubprojectReadOnly;
            protected java.lang.String _ActualWorkProtected;
            protected java.lang.String _RemainingWork;
            protected java.util.Calendar _Deadline;
            protected java.lang.String _WBSLevel;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected java.lang.String _HyperlinkAddress;
            protected boolean has_Milestone;
            protected boolean _Milestone;
            protected java.lang.String _WBS;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigDecimal _ActualCost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected java.lang.String _ActualOvertimeWorkProtected;
            protected java.math.BigInteger _LevelingDelay;
            protected boolean has_FixedCost;
            protected float _FixedCost;
            protected java.math.BigDecimal _RemainingCost;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected java.lang.String _Contact;
            protected java.lang.String _ActualOvertimeWork;
            protected java.math.BigInteger _LevelingDelayFormat;
            protected java.lang.String _SubprojectName;
            protected java.math.BigInteger _FreeSlack;
            protected boolean has_EffortDriven;
            protected boolean _EffortDriven;
            protected boolean has_LevelAssignments;
            protected boolean _LevelAssignments;
            protected java.lang.String _Duration;
            protected com.sun.xml.bind.util.ListImpl _Baseline = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.lang.String _Hyperlink;
            protected java.math.BigInteger _ID;
            protected java.math.BigInteger _PhysicalPercentComplete;
            protected java.math.BigInteger _DurationFormat;
            protected java.math.BigInteger _Type;
            protected boolean has_IsNull;
            protected boolean _IsNull;
            protected java.math.BigInteger _ConstraintType;
            protected java.math.BigInteger _PercentComplete;
            protected java.util.Calendar _EarlyStart;
            protected com.sun.xml.bind.util.ListImpl _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.math.BigInteger _Priority;
            protected boolean has_LevelingCanSplit;
            protected boolean _LevelingCanSplit;
            protected boolean has_IsSubproject;
            protected boolean _IsSubproject;
            protected java.util.Calendar _ConstraintDate;
            protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected boolean has_HideBar;
            protected boolean _HideBar;
            protected java.lang.String _RegularWork;
            protected java.lang.String _Name;
            protected java.lang.String _ActualDuration;
            protected java.lang.String _OvertimeWork;
            protected java.lang.String _OutlineNumber;
            protected boolean has_ExternalTask;
            protected boolean _ExternalTask;
            protected java.lang.String _FixedCostAccrual;
            protected java.util.Calendar _Stop;
            protected com.sun.xml.bind.util.ListImpl _PredecessorLink = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.util.Calendar _EarlyFinish;
            protected java.lang.String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.Calendar _LateStart;
            protected java.util.Calendar _ActualStart;
            protected com.sun.xml.bind.util.ListImpl _OutlineCode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            protected java.math.BigInteger _TotalSlack;
            protected java.lang.String _ActualWork;
            protected boolean has_ResumeValid;
            protected boolean _ResumeValid;
            protected java.math.BigInteger _UID;
            protected boolean has_Rollup;
            protected boolean _Rollup;
            protected java.util.Calendar _ActualFinish;
            protected boolean has_OverAllocated;
            protected boolean _OverAllocated;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.math.BigInteger _EarnedValueMethod;
            protected java.lang.String _RemainingDuration;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.math.BigInteger _OutlineLevel;
            protected java.lang.String _ExternalTaskProject;
            protected boolean has_CV;
            protected float _CV;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.class);
            }

            public java.util.Calendar getLateFinish() {
                return _LateFinish;
            }

            public void setLateFinish(java.util.Calendar value) {
                _LateFinish = value;
            }

            public java.util.Calendar getPreLeveledStart() {
                return _PreLeveledStart;
            }

            public void setPreLeveledStart(java.util.Calendar value) {
                _PreLeveledStart = value;
            }

            public boolean isSummary() {
                return _Summary;
            }

            public void setSummary(boolean value) {
                _Summary = value;
                has_Summary = true;
            }

            public java.util.Calendar getResume() {
                return _Resume;
            }

            public void setResume(java.util.Calendar value) {
                _Resume = value;
            }

            public boolean isRecurring() {
                return _Recurring;
            }

            public void setRecurring(boolean value) {
                _Recurring = value;
                has_Recurring = true;
            }

            public boolean isCritical() {
                return _Critical;
            }

            public void setCritical(boolean value) {
                _Critical = value;
                has_Critical = true;
            }

            public java.util.Calendar getCreateDate() {
                return _CreateDate;
            }

            public void setCreateDate(java.util.Calendar value) {
                _CreateDate = value;
            }

            public java.lang.String getWork() {
                return _Work;
            }

            public void setWork(java.lang.String value) {
                _Work = value;
            }

            public java.util.Calendar getPreLeveledFinish() {
                return _PreLeveledFinish;
            }

            public void setPreLeveledFinish(java.util.Calendar value) {
                _PreLeveledFinish = value;
            }

            public boolean isEstimated() {
                return _Estimated;
            }

            public void setEstimated(boolean value) {
                _Estimated = value;
                has_Estimated = true;
            }

            public boolean isIgnoreResourceCalendar() {
                return _IgnoreResourceCalendar;
            }

            public void setIgnoreResourceCalendar(boolean value) {
                _IgnoreResourceCalendar = value;
                has_IgnoreResourceCalendar = true;
            }

            public java.math.BigInteger getStartVariance() {
                return _StartVariance;
            }

            public void setStartVariance(java.math.BigInteger value) {
                _StartVariance = value;
            }

            public java.math.BigInteger getFinishVariance() {
                return _FinishVariance;
            }

            public void setFinishVariance(java.math.BigInteger value) {
                _FinishVariance = value;
            }

            public java.math.BigInteger getCalendarUID() {
                return _CalendarUID;
            }

            public void setCalendarUID(java.math.BigInteger value) {
                _CalendarUID = value;
            }

            public java.lang.String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(java.lang.String value) {
                _HyperlinkSubAddress = value;
            }

            public java.lang.String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(java.lang.String value) {
                _RemainingOvertimeWork = value;
            }

            public boolean isIsSubprojectReadOnly() {
                return _IsSubprojectReadOnly;
            }

            public void setIsSubprojectReadOnly(boolean value) {
                _IsSubprojectReadOnly = value;
                has_IsSubprojectReadOnly = true;
            }

            public java.lang.String getActualWorkProtected() {
                return _ActualWorkProtected;
            }

            public void setActualWorkProtected(java.lang.String value) {
                _ActualWorkProtected = value;
            }

            public java.lang.String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(java.lang.String value) {
                _RemainingWork = value;
            }

            public java.util.Calendar getDeadline() {
                return _Deadline;
            }

            public void setDeadline(java.util.Calendar value) {
                _Deadline = value;
            }

            public java.lang.String getWBSLevel() {
                return _WBSLevel;
            }

            public void setWBSLevel(java.lang.String value) {
                _WBSLevel = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public java.lang.String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(java.lang.String value) {
                _HyperlinkAddress = value;
            }

            public boolean isMilestone() {
                return _Milestone;
            }

            public void setMilestone(boolean value) {
                _Milestone = value;
                has_Milestone = true;
            }

            public java.lang.String getWBS() {
                return _WBS;
            }

            public void setWBS(java.lang.String value) {
                _WBS = value;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public java.lang.String getActualOvertimeWorkProtected() {
                return _ActualOvertimeWorkProtected;
            }

            public void setActualOvertimeWorkProtected(java.lang.String value) {
                _ActualOvertimeWorkProtected = value;
            }

            public java.math.BigInteger getLevelingDelay() {
                return _LevelingDelay;
            }

            public void setLevelingDelay(java.math.BigInteger value) {
                _LevelingDelay = value;
            }

            public float getFixedCost() {
                return _FixedCost;
            }

            public void setFixedCost(float value) {
                _FixedCost = value;
                has_FixedCost = true;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public java.lang.String getContact() {
                return _Contact;
            }

            public void setContact(java.lang.String value) {
                _Contact = value;
            }

            public java.lang.String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(java.lang.String value) {
                _ActualOvertimeWork = value;
            }

            public java.math.BigInteger getLevelingDelayFormat() {
                return _LevelingDelayFormat;
            }

            public void setLevelingDelayFormat(java.math.BigInteger value) {
                _LevelingDelayFormat = value;
            }

            public java.lang.String getSubprojectName() {
                return _SubprojectName;
            }

            public void setSubprojectName(java.lang.String value) {
                _SubprojectName = value;
            }

            public java.math.BigInteger getFreeSlack() {
                return _FreeSlack;
            }

            public void setFreeSlack(java.math.BigInteger value) {
                _FreeSlack = value;
            }

            public boolean isEffortDriven() {
                return _EffortDriven;
            }

            public void setEffortDriven(boolean value) {
                _EffortDriven = value;
                has_EffortDriven = true;
            }

            public boolean isLevelAssignments() {
                return _LevelAssignments;
            }

            public void setLevelAssignments(boolean value) {
                _LevelAssignments = value;
                has_LevelAssignments = true;
            }

            public java.lang.String getDuration() {
                return _Duration;
            }

            public void setDuration(java.lang.String value) {
                _Duration = value;
            }

            public java.util.List getBaseline() {
                return _Baseline;
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.lang.String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(java.lang.String value) {
                _Hyperlink = value;
            }

            public java.math.BigInteger getID() {
                return _ID;
            }

            public void setID(java.math.BigInteger value) {
                _ID = value;
            }

            public java.math.BigInteger getPhysicalPercentComplete() {
                return _PhysicalPercentComplete;
            }

            public void setPhysicalPercentComplete(java.math.BigInteger value) {
                _PhysicalPercentComplete = value;
            }

            public java.math.BigInteger getDurationFormat() {
                return _DurationFormat;
            }

            public void setDurationFormat(java.math.BigInteger value) {
                _DurationFormat = value;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public boolean isIsNull() {
                return _IsNull;
            }

            public void setIsNull(boolean value) {
                _IsNull = value;
                has_IsNull = true;
            }

            public java.math.BigInteger getConstraintType() {
                return _ConstraintType;
            }

            public void setConstraintType(java.math.BigInteger value) {
                _ConstraintType = value;
            }

            public java.math.BigInteger getPercentComplete() {
                return _PercentComplete;
            }

            public void setPercentComplete(java.math.BigInteger value) {
                _PercentComplete = value;
            }

            public java.util.Calendar getEarlyStart() {
                return _EarlyStart;
            }

            public void setEarlyStart(java.util.Calendar value) {
                _EarlyStart = value;
            }

            public java.util.List getTimephasedData() {
                return _TimephasedData;
            }

            public java.math.BigInteger getPriority() {
                return _Priority;
            }

            public void setPriority(java.math.BigInteger value) {
                _Priority = value;
            }

            public boolean isLevelingCanSplit() {
                return _LevelingCanSplit;
            }

            public void setLevelingCanSplit(boolean value) {
                _LevelingCanSplit = value;
                has_LevelingCanSplit = true;
            }

            public boolean isIsSubproject() {
                return _IsSubproject;
            }

            public void setIsSubproject(boolean value) {
                _IsSubproject = value;
                has_IsSubproject = true;
            }

            public java.util.Calendar getConstraintDate() {
                return _ConstraintDate;
            }

            public void setConstraintDate(java.util.Calendar value) {
                _ConstraintDate = value;
            }

            public java.util.List getExtendedAttribute() {
                return _ExtendedAttribute;
            }

            public boolean isHideBar() {
                return _HideBar;
            }

            public void setHideBar(boolean value) {
                _HideBar = value;
                has_HideBar = true;
            }

            public java.lang.String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(java.lang.String value) {
                _RegularWork = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.lang.String getActualDuration() {
                return _ActualDuration;
            }

            public void setActualDuration(java.lang.String value) {
                _ActualDuration = value;
            }

            public java.lang.String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(java.lang.String value) {
                _OvertimeWork = value;
            }

            public java.lang.String getOutlineNumber() {
                return _OutlineNumber;
            }

            public void setOutlineNumber(java.lang.String value) {
                _OutlineNumber = value;
            }

            public boolean isExternalTask() {
                return _ExternalTask;
            }

            public void setExternalTask(boolean value) {
                _ExternalTask = value;
                has_ExternalTask = true;
            }

            public java.lang.String getFixedCostAccrual() {
                return _FixedCostAccrual;
            }

            public void setFixedCostAccrual(java.lang.String value) {
                _FixedCostAccrual = value;
            }

            public java.util.Calendar getStop() {
                return _Stop;
            }

            public void setStop(java.util.Calendar value) {
                _Stop = value;
            }

            public java.util.List getPredecessorLink() {
                return _PredecessorLink;
            }

            public java.util.Calendar getEarlyFinish() {
                return _EarlyFinish;
            }

            public void setEarlyFinish(java.util.Calendar value) {
                _EarlyFinish = value;
            }

            public java.lang.String getNotes() {
                return _Notes;
            }

            public void setNotes(java.lang.String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.Calendar getLateStart() {
                return _LateStart;
            }

            public void setLateStart(java.util.Calendar value) {
                _LateStart = value;
            }

            public java.util.Calendar getActualStart() {
                return _ActualStart;
            }

            public void setActualStart(java.util.Calendar value) {
                _ActualStart = value;
            }

            public java.util.List getOutlineCode() {
                return _OutlineCode;
            }

            public java.math.BigInteger getTotalSlack() {
                return _TotalSlack;
            }

            public void setTotalSlack(java.math.BigInteger value) {
                _TotalSlack = value;
            }

            public java.lang.String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(java.lang.String value) {
                _ActualWork = value;
            }

            public boolean isResumeValid() {
                return _ResumeValid;
            }

            public void setResumeValid(boolean value) {
                _ResumeValid = value;
                has_ResumeValid = true;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public boolean isRollup() {
                return _Rollup;
            }

            public void setRollup(boolean value) {
                _Rollup = value;
                has_Rollup = true;
            }

            public java.util.Calendar getActualFinish() {
                return _ActualFinish;
            }

            public void setActualFinish(java.util.Calendar value) {
                _ActualFinish = value;
            }

            public boolean isOverAllocated() {
                return _OverAllocated;
            }

            public void setOverAllocated(boolean value) {
                _OverAllocated = value;
                has_OverAllocated = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.math.BigInteger getEarnedValueMethod() {
                return _EarnedValueMethod;
            }

            public void setEarnedValueMethod(java.math.BigInteger value) {
                _EarnedValueMethod = value;
            }

            public java.lang.String getRemainingDuration() {
                return _RemainingDuration;
            }

            public void setRemainingDuration(java.lang.String value) {
                _RemainingDuration = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.math.BigInteger getOutlineLevel() {
                return _OutlineLevel;
            }

            public void setOutlineLevel(java.math.BigInteger value) {
                _OutlineLevel = value;
            }

            public java.lang.String getExternalTaskProject() {
                return _ExternalTaskProject;
            }

            public void setExternalTaskProject(java.lang.String value) {
                _ExternalTaskProject = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx45 = 0;
                final int len45 = _Baseline.size();
                int idx56 = 0;
                final int len56 = _TimephasedData.size();
                int idx61 = 0;
                final int len61 = _ExtendedAttribute.size();
                int idx71 = 0;
                final int len71 = _PredecessorLink.size();
                int idx77 = 0;
                final int len77 = _OutlineCode.size();
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_ID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ID)), "ID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Name), "Name");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Type!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Type");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsNull) {
                    context.startElement("http://schemas.microsoft.com/project", "IsNull");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsNull)), "IsNull");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CreateDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreateDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreateDate), null), "CreateDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Contact!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Contact");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Contact), "Contact");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WBS!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WBS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _WBS), "WBS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WBSLevel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WBSLevel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _WBSLevel), "WBSLevel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OutlineNumber!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineNumber");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OutlineNumber), "OutlineNumber");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OutlineLevel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineLevel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _OutlineLevel)), "OutlineLevel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Priority!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Priority");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Priority)), "Priority");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Duration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Duration");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Duration), "Duration");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_DurationFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Work), "Work");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Stop!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Stop");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Stop), null), "Stop");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Resume!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Resume");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Resume), null), "Resume");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ResumeValid) {
                    context.startElement("http://schemas.microsoft.com/project", "ResumeValid");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ResumeValid)), "ResumeValid");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_EffortDriven) {
                    context.startElement("http://schemas.microsoft.com/project", "EffortDriven");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EffortDriven)), "EffortDriven");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Recurring) {
                    context.startElement("http://schemas.microsoft.com/project", "Recurring");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Recurring)), "Recurring");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_OverAllocated) {
                    context.startElement("http://schemas.microsoft.com/project", "OverAllocated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OverAllocated)), "OverAllocated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Estimated) {
                    context.startElement("http://schemas.microsoft.com/project", "Estimated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Estimated)), "Estimated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Milestone) {
                    context.startElement("http://schemas.microsoft.com/project", "Milestone");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Milestone)), "Milestone");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Summary) {
                    context.startElement("http://schemas.microsoft.com/project", "Summary");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Summary)), "Summary");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Critical) {
                    context.startElement("http://schemas.microsoft.com/project", "Critical");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Critical)), "Critical");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsSubproject) {
                    context.startElement("http://schemas.microsoft.com/project", "IsSubproject");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsSubproject)), "IsSubproject");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsSubprojectReadOnly) {
                    context.startElement("http://schemas.microsoft.com/project", "IsSubprojectReadOnly");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsSubprojectReadOnly)), "IsSubprojectReadOnly");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_SubprojectName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "SubprojectName");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _SubprojectName), "SubprojectName");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ExternalTask) {
                    context.startElement("http://schemas.microsoft.com/project", "ExternalTask");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ExternalTask)), "ExternalTask");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ExternalTaskProject!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ExternalTaskProject");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ExternalTaskProject), "ExternalTaskProject");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EarlyStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarlyStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EarlyStart), null), "EarlyStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EarlyFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarlyFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EarlyFinish), null), "EarlyFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LateStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LateStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LateStart), null), "LateStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LateFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LateFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LateFinish), null), "LateFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StartVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StartVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartVariance)), "StartVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FinishVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FinishVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FinishVariance)), "FinishVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _WorkVariance)), "WorkVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FreeSlack!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FreeSlack");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FreeSlack)), "FreeSlack");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_TotalSlack!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "TotalSlack");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _TotalSlack)), "TotalSlack");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_FixedCost) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _FixedCost)), "FixedCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FixedCostAccrual!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedCostAccrual");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FixedCostAccrual), "FixedCostAccrual");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentComplete)), "PercentComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentWorkComplete)), "PercentWorkComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeCost)), "OvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OvertimeWork), "OvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualStart), null), "ActualStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualFinish), null), "ActualFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualDuration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualDuration");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualDuration), "ActualDuration");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualCost)), "ActualCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualOvertimeCost)), "ActualOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWork), "ActualWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWork), "ActualOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RegularWork), "RegularWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingDuration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingDuration");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingDuration), "RemainingDuration");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingCost)), "RemainingCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingWork), "RemainingWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingOvertimeCost)), "RemainingOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingOvertimeWork), "RemainingOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _ACWP)), "ACWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CV)), "CV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ConstraintType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ConstraintType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ConstraintType)), "ConstraintType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalendarUID)), "CalendarUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ConstraintDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ConstraintDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ConstraintDate), null), "ConstraintDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Deadline!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Deadline");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Deadline), null), "Deadline");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LevelAssignments) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelAssignments");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LevelAssignments)), "LevelAssignments");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LevelingCanSplit) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingCanSplit");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LevelingCanSplit)), "LevelingCanSplit");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelay");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelay)), "LevelingDelay");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelayFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelayFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelayFormat)), "LevelingDelayFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PreLeveledStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PreLeveledStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _PreLeveledStart), null), "PreLeveledStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PreLeveledFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PreLeveledFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _PreLeveledFinish), null), "PreLeveledFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Hyperlink), "Hyperlink");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkAddress), "HyperlinkAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkSubAddress), "HyperlinkSubAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IgnoreResourceCalendar) {
                    context.startElement("http://schemas.microsoft.com/project", "IgnoreResourceCalendar");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IgnoreResourceCalendar)), "IgnoreResourceCalendar");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Notes), "Notes");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_HideBar) {
                    context.startElement("http://schemas.microsoft.com/project", "HideBar");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _HideBar)), "HideBar");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Rollup) {
                    context.startElement("http://schemas.microsoft.com/project", "Rollup");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Rollup)), "Rollup");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PhysicalPercentComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhysicalPercentComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PhysicalPercentComplete)), "PhysicalPercentComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EarnedValueMethod!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarnedValueMethod");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EarnedValueMethod)), "EarnedValueMethod");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx71 != len71) {
                    context.startElement("http://schemas.microsoft.com/project", "PredecessorLink");
                    int idx_168 = idx71;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PredecessorLink.get(idx_168 ++)), "PredecessorLink");
                    context.endNamespaceDecls();
                    int idx_169 = idx71;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PredecessorLink.get(idx_169 ++)), "PredecessorLink");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _PredecessorLink.get(idx71 ++)), "PredecessorLink");
                    context.endElement();
                }
                if (_ActualWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWorkProtected), "ActualWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWorkProtected), "ActualOvertimeWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx61 != len61) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_174 = idx61;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_174 ++)), "ExtendedAttribute");
                    context.endNamespaceDecls();
                    int idx_175 = idx61;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_175 ++)), "ExtendedAttribute");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx61 ++)), "ExtendedAttribute");
                    context.endElement();
                }
                while (idx45 != len45) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_176 = idx45;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_176 ++)), "Baseline");
                    context.endNamespaceDecls();
                    int idx_177 = idx45;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_177 ++)), "Baseline");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx45 ++)), "Baseline");
                    context.endElement();
                }
                while (idx77 != len77) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                    int idx_178 = idx77;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_178 ++)), "OutlineCode");
                    context.endNamespaceDecls();
                    int idx_179 = idx77;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_179 ++)), "OutlineCode");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx77 ++)), "OutlineCode");
                    context.endElement();
                }
                while (idx56 != len56) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_180 = idx56;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_180 ++)), "TimephasedData");
                    context.endNamespaceDecls();
                    int idx_181 = idx56;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_181 ++)), "TimephasedData");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx56 ++)), "TimephasedData");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx45 = 0;
                final int len45 = _Baseline.size();
                int idx56 = 0;
                final int len56 = _TimephasedData.size();
                int idx61 = 0;
                final int len61 = _ExtendedAttribute.size();
                int idx71 = 0;
                final int len71 = _PredecessorLink.size();
                int idx77 = 0;
                final int len77 = _OutlineCode.size();
                while (idx71 != len71) {
                    idx71 += 1;
                }
                while (idx61 != len61) {
                    idx61 += 1;
                }
                while (idx45 != len45) {
                    idx45 += 1;
                }
                while (idx77 != len77) {
                    idx77 += 1;
                }
                while (idx56 != len56) {
                    idx56 += 1;
                }
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx45 = 0;
                final int len45 = _Baseline.size();
                int idx56 = 0;
                final int len56 = _TimephasedData.size();
                int idx61 = 0;
                final int len61 = _ExtendedAttribute.size();
                int idx71 = 0;
                final int len71 = _PredecessorLink.size();
                int idx77 = 0;
                final int len77 = _OutlineCode.size();
                while (idx71 != len71) {
                    idx71 += 1;
                }
                while (idx61 != len61) {
                    idx61 += 1;
                }
                while (idx45 != len45) {
                    idx45 += 1;
                }
                while (idx77 != len77) {
                    idx77 += 1;
                }
                while (idx56 != len56) {
                    idx56 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00cb\u00b14\u001dppsq\u0000~\u0000\u0000\u00c9|Q\u00a7ppsq\u0000~\u0000\u0000\u00c6"
+"\u00d3\u00a19ppsq\u0000~\u0000\u0000\u00c4\u00b3\u00fdjppsq\u0000~\u0000\u0000\u00c3&?\u000fppsq\u0000~\u0000\u0000\u00bf\\\u00c4\u00aappsq\u0000~\u0000\u0000\u00bc\u0088K\u0084ppsq\u0000~\u0000\u0000\u00b9"
+"\u008ccYppsq\u0000~\u0000\u0000\u00b8@\u00e4\u00c3ppsq\u0000~\u0000\u0000\u00b7\u0017W\u00b5ppsq\u0000~\u0000\u0000\u00b6;\u00f8\u00b6ppsq\u0000~\u0000\u0000\u00b5\u0017\u00a3jppsq\u0000~\u0000\u0000\u00b4"
+"C\u00dd}ppsq\u0000~\u0000\u0000\u00b1\u00a0\u0091\u0086ppsq\u0000~\u0000\u0000\u00b0!\u0007\u0098ppsq\u0000~\u0000\u0000\u00af(\u000e*ppsq\u0000~\u0000\u0000\u00ac\u008e\u00c5\u00dfppsq\u0000~\u0000\u0000\u00ab"
+"\u00b1{\u00e8ppsq\u0000~\u0000\u0000\u00aaV\u0010\u0094ppsq\u0000~\u0000\u0000\u00a8%\u00b7\u0014ppsq\u0000~\u0000\u0000\u00a5\u0094\'\u00d3ppsq\u0000~\u0000\u0000\u00a1i\u0016\u00e6ppsq\u0000~\u0000\u0000\u009f"
+"G\u00a75ppsq\u0000~\u0000\u0000\u009d\u00da\u00f7Sppsq\u0000~\u0000\u0000\u009c\u00afn\u00b1ppsq\u0000~\u0000\u0000\u0099\u0084\u00fd\u009dppsq\u0000~\u0000\u0000\u0097\":\u009fppsq\u0000~\u0000\u0000\u0094"
+"~\u00ab\u0095ppsq\u0000~\u0000\u0000\u0093dUZppsq\u0000~\u0000\u0000\u0092h\u001e\u00b5ppsq\u0000~\u0000\u0000\u0090\u00ab\u00ab\u001dppsq\u0000~\u0000\u0000\u008cp\u00a9\u0003ppsq\u0000~\u0000\u0000\u0089"
+"U/\u0000ppsq\u0000~\u0000\u0000\u0086\u009d\u008d\u00a9ppsq\u0000~\u0000\u0000\u0084U\u0087\rppsq\u0000~\u0000\u0000\u0080/N\u00a0ppsq\u0000~\u0000\u0000|\u00e2\u00ba\u00e7ppsq\u0000~\u0000\u0000z"
+"l!5ppsq\u0000~\u0000\u0000vv\u009d(ppsq\u0000~\u0000\u0000s\u00a2\u00ed\u00beppsq\u0000~\u0000\u0000p\u00d9/\u0006ppsq\u0000~\u0000\u0000mzE\u0082ppsq\u0000~\u0000\u0000k"
+"\u0085&Bppsq\u0000~\u0000\u0000i2\u00e8%ppsq\u0000~\u0000\u0000e#\u0016\u0090ppsq\u0000~\u0000\u0000c\u00d0>\u00edppsq\u0000~\u0000\u0000a\u0093\u00c5\u0081ppsq\u0000~\u0000\u0000`"
+"\u00860\u000fppsq\u0000~\u0000\u0000^\u00be\u001d\u001appsq\u0000~\u0000\u0000]z{\u00d2ppsq\u0000~\u0000\u0000Z\u00ef\u008b\u0091ppsq\u0000~\u0000\u0000X&\u00e9/ppsq\u0000~\u0000\u0000U"
+"\u00beb\u001fppsq\u0000~\u0000\u0000Sn@\u0019ppsq\u0000~\u0000\u0000QT\t\u00b2ppsq\u0000~\u0000\u0000P\u0015\b\u00eappsq\u0000~\u0000\u0000L\u00c0\u00c2xppsq\u0000~\u0000\u0000J"
+"\u0001\u0017\u009cppsq\u0000~\u0000\u0000FPOUppsq\u0000~\u0000\u0000CM\u008a\u0018ppsq\u0000~\u0000\u0000@\u00f6\u009a\u0093ppsq\u0000~\u0000\u0000>An4ppsq\u0000~\u0000\u0000:"
+"\u00b2\u00b4\u008cppsq\u0000~\u0000\u00009\u0017\u00fa^ppsq\u0000~\u0000\u000074H\u00eeppsq\u0000~\u0000\u00005A\u001c1ppsq\u0000~\u0000\u00003\u00ecV\u00c2ppsq\u0000~\u0000\u00002"
+"\u00e6\u008a\u00c7ppsq\u0000~\u0000\u00001\u0094y\rppsq\u0000~\u0000\u00000iDzppsq\u0000~\u0000\u0000-\u00cb\u00cb:ppsq\u0000~\u0000\u0000-\b\u0003\u00e7ppsq\u0000~\u0000\u0000*"
+"\u009e\u00fb\u00bfppsq\u0000~\u0000\u0000&\u00ff*Rppsq\u0000~\u0000\u0000$D\u00bc1ppsq\u0000~\u0000\u0000 \u00cf[2ppsq\u0000~\u0000\u0000\u001e\u00dd\u00d9\u00fcppsq\u0000~\u0000\u0000\u001b"
+"\u00b1\u008c\u00abppsq\u0000~\u0000\u0000\u0019\u0091\u00eaEppsq\u0000~\u0000\u0000\u0016l\u009b\u0013ppsq\u0000~\u0000\u0000\u0013\u00be\f#ppsq\u0000~\u0000\u0000\u0011\u00bcv\u00afppsq\u0000~\u0000\u0000\u0010"
+"\'\u00afQppsq\u0000~\u0000\u0000\u000e\u009c:\u00ceppsq\u0000~\u0000\u0000\f\u00bb\u0091\u00e6ppsq\u0000~\u0000\u0000\u000bl7\u007fppsq\u0000~\u0000\u0000\t\u0096j\u001eppsq\u0000~\u0000\u0000\b"
+"\u00c3\u00af\u00a4ppsq\u0000~\u0000\u0000\u0007i\u009b\u00acppsq\u0000~\u0000\u0000\u00043\u0004Dppsr\u0000\'com.sun.msv.grammar.trex.El"
+"ementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/N"
+"ameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aign"
+"oreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0095\u00e9jpp\u0000sq\u0000~"
+"\u0000\u0000\u0002\u0095\u00e9_ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.x"
+"sd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Intege"
+"rDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype"
+"/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000nL\u0000\nwh"
+"iteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt"
+"\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com"
+".sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scale"
+"xr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFa"
+"cetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000"
+"~\u0000jL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;"
+"L\u0000\tfacetNameq\u0000~\u0000nxq\u0000~\u0000mppq\u0000~\u0000u\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd"
+".NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0007decimalq\u0000~\u0000uq\u0000~\u0000|t\u0000\u000efrac"
+"tionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000nL\u0000\fnamespaceURIq\u0000~\u0000nxpq\u0000~\u0000rq\u0000~\u0000q"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002 \u00e6Tppsr\u0000 "
+"com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnam"
+"eClassq\u0000~\u0000`xq\u0000~\u0000\u0003\u0002 \u00e6Isr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valu"
+"exp\u0000psq\u0000~\u0000d\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0005QNameq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000\u008cq\u0000~\u0000qsr\u0000#com.s"
+"un.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000nL\u0000"
+"\fnamespaceURIq\u0000~\u0000nxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000c"
+"om.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0087\u0001psq\u0000~\u0000\u008et\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/"
+"projectsq\u0000~\u0000\u0083\u0001\u009d\u001a\u00d5ppsq\u0000~\u0000_\u0001\u009d\u001a\u00caq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u009d\u001a\u00bfppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0001"
+"(\u0017\u00b4ppsq\u0000~\u0000\u0085\u0001(\u0017\u00a9q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0002IDq\u0000"
+"~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u00036\u0097cppsq\u0000~\u0000_\u00036\u0097Xq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u00036\u0097Mppsq\u0000~\u0000d\u0001\u00e4\nWp"
+"psr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tma"
+"xLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstra"
+"intFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000xq\u0000~\u0000\u0098psr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000t\u0000\u0000sr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000kq"
+"\u0000~\u0000qt\u0000\u0006stringq\u0000~\u0000\u00a9\u0001q\u0000~\u0000\u00abt\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring"
+"-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0001R\u008c\u00f1ppsq\u0000~\u0000\u0085\u0001R\u008c\u00e6q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~"
+"\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Nameq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001Z\u0013\u00f3ppsq\u0000~\u0000_\u0001Z\u0013\u00e8q\u0000~\u0000\u0088p\u0000s"
+"q\u0000~\u0000\u0000\u0001Z\u0013\u00ddppsq\u0000~\u0000d\u0000\u00bb\u008a\u00f8ppsr\u0000)com.sun.msv.datatype.xsd.Enumerat"
+"ionFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000\u00a6q\u0000~\u0000\u0098pq\u0000"
+"~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000"
+"\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sr\u0000)com.sun.msv.datatype.xsd.IntegerValueTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000nxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt"
+"\u0000\u00012sq\u0000~\u0000\u00bft\u0000\u00010sq\u0000~\u0000\u00bft\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~\u0000\u0098sq"
+"\u0000~\u0000\u0083\u0000\u009e\u0088\u00e0ppsq\u0000~\u0000\u0085\u0000\u009e\u0088\u00d5q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000"
+"\u0004Typeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0000\u00d2\u00bauppsq\u0000~\u0000_\u0000\u00d2\u00bajq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00d2\u00ba_ppsq\u0000~"
+"\u0000d\u00001\u00ff3ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000kq\u0000~\u0000qt\u0000\u0007booleanq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000\u00d4q\u0000~\u0000qsq\u0000~\u0000\u0083\u0000\u00a0\u00bb\'ppsq"
+"\u0000~\u0000\u0085\u0000\u00a0\u00bb\u001cq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006IsNullq\u0000~\u0000\u0098"
+"q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00d5\u00cd\\ppsq\u0000~\u0000_\u0001\u00d5\u00cdQq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00d5\u00cdFppsq\u0000~\u0000d\u0001Kn\u00d8ppsr"
+"\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.su"
+"n.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\b"
+"dateTimeq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000\u00e2q\u0000~\u0000qsq\u0000~\u0000\u0083\u0000\u008a^ippsq\u0000~\u0000\u0085\u0000\u008a^^q\u0000~\u0000"
+"\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nCreateDateq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000"
+"~\u0000\u0083\u0001OZbppsq\u0000~\u0000_\u0001OZWq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001OZLppsq\u0000~\u0000d\u0000\u008c\rmppsq\u0000~\u0000\u00a5q\u0000~\u0000"
+"\u0098pq\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00abq\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000"
+"\u0098sq\u0000~\u0000\u0083\u0000\u00c3L\u00dappsq\u0000~\u0000\u0085\u0000\u00c3L\u00cfq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u008et\u0000\u0007Contactq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00e0\u00a8\u00e3ppsq\u0000~\u0000_\u0001\u00e0\u00a8\u00d8q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00e0\u00a8\u00cd"
+"ppsq\u0000~\u0000d\u0000\u0004\u0083\u00b5ppq\u0000~\u0000\u00abq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000\u00acq\u0000~\u0000qsq\u0000~\u0000\u0083\u0001\u00dc%\u0013ppsq\u0000~\u0000\u0085\u0001\u00dc"
+"%\bq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0003WBSq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u0083\u0001\u008bt~ppsq\u0000~\u0000_\u0001\u008btsq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u008bthppq\u0000~\u0000\u00f8sq\u0000~\u0000\u0083\u0001\u0086\u00f0\u00aeppsq\u0000~\u0000\u0085"
+"\u0001\u0086\u00f0\u00a3q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bWBSLevelq\u0000~\u0000\u0098q\u0000"
+"~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u0094\u00c7Yppsq\u0000~\u0000_\u0001\u0094\u00c7Nq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u0094\u00c7Cppsq\u0000~\u0000d\u0000\u00dek\u0012ppsq\u0000~"
+"\u0000\u00a5q\u0000~\u0000\u0098pq\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00abq\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-deriv"
+"edq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0000\u00b6\\,ppsq\u0000~\u0000\u0085\u0000\u00b6\\!q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000"
+"\u0094sq\u0000~\u0000\u008et\u0000\rOutlineNumberq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u0001\u0095oppsq\u0000~\u0000_\u0002\u0001\u0095dq\u0000~\u0000\u0088"
+"p\u0000sq\u0000~\u0000\u0000\u0002\u0001\u0095Yppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0001\u008c\u0092Nppsq\u0000~\u0000\u0085\u0001\u008c\u0092Cq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000"
+"~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fOutlineLevelq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00ae\u008e\u00ebppsq\u0000~"
+"\u0000_\u0002\u00ae\u008e\u00e0q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00ae\u008e\u00d5ppq\u0000~\u0000gsq\u0000~\u0000\u0083\u00029\u008b\u00cappsq\u0000~\u0000\u0085\u00029\u008b\u00bfq\u0000~\u0000\u0088pq\u0000"
+"~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bPriorityq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003%O"
+"-ppsq\u0000~\u0000_\u0003%O\"q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003%O\u0017ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001\u00d9\u00e0:ppsq\u0000~\u0000\u0085\u0001\u00d9\u00e0/q"
+"\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0005Startq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u0083\u0002\u001f\u00a2appsq\u0000~\u0000_\u0002\u001f\u00a2Vq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u001f\u00a2Kppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0000\u00d43nppsq\u0000~\u0000\u0085\u0000"
+"\u00d43cq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006Finishq\u0000~\u0000\u0098q\u0000~\u0000\u0094"
+"sq\u0000~\u0000\u0083\u0003,MLppsq\u0000~\u0000_\u0003,MAq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003,M6ppsq\u0000~\u0000d\u0001\u00c3<\u00f9ppsr\u0000%com"
+".sun.msv.datatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\bd"
+"urationq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u00019q\u0000~\u0000qsq\u0000~\u0000\u0083\u0001i\u00108ppsq\u0000~\u0000\u0085\u0001i\u0010-q\u0000~\u0000\u0088"
+"pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bDurationq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083"
+"\u0001\u00f1\u00811ppsq\u0000~\u0000_\u0001\u00f1\u0081&q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00f1\u0081\u001bppsq\u0000~\u0000d\u0000n\u00e7\u00fappsq\u0000~\u0000\u00b9q\u0000~\u0000\u0098pq"
+"\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pq\u0000~\u0000\u00bcsq\u0000~\u0000\u00bdw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00bft\u0000\u00013sq\u0000~\u0000\u00bft\u0000\u0002"
+"41sq\u0000~\u0000\u00bft\u0000\u000239sq\u0000~\u0000\u00bft\u0000\u000236sq\u0000~\u0000\u00bft\u0000\u00016sq\u0000~\u0000\u00bft\u0000\u00015sq\u0000~\u0000\u00bft\u0000\u000237sq\u0000~\u0000"
+"\u00bft\u0000\u000211sq\u0000~\u0000\u00bft\u0000\u000240sq\u0000~\u0000\u00bft\u0000\u00014sq\u0000~\u0000\u00bft\u0000\u000212sq\u0000~\u0000\u00bft\u0000\u000252sq\u0000~\u0000\u00bft\u0000\u00017s"
+"q\u0000~\u0000\u00bft\u0000\u000238sq\u0000~\u0000\u00bft\u0000\u000220sq\u0000~\u0000\u00bft\u0000\u000242sq\u0000~\u0000\u00bft\u0000\u000253sq\u0000~\u0000\u00bft\u0000\u000243sq\u0000~\u0000\u00bf"
+"t\u0000\u000221sq\u0000~\u0000\u00bft\u0000\u000210sq\u0000~\u0000\u00bft\u0000\u000235sq\u0000~\u0000\u00bft\u0000\u000244sq\u0000~\u0000\u00bft\u0000\u00019sq\u0000~\u0000\u00bft\u0000\u000219s"
+"q\u0000~\u0000\u00bft\u0000\u00018sq\u0000~\u0000\u00bft\u0000\u000251xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~\u0000\u0098sq\u0000~\u0000"
+"\u0083\u0001\u0082\u0099\u001cppsq\u0000~\u0000\u0085\u0001\u0082\u0099\u0011q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eDu"
+"rationFormatq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003u`\u00fappsq\u0000~\u0000_\u0003u`\u00efq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003u`"
+"\u00e4ppq\u0000~\u00016sq\u0000~\u0000\u0083\u0001\u00b2#\u00e6ppsq\u0000~\u0000\u0085\u0001\u00b2#\u00dbq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~"
+"\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Workq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00ban\u001cppsq\u0000~\u0000_\u0002\u00ban\u0011q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000"
+"\u0002\u00ban\u0006ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001n\u00ff)ppsq\u0000~\u0000\u0085\u0001n\u00ff\u001eq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092"
+"q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Stopq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u009f\u00d1hppsq\u0000~\u0000_\u0003\u009f\u00d1]q\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000\u0003\u009f\u00d1Rppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0002Tbuppsq\u0000~\u0000\u0085\u0002Tbjq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000"
+"~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006Resumeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002i\b#ppsq\u0000~\u0000_\u0002i\b\u0018q\u0000~\u0000\u0088"
+"p\u0000sq\u0000~\u0000\u0000\u0002i\b\rppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u00027\b\u00d5ppsq\u0000~\u0000\u0085\u00027\b\u00caq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000"
+"~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bResumeValidq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0000\u00c3\u00c7Nppsq\u0000~\u0000"
+"_\u0000\u00c3\u00c7Cq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00c3\u00c78ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0000\u0091\u00c8\u0000ppsq\u0000~\u0000\u0085\u0000\u0091\u00c7\u00f5q\u0000~\u0000\u0088pq\u0000~"
+"\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fEffortDrivenq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083"
+"\u0002\u009dy;ppsq\u0000~\u0000_\u0002\u009dy0q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u009dy%ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0002ky\u00edppsq\u0000~\u0000\u0085\u0002k"
+"y\u00e2q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tRecurringq\u0000~\u0000\u0098q\u0000~"
+"\u0000\u0094sq\u0000~\u0000\u0083\u0001+4\u008eppsq\u0000~\u0000_\u0001+4\u0083q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001+4xppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0000\u00f95@pp"
+"sq\u0000~\u0000\u0085\u0000\u00f955q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rOverAlloc"
+"atedq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001R\u0011\u00b5ppsq\u0000~\u0000_\u0001R\u0011\u00aaq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001R\u0011\u009fppq\u0000~\u0000\u00d1"
+"sq\u0000~\u0000\u0083\u0001 \u0012gppsq\u0000~\u0000\u0085\u0001 \u0012\\q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008e"
+"t\u0000\tEstimatedq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u0005\u00cb\u00f6ppsq\u0000~\u0000_\u0001\u0005\u00cb\u00ebq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u0005\u00cb"
+"\u00e0ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0000\u00d3\u00cc\u00a8ppsq\u0000~\u0000\u0085\u0000\u00d3\u00cc\u009dq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~"
+"\u0000\u0094sq\u0000~\u0000\u008et\u0000\tMilestoneq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001T\u00c5jppsq\u0000~\u0000_\u0001T\u00c5_q\u0000~\u0000\u0088p\u0000s"
+"q\u0000~\u0000\u0000\u0001T\u00c5Tppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0001\"\u00c6\u001cppsq\u0000~\u0000\u0085\u0001\"\u00c6\u0011q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091"
+"q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0007Summaryq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00f3,\u00b8ppsq\u0000~\u0000_\u0001\u00f3,\u00adq\u0000"
+"~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00f3,\u00a2ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0001\u00c1-jppsq\u0000~\u0000\u0085\u0001\u00c1-_q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000"
+"\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bCriticalq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00e3\u00b1kppsq\u0000~\u0000"
+"_\u0001\u00e3\u00b1`q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00e3\u00b1Uppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0001\u00b1\u00b2\u001dppsq\u0000~\u0000\u0085\u0001\u00b1\u00b2\u0012q\u0000~\u0000\u0088pq\u0000~"
+"\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fIsSubprojectq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083"
+"\u0001\u009a\u00ba)ppsq\u0000~\u0000_\u0001\u009a\u00ba\u001eq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u009a\u00ba\u0013ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0001h\u00ba\u00dbppsq\u0000~\u0000\u0085\u0001h"
+"\u00ba\u00d0q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0014IsSubprojectReadO"
+"nlyq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u008e\u00b9\u00a3ppsq\u0000~\u0000_\u0003\u008e\u00b9\u0098q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003\u008e\u00b9\u008dppsq\u0000~\u0000d"
+"\u0001\u009a\u00cd#ppsq\u0000~\u0000\u00a5q\u0000~\u0000\u0098pq\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00abq\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000est"
+"ring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0001\u00f3\u00eceppsq\u0000~\u0000\u0085\u0001\u00f3\u00ecZq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000"
+"\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eSubprojectNameq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00b5,Zppsq\u0000~"
+"\u0000_\u0002\u00b5,Oq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00b5,Dppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0002\u0083-\fppsq\u0000~\u0000\u0085\u0002\u0083-\u0001q\u0000~\u0000\u0088pq\u0000"
+"~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fExternalTaskq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u0083\u0002V\u00ef\u0080ppsq\u0000~\u0000_\u0002V\u00efuq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002V\u00efjppsq\u0000~\u0000d\u0001\u0095c\u009appsq\u0000~\u0000\u00a5q\u0000~\u0000\u0098p"
+"q\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00abq\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098s"
+"q\u0000~\u0000\u0083\u0000\u00c1\u008b\u00cbppsq\u0000~\u0000\u0085\u0000\u00c1\u008b\u00c0q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et"
+"\u0000\u0013ExternalTaskProjectq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u0002\u00c58ppsq\u0000~\u0000_\u0003\u0002\u00c5-q\u0000~\u0000\u0088p\u0000"
+"sq\u0000~\u0000\u0000\u0003\u0002\u00c5\"ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001\u00b7VEppsq\u0000~\u0000\u0085\u0001\u00b7V:q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000"
+"\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nEarlyStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u00b0\u00c8Bppsq\u0000~\u0000_\u0003\u00b0"
+"\u00c87q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003\u00b0\u00c8,ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0002eYOppsq\u0000~\u0000\u0085\u0002eYDq\u0000~\u0000\u0088pq\u0000~\u0000\u0089s"
+"q\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bEarlyFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00bf\u00aa\u00d7"
+"ppsq\u0000~\u0000_\u0002\u00bf\u00aa\u00ccq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00bf\u00aa\u00c1ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001t;\u00e4ppsq\u0000~\u0000\u0085\u0001t;\u00d9q\u0000"
+"~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tLateStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq"
+"\u0000~\u0000\u0083\u0003TFmppsq\u0000~\u0000_\u0003TFbq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003TFWppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0002\b\u00d7zppsq\u0000~"
+"\u0000\u0085\u0002\b\u00d7oq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nLateFinishq\u0000~"
+"\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001?\u0000\u00c3ppsq\u0000~\u0000_\u0001?\u0000\u00b8q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001?\u0000\u00adppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0000"
+"\u00c9\u00fd\u00a2ppsq\u0000~\u0000\u0085\u0000\u00c9\u00fd\u0097q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rStar"
+"tVarianceq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u001a6bppsq\u0000~\u0000_\u0002\u001a6Wq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u001a6Lpp"
+"q\u0000~\u0000gsq\u0000~\u0000\u0083\u0001\u00a53Appsq\u0000~\u0000\u0085\u0001\u00a536q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000\u000eFinishVarianceq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002P\"\u0001ppsq\u0000~\u0000_\u0002P!\u00f6q\u0000~\u0000\u0088p"
+"\u0000sq\u0000~\u0000\u0000\u0002P!\u00ebppsq\u0000~\u0000d\u0000Q\u00cf=ppsr\u0000\"com.sun.msv.datatype.xsd.FloatT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberTyp"
+"e\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0005floatq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0002@q\u0000~\u0000qsq\u0000"
+"~\u0000\u0083\u0001\u00feR\u00a9ppsq\u0000~\u0000\u0085\u0001\u00feR\u009eq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\f"
+"WorkVarianceq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002h\u0087\u000bppsq\u0000~\u0000_\u0002h\u0087\u0000q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002h\u0086"
+"\u00f5ppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0001\u00f3\u0083\u00eappsq\u0000~\u0000\u0085\u0001\u00f3\u0083\u00dfq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~"
+"\u0000\u0094sq\u0000~\u0000\u008et\u0000\tFreeSlackq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00c8\u00a2]ppsq\u0000~\u0000_\u0002\u00c8\u00a2Rq\u0000~\u0000\u0088p\u0000s"
+"q\u0000~\u0000\u0000\u0002\u00c8\u00a2Gppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0002S\u009f<ppsq\u0000~\u0000\u0085\u0002S\u009f1q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091"
+"q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nTotalSlackq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u008a\u00f0<ppsq\u0000~\u0000_\u0002\u008a\u00f0"
+"1q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u008a\u00f0&ppq\u0000~\u0002<sq\u0000~\u0000\u0083\u00029 \u00e4ppsq\u0000~\u0000\u0085\u00029 \u00d9q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq"
+"\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tFixedCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001C\u00a1Cpps"
+"q\u0000~\u0000_\u0001C\u00a18q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001C\u00a1-ppsq\u0000~\u0000d\u0000L\u00b1rppsq\u0000~\u0000\u00b9q\u0000~\u0000\u0098pq\u0000~\u0000\u00a9\u0000\u0000q"
+"\u0000~\u0000\u00abq\u0000~\u0000\u00abq\u0000~\u0000\u00bcsq\u0000~\u0000\u00bdw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u00013t\u0000\u00012t\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000"
+"\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0000\u00f6\u00ef\u00b6ppsq\u0000~\u0000\u0085\u0000\u00f6\u00ef\u00abq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq"
+"\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0010FixedCostAccrualq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00c8\u0012\u00f0p"
+"psq\u0000~\u0000_\u0001\u00c8\u0012\u00e5q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00c8\u0012\u00dappq\u0000~\u0000gsq\u0000~\u0000\u0083\u0001S\u000f\u00cfppsq\u0000~\u0000\u0085\u0001S\u000f\u00c4q\u0000~"
+"\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000fPercentCompleteq\u0000~\u0000\u0098q\u0000"
+"~\u0000\u0094sq\u0000~\u0000\u0083\u0001\r\u0095mppsq\u0000~\u0000_\u0001\r\u0095bq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\r\u0095Wppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0000\u0098\u0092Lp"
+"psq\u0000~\u0000\u0085\u0000\u0098\u0092Aq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013PercentW"
+"orkCompleteq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002<ygppsq\u0000~\u0000_\u0002<y\\q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002<yQ"
+"ppsq\u0000~\u0000d\u0000\u00a9P\u0018ppq\u0000~\u0000|q\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000}q\u0000~\u0000qsq\u0000~\u0000\u0083\u0001\u0093)4ppsq\u0000~\u0000\u0085\u0001\u0093"
+"))q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Costq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000"
+"~\u0000\u0083\u0001R\u00d7\u009eppsq\u0000~\u0000_\u0001R\u00d7\u0093q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001R\u00d7\u0088ppq\u0000~\u0002\u0082sq\u0000~\u0000\u0083\u0000\u00a9\u0087kppsq\u0000~\u0000"
+"\u0085\u0000\u00a9\u0087`q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fOvertimeCostq\u0000"
+"~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0004\u000f\u00d1\u0090ppsq\u0000~\u0000_\u0004\u000f\u00d1\u0085q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0004\u000f\u00d1zppq\u0000~\u00016sq\u0000~\u0000\u0083"
+"\u0002L\u0094|ppsq\u0000~\u0000\u0085\u0002L\u0094qq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fOve"
+"rtimeWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002R>\u0018ppsq\u0000~\u0000_\u0002R>\rq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002R>\u0002pp"
+"q\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001\u0006\u00cf%ppsq\u0000~\u0000\u0085\u0001\u0006\u00cf\u001aq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000\u000bActualStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00f5\u001f;ppsq\u0000~\u0000_\u0001\u00f5\u001f0q\u0000~\u0000\u0088p\u0000sq"
+"\u0000~\u0000\u0000\u0001\u00f5\u001f%ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0000\u00a9\u00b0Hppsq\u0000~\u0000\u0085\u0000\u00a9\u00b0=q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q"
+"\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fActualFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003^\u00e9\u007fppsq\u0000~\u0000_\u0003^"
+"\u00e9tq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003^\u00e9ippq\u0000~\u00016sq\u0000~\u0000\u0083\u0001\u009b\u00ackppsq\u0000~\u0000\u0085\u0001\u009b\u00ac`q\u0000~\u0000\u0088pq\u0000~\u0000\u0089s"
+"q\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eActualDurationq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002"
+"\u00c9\u00be\u00b3ppsq\u0000~\u0000_\u0002\u00c9\u00be\u00a8q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00c9\u00be\u009dppq\u0000~\u0002\u0082sq\u0000~\u0000\u0083\u0002 n\u0080ppsq\u0000~\u0000\u0085\u0002 n"
+"uq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nActualCostq\u0000~\u0000\u0098q\u0000~"
+"\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00d3\u00afeppsq\u0000~\u0000_\u0002\u00d3\u00afZq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00d3\u00afOppq\u0000~\u0002\u0082sq\u0000~\u0000\u0083\u0002*_2pp"
+"sq\u0000~\u0000\u0085\u0002*_\'q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0012ActualOve"
+"rtimeCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u00f5\u0084\bppsq\u0000~\u0000_\u0003\u00f5\u0083\u00fdq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003\u00f5\u0083\u00f2pp"
+"q\u0000~\u00016sq\u0000~\u0000\u0083\u00022F\u00f4ppsq\u0000~\u0000\u0085\u00022F\u00e9q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000\nActualWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002v\u0099\u00adppsq\u0000~\u0000_\u0002v\u0099\u00a2q\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000\u0002v\u0099\u0097ppq\u0000~\u00016sq\u0000~\u0000\u0083\u0000\u00b3\\\u0099ppsq\u0000~\u0000\u0085\u0000\u00b3\\\u008eq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000"
+"~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0012ActualOvertimeWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003L\u0093\u00b4ppsq\u0000"
+"~\u0000_\u0003L\u0093\u00a9q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003L\u0093\u009eppq\u0000~\u00016sq\u0000~\u0000\u0083\u0001\u0089V\u00a0ppsq\u0000~\u0000\u0085\u0001\u0089V\u0095q\u0000~\u0000\u0088pq"
+"\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bRegularWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u0083\u0004&8hppsq\u0000~\u0000_\u0004&8]q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0004&8Rppq\u0000~\u00016sq\u0000~\u0000\u0083\u0002b\u00fbTppsq\u0000~\u0000\u0085\u0002"
+"b\u00fbIq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0011RemainingDuratio"
+"nq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002H\u0006\u0097ppsq\u0000~\u0000_\u0002H\u0006\u008cq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002H\u0006\u0081ppq\u0000~\u0002\u0082sq\u0000"
+"~\u0000\u0083\u0001\u009e\u00b6dppsq\u0000~\u0000\u0085\u0001\u009e\u00b6Yq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\r"
+"RemainingCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00b7\u00a1Rppsq\u0000~\u0000_\u0002\u00b7\u00a1Gq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00b7"
+"\u00a1<ppq\u0000~\u00016sq\u0000~\u0000\u0083\u0000\u00f4d>ppsq\u0000~\u0000\u0085\u0000\u00f4d3q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000"
+"~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rRemainingWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u001by\u00feppsq\u0000~\u0000_\u0003\u001by\u00f3q\u0000~"
+"\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003\u001by\u00e8ppq\u0000~\u0002\u0082sq\u0000~\u0000\u0083\u0002r)\u00cbppsq\u0000~\u0000\u0085\u0002r)\u00c0q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008e"
+"q\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0015RemainingOvertimeCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u0083\u0004;\u0002\u0015ppsq\u0000~\u0000_\u0004;\u0002\nq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0004;\u0001\u00ffppq\u0000~\u00016sq\u0000~\u0000\u0083\u0002w\u00c5\u0001ppsq\u0000~\u0000\u0085\u0002"
+"w\u00c4\u00f6q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0015RemainingOvertim"
+"eWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u00bcs\u0093ppsq\u0000~\u0000_\u0001\u00bcs\u0088q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u00bcs}ppq\u0000~\u0002"
+"<sq\u0000~\u0000\u0083\u0001j\u00a4;ppsq\u0000~\u0000\u0085\u0001j\u00a40q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u008et\u0000\u0004ACWPq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0000\u00fc6\u00a0ppsq\u0000~\u0000_\u0000\u00fc6\u0095q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00fc6\u008appq"
+"\u0000~\u0002<sq\u0000~\u0000\u0083\u0000\u00aagHppsq\u0000~\u0000\u0085\u0000\u00aag=q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq"
+"\u0000~\u0000\u008et\u0000\u0002CVq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u001aV6ppsq\u0000~\u0000_\u0001\u001aV+q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u001aV pp"
+"sq\u0000~\u0000d\u0000<\u0001\u00a6ppsq\u0000~\u0000\u00b9q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pq\u0000~\u0000\u00bcsq\u0000~\u0000\u00bdw\f\u0000\u0000\u0000\u0010?@"
+"\u0000\u0000\u0000\u0000\u0000\bsq\u0000~\u0000\u00bft\u0000\u00013sq\u0000~\u0000\u00bft\u0000\u00015sq\u0000~\u0000\u00bft\u0000\u00017sq\u0000~\u0000\u00bft\u0000\u00012sq\u0000~\u0000\u00bfq\u0000~\u0000\u00c4sq\u0000"
+"~\u0000\u00bft\u0000\u00014sq\u0000~\u0000\u00bft\u0000\u00016sq\u0000~\u0000\u00bft\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~"
+"\u0000\u0098sq\u0000~\u0000\u0083\u0000\u00deTuppsq\u0000~\u0000\u0085\u0000\u00deTjq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u008et\u0000\u000eConstraintTypeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00a3\u008f\u0005ppsq\u0000~\u0000_\u0002\u00a3\u008e\u00faq\u0000~\u0000\u0088p\u0000sq"
+"\u0000~\u0000\u0000\u0002\u00a3\u008e\u00efppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0002.\u008b\u00e4ppsq\u0000~\u0000\u0085\u0002.\u008b\u00d9q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q"
+"\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bCalendarUIDq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002b\u00c2\u00f9ppsq\u0000~\u0000_\u0002b\u00c2"
+"\u00eeq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002b\u00c2\u00e3ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001\u0017T\u0006ppsq\u0000~\u0000\u0085\u0001\u0017S\u00fbq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq"
+"\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eConstraintDateq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003*"
+"q\u000fppsq\u0000~\u0000_\u0003*q\u0004q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0003*p\u00f9ppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0001\u00df\u0002\u001cppsq\u0000~\u0000\u0085\u0001\u00df\u0002\u0011"
+"q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bDeadlineq\u0000~\u0000\u0098q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u0083\u0001+\u0088\u009dppsq\u0000~\u0000_\u0001+\u0088\u0092q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001+\u0088\u0087ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0000\u00f9\u0089Oppsq\u0000"
+"~\u0000\u0085\u0000\u00f9\u0089Dq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0010LevelAssignm"
+"entsq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001l\u00af\u00ddppsq\u0000~\u0000_\u0001l\u00af\u00d2q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001l\u00af\u00c7ppq\u0000~\u0000\u00d1"
+"sq\u0000~\u0000\u0083\u0001:\u00b0\u008fppsq\u0000~\u0000\u0085\u0001:\u00b0\u0084q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008e"
+"t\u0000\u0010LevelingCanSplitq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002!o\u00acppsq\u0000~\u0000_\u0002!o\u00a1q\u0000~\u0000\u0088p\u0000sq"
+"\u0000~\u0000\u0000\u0002!o\u0096ppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0001\u00acl\u008bppsq\u0000~\u0000\u0085\u0001\u00acl\u0080q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q"
+"\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rLevelingDelayq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0004+\u0010\u00e8ppsq\u0000~\u0000_\u0004"
+"+\u0010\u00ddq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0004+\u0010\u00d2ppsq\u0000~\u0000d\u0001\u00b9\feppsq\u0000~\u0000\u00b9q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000"
+"~\u0000pq\u0000~\u0000\u00bcsq\u0000~\u0000\u00bdw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00bft\u0000\u00013sq\u0000~\u0000\u00bft\u0000\u000241sq\u0000~\u0000\u00bft\u0000\u000239"
+"sq\u0000~\u0000\u00bft\u0000\u000236sq\u0000~\u0000\u00bft\u0000\u00016sq\u0000~\u0000\u00bft\u0000\u00015sq\u0000~\u0000\u00bft\u0000\u000237sq\u0000~\u0000\u00bft\u0000\u000211sq\u0000~\u0000\u00bft"
+"\u0000\u000240sq\u0000~\u0000\u00bft\u0000\u00014sq\u0000~\u0000\u00bft\u0000\u000212sq\u0000~\u0000\u00bft\u0000\u000252sq\u0000~\u0000\u00bft\u0000\u00017sq\u0000~\u0000\u00bft\u0000\u000238sq\u0000"
+"~\u0000\u00bft\u0000\u000220sq\u0000~\u0000\u00bft\u0000\u000242sq\u0000~\u0000\u00bft\u0000\u000253sq\u0000~\u0000\u00bft\u0000\u000243sq\u0000~\u0000\u00bft\u0000\u000221sq\u0000~\u0000\u00bft\u0000"
+"\u000210sq\u0000~\u0000\u00bft\u0000\u000235sq\u0000~\u0000\u00bft\u0000\u000244sq\u0000~\u0000\u00bft\u0000\u00019sq\u0000~\u0000\u00bft\u0000\u000219sq\u0000~\u0000\u00bft\u0000\u00018sq\u0000~"
+"\u0000\u00bft\u0000\u000251xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0002r\u0004hppsq\u0000~\u0000\u0085"
+"\u0002r\u0004]q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013LevelingDelayFo"
+"rmatq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u0091\u008f<ppsq\u0000~\u0000_\u0002\u0091\u008f1q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u0091\u008f&ppq\u0000~\u0000\u00de"
+"sq\u0000~\u0000\u0083\u0001F Ippsq\u0000~\u0000\u0085\u0001F >q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008e"
+"t\u0000\u000fPreLeveledStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u00020Y{ppsq\u0000~\u0000_\u00020Ypq\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000\u00020Yeppq\u0000~\u0000\u00desq\u0000~\u0000\u0083\u0000\u00e4\u00ea\u0088ppsq\u0000~\u0000\u0085\u0000\u00e4\u00ea}q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000"
+"~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0010PreLeveledFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001[kOppsq\u0000~\u0000"
+"_\u0001[kDq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001[k9ppsq\u0000~\u0000d\u0000\u00d3r\u008eppsq\u0000~\u0000\u00a5q\u0000~\u0000\u0098pq\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00ab"
+"q\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0000\u0087\u00f8\u00a6pps"
+"q\u0000~\u0000\u0085\u0000\u0087\u00f8\u009bq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tHyperlinkq"
+"\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0000\u00ddI\u00f2ppsq\u0000~\u0000_\u0000\u00ddI\u00e7q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00ddI\u00dcppsq\u0000~\u0000d\u0000S\u00fc#"
+"ppsq\u0000~\u0000\u00a5q\u0000~\u0000\u0098pq\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00abq\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring"
+"-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0000\u0089M\u00b4ppsq\u0000~\u0000\u0085\u0000\u0089M\u00a9q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~"
+"\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0010HyperlinkAddressq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u0099HFppsq\u0000~\u0000_"
+"\u0002\u0099H;q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u0099H0ppsq\u0000~\u0000d\u0000\u00c6w\u00e5ppsq\u0000~\u0000\u00a5q\u0000~\u0000\u0098pq\u0000~\u0000\u00a9\u0000\u0000q\u0000~\u0000\u00abq"
+"\u0000~\u0000\u00abq\u0000~\u0000\u00ad\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0001\u00d2\u00d0Fppsq"
+"\u0000~\u0000\u0085\u0001\u00d2\u00d0;q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013HyperlinkSu"
+"bAddressq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0000\u00f8\u00f9ippsq\u0000~\u0000_\u0000\u00f8\u00f9^q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00f8\u00f9Sppq"
+"\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0000\u00c6\u00fa\u001bppsq\u0000~\u0000\u0085\u0000\u00c6\u00fa\u0010q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq"
+"\u0000~\u0000\u008et\u0000\u0016IgnoreResourceCalendarq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001\u007f\u0089\u00e9ppsq\u0000~\u0000_\u0001\u007f\u0089"
+"\u00deq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u007f\u0089\u00d3ppq\u0000~\u0000\u00f8sq\u0000~\u0000\u0083\u0001{\u0006\u0019ppsq\u0000~\u0000\u0085\u0001{\u0006\u000eq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq"
+"\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0005Notesq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00a3K\u00f2ppsq\u0000~\u0000"
+"_\u0002\u00a3K\u00e7q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00a3K\u00dcppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0002qL\u00a4ppsq\u0000~\u0000\u0085\u0002qL\u0099q\u0000~\u0000\u0088pq\u0000~"
+"\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0007HideBarq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0000\u00d3\u00c5\u00e8p"
+"psq\u0000~\u0000_\u0000\u00d3\u00c5\u00ddq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00d3\u00c5\u00d2ppq\u0000~\u0000\u00d1sq\u0000~\u0000\u0083\u0000\u00a1\u00c6\u009appsq\u0000~\u0000\u0085\u0000\u00a1\u00c6\u008fq\u0000~"
+"\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006Rollupq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083"
+"\u0001$UGppsq\u0000~\u0000_\u0001$U<q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001$U1ppq\u0000~\u0002<sq\u0000~\u0000\u0083\u0000\u00d2\u0085\u00efppsq\u0000~\u0000\u0085\u0000\u00d2"
+"\u0085\u00e4q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004BCWSq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000"
+"~\u0000\u0083\u0000\u00db^\u00fappsq\u0000~\u0000_\u0000\u00db^\u00efq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0000\u00db^\u00e4ppq\u0000~\u0002<sq\u0000~\u0000\u0083\u0000\u0089\u008f\u00a2ppsq\u0000~\u0000"
+"\u0085\u0000\u0089\u008f\u0097q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004BCWPq\u0000~\u0000\u0098q\u0000~\u0000\u0094"
+"sq\u0000~\u0000\u0083\u0001)\u008d\tppsq\u0000~\u0000_\u0001)\u008c\u00feq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001)\u008c\u00f3ppq\u0000~\u0000gsq\u0000~\u0000\u0083\u0000\u00b4\u0089\u00e8ppsq"
+"\u0000~\u0000\u0085\u0000\u00b4\u0089\u00ddq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0017PhysicalPer"
+"centCompleteq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0001K~\u0091ppsq\u0000~\u0000_\u0001K~\u0086q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001K~"
+"{ppsq\u0000~\u0000d\u0000~\\\u0096ppsq\u0000~\u0000\u00b9q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pq\u0000~\u0000\u00bcsq\u0000~\u0000\u00bdw\f\u0000\u0000\u0000"
+"\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00bfq\u0000~\u0000\u00c4sq\u0000~\u0000\u00bft\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derived"
+"q\u0000~\u0000\u0098sq\u0000~\u0000\u0083\u0000\u00cd!\u00e0ppsq\u0000~\u0000\u0085\u0000\u00cd!\u00d5q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000\u0011EarnedValueMethodq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00fb\u00e8&ppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00fb\u00e8\u001bq\u0000~\u0000\u0088psq\u0000~\u0000_\u0002\u00fb\u00e8\u0018q\u0000~\u0000\u0088p"
+"\u0000sq\u0000~\u0000\u0000\u0002\u00fb\u00e8\rppsq\u0000~\u0000_\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0083\u0000\u00ee&\"ppsq\u0000~\u0004\u001b\u0000\u00ee&\u0017q\u0000~\u0000\u0088psq\u0000~\u0000\u0085"
+"\u0000\u00ee&\u0014q\u0000~\u0000\u0088psr\u00002com.sun.msv.grammar.Expression$AnyStringExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000\u0095q\u0000~\u0004%sr\u0000 com.sun.msv.grammar.A"
+"nyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u008fq\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Ocom.tapsterrock.ms"
+"pdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkTyp"
+"et\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0083\u0002\r\u00c1\u00dbpps"
+"q\u0000~\u0000\u0085\u0002\r\u00c1\u00d0q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000fPredecesso"
+"rLinkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00d4y!ppsq\u0000~\u0000_\u0002\u00d4y\u0016q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0002\u00d4y\u000bppq\u0000~\u0001"
+"6sq\u0000~\u0000\u0083\u0001\u0011<\rppsq\u0000~\u0000\u0085\u0001\u0011<\u0002q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u008et\u0000\u0013ActualWorkProtectedq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0003\u00c9z`ppsq\u0000~\u0000_\u0003\u00c9zUq\u0000~\u0000\u0088"
+"p\u0000sq\u0000~\u0000\u0000\u0003\u00c9zJppq\u0000~\u00016sq\u0000~\u0000\u0083\u0002\u0006=Lppsq\u0000~\u0000\u0085\u0002\u0006=Aq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000"
+"~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u001bActualOvertimeWorkProtectedq\u0000~\u0000\u0098q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u0083\u0001\u008d\u00beVppsq\u0000~\u0004\u001b\u0001\u008d\u00beKq\u0000~\u0000\u0088psq\u0000~\u0000_\u0001\u008d\u00beHq\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000\u0001\u008d\u00be=ppsq\u0000~"
+"\u0000_\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0083\u0000\u00ee&\"ppsq\u0000~\u0004\u001b\u0000\u00ee&\u0017q\u0000~\u0000\u0088psq\u0000~\u0000\u0085\u0000\u00ee&\u0014q\u0000~\u0000\u0088pq\u0000~\u0004%q\u0000"
+"~\u0004\'q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Qcom.tapsterrock.mspdi.schema.ProjectType.Ta"
+"sksType.TaskType.ExtendedAttributeTypeq\u0000~\u0004*sq\u0000~\u0000\u0083\u0000\u009f\u0098\u000bppsq\u0000~\u0000"
+"\u0085\u0000\u009f\u0098\u0000q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0011ExtendedAttrib"
+"uteq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u001f\u00a3\u00cappsq\u0000~\u0004\u001b\u0002\u001f\u00a3\u00bfq\u0000~\u0000\u0088psq\u0000~\u0000_\u0002\u001f\u00a3\u00bcq\u0000~\u0000\u0088p\u0000sq"
+"\u0000~\u0000\u0000\u0002\u001f\u00a3\u00b1ppsq\u0000~\u0000_\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0083\u0000\u00ee&\"ppsq\u0000~\u0004\u001b\u0000\u00ee&\u0017q\u0000~\u0000\u0088psq\u0000~\u0000\u0085\u0000\u00ee&"
+"\u0014q\u0000~\u0000\u0088pq\u0000~\u0004%q\u0000~\u0004\'q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Hcom.tapsterrock.mspdi.schema."
+"ProjectType.TasksType.TaskType.BaselineTypeq\u0000~\u0004*sq\u0000~\u0000\u0083\u00011}\u007fpp"
+"sq\u0000~\u0000\u0085\u00011}tq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bBaselineq"
+"\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u0002\u00a8\u00b0ippsq\u0000~\u0004\u001b\u0002\u00a8\u00b0^q\u0000~\u0000\u0088psq\u0000~\u0000_\u0002\u00a8\u00b0[q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000"
+"\u0002\u00a8\u00b0Pppsq\u0000~\u0000_\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0083\u0000\u00ee&\"ppsq\u0000~\u0004\u001b\u0000\u00ee&\u0017q\u0000~\u0000\u0088psq\u0000~\u0000\u0085\u0000\u00ee&\u0014q\u0000~"
+"\u0000\u0088pq\u0000~\u0004%q\u0000~\u0004\'q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Kcom.tapsterrock.mspdi.schema.Proj"
+"ectType.TasksType.TaskType.OutlineCodeTypeq\u0000~\u0004*sq\u0000~\u0000\u0083\u0001\u00ba\u008a\u001epps"
+"q\u0000~\u0000\u0085\u0001\u00ba\u008a\u0013q\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008eq\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bOutlineCod"
+"eq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083\u00024\u00e2qppsq\u0000~\u0004\u001b\u00024\u00e2fq\u0000~\u0000\u0088psq\u0000~\u0000_\u00024\u00e2cq\u0000~\u0000\u0088p\u0000sq\u0000~"
+"\u0000\u0000\u00024\u00e2Xppsq\u0000~\u0000_\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0083\u0000\u00ee&\"ppsq\u0000~\u0004\u001b\u0000\u00ee&\u0017q\u0000~\u0000\u0088psq\u0000~\u0000\u0085\u0000\u00ee&\u0014q"
+"\u0000~\u0000\u0088pq\u0000~\u0004%q\u0000~\u0004\'q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000/com.tapsterrock.mspdi.schema.Ti"
+"mephasedDataTypeq\u0000~\u0004*sq\u0000~\u0000\u0083\u0001F\u00bc&ppsq\u0000~\u0000\u0085\u0001F\u00bc\u001bq\u0000~\u0000\u0088pq\u0000~\u0000\u0089sq\u0000~\u0000\u008e"
+"q\u0000~\u0000\u0091q\u0000~\u0000\u0092q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eTimephasedDataq\u0000~\u0000\u0098q\u0000~\u0000\u0094sr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthreshold"
+"L\u0000\u0006parentq\u0000~\u0004}[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp"
+"\u0000\u0000\u0001y\u0000\u0000\u0001\u00ccpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000"
+"\u0000\u0005\u00ffq\u0000~\u0001\u00dbq\u0000~\u0000Pppq\u0000~\u0004\u0005pppq\u0000~\u0003\u00f2pppppppppppppq\u0000~\u0001\u00d9q\u0000~\u0004\u0015ppppppppq"
+"\u0000~\u0000:ppppppppq\u0000~\u0001\u00cbppq\u0000~\u0000Bppppppppppppppppq\u0000~\u0000\u0015pq\u0000~\u0001\u00c9ppppppppp"
+"pppppppq\u0000~\u0001\u00f8q\u0000~\u0001\u00a4pppppq\u0000~\u0002$pppq\u0000~\u0002rppq\u0000~\u0002\u00fcpppppppppppppppppp"
+"pq\u0000~\u0001\u00bcppppq\u0000~\u0000Kq\u0000~\u0000Tppppq\u0000~\u0000\u00a3pppq\u0000~\u0001\u008bpppppppppppq\u0000~\u0003Wq\u0000~\u00001pp"
+"ppq\u0000~\u0000\u00a1q\u0000~\u0003\u00fdq\u0000~\u0000Xpq\u0000~\u0001\u0089pq\u0000~\u0003Oq\u0000~\u0003\u000bq\u0000~\u0003\u00c1pppppq\u0000~\u0000Cpq\u0000~\u0003Upq\u0000~\u0002"
+"\u0094pppppppppq\u0000~\u0003Mq\u0000~\u0003\tpppppppq\u0000~\u0002\u00a3pq\u0000~\u0002\u00c4ppppq\u0000~\u00037ppq\u0000~\u0002\u00cbppppq\u0000"
+"~\u0000,pq\u0000~\u00008ppppq\u0000~\u0002\u00a1pq\u0000~\u0003\u00a0pppq\u0000~\u0000)q\u0000~\u00006q\u0000~\u00035pq\u0000~\u0002\u00c9pppppppppppp"
+"pq\u0000~\u0003\u009eppppq\u0000~\u0000\u0011pppppppppq\u0000~\u0001-ppppppppppq\u0000~\u0001\u0015q\u0000~\u0002\u00ecppq\u0000~\u0001\u00e4pq\u0000~"
+"\u0000-ppppq\u0000~\u0001+q\u0000~\u0003\u00f5ppppppq\u0000~\u0002\u00acppq\u0000~\u0001\u0013ppppq\u0000~\u00004pppppq\u0000~\u0000\u0007ppppq\u0000~"
+"\u0002apppppppppppppq\u0000~\u0000\u0084pq\u0000~\u0003\u0013pppppq\u0000~\u0002_q\u0000~\u0001\u00acppppppppppppq\u0000~\u0003\u00d5pq"
+"\u0000~\u0002\u00b4q\u0000~\u0001\u00ffq\u0000~\u0003\u0011q\u0000~\u0003\u00ddpppq\u0000~\u0003\u00b5pq\u0000~\u0001\u001dppppppppq\u0000~\u0000\u0016ppppq\u0000~\u0001\u00fdpq\u0000~\u0001"
+"%q\u0000~\u0000=q\u0000~\u0000\u00b0q\u0000~\u0001\u009cppq\u0000~\u0001\u001bq\u0000~\u0000\u00f0ppppppppppppppq\u0000~\u0001#ppppppppppppp"
+"q\u0000~\u0001\u00c3q\u0000~\u0002\fq\u0000~\u0003(pq\u0000~\u0000^pppppppppq\u0000~\u0000Gpppppppq\u0000~\u0001\u00c1ppppq\u0000~\u0000\u009bpppp"
+"ppppppppppq\u0000~\u0003\fppppppq\u0000~\u0000\u0099pppppq\u0000~\u0000\u0005ppppppq\u0000~\u0002Ipppppppppq\u0000~\u0000"
+"Qpppppq\u0000~\u0000Iq\u0000~\u0000Eppq\u0000~\u0000Fpq\u0000~\u0002Gpppppppppppppq\u0000~\u0001\u0094pppppppq\u0000~\u0000Dp"
+"q\u0000~\u0000\u00d6q\u0000~\u0000;q\u0000~\u0000Sq\u0000~\u0002\u001cq\u0000~\u0004:q\u0000~\u0000\tq\u0000~\u0000\u001cppq\u0000~\u0003Xpq\u0000~\u0002\u00bbpppppppppppp"
+"ppq\u0000~\u00048ppq\u0000~\u0002\u0004pppq\u0000~\u0002\u00b9q\u0000~\u00005pq\u0000~\u0000\u0017q\u0000~\u0000&pppppq\u0000~\u0003\u00cdpq\u0000~\u0000$q\u0000~\u0003?p"
+"q\u0000~\u0000]ppppppppppppppppppq\u0000~\u0003=q\u0000~\u0002\u00d4q\u0000~\u0000\u0019ppppppppppppppppppq\u0000~\u0001"
+"\u0084q\u0000~\u0000\u001fppppq\u0000~\u0001\u00d4ppppq\u0000~\u0000\fppq\u0000~\u0004Rppq\u0000~\u0001\u00b3pppppppppq\u0000~\u00002q\u0000~\u0004Pppp"
+"ppq\u0000~\u0001;pq\u0000~\u0001\u00dcq\u0000~\u0001\u0016pq\u0000~\u0001\u00b1q\u0000~\u0004Opppq\u0000~\u0000\rq\u0000~\u0002#q\u0000~\u0003Gq\u0000~\u0003\u00e4q\u0000~\u0000Lppp"
+"ppppppppppppq\u0000~\u0004pppq\u0000~\u0002!q\u0000~\u0003Eq\u0000~\u0002\u00f3q\u0000~\u0000\"q\u0000~\u0003\u00e2q\u0000~\u0004Cppppq\u0000~\u0001\u00ccq\u0000"
+"~\u0004npq\u0000~\u0002\u00fbppq\u0000~\u0004Apppppq\u0000~\u0004mpq\u0000~\u0002\u00f1ppq\u0000~\u0004@pppq\u0000~\u0000\u001bpppq\u0000~\u0002\u00f9pq\u0000~\u0002"
+"Yq\u0000~\u0003\u00a9ppppppppppppppq\u0000~\u0000/q\u0000~\u0001\u001epppq\u0000~\u0002\u0081q\u0000~\u0002Wpppq\u0000~\u0003\u0099ppppppppp"
+"pppppppq\u0000~\u0002\u007fpq\u0000~\u0000+pq\u0000~\u0002\u0093pppppppppppppppppq\u0000~\u0000\u00f7ppq\u0000~\u0002\u009cq\u0000~\u0002\u0091q\u0000"
+"~\u0002\u00c3pppppppppppq\u0000~\u0000Rppq\u0000~\u0003Ppq\u0000~\u0000\u00f5ppq\u0000~\u0002\u00c1pppppq\u0000~\u0000\u009cppppppppppq"
+"\u0000~\u0002Qppq\u0000~\u0003\u00ecpq\u0000~\u0000\u0018pq\u0000~\u0000\u001eppppppq\u0000~\u0000>pppppppq\u0000~\u0002Opq\u0000~\u0002Jq\u0000~\u0002\u00dcq\u0000~"
+"\u0003\u00eappppq\u0000~\u0002\u00ebpppppppq\u0000~\u0000!ppppppppq\u0000~\u0000\u00c9pq\u0000~\u0002\u00abppq\u0000~\u0002\u00e9q\u0000~\u0000?q\u0000~\u0000\u001ap"
+"pppppppppppppppq\u0000~\u0002\u00a9ppppq\u0000~\u0000Mpppppq\u0000~\u0004\u001fppppppppq\u0000~\u0000\u00e4ppppq\u0000~\u0004"
+"\u001dpq\u0000~\u0000Yppppppppq\u0000~\u0004\u001aq\u0000~\u00000ppppppq\u0000~\u0000\u00b7q\u0000~\u0001|ppq\u0000~\u0000.q\u0000~\u0002\u0014q\u0000~\u0003/pq"
+"\u0000~\u0003\u0003pq\u0000~\u00043pppppppq\u0000~\u0002\u00bcpppq\u0000~\u0000\u00b5ppq\u0000~\u0002\u000bpq\u0000~\u0003-ppq\u0000~\u0003\u0001pppppppppp"
+"ppppppq\u0000~\u0002\tpppppppq\u0000~\u0000\u000eppq\u0000~\u0002Zq\u0000~\u0004\"q\u0000~\u0004Fq\u0000~\u0004Uq\u0000~\u0004dq\u0000~\u0004spq\u0000~\u0004"
+"apppq\u0000~\u0004!q\u0000~\u0004Eq\u0000~\u0004Tq\u0000~\u0004cq\u0000~\u0004rq\u0000~\u0001\u00f7q\u0000~\u0001\u00a3q\u0000~\u0002+ppq\u0000~\u0004_pppq\u0000~\u0002\u00e3p"
+"ppq\u0000~\u0000Vppq\u0000~\u0004^pppppq\u0000~\u0001\u00f5q\u0000~\u0001\u00a1q\u0000~\u0002)pppq\u0000~\u0000<q\u0000~\u0001\u00c4pq\u0000~\u0002\u00e1ppq\u0000~\u0001\u00bb"
+"pppq\u0000~\u00007pppppq\u0000~\u0002\u008bpppq\u0000~\u0001\u0093q\u0000~\u00023pppq\u0000~\u0001Bppq\u0000~\u0001\u00b9q\u0000~\u0000\'pppq\u0000~\u0002\u001bp"
+"pppq\u0000~\u0002\u0089pppq\u0000~\u00021q\u0000~\u0000Aq\u0000~\u0001\u0091ppq\u0000~\u0001@q\u0000~\u0000\u0010ppppppq\u0000~\u0002\u0019ppppq\u0000~\u0000\u000fpq"
+"\u0000~\u0002\u00f4q\u0000~\u0000\u00ebppppppppppppppppppq\u0000~\u0002yppq\u0000~\u0000\u00e9ppppq\u0000~\u0000\u0012ppppppq\u0000~\u0001\u0001p"
+"q\u0000~\u0001\u008cppppq\u0000~\u0002wppppppppppppq\u0000~\u0000\u0013q\u0000~\u0002\u0084q\u0000~\u0000\u00ffq\u0000~\u0004Ypppppq\u0000~\u0002\u00d3ppq\u0000"
+"~\u0000\u00fappppppq\u0000~\u0002\u00ccq\u0000~\u0000(ppppppppq\u0000~\u0001\u0083pq\u0000~\u0002\u00d1ppq\u0000~\u0002Rq\u0000~\u0001\u00e3q\u0000~\u0004\u0004q\u0000~\u0002\u00a4"
+"q\u0000~\u0001\u000eppq\u0000~\u0000 ppq\u0000~\u00038ppppppq\u0000~\u0001\u0081q\u0000~\u0004wpppq\u0000~\u0000Oq\u0000~\u0001\u00e1q\u0000~\u0004\u0002q\u0000~\u0004Jq\u0000"
+"~\u0002;q\u0000~\u0003\u00a1q\u0000~\u0000\bq\u0000~\u00015ppppppq\u0000~\u0003\u0004pppppppppppq\u0000~\u00029pq\u0000~\u0003\u00bcq\u0000~\u00013q\u0000~\u0001"
+"\tpq\u0000~\u0003_pppq\u0000~\u0001\u00abpppq\u0000~\u0001\u00b4pq\u0000~\u0001.ppppppq\u0000~\u0003\u00a8q\u0000~\u0003\u00baq\u0000~\u0001\u0007q\u0000~\u0000#q\u0000~\u0003\u00d4"
+"q\u0000~\u0003]pppq\u0000~\u0001\u00a9ppq\u0000~\u0002jpq\u0000~\u00009ppq\u0000~\u0002qppq\u0000~\u0003Hq\u0000~\u0003\u00e5q\u0000~\u0003\u00a6q\u0000~\u0003\u00d2ppppq"
+"\u0000~\u0001\u009bppppppppppq\u0000~\u0002oppppppq\u0000~\u0000Upppq\u0000~\u0001\u0099q\u0000~\u0000Wq\u0000~\u00030pppppppq\u0000~\u0000\u0006"
+"pppppppq\u0000~\u0002\u009bppppppq\u0000~\u0003\u00c8pppppq\u0000~\u0003\u00b0ppppq\u0000~\u0000Zpppq\u0000~\u0002\u0099ppppppq\u0000~\u0003"
+"\u00c6pppppq\u0000~\u0003\u00aepq\u0000~\u0001&pq\u0000~\u0000Npppppppppppppq\u0000~\u0002,pppppppppppq\u0000~\u0000Jppp"
+"pppq\u0000~\u0000\u001dppppppppppq\u0000~\u0001\u00ebpppq\u0000~\u0000[q\u0000~\u0000%pppq\u0000~\u0002\u00dbq\u0000~\u0003\u00fcpq\u0000~\u0000\u0014pppq\u0000"
+"~\u00024ppq\u0000~\u00003q\u0000~\u0000\u00d0pq\u0000~\u0001\u00e9pppq\u0000~\u0004+pppq\u0000~\u0002\u00e4q\u0000~\u0002\u00d9q\u0000~\u0000@q\u0000~\u0003\u00fapppq\u0000~\u0003\u00ed"
+"ppppq\u0000~\u0000\u00cepppppq\u0000~\u0000\u00ddpppppq\u0000~\u0002\u00b3ppppppppppq\u0000~\u0002\u008cppppq\u0000~\u0000\u00dbpppq\u0000~\u0004"
+";pq\u0000~\u0002\u00b1q\u0000~\u0002\u0013q\u0000~\u0002zppppq\u0000~\u0000cq\u0000~\u0004\fq\u0000~\u0001\u00f0q\u0000~\u0002Bpppq\u0000~\u0003\u00dcppppppppq\u0000~"
+"\u0002\u0011pq\u0000~\u0000\\ppppq\u0000~\u0004\npppq\u0000~\u00042pq\u0000~\u0003\u00daq\u0000~\u0001\u0002q\u0000~\u0001\u00d3q\u0000~\u0000\nppppppq\u0000~\u0000\u000bpq\u0000"
+"~\u0004hpppppq\u0000~\u0003\u00f4q\u0000~\u0000Hq\u0000~\u00040ppq\u0000~\u0000*q\u0000~\u0001\u00d1ppppppq\u0000~\u0003@"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected boolean has_BCWP;
                protected float _BCWP;
                protected java.util.Calendar _Start;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected java.math.BigDecimal _Cost;
                protected java.util.Calendar _Finish;
                protected java.math.BigInteger _Number;
                protected com.sun.xml.bind.util.ListImpl _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                protected java.lang.String _Duration;
                protected boolean has_Interim;
                protected boolean _Interim;
                protected java.lang.String _Work;
                protected boolean has_EstimatedDuration;
                protected boolean _EstimatedDuration;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public java.util.Calendar getStart() {
                    return _Start;
                }

                public void setStart(java.util.Calendar value) {
                    _Start = value;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public java.math.BigDecimal getCost() {
                    return _Cost;
                }

                public void setCost(java.math.BigDecimal value) {
                    _Cost = value;
                }

                public java.util.Calendar getFinish() {
                    return _Finish;
                }

                public void setFinish(java.util.Calendar value) {
                    _Finish = value;
                }

                public java.math.BigInteger getNumber() {
                    return _Number;
                }

                public void setNumber(java.math.BigInteger value) {
                    _Number = value;
                }

                public java.util.List getTimephasedData() {
                    return _TimephasedData;
                }

                public java.lang.String getDuration() {
                    return _Duration;
                }

                public void setDuration(java.lang.String value) {
                    _Duration = value;
                }

                public boolean isInterim() {
                    return _Interim;
                }

                public void setInterim(boolean value) {
                    _Interim = value;
                    has_Interim = true;
                }

                public java.lang.String getWork() {
                    return _Work;
                }

                public void setWork(java.lang.String value) {
                    _Work = value;
                }

                public boolean isEstimatedDuration() {
                    return _EstimatedDuration;
                }

                public void setEstimatedDuration(boolean value) {
                    _EstimatedDuration = value;
                    has_EstimatedDuration = true;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = _TimephasedData.size();
                    while (idx8 != len8) {
                        context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                        int idx_0 = idx8;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_0 ++)), "TimephasedData");
                        context.endNamespaceDecls();
                        int idx_1 = idx8;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_1 ++)), "TimephasedData");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx8 ++)), "TimephasedData");
                        context.endElement();
                    }
                    if (_Number!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Number");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Number)), "Number");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_Interim) {
                        context.startElement("http://schemas.microsoft.com/project", "Interim");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Interim)), "Interim");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Start!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Start");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Finish!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Finish");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Duration!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Duration");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Duration), "Duration");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_EstimatedDuration) {
                        context.startElement("http://schemas.microsoft.com/project", "EstimatedDuration");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EstimatedDuration)), "EstimatedDuration");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Work), "Work");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Cost!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = _TimephasedData.size();
                    while (idx8 != len8) {
                        idx8 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = _TimephasedData.size();
                    while (idx8 != len8) {
                        idx8 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u001b\u00bc\u00ca\u0010ppsq\u0000~\u0000\u0000\u001a,$:ppsq\u0000~\u0000\u0000\u0018"
+"\u000f~\u00cdppsq\u0000~\u0000\u0000\u0014\u00f0\u00e8Uppsq\u0000~\u0000\u0000\u0010\u00b9dlppsq\u0000~\u0000\u0000\u000f\b\u00c1\u00deppsq\u0000~\u0000\u0000\f\u00fd\u00f2hppsq\u0000~\u0000\u0000\t"
+"\u0012?\u001eppsq\u0000~\u0000\u0000\u0007\u0011\u00e1\u00b2ppsq\u0000~\u0000\u0000\u0004\u00f6&\u00b6ppsq\u0000~\u0000\u0000\u0003\u00ff+\u00feppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u007f\u00f0\u00dfppsr\u0000 com.sun.msv.grammar"
+".OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u007f\u00f0\u00d4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u007f\u00f0\u00d1q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0002\u007f\u00f0\u00c6ppsq\u0000~\u0000"
+"\u0017\u0000\u00ee&-pp\u0000sq\u0000~\u0000\u0010\u0000\u00ee&\"ppsq\u0000~\u0000\u0012\u0000\u00ee&\u0017q\u0000~\u0000\u0016psr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0018xq\u0000~\u0000\u0003\u0000\u00ee&"
+"\u0014q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$AnyStringExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0015\u0001q\u0000~\u0000\"sr\u0000 com.sun.msv.grammar.An"
+"yNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000#psr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000*xq\u0000~\u0000%t\u0000/com.tapsterrock.mspdi.schema.TimephasedDat"
+"aTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0010\u0001\u0091\u00ca"
+"\u0094ppsq\u0000~\u0000\u001f\u0001\u0091\u00ca\u0089q\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004nam"
+"et\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv"
+".datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000*L\u0000\btypeNameq\u0000~\u0000*L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000"
+"\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000*L\u0000\fnamespaceURIq\u0000~\u0000*xpq\u0000~\u0000;q\u0000~\u0000:sq\u0000~\u0000)t\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u000eTimephasedData"
+"t\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000(sq\u0000~\u0000\u0010\u0001\u007f;\u001appsq\u0000~"
+"\u0000\u0017\u0001\u007f;\u000fq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0001\u007f;\u0004ppsq\u0000~\u00000\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatyp"
+"e.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Int"
+"egerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datat"
+"ype/xsd/XSDatatypeImpl;xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0007integerq\u0000~\u0000>sr\u0000,com.sun"
+".msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;"
+"com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT"
+"\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000OL"
+"\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tf"
+"acetNameq\u0000~\u0000*xq\u0000~\u00007ppq\u0000~\u0000>\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Num"
+"berType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0007decimalq\u0000~\u0000>q\u0000~\u0000Xt\u0000\u000efraction"
+"Digits\u0000\u0000\u0000\u0000q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000:sq\u0000~\u0000\u0010\u0001\n7\u00f9ppsq\u0000~\u0000\u001f\u0001\n7\u00eeq\u0000~\u0000\u0016pq"
+"\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0006Numberq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0000\u00f6\u00fa\u00b3"
+"ppsq\u0000~\u0000\u0017\u0000\u00f6\u00fa\u00a8q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0000\u00f6\u00fa\u009dppsq\u0000~\u00000\u00001\u00ff3ppsr\u0000$com.sun.msv.d"
+"atatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0007booleanq\u0000~\u0000>"
+"q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000gq\u0000~\u0000:sq\u0000~\u0000\u0010\u0000\u00c4\u00fbeppsq\u0000~\u0000\u001f\u0000\u00c4\u00fbZq\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)"
+"q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0007Interimq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0002\u001b\u00ba\u00f7ppsq\u0000~\u0000\u0017\u0002"
+"\u001b\u00ba\u00ecq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0002\u001b\u00ba\u00e1ppsq\u0000~\u00000\u0001Kn\u00d8ppsr\u0000%com.sun.msv.datatype.x"
+"sd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateT"
+"imeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\bdateTimeq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000A"
+"q\u0000~\u0000uq\u0000~\u0000:sq\u0000~\u0000\u0010\u0000\u00d0L\u0004ppsq\u0000~\u0000\u001f\u0000\u00d0K\u00f9q\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq"
+"\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0005Startq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0002\u0000]gppsq\u0000~\u0000\u0017\u0002\u0000]\\q\u0000~\u0000\u0016p\u0000sq\u0000"
+"~\u0000\u0000\u0002\u0000]Qppq\u0000~\u0000qsq\u0000~\u0000\u0010\u0000\u00b4\u00eetppsq\u0000~\u0000\u001f\u0000\u00b4\u00eeiq\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000"
+"~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0006Finishq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0003\u00eb\u00b3Eppsq\u0000~\u0000\u0017\u0003\u00eb\u00b3:q\u0000~\u0000\u0016"
+"p\u0000sq\u0000~\u0000\u0000\u0003\u00eb\u00b3/ppsq\u0000~\u00000\u0001\u00c3<\u00f9ppsr\u0000%com.sun.msv.datatype.xsd.Durat"
+"ionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\bdurationq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000"
+"\u008aq\u0000~\u0000:sq\u0000~\u0000\u0010\u0002(v1ppsq\u0000~\u0000\u001f\u0002(v&q\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000("
+"sq\u0000~\u0000)t\u0000\bDurationq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0002\n\u00cfqppsq\u0000~\u0000\u0017\u0002\n\u00cffq\u0000~\u0000\u0016p\u0000sq\u0000~"
+"\u0000\u0000\u0002\n\u00cf[ppsq\u0000~\u00000\u0001\f$\u008appsr\u0000)com.sun.msv.datatype.xsd.Enumeration"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.d"
+"atatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000"
+"Tq\u0000~\u0000Hpq\u0000~\u0000>\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00ba"
+"D\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.datatype.xsd.Integ"
+"erValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000*xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b"
+"\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000\u009ct\u0000\u000241sq\u0000~\u0000\u009ct\u0000\u000239sq\u0000~\u0000\u009ct\u0000\u000236sq\u0000~\u0000\u009ct\u0000\u00016sq\u0000~\u0000"
+"\u009ct\u0000\u00015sq\u0000~\u0000\u009ct\u0000\u000237sq\u0000~\u0000\u009ct\u0000\u000211sq\u0000~\u0000\u009ct\u0000\u000240sq\u0000~\u0000\u009ct\u0000\u00014sq\u0000~\u0000\u009ct\u0000\u000212s"
+"q\u0000~\u0000\u009ct\u0000\u000252sq\u0000~\u0000\u009ct\u0000\u00017sq\u0000~\u0000\u009ct\u0000\u000238sq\u0000~\u0000\u009ct\u0000\u000220sq\u0000~\u0000\u009ct\u0000\u000242sq\u0000~\u0000\u009ct"
+"\u0000\u000253sq\u0000~\u0000\u009ct\u0000\u000243sq\u0000~\u0000\u009ct\u0000\u000221sq\u0000~\u0000\u009ct\u0000\u000210sq\u0000~\u0000\u009ct\u0000\u000235sq\u0000~\u0000\u009ct\u0000\u000244s"
+"q\u0000~\u0000\u009ct\u0000\u00019sq\u0000~\u0000\u009ct\u0000\u000219sq\u0000~\u0000\u009ct\u0000\u00018sq\u0000~\u0000\u009ct\u0000\u000251xq\u0000~\u0000@sq\u0000~\u0000At\u0000\u000finte"
+"ger-derivedq\u0000~\u0000Hsq\u0000~\u0000\u0010\u0000\u00fe\u00aa\u00ccppsq\u0000~\u0000\u001f\u0000\u00fe\u00aa\u00c1q\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000D"
+"q\u0000~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u000eDurationFormatq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0001\u00b0\u00a2\u0089ppsq\u0000~\u0000"
+"\u0017\u0001\u00b0\u00a2~q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0001\u00b0\u00a2sppq\u0000~\u0000dsq\u0000~\u0000\u0010\u0001~\u00a3;ppsq\u0000~\u0000\u001f\u0001~\u00a30q\u0000~\u0000\u0016pq\u0000~"
+"\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0011EstimatedDurationq\u0000~\u0000Hq\u0000~\u0000(s"
+"q\u0000~\u0000\u0010\u00047\u0083\u00e4ppsq\u0000~\u0000\u0017\u00047\u0083\u00d9q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u00047\u0083\u00ceppq\u0000~\u0000\u0087sq\u0000~\u0000\u0010\u0002tF\u00d0ppsq\u0000"
+"~\u0000\u001f\u0002tF\u00c5q\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0004Workq\u0000~\u0000Hq\u0000~"
+"\u0000(sq\u0000~\u0000\u0010\u0003\u001e\u0096sppsq\u0000~\u0000\u0017\u0003\u001e\u0096hq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0003\u001e\u0096]ppsq\u0000~\u00000\u0000\u00a9P\u0018ppq\u0000~\u0000X"
+"q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000Yq\u0000~\u0000:sq\u0000~\u0000\u0010\u0002uF@ppsq\u0000~\u0000\u001f\u0002uF5q\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)"
+"q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0004Costq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0002\u001c\u00a5hppsq\u0000~\u0000\u0017\u0002\u001c\u00a5]"
+"q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0002\u001c\u00a5Rppsq\u0000~\u00000\u0000Q\u00cf=ppsr\u0000\"com.sun.msv.datatype.xsd."
+"FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNum"
+"berType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0005floatq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000\u00faq\u0000"
+"~\u0000:sq\u0000~\u0000\u0010\u0001\u00ca\u00d6\u0010ppsq\u0000~\u0000\u001f\u0001\u00ca\u00d6\u0005q\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000(sq\u0000"
+"~\u0000)t\u0000\u0004BCWSq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010\u0001\u0090\u00a5\u00d1ppsq\u0000~\u0000\u0017\u0001\u0090\u00a5\u00c6q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000\u0001\u0090\u00a5\u00bbp"
+"pq\u0000~\u0000\u00f6sq\u0000~\u0000\u0010\u0001>\u00d6yppsq\u0000~\u0000\u001f\u0001>\u00d6nq\u0000~\u0000\u0016pq\u0000~\u00003sq\u0000~\u0000)q\u0000~\u0000Dq\u0000~\u0000Eq\u0000~\u0000("
+"sq\u0000~\u0000)t\u0000\u0004BCWPq\u0000~\u0000Hq\u0000~\u0000(sr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\n[\u0000\u0005tablet\u0000!"
+"[Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u00002\u0000\u0000\u00009pur\u0000![Lcom.sun.ms"
+"v.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppq\u0000~\u0000\\q\u0000~\u0000\u0084q\u0000"
+"~\u0000\u00fcppppppppq\u0000~\u0000\tpppppppq\u0000~\u0000\u000fppppppppppq\u0000~\u0000\fq\u0000~\u0000\nq\u0000~\u0000Kppppppp"
+"pppq\u0000~\u0000\u007fppq\u0000~\u0000\u000bq\u0000~\u0001\u0003ppppppq\u0000~\u0000Iq\u0000~\u0000\rpppq\u0000~\u0000\u0006pppq\u0000~\u0000ppppppq\u0000~"
+"\u0001\u0001pppppppppppppppq\u0000~\u0000npq\u0000~\u0000\u00d4ppq\u0000~\u0000cpq\u0000~\u0000\u00e4ppq\u0000~\u0000ipppppppq\u0000~\u0000\u00e3"
+"ppq\u0000~\u0000\u00f5q\u0000~\u0000\u0007ppq\u0000~\u0000\u00ebpq\u0000~\u0000apppq\u0000~\u0000\u001bppppppppq\u0000~\u0000\u00e1q\u0000~\u0000\u001epq\u0000~\u0000\u00f3q\u0000~"
+"\u0000~q\u0000~\u0000\u0014pq\u0000~\u0000\u00e9pq\u0000~\u0000\u00dbq\u0000~\u0001\u0004pq\u0000~\u0000\u001dpq\u0000~\u0000\u0093q\u0000~\u0000\u00dcq\u0000~\u0000\u0011pq\u0000~\u0000\u0005q\u0000~\u0000.pq\u0000"
+"~\u0000\u000eppppq\u0000~\u0000|q\u0000~\u0000\bpppq\u0000~\u0000\u00d9ppq\u0000~\u0000\u008cpq\u0000~\u0000\u0091q\u0000~\u0000\u00eepppppq\u0000~\u0000wpq\u0000~\u0000\u0086p"
+"ppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------------------------------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 16;
                                        return ;
                                    }
                                    state = 18;
                                    continue outer;
                                case  1 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  24 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 25;
                                        return ;
                                    }
                                    state = 27;
                                    continue outer;
                                case  36 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  21 :
                                    if (("EstimatedDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 22;
                                        return ;
                                    }
                                    state = 24;
                                    continue outer;
                                case  18 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 19;
                                        return ;
                                    }
                                    state = 21;
                                    continue outer;
                                case  30 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 31;
                                        return ;
                                    }
                                    state = 33;
                                    continue outer;
                                case  3 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  33 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 34;
                                        return ;
                                    }
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  27 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 28;
                                        return ;
                                    }
                                    state = 30;
                                    continue outer;
                                case  6 :
                                    if (("Interim" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  35 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 36;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  17 :
                                    if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 18;
                                        return ;
                                    }
                                    break;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  23 :
                                    if (("EstimatedDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 24;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  36 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  29 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 30;
                                        return ;
                                    }
                                    break;
                                case  14 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  32 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 33;
                                        return ;
                                    }
                                    break;
                                case  20 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 21;
                                        return ;
                                    }
                                    break;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  8 :
                                    if (("Interim" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  26 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 27;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  36 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  36 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  4 :
                                        eatText1(value);
                                        state = 5;
                                        return ;
                                    case  13 :
                                        eatText2(value);
                                        state = 14;
                                        return ;
                                    case  31 :
                                        eatText3(value);
                                        state = 32;
                                        return ;
                                    case  7 :
                                        eatText4(value);
                                        state = 8;
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  24 :
                                        state = 27;
                                        continue outer;
                                    case  19 :
                                        eatText5(value);
                                        state = 20;
                                        return ;
                                    case  36 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  25 :
                                        eatText6(value);
                                        state = 26;
                                        return ;
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  34 :
                                        eatText7(value);
                                        state = 35;
                                        return ;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  30 :
                                        state = 33;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  16 :
                                        eatText8(value);
                                        state = 17;
                                        return ;
                                    case  33 :
                                        state = 36;
                                        continue outer;
                                    case  22 :
                                        eatText9(value);
                                        state = 23;
                                        return ;
                                    case  10 :
                                        eatText10(value);
                                        state = 11;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  27 :
                                        state = 30;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  28 :
                                        eatText11(value);
                                        state = 29;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Number = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWS = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Interim = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Interim = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText6(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText7(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWP = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText8(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Duration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText9(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _EstimatedDuration = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_EstimatedDuration = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText10(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText11(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected java.lang.String _Value;
                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public java.lang.String getValue() {
                    return _Value;
                }

                public void setValue(java.lang.String value) {
                    _Value = value;
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Value), "Value");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\nX\"\"ppsq\u0000~\u0000\u0000\u0006\u0088D\u00deppsq\u0000~\u0000\u0000\u0005"
+"\u001e}\u0005ppsq\u0000~\u0000\u0000\u0003V\u00071ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001\u0001H\u0002#ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom"
+".sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAtt"
+"ributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001H\u0002\u0018sr\u0000\u0011java.lang.Boolean\u00cd "
+"r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001H\u0002\rppsr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006pp"
+"sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFace"
+"tst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.ms"
+"v.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.d"
+"atatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype."
+"xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/St"
+"ring;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$C"
+"ollapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigi"
+"tsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataT"
+"ypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needV"
+"alueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"
+"datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001bppq\u0000~\u0000#\u0001\u0000sr"
+"\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft"
+"\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\t\u0000\u00d2\u00ff\u0002ppsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000"
+"\u00d2\u00fe\u00f7q\u0000~\u0000\u0010psq\u0000~\u0000\u0012\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#c"
+"om.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instances"
+"r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u00009t\u0000\u0003UIDt\u0000$http://schemas.microsoft."
+"com/projectq\u0000~\u0000?sq\u0000~\u0000\t\u0002\u000e\u0005\tppsq\u0000~\u0000\u000b\u0002\u000e\u0004\u00feq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0002\u000e\u0004\u00f3ppsq\u0000"
+"~\u0000\u0012\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
+"\u0000\risAlwaysValidxq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000"
+"/q\u0000~\u0000Jq\u0000~\u0000\u001fsq\u0000~\u0000\t\u0002\t\u00819ppsq\u0000~\u00002\u0002\t\u0081.q\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000="
+"q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007FieldIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0001\u00c8u\u00cfppsq\u0000~\u0000\u000b\u0001\u00c8u\u00c4q\u0000~\u0000\u0010p\u0000"
+"sq\u0000~\u0000\u0000\u0001\u00c8u\u00b9ppq\u0000~\u0000Gsq\u0000~\u0000\t\u0001\u00c3\u00f1\u00ffppsq\u0000~\u00002\u0001\u00c3\u00f1\u00f4q\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009q\u0000~\u0000"
+"<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0001i\u00c7\u00d4ppsq\u0000~\u0000\u000b\u0001i\u00c7\u00c9q\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0001i\u00c7\u00beppq\u0000~\u0000\u0015sq\u0000~\u0000\t\u0000\u00f4\u00c4\u00b3ppsq\u0000~\u00002\u0000\u00f4\u00c4\u00a8q\u0000~\u0000\u0010pq\u0000~\u00004sq\u0000~\u00009"
+"q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007ValueIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\t\u0003\u00cf\u00dd?ppsq\u0000~\u0000\u000b\u0003"
+"\u00cf\u00dd4q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0003\u00cf\u00dd)ppsq\u0000~\u0000\u0012\u0001\u00d1\u00a6\u00c3ppsr\u0000)com.sun.msv.datatype.x"
+"sd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u0000"
+"9com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7"
+"Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000Cpq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011java"
+".util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.data"
+"type.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001cxr\u0000\u0010java.la"
+"ng.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000nt\u0000\u000241sq\u0000~\u0000nt\u0000\u000239sq\u0000~\u0000nt\u0000\u000236s"
+"q\u0000~\u0000nt\u0000\u00016sq\u0000~\u0000nt\u0000\u00015sq\u0000~\u0000nt\u0000\u000237sq\u0000~\u0000nt\u0000\u000211sq\u0000~\u0000nt\u0000\u000240sq\u0000~\u0000nt\u0000"
+"\u00014sq\u0000~\u0000nt\u0000\u000212sq\u0000~\u0000nt\u0000\u000252sq\u0000~\u0000nt\u0000\u00017sq\u0000~\u0000nt\u0000\u000238sq\u0000~\u0000nt\u0000\u000220sq\u0000~"
+"\u0000nt\u0000\u000242sq\u0000~\u0000nt\u0000\u000253sq\u0000~\u0000nt\u0000\u000243sq\u0000~\u0000nt\u0000\u000221sq\u0000~\u0000nt\u0000\u000210sq\u0000~\u0000nt\u0000\u0002"
+"35sq\u0000~\u0000nt\u0000\u000244sq\u0000~\u0000nt\u0000\u00019sq\u0000~\u0000nt\u0000\u000219sq\u0000~\u0000nt\u0000\u00018sq\u0000~\u0000nt\u0000\u000251xq\u0000~\u0000"
+".sq\u0000~\u0000/t\u0000\u000finteger-derivedq\u0000~\u0000Csq\u0000~\u0000\t\u0001\u00fe6appsq\u0000~\u00002\u0001\u00fe6Vq\u0000~\u0000\u0010pq\u0000"
+"~\u00004sq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000eDurationFormatq\u0000~\u0000Cq\u0000~\u0000?sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0000\u00ac[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u0000\u0013\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppq\u0000~\u0000^ppppppppppq\u0000~\u00001pq\u0000~\u0000Dpppppppppppppppppp"
+"q\u0000~\u0000]ppppppppppq\u0000~\u0000\u0011pppppppppq\u0000~\u0000\u00a6q\u0000~\u0000[pq\u0000~\u0000\u0007ppppppppq\u0000~\u0000\npp"
+"pppppppppppppppppppq\u0000~\u0000\bppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppq"
+"\u0000~\u0000\u0006ppq\u0000~\u0000Vppppppq\u0000~\u0000Upppppppppppppppppppppq\u0000~\u0000Spppq\u0000~\u0000epppp"
+"pppppppppppppppq\u0000~\u0000Npq\u0000~\u0000cppppq\u0000~\u0000Fpppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  12 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  14 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  13 :
                                        eatText2(value);
                                        state = 14;
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  10 :
                                        eatText3(value);
                                        state = 11;
                                        return ;
                                    case  4 :
                                        eatText4(value);
                                        state = 5;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        eatText5(value);
                                        state = 8;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Value = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType.class);
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\u0003<yppsq\u0000~\u0000\u0000\u0003\u0016\u0098\u008bppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001z\u00e0\u008eppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001z\u00e0\u0083sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0001z\u00e0xppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype"
+".xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Inte"
+"gerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseType"
+"q\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTyp"
+"e;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019ppq\u0000~\u0000!\u0001\u0000sr\u0000#com.sun.msv.datatype.x"
+"sd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007decimalq\u0000~\u0000!q\u0000~\u0000(t\u0000\u000efr"
+"actionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u0007\u0001\u0005\u00ddmppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001\u0005\u00ddbq\u0000~\u0000\u000epsq\u0000~\u0000\u0010\u0000\u0083\u00d3\u008appsr\u0000"
+"\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0005"
+"QNameq\u0000~\u0000!q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u00005q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.Simpl"
+"eNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr"
+"\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\r\u0001psq\u0000~"
+"\u00007t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000=sq\u0000~\u0000\u0007\u0001\u009b"
+"\u00b7\u00f8ppsq\u0000~\u0000\t\u0001\u009b\u00b7\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000\u0001\u009b\u00b7\u00e2ppsq\u0000~\u0000\u0010\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv"
+".datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001dt\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 \u0001q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000Hq\u0000~\u0000\u001dsq\u0000~\u0000\u0007\u0001\u00974(pps"
+"q\u0000~\u00000\u0001\u00974\u001dq\u0000~\u0000\u000epq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007FieldIDq\u0000~"
+"\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0007\u0002\u00ec\u00a3\u00e9ppsq\u0000~\u0000\t\u0002\u00ec\u00a3\u00deq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000\u0002\u00ec\u00a3\u00d3ppq\u0000~\u0000\u0013sq\u0000~\u0000\u0007\u0002"
+"w\u00a0\u00c8ppsq\u0000~\u00000\u0002w\u00a0\u00bdq\u0000~\u0000\u000epq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007Valu"
+"eIDq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHa"
+"sh;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8"
+"\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000Z[\u0000\u0005tablet\u0000![Lcom/sun/"
+"msv/grammar/Expression;xp\u0000\u0000\u0000\u000b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar."
+"Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppq\u0000~\u0000Bpppppppppppppp"
+"ppppppppppppq\u0000~\u0000/pppppppppppppppppppppppppppppppq\u0000~\u0000\u000fq\u0000~\u0000\u0005pp"
+"ppppppppppppppppq\u0000~\u0000Tpq\u0000~\u0000\bpppppppppppppppppq\u0000~\u0000\u0006ppppppppppp"
+"q\u0000~\u0000Spppppppppppppppppppppq\u0000~\u0000Qppppppppppppppppppppppppppppq"
+"\u0000~\u0000Lppppppq\u0000~\u0000Dpppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  8 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  7 :
                                        eatText2(value);
                                        state = 8;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  9 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  4 :
                                        eatText3(value);
                                        state = 5;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class PredecessorLinkTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _Type;
                protected java.lang.String _CrossProjectName;
                protected java.math.BigInteger _PredecessorUID;
                protected java.math.BigInteger _LagFormat;
                protected boolean has_CrossProject;
                protected boolean _CrossProject;
                protected java.math.BigInteger _LinkLag;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType.class);
                }

                public java.math.BigInteger getType() {
                    return _Type;
                }

                public void setType(java.math.BigInteger value) {
                    _Type = value;
                }

                public java.lang.String getCrossProjectName() {
                    return _CrossProjectName;
                }

                public void setCrossProjectName(java.lang.String value) {
                    _CrossProjectName = value;
                }

                public java.math.BigInteger getPredecessorUID() {
                    return _PredecessorUID;
                }

                public void setPredecessorUID(java.math.BigInteger value) {
                    _PredecessorUID = value;
                }

                public java.math.BigInteger getLagFormat() {
                    return _LagFormat;
                }

                public void setLagFormat(java.math.BigInteger value) {
                    _LagFormat = value;
                }

                public boolean isCrossProject() {
                    return _CrossProject;
                }

                public void setCrossProject(boolean value) {
                    _CrossProject = value;
                    has_CrossProject = true;
                }

                public java.math.BigInteger getLinkLag() {
                    return _LinkLag;
                }

                public void setLinkLag(java.math.BigInteger value) {
                    _LinkLag = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_PredecessorUID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "PredecessorUID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PredecessorUID)), "PredecessorUID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Type!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Type");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_CrossProject) {
                        context.startElement("http://schemas.microsoft.com/project", "CrossProject");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CrossProject)), "CrossProject");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_CrossProjectName!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "CrossProjectName");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _CrossProjectName), "CrossProjectName");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_LinkLag!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "LinkLag");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LinkLag)), "LinkLag");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_LagFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "LagFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LagFormat)), "LagFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000fXm\u00fdppsq\u0000~\u0000\u0000\n\u00f9\u00d1\u008bppsq\u0000~\u0000\u0000\t"
+"\u00d2\u0002&ppsq\u0000~\u0000\u0000\u0007\u00ad\u00e8\u00fcppsq\u0000~\u0000\u0000\u0005kS\u009dppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001W\u00a0\u0091ppsr\u0000\'com.sun.msv.grammar.trex.Elemen"
+"tPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameC"
+"lass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreU"
+"ndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001W\u00a0\u0086sr\u0000\u0011java.la"
+"ng.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001W\u00a0{ppsr\u0000\u001bcom.sun.ms"
+"v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"
+"tatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"
+"xq\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000"
+"\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr"
+"\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%c"
+"om.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.m"
+"sv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012L"
+"java/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/ms"
+"v/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/20"
+"01/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd."
+"FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.dataty"
+"pe.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com."
+"sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetF"
+"ixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0019L\u0000\fconcreteTypet\u0000\'L"
+"com/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001dxq\u0000~\u0000"
+"\u001cppq\u0000~\u0000$\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007decimalq\u0000~\u0000$q\u0000~\u0000+t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com."
+"sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sq\u0000~\u0000\n\u0000\u00e2\u009dpppsr\u0000 com.su"
+"n.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClass"
+"q\u0000~\u0000\rxq\u0000~\u0000\u0003\u0000\u00e2\u009deq\u0000~\u0000\u0011psq\u0000~\u0000\u0013\u0000\u0083\u00d3\u008appsr\u0000\"com.sun.msv.datatype.xs"
+"d.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNameq\u0000~\u0000$q\u0000~\u0000/sq\u0000~\u00000q\u0000~"
+"\u00008q\u0000~\u0000 sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\t"
+"localNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.Na"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSche"
+"ma-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0010\u0001psq\u0000~\u0000:t\u0000\u000ePredecessorUIDt\u0000$ht"
+"tp://schemas.microsoft.com/projectq\u0000~\u0000@sq\u0000~\u0000\n\u0004\u0013\u00b3\u0007ppsq\u0000~\u0000\f\u0004\u0013\u00b2"
+"\u00fcq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0004\u0013\u00b2\u00f1ppsq\u0000~\u0000\u0013\u0001\u00be\u0016\u00e5ppsr\u0000)com.sun.msv.datatype.xsd"
+".EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009c"
+"om.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro"
+"\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000\'q\u0000~\u0000Dpq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001ft\u0000\u000benumerationsr\u0000\u0011java.u"
+"til.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.dataty"
+"pe.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001dxr\u0000\u0010java.lang"
+".Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000Pt\u0000\u00012sq\u0000~\u0000Pt\u0000\u00010sq\u0000~\u0000Pt\u0000\u00011xq\u0000~\u0000/"
+"sq\u0000~\u00000t\u0000\u000finteger-derivedq\u0000~\u0000Dsq\u0000~\u0000\n\u0002U\u009c\u0007ppsq\u0000~\u00003\u0002U\u009b\u00fcq\u0000~\u0000\u0011pq\u0000~"
+"\u00005sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0004Typeq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\n\u0002B\u0095Zppsq"
+"\u0000~\u0000\f\u0002B\u0095Oq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0002B\u0095Dppsq\u0000~\u0000\u0013\u00001\u00ff3ppsr\u0000$com.sun.msv.datat"
+"ype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007booleanq\u0000~\u0000$q\u0000~\u0000"
+"/sq\u0000~\u00000q\u0000~\u0000gq\u0000~\u0000 sq\u0000~\u0000\n\u0002\u0010\u0096\fppsq\u0000~\u00003\u0002\u0010\u0096\u0001q\u0000~\u0000\u0011pq\u0000~\u00005sq\u0000~\u0000:q\u0000~\u0000"
+"=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\fCrossProjectq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\n\u0002$\u0019%ppsq\u0000~\u0000\f"
+"\u0002$\u0019\u001aq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0002$\u0019\u000fppsq\u0000~\u0000\u0013\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype."
+"xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0006strin"
+"gsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#\u0001q\u0000~\u0000/sq\u0000~\u00000q\u0000~\u0000tq\u0000~\u0000 sq\u0000~\u0000\n\u0002\u001f\u0095Uppsq\u0000~\u00003\u0002\u001f\u0095Jq"
+"\u0000~\u0000\u0011pq\u0000~\u00005sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0010CrossProjectNameq\u0000~\u0000"
+"Dq\u0000~\u0000@sq\u0000~\u0000\n\u0001\'\u00cf`ppsq\u0000~\u0000\f\u0001\'\u00cfUq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0001\'\u00cfJppq\u0000~\u0000\u0016sq\u0000~\u0000\n\u0000\u00b2"
+"\u00cc?ppsq\u0000~\u00003\u0000\u00b2\u00cc4q\u0000~\u0000\u0011pq\u0000~\u00005sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0007LinkL"
+"agq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\n\u0004^\u009cmppsq\u0000~\u0000\f\u0004^\u009cbq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000\u0004^\u009cWppsq\u0000~\u0000\u0013\u0001"
+"\u00e5\u00af\u000eppsq\u0000~\u0000Iq\u0000~\u0000Dpq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u0000Msq\u0000~\u0000Nw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u0019s"
+"q\u0000~\u0000Pt\u0000\u00013sq\u0000~\u0000Pt\u0000\u000241sq\u0000~\u0000Pt\u0000\u000239sq\u0000~\u0000Pt\u0000\u000236sq\u0000~\u0000Pt\u0000\u00016sq\u0000~\u0000Pt\u0000"
+"\u00015sq\u0000~\u0000Pt\u0000\u000237sq\u0000~\u0000Pt\u0000\u000211sq\u0000~\u0000Pt\u0000\u000240sq\u0000~\u0000Pt\u0000\u00014sq\u0000~\u0000Pt\u0000\u000212sq\u0000~"
+"\u0000Pt\u0000\u000252sq\u0000~\u0000Pt\u0000\u00017sq\u0000~\u0000Pt\u0000\u000238sq\u0000~\u0000Pt\u0000\u000220sq\u0000~\u0000Pt\u0000\u000242sq\u0000~\u0000Pt\u0000\u00025"
+"3sq\u0000~\u0000Pt\u0000\u000243sq\u0000~\u0000Pt\u0000\u000210sq\u0000~\u0000Pt\u0000\u000235sq\u0000~\u0000Pt\u0000\u000244sq\u0000~\u0000Pt\u0000\u00019sq\u0000~\u0000"
+"Pt\u0000\u000219sq\u0000~\u0000Pt\u0000\u00018sq\u0000~\u0000Pt\u0000\u000251xq\u0000~\u0000/sq\u0000~\u00000t\u0000\u000finteger-derivedq\u0000~"
+"\u0000Dsq\u0000~\u0000\n\u0002x\u00edDppsq\u0000~\u00003\u0002x\u00ed9q\u0000~\u0000\u0011pq\u0000~\u00005sq\u0000~\u0000:q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000@sq\u0000~"
+"\u0000:t\u0000\tLagFormatq\u0000~\u0000Dq\u0000~\u0000@sr\u0000\"com.sun.msv.grammar.ExpressionPo"
+"ol\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPo"
+"ol$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Close"
+"dHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00c5[\u0000\u0005tablet\u0000"
+"![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0017\u0000\u0000\u00009pur\u0000![Lcom.sun.m"
+"sv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppq\u0000~\u0000\\ppppppppppppp"
+"q\u0000~\u0000\tpppq\u0000~\u0000\u0006q\u0000~\u0000\u00bfppppppppppq\u0000~\u0000\u0087ppq\u0000~\u0000\u0080pppppppq\u0000~\u00002pppppppp"
+"ppq\u0000~\u0000\u0085ppppppppppppq\u0000~\u0000\u007fpppppppq\u0000~\u0000\u0012ppppq\u0000~\u0000\u0005pq\u0000~\u0000Gppppppq\u0000~"
+"\u0000}pppppppq\u0000~\u0000\u000bppppq\u0000~\u0000xpq\u0000~\u0000Eppppq\u0000~\u0000pppppppq\u0000~\u0000\u0007pppppppppq\u0000"
+"~\u0000cppppq\u0000~\u0000iq\u0000~\u0000npppppppppppppppq\u0000~\u0000apppppppppppppppppppppq\u0000"
+"~\u0000\bppppppppppppppppppp"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    if (("CrossProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  12 :
                                    if (("LinkLag" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  9 :
                                    if (("CrossProjectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  15 :
                                    if (("LagFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 16;
                                        return ;
                                    }
                                    state = 18;
                                    continue outer;
                                case  0 :
                                    if (("PredecessorUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("PredecessorUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  17 :
                                    if (("LagFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 18;
                                        return ;
                                    }
                                    break;
                                case  18 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  8 :
                                    if (("CrossProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  5 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  14 :
                                    if (("LinkLag" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("CrossProjectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  16 :
                                        eatText1(value);
                                        state = 17;
                                        return ;
                                    case  13 :
                                        eatText2(value);
                                        state = 14;
                                        return ;
                                    case  10 :
                                        eatText3(value);
                                        state = 11;
                                        return ;
                                    case  4 :
                                        eatText4(value);
                                        state = 5;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  7 :
                                        eatText5(value);
                                        state = 8;
                                        return ;
                                    case  18 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  1 :
                                        eatText6(value);
                                        state = 2;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _LagFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _LinkLag = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _CrossProjectName = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _CrossProject = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_CrossProject = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText6(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _PredecessorUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  270 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 268;
                                    return ;
                                }
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 271;
                                    return ;
                                }
                                state = 273;
                                continue outer;
                            case  63 :
                                if (("Recurring" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 64;
                                    return ;
                                }
                                state = 66;
                                continue outer;
                            case  66 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 67;
                                    return ;
                                }
                                state = 69;
                                continue outer;
                            case  252 :
                                if (("PredecessorLink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 253;
                                    return ;
                                }
                                state = 255;
                                continue outer;
                            case  174 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 175;
                                    return ;
                                }
                                state = 177;
                                continue outer;
                            case  240 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 241;
                                    return ;
                                }
                                state = 243;
                                continue outer;
                            case  271 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 272, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 272, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  243 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 244;
                                    return ;
                                }
                                state = 246;
                                continue outer;
                            case  99 :
                                if (("EarlyFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 100;
                                    return ;
                                }
                                state = 102;
                                continue outer;
                            case  3 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  195 :
                                if (("ConstraintDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 196;
                                    return ;
                                }
                                state = 198;
                                continue outer;
                            case  15 :
                                if (("CreateDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  222 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 223;
                                    return ;
                                }
                                state = 225;
                                continue outer;
                            case  204 :
                                if (("LevelingCanSplit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 205;
                                    return ;
                                }
                                state = 207;
                                continue outer;
                            case  231 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 232;
                                    return ;
                                }
                                state = 234;
                                continue outer;
                            case  132 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 133;
                                    return ;
                                }
                                state = 135;
                                continue outer;
                            case  18 :
                                if (("Contact" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  126 :
                                if (("FixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 127;
                                    return ;
                                }
                                state = 129;
                                continue outer;
                            case  90 :
                                if (("ExternalTask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 91;
                                    return ;
                                }
                                state = 93;
                                continue outer;
                            case  111 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 112;
                                    return ;
                                }
                                state = 114;
                                continue outer;
                            case  234 :
                                if (("HideBar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 235;
                                    return ;
                                }
                                state = 237;
                                continue outer;
                            case  69 :
                                if (("Estimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 70;
                                    return ;
                                }
                                state = 72;
                                continue outer;
                            case  168 :
                                if (("RemainingDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 169;
                                    return ;
                                }
                                state = 171;
                                continue outer;
                            case  237 :
                                if (("Rollup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 238;
                                    return ;
                                }
                                state = 240;
                                continue outer;
                            case  147 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 148;
                                    return ;
                                }
                                state = 150;
                                continue outer;
                            case  144 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 145;
                                    return ;
                                }
                                state = 147;
                                continue outer;
                            case  225 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 226;
                                    return ;
                                }
                                state = 228;
                                continue outer;
                            case  264 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 262;
                                    return ;
                                }
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 265;
                                    return ;
                                }
                                state = 267;
                                continue outer;
                            case  262 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  138 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 139;
                                    return ;
                                }
                                state = 141;
                                continue outer;
                            case  153 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 154;
                                    return ;
                                }
                                state = 156;
                                continue outer;
                            case  150 :
                                if (("ActualDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 151;
                                    return ;
                                }
                                state = 153;
                                continue outer;
                            case  75 :
                                if (("Summary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 76;
                                    return ;
                                }
                                state = 78;
                                continue outer;
                            case  36 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 37;
                                    return ;
                                }
                                state = 39;
                                continue outer;
                            case  123 :
                                if (("FixedCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 124;
                                    return ;
                                }
                                state = 126;
                                continue outer;
                            case  135 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 136;
                                    return ;
                                }
                                state = 138;
                                continue outer;
                            case  6 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  51 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 52;
                                    return ;
                                }
                                state = 54;
                                continue outer;
                            case  216 :
                                if (("PreLeveledFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 217;
                                    return ;
                                }
                                state = 219;
                                continue outer;
                            case  27 :
                                if (("OutlineNumber" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  87 :
                                if (("SubprojectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 88;
                                    return ;
                                }
                                state = 90;
                                continue outer;
                            case  183 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 184;
                                    return ;
                                }
                                state = 186;
                                continue outer;
                            case  84 :
                                if (("IsSubprojectReadOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 85;
                                    return ;
                                }
                                state = 87;
                                continue outer;
                            case  30 :
                                if (("OutlineLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  207 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 208;
                                    return ;
                                }
                                state = 210;
                                continue outer;
                            case  165 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 166;
                                    return ;
                                }
                                state = 168;
                                continue outer;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  21 :
                                if (("WBS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  117 :
                                if (("FreeSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 118;
                                    return ;
                                }
                                state = 120;
                                continue outer;
                            case  108 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 109;
                                    return ;
                                }
                                state = 111;
                                continue outer;
                            case  129 :
                                if (("PercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 130;
                                    return ;
                                }
                                state = 132;
                                continue outer;
                            case  105 :
                                if (("LateFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 106;
                                    return ;
                                }
                                state = 108;
                                continue outer;
                            case  261 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 262;
                                    return ;
                                }
                                state = 264;
                                continue outer;
                            case  189 :
                                if (("ConstraintType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 190;
                                    return ;
                                }
                                state = 192;
                                continue outer;
                            case  180 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 181;
                                    return ;
                                }
                                state = 183;
                                continue outer;
                            case  96 :
                                if (("EarlyStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 97;
                                    return ;
                                }
                                state = 99;
                                continue outer;
                            case  72 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 73;
                                    return ;
                                }
                                state = 75;
                                continue outer;
                            case  268 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  228 :
                                if (("IgnoreResourceCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 229;
                                    return ;
                                }
                                state = 231;
                                continue outer;
                            case  162 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 163;
                                    return ;
                                }
                                state = 165;
                                continue outer;
                            case  42 :
                                if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 43;
                                    return ;
                                }
                                state = 45;
                                continue outer;
                            case  48 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 49;
                                    return ;
                                }
                                state = 51;
                                continue outer;
                            case  171 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 172;
                                    return ;
                                }
                                state = 174;
                                continue outer;
                            case  159 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 160;
                                    return ;
                                }
                                state = 162;
                                continue outer;
                            case  249 :
                                if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 250;
                                    return ;
                                }
                                state = 252;
                                continue outer;
                            case  198 :
                                if (("Deadline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 199;
                                    return ;
                                }
                                state = 201;
                                continue outer;
                            case  57 :
                                if (("ResumeValid" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 58;
                                    return ;
                                }
                                state = 60;
                                continue outer;
                            case  93 :
                                if (("ExternalTaskProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 94;
                                    return ;
                                }
                                state = 96;
                                continue outer;
                            case  60 :
                                if (("EffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 61;
                                    return ;
                                }
                                state = 63;
                                continue outer;
                            case  9 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  201 :
                                if (("LevelAssignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 202;
                                    return ;
                                }
                                state = 204;
                                continue outer;
                            case  39 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 40;
                                    return ;
                                }
                                state = 42;
                                continue outer;
                            case  120 :
                                if (("TotalSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 121;
                                    return ;
                                }
                                state = 123;
                                continue outer;
                            case  253 :
                                if (("PredecessorUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("CrossProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("CrossProjectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("LinkLag" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("LagFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  141 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 142;
                                    return ;
                                }
                                state = 144;
                                continue outer;
                            case  267 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 265;
                                    return ;
                                }
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 268;
                                    return ;
                                }
                                state = 270;
                                continue outer;
                            case  265 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Interim" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("EstimatedDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  102 :
                                if (("LateStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 103;
                                    return ;
                                }
                                state = 105;
                                continue outer;
                            case  273 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 271;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  213 :
                                if (("PreLeveledStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 214;
                                    return ;
                                }
                                state = 216;
                                continue outer;
                            case  78 :
                                if (("Critical" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 79;
                                    return ;
                                }
                                state = 81;
                                continue outer;
                            case  192 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 193;
                                    return ;
                                }
                                state = 195;
                                continue outer;
                            case  246 :
                                if (("PhysicalPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 247;
                                    return ;
                                }
                                state = 249;
                                continue outer;
                            case  81 :
                                if (("IsSubproject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 82;
                                    return ;
                                }
                                state = 84;
                                continue outer;
                            case  177 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 178;
                                    return ;
                                }
                                state = 180;
                                continue outer;
                            case  219 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 220;
                                    return ;
                                }
                                state = 222;
                                continue outer;
                            case  210 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 211;
                                    return ;
                                }
                                state = 213;
                                continue outer;
                            case  156 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 157;
                                    return ;
                                }
                                state = 159;
                                continue outer;
                            case  12 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  54 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 55;
                                    return ;
                                }
                                state = 57;
                                continue outer;
                            case  114 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 115;
                                    return ;
                                }
                                state = 117;
                                continue outer;
                            case  33 :
                                if (("Priority" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  45 :
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 46;
                                    return ;
                                }
                                state = 48;
                                continue outer;
                            case  186 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 187;
                                    return ;
                                }
                                state = 189;
                                continue outer;
                            case  255 :
                                if (("PredecessorLink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 253;
                                    return ;
                                }
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 256;
                                    return ;
                                }
                                state = 258;
                                continue outer;
                            case  258 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 259;
                                    return ;
                                }
                                state = 261;
                                continue outer;
                            case  24 :
                                if (("WBSLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  270 :
                                state = 273;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  252 :
                                state = 255;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  240 :
                                state = 243;
                                continue outer;
                            case  128 :
                                if (("FixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 129;
                                    return ;
                                }
                                break;
                            case  243 :
                                state = 246;
                                continue outer;
                            case  122 :
                                if (("TotalSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 123;
                                    return ;
                                }
                                break;
                            case  194 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 195;
                                    return ;
                                }
                                break;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  77 :
                                if (("Summary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 78;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  218 :
                                if (("PreLeveledFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 219;
                                    return ;
                                }
                                break;
                            case  188 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 189;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  74 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 75;
                                    return ;
                                }
                                break;
                            case  222 :
                                state = 225;
                                continue outer;
                            case  104 :
                                if (("LateStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 105;
                                    return ;
                                }
                                break;
                            case  212 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 213;
                                    return ;
                                }
                                break;
                            case  131 :
                                if (("PercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 132;
                                    return ;
                                }
                                break;
                            case  230 :
                                if (("IgnoreResourceCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 231;
                                    return ;
                                }
                                break;
                            case  68 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 69;
                                    return ;
                                }
                                break;
                            case  204 :
                                state = 207;
                                continue outer;
                            case  44 :
                                if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 45;
                                    return ;
                                }
                                break;
                            case  146 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 147;
                                    return ;
                                }
                                break;
                            case  231 :
                                state = 234;
                                continue outer;
                            case  17 :
                                if (("CreateDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  116 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 117;
                                    return ;
                                }
                                break;
                            case  191 :
                                if (("ConstraintType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 192;
                                    return ;
                                }
                                break;
                            case  236 :
                                if (("HideBar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 237;
                                    return ;
                                }
                                break;
                            case  233 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 234;
                                    return ;
                                }
                                break;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  137 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 138;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  173 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 174;
                                    return ;
                                }
                                break;
                            case  234 :
                                state = 237;
                                continue outer;
                            case  23 :
                                if (("WBS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  260 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 261;
                                    return ;
                                }
                                break;
                            case  35 :
                                if (("Priority" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  20 :
                                if (("Contact" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  237 :
                                state = 240;
                                continue outer;
                            case  26 :
                                if (("WBSLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  224 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 225;
                                    return ;
                                }
                                break;
                            case  140 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 141;
                                    return ;
                                }
                                break;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  164 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 165;
                                    return ;
                                }
                                break;
                            case  225 :
                                state = 228;
                                continue outer;
                            case  254 :
                                if (("PredecessorLink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 255;
                                    return ;
                                }
                                break;
                            case  264 :
                                state = 267;
                                continue outer;
                            case  179 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 180;
                                    return ;
                                }
                                break;
                            case  269 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 270;
                                    return ;
                                }
                                break;
                            case  262 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname)));
                                return ;
                            case  197 :
                                if (("ConstraintDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 198;
                                    return ;
                                }
                                break;
                            case  152 :
                                if (("ActualDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 153;
                                    return ;
                                }
                                break;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  182 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 183;
                                    return ;
                                }
                                break;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  239 :
                                if (("Rollup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 240;
                                    return ;
                                }
                                break;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  113 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 114;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  170 :
                                if (("RemainingDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 171;
                                    return ;
                                }
                                break;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  98 :
                                if (("EarlyStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 99;
                                    return ;
                                }
                                break;
                            case  176 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 177;
                                    return ;
                                }
                                break;
                            case  47 :
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 48;
                                    return ;
                                }
                                break;
                            case  216 :
                                state = 219;
                                continue outer;
                            case  245 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 246;
                                    return ;
                                }
                                break;
                            case  206 :
                                if (("LevelingCanSplit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 207;
                                    return ;
                                }
                                break;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  263 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 264;
                                    return ;
                                }
                                break;
                            case  134 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 135;
                                    return ;
                                }
                                break;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  207 :
                                state = 210;
                                continue outer;
                            case  14 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  257 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 258;
                                    return ;
                                }
                                break;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  242 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 243;
                                    return ;
                                }
                                break;
                            case  261 :
                                state = 264;
                                continue outer;
                            case  203 :
                                if (("LevelAssignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 204;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("OutlineNumber" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  161 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 162;
                                    return ;
                                }
                                break;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  107 :
                                if (("LateFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 108;
                                    return ;
                                }
                                break;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  268 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname)));
                                return ;
                            case  228 :
                                state = 231;
                                continue outer;
                            case  221 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 222;
                                    return ;
                                }
                                break;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  83 :
                                if (("IsSubproject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 84;
                                    return ;
                                }
                                break;
                            case  110 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 111;
                                    return ;
                                }
                                break;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  158 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 159;
                                    return ;
                                }
                                break;
                            case  249 :
                                state = 252;
                                continue outer;
                            case  227 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 228;
                                    return ;
                                }
                                break;
                            case  266 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 267;
                                    return ;
                                }
                                break;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  201 :
                                state = 204;
                                continue outer;
                            case  89 :
                                if (("SubprojectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 90;
                                    return ;
                                }
                                break;
                            case  155 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 156;
                                    return ;
                                }
                                break;
                            case  41 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 42;
                                    return ;
                                }
                                break;
                            case  248 :
                                if (("PhysicalPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 249;
                                    return ;
                                }
                                break;
                            case  215 :
                                if (("PreLeveledStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 216;
                                    return ;
                                }
                                break;
                            case  62 :
                                if (("EffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 63;
                                    return ;
                                }
                                break;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  11 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  253 :
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname)));
                                return ;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  50 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 51;
                                    return ;
                                }
                                break;
                            case  267 :
                                state = 270;
                                continue outer;
                            case  185 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 186;
                                    return ;
                                }
                                break;
                            case  143 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 144;
                                    return ;
                                }
                                break;
                            case  59 :
                                if (("ResumeValid" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 60;
                                    return ;
                                }
                                break;
                            case  265 :
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname)));
                                return ;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  273 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  95 :
                                if (("ExternalTaskProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 96;
                                    return ;
                                }
                                break;
                            case  213 :
                                state = 216;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  272 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 273;
                                    return ;
                                }
                                break;
                            case  200 :
                                if (("Deadline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 201;
                                    return ;
                                }
                                break;
                            case  80 :
                                if (("Critical" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 81;
                                    return ;
                                }
                                break;
                            case  246 :
                                state = 249;
                                continue outer;
                            case  251 :
                                if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 252;
                                    return ;
                                }
                                break;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  219 :
                                state = 222;
                                continue outer;
                            case  119 :
                                if (("FreeSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 120;
                                    return ;
                                }
                                break;
                            case  209 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 210;
                                    return ;
                                }
                                break;
                            case  210 :
                                state = 213;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  125 :
                                if (("FixedCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 126;
                                    return ;
                                }
                                break;
                            case  56 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 57;
                                    return ;
                                }
                                break;
                            case  92 :
                                if (("ExternalTask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 93;
                                    return ;
                                }
                                break;
                            case  38 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 39;
                                    return ;
                                }
                                break;
                            case  65 :
                                if (("Recurring" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 66;
                                    return ;
                                }
                                break;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  149 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 150;
                                    return ;
                                }
                                break;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  53 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 54;
                                    return ;
                                }
                                break;
                            case  71 :
                                if (("Estimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 72;
                                    return ;
                                }
                                break;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  255 :
                                state = 258;
                                continue outer;
                            case  167 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 168;
                                    return ;
                                }
                                break;
                            case  101 :
                                if (("EarlyFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 102;
                                    return ;
                                }
                                break;
                            case  86 :
                                if (("IsSubprojectReadOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 87;
                                    return ;
                                }
                                break;
                            case  32 :
                                if (("OutlineLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  258 :
                                state = 261;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  270 :
                                state = 273;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  252 :
                                state = 255;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  240 :
                                state = 243;
                                continue outer;
                            case  243 :
                                state = 246;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  222 :
                                state = 225;
                                continue outer;
                            case  204 :
                                state = 207;
                                continue outer;
                            case  231 :
                                state = 234;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  234 :
                                state = 237;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  237 :
                                state = 240;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  225 :
                                state = 228;
                                continue outer;
                            case  264 :
                                state = 267;
                                continue outer;
                            case  262 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname)));
                                return ;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  216 :
                                state = 219;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  207 :
                                state = 210;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  261 :
                                state = 264;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  268 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname)));
                                return ;
                            case  228 :
                                state = 231;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  249 :
                                state = 252;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  201 :
                                state = 204;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  253 :
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname)));
                                return ;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  267 :
                                state = 270;
                                continue outer;
                            case  265 :
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname)));
                                return ;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  273 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  213 :
                                state = 216;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  246 :
                                state = 249;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  219 :
                                state = 222;
                                continue outer;
                            case  210 :
                                state = 213;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  255 :
                                state = 258;
                                continue outer;
                            case  258 :
                                state = 261;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  270 :
                                state = 273;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  252 :
                                state = 255;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  240 :
                                state = 243;
                                continue outer;
                            case  243 :
                                state = 246;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  222 :
                                state = 225;
                                continue outer;
                            case  204 :
                                state = 207;
                                continue outer;
                            case  231 :
                                state = 234;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  234 :
                                state = 237;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  237 :
                                state = 240;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  225 :
                                state = 228;
                                continue outer;
                            case  264 :
                                state = 267;
                                continue outer;
                            case  262 :
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname)));
                                return ;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  216 :
                                state = 219;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  207 :
                                state = 210;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  261 :
                                state = 264;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  268 :
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname)));
                                return ;
                            case  228 :
                                state = 231;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  249 :
                                state = 252;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  201 :
                                state = 204;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  253 :
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname)));
                                return ;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  267 :
                                state = 270;
                                continue outer;
                            case  265 :
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname)));
                                return ;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  273 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  213 :
                                state = 216;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  246 :
                                state = 249;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  219 :
                                state = 222;
                                continue outer;
                            case  210 :
                                state = 213;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  255 :
                                state = 258;
                                continue outer;
                            case  258 :
                                state = 261;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  70 :
                                    eatText1(value);
                                    state = 71;
                                    return ;
                                case  270 :
                                    state = 273;
                                    continue outer;
                                case  63 :
                                    state = 66;
                                    continue outer;
                                case  66 :
                                    state = 69;
                                    continue outer;
                                case  106 :
                                    eatText2(value);
                                    state = 107;
                                    return ;
                                case  252 :
                                    state = 255;
                                    continue outer;
                                case  82 :
                                    eatText3(value);
                                    state = 83;
                                    return ;
                                case  174 :
                                    state = 177;
                                    continue outer;
                                case  205 :
                                    eatText4(value);
                                    state = 206;
                                    return ;
                                case  240 :
                                    state = 243;
                                    continue outer;
                                case  243 :
                                    state = 246;
                                    continue outer;
                                case  34 :
                                    eatText5(value);
                                    state = 35;
                                    return ;
                                case  99 :
                                    state = 102;
                                    continue outer;
                                case  46 :
                                    eatText6(value);
                                    state = 47;
                                    return ;
                                case  244 :
                                    eatText7(value);
                                    state = 245;
                                    return ;
                                case  43 :
                                    eatText8(value);
                                    state = 44;
                                    return ;
                                case  4 :
                                    eatText9(value);
                                    state = 5;
                                    return ;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  67 :
                                    eatText10(value);
                                    state = 68;
                                    return ;
                                case  193 :
                                    eatText11(value);
                                    state = 194;
                                    return ;
                                case  195 :
                                    state = 198;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  241 :
                                    eatText12(value);
                                    state = 242;
                                    return ;
                                case  222 :
                                    state = 225;
                                    continue outer;
                                case  16 :
                                    eatText13(value);
                                    state = 17;
                                    return ;
                                case  88 :
                                    eatText14(value);
                                    state = 89;
                                    return ;
                                case  55 :
                                    eatText15(value);
                                    state = 56;
                                    return ;
                                case  139 :
                                    eatText16(value);
                                    state = 140;
                                    return ;
                                case  204 :
                                    state = 207;
                                    continue outer;
                                case  31 :
                                    eatText17(value);
                                    state = 32;
                                    return ;
                                case  231 :
                                    state = 234;
                                    continue outer;
                                case  37 :
                                    eatText18(value);
                                    state = 38;
                                    return ;
                                case  115 :
                                    eatText19(value);
                                    state = 116;
                                    return ;
                                case  132 :
                                    state = 135;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  126 :
                                    state = 129;
                                    continue outer;
                                case  90 :
                                    state = 93;
                                    continue outer;
                                case  111 :
                                    state = 114;
                                    continue outer;
                                case  234 :
                                    state = 237;
                                    continue outer;
                                case  69 :
                                    state = 72;
                                    continue outer;
                                case  169 :
                                    eatText20(value);
                                    state = 170;
                                    return ;
                                case  168 :
                                    state = 171;
                                    continue outer;
                                case  73 :
                                    eatText21(value);
                                    state = 74;
                                    return ;
                                case  237 :
                                    state = 240;
                                    continue outer;
                                case  147 :
                                    state = 150;
                                    continue outer;
                                case  109 :
                                    eatText22(value);
                                    state = 110;
                                    return ;
                                case  214 :
                                    eatText23(value);
                                    state = 215;
                                    return ;
                                case  208 :
                                    eatText24(value);
                                    state = 209;
                                    return ;
                                case  144 :
                                    state = 147;
                                    continue outer;
                                case  7 :
                                    eatText25(value);
                                    state = 8;
                                    return ;
                                case  225 :
                                    state = 228;
                                    continue outer;
                                case  264 :
                                    state = 267;
                                    continue outer;
                                case  25 :
                                    eatText26(value);
                                    state = 26;
                                    return ;
                                case  262 :
                                    _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, value)));
                                    return ;
                                case  49 :
                                    eatText27(value);
                                    state = 50;
                                    return ;
                                case  138 :
                                    state = 141;
                                    continue outer;
                                case  10 :
                                    eatText28(value);
                                    state = 11;
                                    return ;
                                case  153 :
                                    state = 156;
                                    continue outer;
                                case  103 :
                                    eatText29(value);
                                    state = 104;
                                    return ;
                                case  238 :
                                    eatText30(value);
                                    state = 239;
                                    return ;
                                case  150 :
                                    state = 153;
                                    continue outer;
                                case  75 :
                                    state = 78;
                                    continue outer;
                                case  36 :
                                    state = 39;
                                    continue outer;
                                case  118 :
                                    eatText31(value);
                                    state = 119;
                                    return ;
                                case  123 :
                                    state = 126;
                                    continue outer;
                                case  135 :
                                    state = 138;
                                    continue outer;
                                case  163 :
                                    eatText32(value);
                                    state = 164;
                                    return ;
                                case  100 :
                                    eatText33(value);
                                    state = 101;
                                    return ;
                                case  160 :
                                    eatText34(value);
                                    state = 161;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  19 :
                                    eatText35(value);
                                    state = 20;
                                    return ;
                                case  223 :
                                    eatText36(value);
                                    state = 224;
                                    return ;
                                case  51 :
                                    state = 54;
                                    continue outer;
                                case  196 :
                                    eatText37(value);
                                    state = 197;
                                    return ;
                                case  216 :
                                    state = 219;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  87 :
                                    state = 90;
                                    continue outer;
                                case  133 :
                                    eatText38(value);
                                    state = 134;
                                    return ;
                                case  183 :
                                    state = 186;
                                    continue outer;
                                case  250 :
                                    eatText39(value);
                                    state = 251;
                                    return ;
                                case  91 :
                                    eatText40(value);
                                    state = 92;
                                    return ;
                                case  84 :
                                    state = 87;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  256 :
                                    eatText41(value);
                                    state = 257;
                                    return ;
                                case  154 :
                                    eatText42(value);
                                    state = 155;
                                    return ;
                                case  235 :
                                    eatText43(value);
                                    state = 236;
                                    return ;
                                case  207 :
                                    state = 210;
                                    continue outer;
                                case  58 :
                                    eatText44(value);
                                    state = 59;
                                    return ;
                                case  28 :
                                    eatText45(value);
                                    state = 29;
                                    return ;
                                case  165 :
                                    state = 168;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  117 :
                                    state = 120;
                                    continue outer;
                                case  108 :
                                    state = 111;
                                    continue outer;
                                case  129 :
                                    state = 132;
                                    continue outer;
                                case  187 :
                                    eatText46(value);
                                    state = 188;
                                    return ;
                                case  105 :
                                    state = 108;
                                    continue outer;
                                case  261 :
                                    state = 264;
                                    continue outer;
                                case  142 :
                                    eatText47(value);
                                    state = 143;
                                    return ;
                                case  190 :
                                    eatText48(value);
                                    state = 191;
                                    return ;
                                case  1 :
                                    eatText49(value);
                                    state = 2;
                                    return ;
                                case  121 :
                                    eatText50(value);
                                    state = 122;
                                    return ;
                                case  189 :
                                    state = 192;
                                    continue outer;
                                case  180 :
                                    state = 183;
                                    continue outer;
                                case  96 :
                                    state = 99;
                                    continue outer;
                                case  13 :
                                    eatText51(value);
                                    state = 14;
                                    return ;
                                case  72 :
                                    state = 75;
                                    continue outer;
                                case  268 :
                                    _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, value)));
                                    return ;
                                case  228 :
                                    state = 231;
                                    continue outer;
                                case  162 :
                                    state = 165;
                                    continue outer;
                                case  22 :
                                    eatText52(value);
                                    state = 23;
                                    return ;
                                case  226 :
                                    eatText53(value);
                                    state = 227;
                                    return ;
                                case  247 :
                                    eatText54(value);
                                    state = 248;
                                    return ;
                                case  145 :
                                    eatText55(value);
                                    state = 146;
                                    return ;
                                case  76 :
                                    eatText56(value);
                                    state = 77;
                                    return ;
                                case  42 :
                                    state = 45;
                                    continue outer;
                                case  48 :
                                    state = 51;
                                    continue outer;
                                case  171 :
                                    state = 174;
                                    continue outer;
                                case  159 :
                                    state = 162;
                                    continue outer;
                                case  249 :
                                    state = 252;
                                    continue outer;
                                case  166 :
                                    eatText57(value);
                                    state = 167;
                                    return ;
                                case  198 :
                                    state = 201;
                                    continue outer;
                                case  94 :
                                    eatText58(value);
                                    state = 95;
                                    return ;
                                case  57 :
                                    state = 60;
                                    continue outer;
                                case  93 :
                                    state = 96;
                                    continue outer;
                                case  60 :
                                    state = 63;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  201 :
                                    state = 204;
                                    continue outer;
                                case  184 :
                                    eatText59(value);
                                    state = 185;
                                    return ;
                                case  40 :
                                    eatText60(value);
                                    state = 41;
                                    return ;
                                case  178 :
                                    eatText61(value);
                                    state = 179;
                                    return ;
                                case  39 :
                                    state = 42;
                                    continue outer;
                                case  120 :
                                    state = 123;
                                    continue outer;
                                case  52 :
                                    eatText62(value);
                                    state = 53;
                                    return ;
                                case  112 :
                                    eatText63(value);
                                    state = 113;
                                    return ;
                                case  253 :
                                    _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, value)));
                                    return ;
                                case  141 :
                                    state = 144;
                                    continue outer;
                                case  136 :
                                    eatText64(value);
                                    state = 137;
                                    return ;
                                case  267 :
                                    state = 270;
                                    continue outer;
                                case  79 :
                                    eatText65(value);
                                    state = 80;
                                    return ;
                                case  97 :
                                    eatText66(value);
                                    state = 98;
                                    return ;
                                case  265 :
                                    _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, value)));
                                    return ;
                                case  102 :
                                    state = 105;
                                    continue outer;
                                case  273 :
                                    revertToParentFromText(value);
                                    return ;
                                case  157 :
                                    eatText67(value);
                                    state = 158;
                                    return ;
                                case  213 :
                                    state = 216;
                                    continue outer;
                                case  64 :
                                    eatText68(value);
                                    state = 65;
                                    return ;
                                case  78 :
                                    state = 81;
                                    continue outer;
                                case  192 :
                                    state = 195;
                                    continue outer;
                                case  148 :
                                    eatText69(value);
                                    state = 149;
                                    return ;
                                case  172 :
                                    eatText70(value);
                                    state = 173;
                                    return ;
                                case  151 :
                                    eatText71(value);
                                    state = 152;
                                    return ;
                                case  211 :
                                    eatText72(value);
                                    state = 212;
                                    return ;
                                case  246 :
                                    state = 249;
                                    continue outer;
                                case  232 :
                                    eatText73(value);
                                    state = 233;
                                    return ;
                                case  259 :
                                    eatText74(value);
                                    state = 260;
                                    return ;
                                case  81 :
                                    state = 84;
                                    continue outer;
                                case  177 :
                                    state = 180;
                                    continue outer;
                                case  85 :
                                    eatText75(value);
                                    state = 86;
                                    return ;
                                case  219 :
                                    state = 222;
                                    continue outer;
                                case  130 :
                                    eatText76(value);
                                    state = 131;
                                    return ;
                                case  210 :
                                    state = 213;
                                    continue outer;
                                case  156 :
                                    state = 159;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  127 :
                                    eatText77(value);
                                    state = 128;
                                    return ;
                                case  175 :
                                    eatText78(value);
                                    state = 176;
                                    return ;
                                case  217 :
                                    eatText79(value);
                                    state = 218;
                                    return ;
                                case  54 :
                                    state = 57;
                                    continue outer;
                                case  229 :
                                    eatText80(value);
                                    state = 230;
                                    return ;
                                case  202 :
                                    eatText81(value);
                                    state = 203;
                                    return ;
                                case  61 :
                                    eatText82(value);
                                    state = 62;
                                    return ;
                                case  181 :
                                    eatText83(value);
                                    state = 182;
                                    return ;
                                case  114 :
                                    state = 117;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  199 :
                                    eatText84(value);
                                    state = 200;
                                    return ;
                                case  45 :
                                    state = 48;
                                    continue outer;
                                case  186 :
                                    state = 189;
                                    continue outer;
                                case  255 :
                                    state = 258;
                                    continue outer;
                                case  124 :
                                    eatText85(value);
                                    state = 125;
                                    return ;
                                case  258 :
                                    state = 261;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  220 :
                                    eatText86(value);
                                    state = 221;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Estimated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Estimated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LateFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsSubproject = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsSubproject = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingCanSplit = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LevelingCanSplit = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Priority = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Duration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OverAllocated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_OverAllocated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText12(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWS = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText13(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CreateDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText14(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _SubprojectName = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText15(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Resume = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText16(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText17(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OutlineLevel = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText18(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText19(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_WorkVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText20(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingDuration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText21(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Milestone = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Milestone = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText22(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StartVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText23(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PreLeveledStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText24(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText25(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Name = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText26(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WBSLevel = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText27(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText28(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText29(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LateStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText30(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Rollup = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Rollup = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText31(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FreeSlack = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText32(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText33(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EarlyFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText34(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText35(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Contact = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText36(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText37(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ConstraintDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText38(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentWorkComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText39(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EarnedValueMethod = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText40(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ExternalTask = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ExternalTask = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText41(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText42(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText43(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HideBar = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_HideBar = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText44(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResumeValid = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ResumeValid = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText45(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OutlineNumber = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText46(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText47(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText48(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ConstraintType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText49(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText50(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _TotalSlack = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText51(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsNull = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsNull = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText52(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WBS = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText53(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkSubAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText54(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PhysicalPercentComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText55(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText56(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Summary = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Summary = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText57(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RegularWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText58(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ExternalTaskProject = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText59(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ACWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ACWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText60(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText61(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText62(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Stop = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText63(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FinishVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText64(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText65(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Critical = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Critical = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText66(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EarlyStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText67(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText68(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Recurring = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Recurring = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText69(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText70(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText71(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualDuration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText72(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelayFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText73(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Notes = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText74(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText75(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsSubprojectReadOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsSubprojectReadOnly = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText76(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText77(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FixedCostAccrual = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText78(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText79(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PreLeveledFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText80(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IgnoreResourceCalendar = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IgnoreResourceCalendar = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText81(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelAssignments = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LevelAssignments = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText82(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EffortDriven = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_EffortDriven = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText83(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText84(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Deadline = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText85(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FixedCost = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_FixedCost = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText86(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Hyperlink = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _Task.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        }

        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  159 :
                        if (("Autolink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 160;
                            return ;
                        }
                        state = 162;
                        continue outer;
                    case  108 :
                        if (("NewTasksEffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 109;
                            return ;
                        }
                        state = 111;
                        continue outer;
                    case  144 :
                        if (("BaselineForEarnedValue" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 145;
                            return ;
                        }
                        state = 147;
                        continue outer;
                    case  120 :
                        if (("SpreadPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 121;
                            return ;
                        }
                        state = 123;
                        continue outer;
                    case  87 :
                        if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 88;
                            return ;
                        }
                        state = 90;
                        continue outer;
                    case  105 :
                        if (("MultipleCriticalPaths" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 106;
                            return ;
                        }
                        state = 108;
                        continue outer;
                    case  193 :
                        if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Calendars = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.class), 194, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  126 :
                        if (("FiscalYearStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 127;
                            return ;
                        }
                        state = 129;
                        continue outer;
                    case  24 :
                        if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  180 :
                        if (("AdminProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 181;
                            return ;
                        }
                        state = 183;
                        continue outer;
                    case  3 :
                        if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  153 :
                        if (("CurrentDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 154;
                            return ;
                        }
                        state = 156;
                        continue outer;
                    case  78 :
                        if (("DefaultFixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 79;
                            return ;
                        }
                        state = 81;
                        continue outer;
                    case  111 :
                        if (("NewTasksEstimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 112;
                            return ;
                        }
                        state = 114;
                        continue outer;
                    case  162 :
                        if (("NewTaskStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 163;
                            return ;
                        }
                        state = 165;
                        continue outer;
                    case  102 :
                        if (("InsertedProjectsLikeSummary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 103;
                            return ;
                        }
                        state = 105;
                        continue outer;
                    case  190 :
                        if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  48 :
                        if (("CurrencyDigits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  21 :
                        if (("Author" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  123 :
                        if (("TaskUpdatesResource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 124;
                            return ;
                        }
                        state = 126;
                        continue outer;
                    case  174 :
                        if (("ActualsInSync" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 175;
                            return ;
                        }
                        state = 177;
                        continue outer;
                    case  132 :
                        if (("MoveCompletedEndsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 133;
                            return ;
                        }
                        state = 135;
                        continue outer;
                    case  168 :
                        if (("ProjectExternallyEdited" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 169;
                            return ;
                        }
                        state = 171;
                        continue outer;
                    case  81 :
                        if (("DefaultStandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 82;
                            return ;
                        }
                        state = 84;
                        continue outer;
                    case  147 :
                        if (("AutoAddNewResourcesAndTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 148;
                            return ;
                        }
                        state = 150;
                        continue outer;
                    case  201 :
                        if (("Assignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 202;
                            return ;
                        }
                        state = 204;
                        continue outer;
                    case  18 :
                        if (("Manager" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  138 :
                        if (("MoveRemainingStartsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 139;
                            return ;
                        }
                        state = 141;
                        continue outer;
                    case  99 :
                        if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 100;
                            return ;
                        }
                        state = 102;
                        continue outer;
                    case  196 :
                        if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  42 :
                        if (("FYStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  30 :
                        if (("LastSaved" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  9 :
                        if (("Subject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  195 :
                        if (("Tasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 196;
                            return ;
                        }
                        state = 198;
                        continue outer;
                    case  27 :
                        if (("Revision" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  51 :
                        if (("CurrencySymbol" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  129 :
                        if (("WeekStartDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 130;
                            return ;
                        }
                        state = 132;
                        continue outer;
                    case  171 :
                        if (("ExtendedCreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 172;
                            return ;
                        }
                        state = 174;
                        continue outer;
                    case  60 :
                        if (("DefaultStartTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  0 :
                        if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  39 :
                        if (("FinishDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  156 :
                        if (("MicrosoftProjectServerURL" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 157;
                            return ;
                        }
                        state = 159;
                        continue outer;
                    case  199 :
                        if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  135 :
                        if (("MoveRemainingStartsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 136;
                            return ;
                        }
                        state = 138;
                        continue outer;
                    case  184 :
                        if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  15 :
                        if (("Company" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        if (("Category" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  192 :
                        if (("Calendars" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 193;
                            return ;
                        }
                        state = 195;
                        continue outer;
                    case  96 :
                        if (("HonorConstraints" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 97;
                            return ;
                        }
                        state = 99;
                        continue outer;
                    case  57 :
                        if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  75 :
                        if (("DefaultTaskType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 76;
                            return ;
                        }
                        state = 78;
                        continue outer;
                    case  165 :
                        if (("DefaultTaskEVMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 166;
                            return ;
                        }
                        state = 168;
                        continue outer;
                    case  198 :
                        if (("Resources" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 199;
                            return ;
                        }
                        state = 201;
                        continue outer;
                    case  202 :
                        if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  187 :
                        if (("VerifyUniqueCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GenerateCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Prefix" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  114 :
                        if (("SplitsInProgressTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 115;
                            return ;
                        }
                        state = 117;
                        continue outer;
                    case  186 :
                        if (("WBSMasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 187;
                            return ;
                        }
                        state = 189;
                        continue outer;
                    case  150 :
                        if (("StatusDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 151;
                            return ;
                        }
                        state = 153;
                        continue outer;
                    case  63 :
                        if (("DefaultFinishTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 64;
                            return ;
                        }
                        state = 66;
                        continue outer;
                    case  36 :
                        if (("StartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  117 :
                        if (("SpreadActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 118;
                            return ;
                        }
                        state = 120;
                        continue outer;
                    case  6 :
                        if (("Title" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  33 :
                        if (("ScheduleFromStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  204 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  90 :
                        if (("WorkFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 91;
                            return ;
                        }
                        state = 93;
                        continue outer;
                    case  45 :
                        if (("CriticalSlackLimit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  183 :
                        if (("OutlineCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 184;
                            return ;
                        }
                        state = 186;
                        continue outer;
                    case  141 :
                        if (("MoveCompletedEndsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 142;
                            return ;
                        }
                        state = 144;
                        continue outer;
                    case  84 :
                        if (("DefaultOvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 85;
                            return ;
                        }
                        state = 87;
                        continue outer;
                    case  69 :
                        if (("MinutesPerWeek" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 70;
                            return ;
                        }
                        state = 72;
                        continue outer;
                    case  72 :
                        if (("DaysPerMonth" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 73;
                            return ;
                        }
                        state = 75;
                        continue outer;
                    case  177 :
                        if (("RemoveFileProperties" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 178;
                            return ;
                        }
                        state = 180;
                        continue outer;
                    case  66 :
                        if (("MinutesPerDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        state = 69;
                        continue outer;
                    case  54 :
                        if (("CurrencySymbolPosition" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  189 :
                        if (("ExtendedAttributes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 190;
                            return ;
                        }
                        state = 192;
                        continue outer;
                    case  93 :
                        if (("EditableActualCosts" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 94;
                            return ;
                        }
                        state = 96;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("Subject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  113 :
                        if (("NewTasksEstimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 114;
                            return ;
                        }
                        break;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  53 :
                        if (("CurrencySymbol" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  38 :
                        if (("StartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  89 :
                        if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 90;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  140 :
                        if (("MoveRemainingStartsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 141;
                            return ;
                        }
                        break;
                    case  158 :
                        if (("MicrosoftProjectServerURL" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 159;
                            return ;
                        }
                        break;
                    case  149 :
                        if (("AutoAddNewResourcesAndTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 150;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("CurrencySymbolPosition" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("MinutesPerWeek" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 72;
                            return ;
                        }
                        break;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  197 :
                        if (("Tasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 198;
                            return ;
                        }
                        break;
                    case  104 :
                        if (("InsertedProjectsLikeSummary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 105;
                            return ;
                        }
                        break;
                    case  146 :
                        if (("BaselineForEarnedValue" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 147;
                            return ;
                        }
                        break;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  190 :
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname));
                        return ;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  170 :
                        if (("ProjectExternallyEdited" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 171;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  41 :
                        if (("FinishDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  122 :
                        if (("SpreadPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 123;
                            return ;
                        }
                        break;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  65 :
                        if (("DefaultFinishTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  86 :
                        if (("DefaultOvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 87;
                            return ;
                        }
                        break;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  29 :
                        if (("Revision" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  119 :
                        if (("SpreadActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 120;
                            return ;
                        }
                        break;
                    case  201 :
                        state = 204;
                        continue outer;
                    case  44 :
                        if (("FYStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  185 :
                        if (("OutlineCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 186;
                            return ;
                        }
                        break;
                    case  196 :
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname));
                        return ;
                    case  134 :
                        if (("MoveCompletedEndsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 135;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  125 :
                        if (("TaskUpdatesResource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 126;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  195 :
                        state = 198;
                        continue outer;
                    case  20 :
                        if (("Manager" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  194 :
                        if (("Calendars" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 195;
                            return ;
                        }
                        break;
                    case  80 :
                        if (("DefaultFixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 81;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  188 :
                        if (("WBSMasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 189;
                            return ;
                        }
                        break;
                    case  143 :
                        if (("MoveCompletedEndsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 144;
                            return ;
                        }
                        break;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  83 :
                        if (("DefaultStandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 84;
                            return ;
                        }
                        break;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  95 :
                        if (("EditableActualCosts" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 96;
                            return ;
                        }
                        break;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  167 :
                        if (("DefaultTaskEVMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 168;
                            return ;
                        }
                        break;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  173 :
                        if (("ExtendedCreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 174;
                            return ;
                        }
                        break;
                    case  62 :
                        if (("DefaultStartTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  199 :
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        if (("Title" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("LastSaved" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  137 :
                        if (("MoveRemainingStartsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 138;
                            return ;
                        }
                        break;
                    case  184 :
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  203 :
                        if (("Assignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 204;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  176 :
                        if (("ActualsInSync" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 177;
                            return ;
                        }
                        break;
                    case  116 :
                        if (("SplitsInProgressTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 117;
                            return ;
                        }
                        break;
                    case  98 :
                        if (("HonorConstraints" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 99;
                            return ;
                        }
                        break;
                    case  182 :
                        if (("AdminProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 183;
                            return ;
                        }
                        break;
                    case  192 :
                        state = 195;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  92 :
                        if (("WorkFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 93;
                            return ;
                        }
                        break;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  47 :
                        if (("CriticalSlackLimit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  152 :
                        if (("StatusDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 153;
                            return ;
                        }
                        break;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  35 :
                        if (("ScheduleFromStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  198 :
                        state = 201;
                        continue outer;
                    case  202 :
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname));
                        return ;
                    case  74 :
                        if (("DaysPerMonth" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 75;
                            return ;
                        }
                        break;
                    case  101 :
                        if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 102;
                            return ;
                        }
                        break;
                    case  110 :
                        if (("NewTasksEffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 111;
                            return ;
                        }
                        break;
                    case  187 :
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname));
                        return ;
                    case  155 :
                        if (("CurrentDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 156;
                            return ;
                        }
                        break;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  191 :
                        if (("ExtendedAttributes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 192;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  128 :
                        if (("FiscalYearStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 129;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("Category" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  50 :
                        if (("CurrencyDigits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  77 :
                        if (("DefaultTaskType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 78;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  200 :
                        if (("Resources" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 201;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("Company" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  179 :
                        if (("RemoveFileProperties" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 180;
                            return ;
                        }
                        break;
                    case  204 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  23 :
                        if (("Author" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  68 :
                        if (("MinutesPerDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  107 :
                        if (("MultipleCriticalPaths" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 108;
                            return ;
                        }
                        break;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  164 :
                        if (("NewTaskStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 165;
                            return ;
                        }
                        break;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  5 :
                        if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  189 :
                        state = 192;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  161 :
                        if (("Autolink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 162;
                            return ;
                        }
                        break;
                    case  131 :
                        if (("WeekStartDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 132;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  159 :
                        state = 162;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  190 :
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname));
                        return ;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  201 :
                        state = 204;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  196 :
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname));
                        return ;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  195 :
                        state = 198;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  199 :
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname));
                        return ;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  184 :
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  192 :
                        state = 195;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  198 :
                        state = 201;
                        continue outer;
                    case  202 :
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname));
                        return ;
                    case  187 :
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname));
                        return ;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  204 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  189 :
                        state = 192;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  159 :
                        state = 162;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  190 :
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname));
                        return ;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  201 :
                        state = 204;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  196 :
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname));
                        return ;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  195 :
                        state = 198;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  199 :
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname));
                        return ;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  184 :
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  192 :
                        state = 195;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  198 :
                        state = 201;
                        continue outer;
                    case  202 :
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname));
                        return ;
                    case  187 :
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname));
                        return ;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  204 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  189 :
                        state = 192;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  19 :
                            eatText1(value);
                            state = 20;
                            return ;
                        case  159 :
                            state = 162;
                            continue outer;
                        case  151 :
                            eatText2(value);
                            state = 152;
                            return ;
                        case  108 :
                            state = 111;
                            continue outer;
                        case  61 :
                            eatText3(value);
                            state = 62;
                            return ;
                        case  144 :
                            state = 147;
                            continue outer;
                        case  58 :
                            eatText4(value);
                            state = 59;
                            return ;
                        case  120 :
                            state = 123;
                            continue outer;
                        case  94 :
                            eatText5(value);
                            state = 95;
                            return ;
                        case  87 :
                            state = 90;
                            continue outer;
                        case  105 :
                            state = 108;
                            continue outer;
                        case  34 :
                            eatText6(value);
                            state = 35;
                            return ;
                        case  126 :
                            state = 129;
                            continue outer;
                        case  139 :
                            eatText7(value);
                            state = 140;
                            return ;
                        case  79 :
                            eatText8(value);
                            state = 80;
                            return ;
                        case  127 :
                            eatText9(value);
                            state = 128;
                            return ;
                        case  106 :
                            eatText10(value);
                            state = 107;
                            return ;
                        case  85 :
                            eatText11(value);
                            state = 86;
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  37 :
                            eatText12(value);
                            state = 38;
                            return ;
                        case  180 :
                            state = 183;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  100 :
                            eatText13(value);
                            state = 101;
                            return ;
                        case  153 :
                            state = 156;
                            continue outer;
                        case  78 :
                            state = 81;
                            continue outer;
                        case  111 :
                            state = 114;
                            continue outer;
                        case  162 :
                            state = 165;
                            continue outer;
                        case  118 :
                            eatText14(value);
                            state = 119;
                            return ;
                        case  160 :
                            eatText15(value);
                            state = 161;
                            return ;
                        case  102 :
                            state = 105;
                            continue outer;
                        case  190 :
                            _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, value));
                            return ;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  130 :
                            eatText16(value);
                            state = 131;
                            return ;
                        case  76 :
                            eatText17(value);
                            state = 77;
                            return ;
                        case  13 :
                            eatText18(value);
                            state = 14;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  123 :
                            state = 126;
                            continue outer;
                        case  174 :
                            state = 177;
                            continue outer;
                        case  132 :
                            state = 135;
                            continue outer;
                        case  168 :
                            state = 171;
                            continue outer;
                        case  81 :
                            state = 84;
                            continue outer;
                        case  147 :
                            state = 150;
                            continue outer;
                        case  154 :
                            eatText19(value);
                            state = 155;
                            return ;
                        case  201 :
                            state = 204;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  138 :
                            state = 141;
                            continue outer;
                        case  1 :
                            eatText20(value);
                            state = 2;
                            return ;
                        case  99 :
                            state = 102;
                            continue outer;
                        case  196 :
                            _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, value));
                            return ;
                        case  64 :
                            eatText21(value);
                            state = 65;
                            return ;
                        case  49 :
                            eatText22(value);
                            state = 50;
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  73 :
                            eatText23(value);
                            state = 74;
                            return ;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  88 :
                            eatText24(value);
                            state = 89;
                            return ;
                        case  178 :
                            eatText25(value);
                            state = 179;
                            return ;
                        case  195 :
                            state = 198;
                            continue outer;
                        case  4 :
                            eatText26(value);
                            state = 5;
                            return ;
                        case  115 :
                            eatText27(value);
                            state = 116;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  129 :
                            state = 132;
                            continue outer;
                        case  25 :
                            eatText28(value);
                            state = 26;
                            return ;
                        case  171 :
                            state = 174;
                            continue outer;
                        case  60 :
                            state = 63;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  52 :
                            eatText29(value);
                            state = 53;
                            return ;
                        case  157 :
                            eatText30(value);
                            state = 158;
                            return ;
                        case  22 :
                            eatText31(value);
                            state = 23;
                            return ;
                        case  156 :
                            state = 159;
                            continue outer;
                        case  31 :
                            eatText32(value);
                            state = 32;
                            return ;
                        case  103 :
                            eatText33(value);
                            state = 104;
                            return ;
                        case  199 :
                            _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, value));
                            return ;
                        case  10 :
                            eatText34(value);
                            state = 11;
                            return ;
                        case  148 :
                            eatText35(value);
                            state = 149;
                            return ;
                        case  166 :
                            eatText36(value);
                            state = 167;
                            return ;
                        case  135 :
                            state = 138;
                            continue outer;
                        case  142 :
                            eatText37(value);
                            state = 143;
                            return ;
                        case  184 :
                            _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, value));
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  192 :
                            state = 195;
                            continue outer;
                        case  28 :
                            eatText38(value);
                            state = 29;
                            return ;
                        case  96 :
                            state = 99;
                            continue outer;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  75 :
                            state = 78;
                            continue outer;
                        case  175 :
                            eatText39(value);
                            state = 176;
                            return ;
                        case  165 :
                            state = 168;
                            continue outer;
                        case  163 :
                            eatText40(value);
                            state = 164;
                            return ;
                        case  198 :
                            state = 201;
                            continue outer;
                        case  67 :
                            eatText41(value);
                            state = 68;
                            return ;
                        case  202 :
                            _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, value));
                            return ;
                        case  169 :
                            eatText42(value);
                            state = 170;
                            return ;
                        case  112 :
                            eatText43(value);
                            state = 113;
                            return ;
                        case  187 :
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, value));
                            return ;
                        case  133 :
                            eatText44(value);
                            state = 134;
                            return ;
                        case  97 :
                            eatText45(value);
                            state = 98;
                            return ;
                        case  114 :
                            state = 117;
                            continue outer;
                        case  186 :
                            state = 189;
                            continue outer;
                        case  150 :
                            state = 153;
                            continue outer;
                        case  40 :
                            eatText46(value);
                            state = 41;
                            return ;
                        case  63 :
                            state = 66;
                            continue outer;
                        case  124 :
                            eatText47(value);
                            state = 125;
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  117 :
                            state = 120;
                            continue outer;
                        case  16 :
                            eatText48(value);
                            state = 17;
                            return ;
                        case  46 :
                            eatText49(value);
                            state = 47;
                            return ;
                        case  172 :
                            eatText50(value);
                            state = 173;
                            return ;
                        case  109 :
                            eatText51(value);
                            state = 110;
                            return ;
                        case  91 :
                            eatText52(value);
                            state = 92;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  70 :
                            eatText53(value);
                            state = 71;
                            return ;
                        case  55 :
                            eatText54(value);
                            state = 56;
                            return ;
                        case  145 :
                            eatText55(value);
                            state = 146;
                            return ;
                        case  121 :
                            eatText56(value);
                            state = 122;
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  136 :
                            eatText57(value);
                            state = 137;
                            return ;
                        case  204 :
                            revertToParentFromText(value);
                            return ;
                        case  90 :
                            state = 93;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  183 :
                            state = 186;
                            continue outer;
                        case  82 :
                            eatText58(value);
                            state = 83;
                            return ;
                        case  141 :
                            state = 144;
                            continue outer;
                        case  84 :
                            state = 87;
                            continue outer;
                        case  69 :
                            state = 72;
                            continue outer;
                        case  72 :
                            state = 75;
                            continue outer;
                        case  177 :
                            state = 180;
                            continue outer;
                        case  66 :
                            state = 69;
                            continue outer;
                        case  7 :
                            eatText59(value);
                            state = 8;
                            return ;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  189 :
                            state = 192;
                            continue outer;
                        case  93 :
                            state = 96;
                            continue outer;
                        case  181 :
                            eatText60(value);
                            state = 182;
                            return ;
                        case  43 :
                            eatText61(value);
                            state = 44;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Manager = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StatusDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultStartTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EditableActualCosts = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_EditableActualCosts = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ScheduleFromStart = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ScheduleFromStart = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveRemainingStartsForward = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveRemainingStartsForward = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultFixedCostAccrual = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FiscalYearStart = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FiscalYearStart = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MultipleCriticalPaths = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MultipleCriticalPaths = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultOvertimeRate = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DefaultOvertimeRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EarnedValueMethod = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SpreadActualCost = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SpreadActualCost = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Autolink = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Autolink = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WeekStartDay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultTaskType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Category = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrentDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UID = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultFinishTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrencyDigits = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DaysPerMonth = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText25(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RemoveFileProperties = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RemoveFileProperties = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText26(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText27(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SplitsInProgressTasks = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SplitsInProgressTasks = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText28(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText29(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrencySymbol = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText30(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MicrosoftProjectServerURL = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MicrosoftProjectServerURL = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText31(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Author = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText32(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastSaved = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText33(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InsertedProjectsLikeSummary = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_InsertedProjectsLikeSummary = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText34(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Subject = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText35(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AutoAddNewResourcesAndTasks = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AutoAddNewResourcesAndTasks = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText36(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultTaskEVMethod = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText37(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveCompletedEndsForward = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveCompletedEndsForward = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText38(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Revision = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText39(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ActualsInSync = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ActualsInSync = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText40(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewTaskStartDate = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText41(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MinutesPerDay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText42(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProjectExternallyEdited = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ProjectExternallyEdited = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText43(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewTasksEstimated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NewTasksEstimated = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText44(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveCompletedEndsBack = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveCompletedEndsBack = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText45(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _HonorConstraints = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_HonorConstraints = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText46(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FinishDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText47(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TaskUpdatesResource = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_TaskUpdatesResource = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText48(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Company = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText49(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CriticalSlackLimit = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText50(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ExtendedCreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText51(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewTasksEffortDriven = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NewTasksEffortDriven = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText52(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WorkFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText53(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MinutesPerWeek = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText54(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrencySymbolPosition = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText55(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BaselineForEarnedValue = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText56(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SpreadPercentComplete = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SpreadPercentComplete = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText57(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveRemainingStartsBack = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveRemainingStartsBack = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText58(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultStandardRate = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DefaultStandardRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText59(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Title = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText60(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AdminProject = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AdminProject = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText61(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FYStartDate = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

    public static class WBSMasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _WBSMask = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        protected boolean has_GenerateCodes;
        protected boolean _GenerateCodes;
        protected java.lang.String _Prefix;
        protected boolean has_VerifyUniqueCodes;
        protected boolean _VerifyUniqueCodes;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.class);
        }

        public java.util.List getWBSMask() {
            return _WBSMask;
        }

        public boolean isGenerateCodes() {
            return _GenerateCodes;
        }

        public void setGenerateCodes(boolean value) {
            _GenerateCodes = value;
            has_GenerateCodes = true;
        }

        public java.lang.String getPrefix() {
            return _Prefix;
        }

        public void setPrefix(java.lang.String value) {
            _Prefix = value;
        }

        public boolean isVerifyUniqueCodes() {
            return _VerifyUniqueCodes;
        }

        public void setVerifyUniqueCodes(boolean value) {
            _VerifyUniqueCodes = value;
            has_VerifyUniqueCodes = true;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _WBSMask.size();
            if (has_VerifyUniqueCodes) {
                context.startElement("http://schemas.microsoft.com/project", "VerifyUniqueCodes");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _VerifyUniqueCodes)), "VerifyUniqueCodes");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_GenerateCodes) {
                context.startElement("http://schemas.microsoft.com/project", "GenerateCodes");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _GenerateCodes)), "GenerateCodes");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_Prefix!= null) {
                context.startElement("http://schemas.microsoft.com/project", "Prefix");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Prefix), "Prefix");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "WBSMask");
                int idx_6 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WBSMask.get(idx_6 ++)), "WBSMask");
                context.endNamespaceDecls();
                int idx_7 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WBSMask.get(idx_7 ++)), "WBSMask");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _WBSMask.get(idx1 ++)), "WBSMask");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _WBSMask.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _WBSMask.size();
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\t\u001dq\u008eppsq\u0000~\u0000\u0000\u0006\u00a1f\u0003ppsq\u0000~\u0000\u0000\u0003"
+"\u001f\u00d5]ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u001f\u00fd\u00cap"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u001f\u00fd\u00bfsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002\u001f\u00fd\u00b4ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004"
+"namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u00001\u00ff3ppsr\u0000$com.sun."
+"msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datat"
+"ype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype"
+".xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSD"
+"atatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000"
+"\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whit"
+"eSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007bool"
+"eansr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csq"
+"\u0000~\u0000\b\u0001\u00ed\u00fe|ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003"
+"expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0001\u00ed\u00feqq\u0000~\u0000\u000fpsq\u0000~\u0000\u0011\u0000\u0083\u00d3\u008appsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QNam"
+"eq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000+q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expre"
+"ssion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~\u0000-t\u0000"
+"\u0011VerifyUniqueCodest\u0000$http://schemas.microsoft.com/projectq\u0000~"
+"\u00003sq\u0000~\u0000\b\u0000\u00ff\u00d7\u008eppsq\u0000~\u0000\n\u0000\u00ff\u00d7\u0083q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0000\u00ff\u00d7xppq\u0000~\u0000\u0014sq\u0000~\u0000\b\u0000\u00cd\u00d8@pp"
+"sq\u0000~\u0000&\u0000\u00cd\u00d85q\u0000~\u0000\u000fpq\u0000~\u0000(sq\u0000~\u0000-q\u0000~\u00000q\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000-t\u0000\rGenerateC"
+"odesq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000\b\u0003\u0081\u0090\u00a1ppsq\u0000~\u0000\n\u0003\u0081\u0090\u0096q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0003\u0081\u0090\u008bppsq\u0000~\u0000"
+"\u0011\u0001us2ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueC"
+"onstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTy"
+"peWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000"
+"\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconc"
+"reteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNa"
+"meq\u0000~\u0000\u0019xq\u0000~\u0000\u0018q\u0000~\u00007psr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001f\u0000\u0000sr\u0000#com.sun.msv.datatype."
+"xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0006strin"
+"gq\u0000~\u0000K\u0001q\u0000~\u0000Mt\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000estring-derivedq\u0000~\u0000"
+"7sq\u0000~\u0000\b\u0002\f\u001dTppsq\u0000~\u0000&\u0002\f\u001dIq\u0000~\u0000\u000fpq\u0000~\u0000(sq\u0000~\u0000-q\u0000~\u00000q\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000"
+"-t\u0000\u0006Prefixq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000\b\u0002|\u000b\u0086ppsr\u0000 com.sun.msv.grammar.OneO"
+"rMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002|\u000b{q\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0002|\u000bxq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002|\u000bmppsq"
+"\u0000~\u0000\n\u0000\u00ee&-pp\u0000sq\u0000~\u0000\b\u0000\u00ee&\"ppsq\u0000~\u0000X\u0000\u00ee&\u0017q\u0000~\u0000\u000fpsq\u0000~\u0000&\u0000\u00ee&\u0014q\u0000~\u0000\u000fpsr\u00002c"
+"om.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u00004q\u0000~\u0000bsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00003sq\u0000~\u0000-t\u0000Acom.tapsterrock.mspdi.schema.Proj"
+"ectType.WBSMasksType.WBSMaskTypet\u0000+http://java.sun.com/jaxb/"
+"xjc/dummy-elementssq\u0000~\u0000\b\u0001\u008d\u00e5;ppsq\u0000~\u0000&\u0001\u008d\u00e50q\u0000~\u0000\u000fpq\u0000~\u0000(sq\u0000~\u0000-q\u0000~"
+"\u00000q\u0000~\u00001q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0007WBSMaskq\u0000~\u00007q\u0000~\u00003sr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq"
+"\u0000~\u0000n[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0012\u0000\u0000\u00009pu"
+"r\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppq"
+"\u0000~\u0000Wppq\u0000~\u0000hpppppq\u0000~\u0000\u0006ppppppppppq\u0000~\u0000\u0005pppppppppq\u0000~\u0000\u0007pppppppppp"
+"pppppppppppppppppppppppppppppppq\u0000~\u0000Rpppq\u0000~\u0000\u0010ppppq\u0000~\u0000%ppppppp"
+"pq\u0000~\u0000:ppppq\u0000~\u0000;ppq\u0000~\u0000\tpppppppppppppq\u0000~\u00008pppppppppppppppppq\u0000~"
+"\u0000_ppppppq\u0000~\u0000Bpppq\u0000~\u0000^pppppppppppppppppq\u0000~\u0000@ppppppq\u0000~\u0000\\pppppp"
+"pppppppq\u0000~\u0000Zpppp"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("VerifyUniqueCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  10 :
                            if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _WBSMask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  6 :
                            if (("Prefix" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  12 :
                            if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  3 :
                            if (("GenerateCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  9 :
                            if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  11 :
                            if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("VerifyUniqueCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  8 :
                            if (("Prefix" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("GenerateCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  12 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  1 :
                                eatText1(value);
                                state = 2;
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  7 :
                                eatText2(value);
                                state = 8;
                                return ;
                            case  4 :
                                eatText3(value);
                                state = 5;
                                return ;
                            case  12 :
                                revertToParentFromText(value);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _VerifyUniqueCodes = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_VerifyUniqueCodes = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Prefix = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _GenerateCodes = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_GenerateCodes = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

        public static class WBSMaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Separator;
            protected java.math.BigInteger _Type;
            protected java.lang.String _Length;
            protected java.math.BigInteger _Level;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType.class);
            }

            public java.lang.String getSeparator() {
                return _Separator;
            }

            public void setSeparator(java.lang.String value) {
                _Separator = value;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public java.lang.String getLength() {
                return _Length;
            }

            public void setLength(java.lang.String value) {
                _Length = value;
            }

            public java.math.BigInteger getLevel() {
                return _Level;
            }

            public void setLevel(java.math.BigInteger value) {
                _Level = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://schemas.microsoft.com/project", "Level");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Level)), "Level");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Type");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Length");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Length), "Length");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Separator");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Separator), "Separator");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0007,W\u00d5ppsq\u0000~\u0000\u0000\u0004\u00c5<\u00b7ppsq\u0000~\u0000\u0000\u0004"
+"!\u0018\u000eppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv"
+".grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL"
+"\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001[\u00d3\u0018pp\u0000sq\u0000~\u0000\u0000\u0001[\u00d3\rppsr\u0000\u001bcom.sun.msv."
+"grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"
+"type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"
+"\u0000~\u0000\u0003\u0000u\u0003\u0006ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L"
+"\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*"
+"com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
+".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv"
+".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lja"
+"va/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
+"/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.Fr"
+"actionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype"
+".xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.su"
+"n.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFix"
+"edZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0013L\u0000\fconcreteTypet\u0000\'Lco"
+"m/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016p"
+"pq\u0000~\u0000\u001e\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000\u001eq\u0000~\u0000%t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000"
+"\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00e6\u00d0\u0002ppsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0000\u00e6\u00cf\u00f7sr\u0000"
+"\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\r\u0000\u0083\u00d3\u008appsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNam"
+"eq\u0000~\u0000\u001eq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00005q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expre"
+"ssion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u00000\u0001psq\u0000~\u00007t\u0000"
+"\u0005Levelt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\b\u0002\u00c5D\u00f1pp\u0000sq"
+"\u0000~\u0000\u0000\u0002\u00c5D\u00e6ppsq\u0000~\u0000\r\u0001\u00cc\u0004?ppsr\u0000)com.sun.msv.datatype.xsd.Enumerati"
+"onFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv"
+".datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000"
+"~\u0000!q\u0000~\u0000Apq\u0000~\u0000\u001e\u0000\u0000q\u0000~\u0000\u0019q\u0000~\u0000\u0019t\u0000\u000benumerationsr\u0000\u0011java.util.HashSe"
+"t\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.Int"
+"egerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0017xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095"
+"\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000Lt\u0000\u00012sq\u0000~\u0000Lt\u0000\u00010sq\u0000~\u0000Lt\u0000\u00011xq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000fi"
+"nteger-derivedq\u0000~\u0000Asq\u0000~\u0000,\u0000\u00f9@\u00a2ppsq\u0000~\u0000.\u0000\u00f9@\u0097q\u0000~\u00001pq\u0000~\u00002sq\u0000~\u00007q\u0000"
+"~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0004Typeq\u0000~\u0000Asq\u0000~\u0000\b\u0000\u00a4$\u00a4pp\u0000sq\u0000~\u0000\u0000\u0000\u00a4$\u0099ppsq\u0000~"
+"\u0000\r\u0000\u0004\u0083\u00b5ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000"
+"\risAlwaysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0006stringsr\u00005com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001d\u0001q\u0000~\u0000)sq\u0000~\u0000*"
+"q\u0000~\u0000bq\u0000~\u0000\u001asq\u0000~\u0000,\u0000\u009f\u00a0\u00dfppsq\u0000~\u0000.\u0000\u009f\u00a0\u00d4q\u0000~\u00001pq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q"
+"\u0000~\u0000=sq\u0000~\u00007t\u0000\u0006Lengthq\u0000~\u0000Asq\u0000~\u0000\b\u0002g\u001b\u0019pp\u0000sq\u0000~\u0000\u0000\u0002g\u001b\u000eppq\u0000~\u0000_sq\u0000~\u0000,"
+"\u0002b\u0097Tppsq\u0000~\u0000.\u0002b\u0097Iq\u0000~\u00001pq\u0000~\u00002sq\u0000~\u00007q\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000=sq\u0000~\u00007t\u0000\tSep"
+"aratorq\u0000~\u0000Asr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash"
+";xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c"
+"\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000s[\u0000\u0005tablet\u0000![Lcom/sun/ms"
+"v/grammar/Expression;xp\u0000\u0000\u0000\u000b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Ex"
+"pression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppq\u0000~\u0000mppppppq\u0000~\u0000lppppppppppppppppq\u0000~\u0000\u0006ppp"
+"ppppppppppppq\u0000~\u0000-pppppq\u0000~\u0000\u0007ppppppppppppppppq\u0000~\u0000Xppppppppq\u0000~\u0000"
+"\fpppppppppppq\u0000~\u0000Cpppppppq\u0000~\u0000fppppppq\u0000~\u0000^pq\u0000~\u0000\u0005pppppppppppppp"
+"ppppppppppppppppppppp"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  6 :
                                if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  9 :
                                if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                break;
                            case  0 :
                                if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  12 :
                                    revertToParentFromText(value);
                                    return ;
                                case  10 :
                                    eatText1(value);
                                    state = 11;
                                    return ;
                                case  1 :
                                    eatText2(value);
                                    state = 2;
                                    return ;
                                case  4 :
                                    eatText3(value);
                                    state = 5;
                                    return ;
                                case  7 :
                                    eatText4(value);
                                    state = 8;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Separator = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Level = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Length = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

    }

}
