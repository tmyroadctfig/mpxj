//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2004.09.16 at 08:42:56 BST
//


package com.tapsterrock.mspdi.schema.impl;

public class ProjectTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
{

    protected java.math.BigInteger _MinutesPerDay;
    protected boolean has_SplitsInProgressTasks;
    protected boolean _SplitsInProgressTasks;
    protected java.lang.String _Manager;
    protected java.util.Calendar _DefaultFinishTime;
    protected boolean has_FiscalYearStart;
    protected boolean _FiscalYearStart;
    protected boolean has_RemoveFileProperties;
    protected boolean _RemoveFileProperties;
    protected java.math.BigInteger _DefaultTaskEVMethod;
    protected java.util.Calendar _DefaultStartTime;
    protected java.util.Calendar _FinishDate;
    protected boolean has_MoveCompletedEndsBack;
    protected boolean _MoveCompletedEndsBack;
    protected java.math.BigInteger _WorkFormat;
    protected java.math.BigInteger _BaselineForEarnedValue;
    protected java.math.BigInteger _CalendarUID;
    protected java.lang.String _Subject;
    protected boolean has_NewTasksEstimated;
    protected boolean _NewTasksEstimated;
    protected boolean has_SpreadActualCost;
    protected boolean _SpreadActualCost;
    protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType _Resources;
    protected java.math.BigInteger _DefaultFixedCostAccrual;
    protected boolean has_MultipleCriticalPaths;
    protected boolean _MultipleCriticalPaths;
    protected boolean has_AutoAddNewResourcesAndTasks;
    protected boolean _AutoAddNewResourcesAndTasks;
    protected boolean has_DefaultOvertimeRate;
    protected float _DefaultOvertimeRate;
    protected java.util.Calendar _StartDate;
    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType _Calendars;
    protected java.math.BigInteger _CurrencySymbolPosition;
    protected com.tapsterrock.mspdi.schema.ProjectType.TasksType _Tasks;
    protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType _OutlineCodes;
    protected com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType _WBSMasks;
    protected java.math.BigInteger _FYStartDate;
    protected java.util.Calendar _LastSaved;
    protected java.util.Calendar _StatusDate;
    protected boolean has_MoveRemainingStartsBack;
    protected boolean _MoveRemainingStartsBack;
    protected boolean has_Autolink;
    protected boolean _Autolink;
    protected java.lang.String _Title;
    protected java.lang.String _Company;
    protected java.util.Calendar _ExtendedCreationDate;
    protected java.math.BigInteger _DurationFormat;
    protected boolean has_MicrosoftProjectServerURL;
    protected boolean _MicrosoftProjectServerURL;
    protected java.math.BigInteger _NewTaskStartDate;
    protected boolean has_HonorConstraints;
    protected boolean _HonorConstraints;
    protected java.math.BigInteger _DaysPerMonth;
    protected java.lang.String _Author;
    protected boolean has_AdminProject;
    protected boolean _AdminProject;
    protected boolean has_ScheduleFromStart;
    protected boolean _ScheduleFromStart;
    protected java.math.BigInteger _MinutesPerWeek;
    protected java.util.Calendar _CurrentDate;
    protected com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType _ExtendedAttributes;
    protected java.math.BigInteger _CurrencyDigits;
    protected boolean has_InsertedProjectsLikeSummary;
    protected boolean _InsertedProjectsLikeSummary;
    protected java.lang.String _Name;
    protected boolean has_SpreadPercentComplete;
    protected boolean _SpreadPercentComplete;
    protected java.math.BigInteger _WeekStartDay;
    protected boolean has_DefaultStandardRate;
    protected float _DefaultStandardRate;
    protected boolean has_MoveCompletedEndsForward;
    protected boolean _MoveCompletedEndsForward;
    protected java.lang.String _CurrencySymbol;
    protected com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType _Assignments;
    protected boolean has_TaskUpdatesResource;
    protected boolean _TaskUpdatesResource;
    protected boolean has_EditableActualCosts;
    protected boolean _EditableActualCosts;
    protected java.lang.String _UID;
    protected java.math.BigInteger _CriticalSlackLimit;
    protected java.math.BigInteger _Revision;
    protected boolean has_NewTasksEffortDriven;
    protected boolean _NewTasksEffortDriven;
    protected java.math.BigInteger _EarnedValueMethod;
    protected boolean has_MoveRemainingStartsForward;
    protected boolean _MoveRemainingStartsForward;
    protected java.math.BigInteger _DefaultTaskType;
    protected boolean has_ProjectExternallyEdited;
    protected boolean _ProjectExternallyEdited;
    protected boolean has_ActualsInSync;
    protected boolean _ActualsInSync;
    protected java.lang.String _Category;
    protected java.util.Calendar _CreationDate;
    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.tapsterrock.mspdi.schema.ProjectType.class);
    }

    public java.math.BigInteger getMinutesPerDay() {
        return _MinutesPerDay;
    }

    public void setMinutesPerDay(java.math.BigInteger value) {
        _MinutesPerDay = value;
    }

    public boolean isSplitsInProgressTasks() {
        return _SplitsInProgressTasks;
    }

    public void setSplitsInProgressTasks(boolean value) {
        _SplitsInProgressTasks = value;
        has_SplitsInProgressTasks = true;
    }

    public java.lang.String getManager() {
        return _Manager;
    }

    public void setManager(java.lang.String value) {
        _Manager = value;
    }

    public java.util.Calendar getDefaultFinishTime() {
        return _DefaultFinishTime;
    }

    public void setDefaultFinishTime(java.util.Calendar value) {
        _DefaultFinishTime = value;
    }

    public boolean isFiscalYearStart() {
        return _FiscalYearStart;
    }

    public void setFiscalYearStart(boolean value) {
        _FiscalYearStart = value;
        has_FiscalYearStart = true;
    }

    public boolean isRemoveFileProperties() {
        return _RemoveFileProperties;
    }

    public void setRemoveFileProperties(boolean value) {
        _RemoveFileProperties = value;
        has_RemoveFileProperties = true;
    }

    public java.math.BigInteger getDefaultTaskEVMethod() {
        return _DefaultTaskEVMethod;
    }

    public void setDefaultTaskEVMethod(java.math.BigInteger value) {
        _DefaultTaskEVMethod = value;
    }

    public java.util.Calendar getDefaultStartTime() {
        return _DefaultStartTime;
    }

    public void setDefaultStartTime(java.util.Calendar value) {
        _DefaultStartTime = value;
    }

    public java.util.Calendar getFinishDate() {
        return _FinishDate;
    }

    public void setFinishDate(java.util.Calendar value) {
        _FinishDate = value;
    }

    public boolean isMoveCompletedEndsBack() {
        return _MoveCompletedEndsBack;
    }

    public void setMoveCompletedEndsBack(boolean value) {
        _MoveCompletedEndsBack = value;
        has_MoveCompletedEndsBack = true;
    }

    public java.math.BigInteger getWorkFormat() {
        return _WorkFormat;
    }

    public void setWorkFormat(java.math.BigInteger value) {
        _WorkFormat = value;
    }

    public java.math.BigInteger getBaselineForEarnedValue() {
        return _BaselineForEarnedValue;
    }

    public void setBaselineForEarnedValue(java.math.BigInteger value) {
        _BaselineForEarnedValue = value;
    }

    public java.math.BigInteger getCalendarUID() {
        return _CalendarUID;
    }

    public void setCalendarUID(java.math.BigInteger value) {
        _CalendarUID = value;
    }

    public java.lang.String getSubject() {
        return _Subject;
    }

    public void setSubject(java.lang.String value) {
        _Subject = value;
    }

    public boolean isNewTasksEstimated() {
        return _NewTasksEstimated;
    }

    public void setNewTasksEstimated(boolean value) {
        _NewTasksEstimated = value;
        has_NewTasksEstimated = true;
    }

    public boolean isSpreadActualCost() {
        return _SpreadActualCost;
    }

    public void setSpreadActualCost(boolean value) {
        _SpreadActualCost = value;
        has_SpreadActualCost = true;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType getResources() {
        return _Resources;
    }

    public void setResources(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType value) {
        _Resources = value;
    }

    public java.math.BigInteger getDefaultFixedCostAccrual() {
        return _DefaultFixedCostAccrual;
    }

    public void setDefaultFixedCostAccrual(java.math.BigInteger value) {
        _DefaultFixedCostAccrual = value;
    }

    public boolean isMultipleCriticalPaths() {
        return _MultipleCriticalPaths;
    }

    public void setMultipleCriticalPaths(boolean value) {
        _MultipleCriticalPaths = value;
        has_MultipleCriticalPaths = true;
    }

    public boolean isAutoAddNewResourcesAndTasks() {
        return _AutoAddNewResourcesAndTasks;
    }

    public void setAutoAddNewResourcesAndTasks(boolean value) {
        _AutoAddNewResourcesAndTasks = value;
        has_AutoAddNewResourcesAndTasks = true;
    }

    public float getDefaultOvertimeRate() {
        return _DefaultOvertimeRate;
    }

    public void setDefaultOvertimeRate(float value) {
        _DefaultOvertimeRate = value;
        has_DefaultOvertimeRate = true;
    }

    public java.util.Calendar getStartDate() {
        return _StartDate;
    }

    public void setStartDate(java.util.Calendar value) {
        _StartDate = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType getCalendars() {
        return _Calendars;
    }

    public void setCalendars(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType value) {
        _Calendars = value;
    }

    public java.math.BigInteger getCurrencySymbolPosition() {
        return _CurrencySymbolPosition;
    }

    public void setCurrencySymbolPosition(java.math.BigInteger value) {
        _CurrencySymbolPosition = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.TasksType getTasks() {
        return _Tasks;
    }

    public void setTasks(com.tapsterrock.mspdi.schema.ProjectType.TasksType value) {
        _Tasks = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType getOutlineCodes() {
        return _OutlineCodes;
    }

    public void setOutlineCodes(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType value) {
        _OutlineCodes = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType getWBSMasks() {
        return _WBSMasks;
    }

    public void setWBSMasks(com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType value) {
        _WBSMasks = value;
    }

    public java.math.BigInteger getFYStartDate() {
        return _FYStartDate;
    }

    public void setFYStartDate(java.math.BigInteger value) {
        _FYStartDate = value;
    }

    public java.util.Calendar getLastSaved() {
        return _LastSaved;
    }

    public void setLastSaved(java.util.Calendar value) {
        _LastSaved = value;
    }

    public java.util.Calendar getStatusDate() {
        return _StatusDate;
    }

    public void setStatusDate(java.util.Calendar value) {
        _StatusDate = value;
    }

    public boolean isMoveRemainingStartsBack() {
        return _MoveRemainingStartsBack;
    }

    public void setMoveRemainingStartsBack(boolean value) {
        _MoveRemainingStartsBack = value;
        has_MoveRemainingStartsBack = true;
    }

    public boolean isAutolink() {
        return _Autolink;
    }

    public void setAutolink(boolean value) {
        _Autolink = value;
        has_Autolink = true;
    }

    public java.lang.String getTitle() {
        return _Title;
    }

    public void setTitle(java.lang.String value) {
        _Title = value;
    }

    public java.lang.String getCompany() {
        return _Company;
    }

    public void setCompany(java.lang.String value) {
        _Company = value;
    }

    public java.util.Calendar getExtendedCreationDate() {
        return _ExtendedCreationDate;
    }

    public void setExtendedCreationDate(java.util.Calendar value) {
        _ExtendedCreationDate = value;
    }

    public java.math.BigInteger getDurationFormat() {
        return _DurationFormat;
    }

    public void setDurationFormat(java.math.BigInteger value) {
        _DurationFormat = value;
    }

    public boolean isMicrosoftProjectServerURL() {
        return _MicrosoftProjectServerURL;
    }

    public void setMicrosoftProjectServerURL(boolean value) {
        _MicrosoftProjectServerURL = value;
        has_MicrosoftProjectServerURL = true;
    }

    public java.math.BigInteger getNewTaskStartDate() {
        return _NewTaskStartDate;
    }

    public void setNewTaskStartDate(java.math.BigInteger value) {
        _NewTaskStartDate = value;
    }

    public boolean isHonorConstraints() {
        return _HonorConstraints;
    }

    public void setHonorConstraints(boolean value) {
        _HonorConstraints = value;
        has_HonorConstraints = true;
    }

    public java.math.BigInteger getDaysPerMonth() {
        return _DaysPerMonth;
    }

    public void setDaysPerMonth(java.math.BigInteger value) {
        _DaysPerMonth = value;
    }

    public java.lang.String getAuthor() {
        return _Author;
    }

    public void setAuthor(java.lang.String value) {
        _Author = value;
    }

    public boolean isAdminProject() {
        return _AdminProject;
    }

    public void setAdminProject(boolean value) {
        _AdminProject = value;
        has_AdminProject = true;
    }

    public boolean isScheduleFromStart() {
        return _ScheduleFromStart;
    }

    public void setScheduleFromStart(boolean value) {
        _ScheduleFromStart = value;
        has_ScheduleFromStart = true;
    }

    public java.math.BigInteger getMinutesPerWeek() {
        return _MinutesPerWeek;
    }

    public void setMinutesPerWeek(java.math.BigInteger value) {
        _MinutesPerWeek = value;
    }

    public java.util.Calendar getCurrentDate() {
        return _CurrentDate;
    }

    public void setCurrentDate(java.util.Calendar value) {
        _CurrentDate = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType getExtendedAttributes() {
        return _ExtendedAttributes;
    }

    public void setExtendedAttributes(com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType value) {
        _ExtendedAttributes = value;
    }

    public java.math.BigInteger getCurrencyDigits() {
        return _CurrencyDigits;
    }

    public void setCurrencyDigits(java.math.BigInteger value) {
        _CurrencyDigits = value;
    }

    public boolean isInsertedProjectsLikeSummary() {
        return _InsertedProjectsLikeSummary;
    }

    public void setInsertedProjectsLikeSummary(boolean value) {
        _InsertedProjectsLikeSummary = value;
        has_InsertedProjectsLikeSummary = true;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public boolean isSpreadPercentComplete() {
        return _SpreadPercentComplete;
    }

    public void setSpreadPercentComplete(boolean value) {
        _SpreadPercentComplete = value;
        has_SpreadPercentComplete = true;
    }

    public java.math.BigInteger getWeekStartDay() {
        return _WeekStartDay;
    }

    public void setWeekStartDay(java.math.BigInteger value) {
        _WeekStartDay = value;
    }

    public float getDefaultStandardRate() {
        return _DefaultStandardRate;
    }

    public void setDefaultStandardRate(float value) {
        _DefaultStandardRate = value;
        has_DefaultStandardRate = true;
    }

    public boolean isMoveCompletedEndsForward() {
        return _MoveCompletedEndsForward;
    }

    public void setMoveCompletedEndsForward(boolean value) {
        _MoveCompletedEndsForward = value;
        has_MoveCompletedEndsForward = true;
    }

    public java.lang.String getCurrencySymbol() {
        return _CurrencySymbol;
    }

    public void setCurrencySymbol(java.lang.String value) {
        _CurrencySymbol = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType getAssignments() {
        return _Assignments;
    }

    public void setAssignments(com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType value) {
        _Assignments = value;
    }

    public boolean isTaskUpdatesResource() {
        return _TaskUpdatesResource;
    }

    public void setTaskUpdatesResource(boolean value) {
        _TaskUpdatesResource = value;
        has_TaskUpdatesResource = true;
    }

    public boolean isEditableActualCosts() {
        return _EditableActualCosts;
    }

    public void setEditableActualCosts(boolean value) {
        _EditableActualCosts = value;
        has_EditableActualCosts = true;
    }

    public java.lang.String getUID() {
        return _UID;
    }

    public void setUID(java.lang.String value) {
        _UID = value;
    }

    public java.math.BigInteger getCriticalSlackLimit() {
        return _CriticalSlackLimit;
    }

    public void setCriticalSlackLimit(java.math.BigInteger value) {
        _CriticalSlackLimit = value;
    }

    public java.math.BigInteger getRevision() {
        return _Revision;
    }

    public void setRevision(java.math.BigInteger value) {
        _Revision = value;
    }

    public boolean isNewTasksEffortDriven() {
        return _NewTasksEffortDriven;
    }

    public void setNewTasksEffortDriven(boolean value) {
        _NewTasksEffortDriven = value;
        has_NewTasksEffortDriven = true;
    }

    public java.math.BigInteger getEarnedValueMethod() {
        return _EarnedValueMethod;
    }

    public void setEarnedValueMethod(java.math.BigInteger value) {
        _EarnedValueMethod = value;
    }

    public boolean isMoveRemainingStartsForward() {
        return _MoveRemainingStartsForward;
    }

    public void setMoveRemainingStartsForward(boolean value) {
        _MoveRemainingStartsForward = value;
        has_MoveRemainingStartsForward = true;
    }

    public java.math.BigInteger getDefaultTaskType() {
        return _DefaultTaskType;
    }

    public void setDefaultTaskType(java.math.BigInteger value) {
        _DefaultTaskType = value;
    }

    public boolean isProjectExternallyEdited() {
        return _ProjectExternallyEdited;
    }

    public void setProjectExternallyEdited(boolean value) {
        _ProjectExternallyEdited = value;
        has_ProjectExternallyEdited = true;
    }

    public boolean isActualsInSync() {
        return _ActualsInSync;
    }

    public void setActualsInSync(boolean value) {
        _ActualsInSync = value;
        has_ActualsInSync = true;
    }

    public java.lang.String getCategory() {
        return _Category;
    }

    public void setCategory(java.lang.String value) {
        _Category = value;
    }

    public java.util.Calendar getCreationDate() {
        return _CreationDate;
    }

    public void setCreationDate(java.util.Calendar value) {
        _CreationDate = value;
    }

    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_UID!= null) {
            context.startElement("http://schemas.microsoft.com/project", "UID");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _UID), "UID");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Name!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Name");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Title!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Title");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Title), "Title");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Subject!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Subject");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Subject), "Subject");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Category!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Category");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Category), "Category");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Company!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Company");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Company), "Company");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Manager!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Manager");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Manager), "Manager");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Author!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Author");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Author), "Author");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CreationDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null), "CreationDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Revision!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Revision");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Revision)), "Revision");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_LastSaved!= null) {
            context.startElement("http://schemas.microsoft.com/project", "LastSaved");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LastSaved), null), "LastSaved");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ScheduleFromStart) {
            context.startElement("http://schemas.microsoft.com/project", "ScheduleFromStart");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ScheduleFromStart)), "ScheduleFromStart");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_StartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "StartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StartDate), null), "StartDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FinishDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "FinishDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FinishDate), null), "FinishDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FYStartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "FYStartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FYStartDate)), "FYStartDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CriticalSlackLimit!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CriticalSlackLimit");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CriticalSlackLimit)), "CriticalSlackLimit");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrencyDigits!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencyDigits");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CurrencyDigits)), "CurrencyDigits");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrencySymbol!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencySymbol");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CurrencySymbol), "CurrencySymbol");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrencySymbolPosition!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencySymbolPosition");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CurrencySymbolPosition)), "CurrencySymbolPosition");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CalendarUID!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalendarUID)), "CalendarUID");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultStartTime!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultStartTime");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _DefaultStartTime), null), "DefaultStartTime");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultFinishTime!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultFinishTime");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _DefaultFinishTime), null), "DefaultFinishTime");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MinutesPerDay!= null) {
            context.startElement("http://schemas.microsoft.com/project", "MinutesPerDay");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MinutesPerDay)), "MinutesPerDay");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MinutesPerWeek!= null) {
            context.startElement("http://schemas.microsoft.com/project", "MinutesPerWeek");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MinutesPerWeek)), "MinutesPerWeek");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DaysPerMonth!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DaysPerMonth");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DaysPerMonth)), "DaysPerMonth");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultTaskType!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultTaskType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DefaultTaskType)), "DefaultTaskType");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultFixedCostAccrual!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultFixedCostAccrual");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DefaultFixedCostAccrual)), "DefaultFixedCostAccrual");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DefaultStandardRate) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultStandardRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _DefaultStandardRate)), "DefaultStandardRate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DefaultOvertimeRate) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultOvertimeRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _DefaultOvertimeRate)), "DefaultOvertimeRate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DurationFormat!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_WorkFormat!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WorkFormat");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorkFormat)), "WorkFormat");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_EditableActualCosts) {
            context.startElement("http://schemas.microsoft.com/project", "EditableActualCosts");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EditableActualCosts)), "EditableActualCosts");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_HonorConstraints) {
            context.startElement("http://schemas.microsoft.com/project", "HonorConstraints");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _HonorConstraints)), "HonorConstraints");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EarnedValueMethod!= null) {
            context.startElement("http://schemas.microsoft.com/project", "EarnedValueMethod");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EarnedValueMethod)), "EarnedValueMethod");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_InsertedProjectsLikeSummary) {
            context.startElement("http://schemas.microsoft.com/project", "InsertedProjectsLikeSummary");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _InsertedProjectsLikeSummary)), "InsertedProjectsLikeSummary");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MultipleCriticalPaths) {
            context.startElement("http://schemas.microsoft.com/project", "MultipleCriticalPaths");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MultipleCriticalPaths)), "MultipleCriticalPaths");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_NewTasksEffortDriven) {
            context.startElement("http://schemas.microsoft.com/project", "NewTasksEffortDriven");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NewTasksEffortDriven)), "NewTasksEffortDriven");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_NewTasksEstimated) {
            context.startElement("http://schemas.microsoft.com/project", "NewTasksEstimated");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NewTasksEstimated)), "NewTasksEstimated");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SplitsInProgressTasks) {
            context.startElement("http://schemas.microsoft.com/project", "SplitsInProgressTasks");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SplitsInProgressTasks)), "SplitsInProgressTasks");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SpreadActualCost) {
            context.startElement("http://schemas.microsoft.com/project", "SpreadActualCost");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SpreadActualCost)), "SpreadActualCost");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SpreadPercentComplete) {
            context.startElement("http://schemas.microsoft.com/project", "SpreadPercentComplete");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SpreadPercentComplete)), "SpreadPercentComplete");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_TaskUpdatesResource) {
            context.startElement("http://schemas.microsoft.com/project", "TaskUpdatesResource");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _TaskUpdatesResource)), "TaskUpdatesResource");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FiscalYearStart) {
            context.startElement("http://schemas.microsoft.com/project", "FiscalYearStart");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _FiscalYearStart)), "FiscalYearStart");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_WeekStartDay!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WeekStartDay");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WeekStartDay)), "WeekStartDay");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveCompletedEndsBack) {
            context.startElement("http://schemas.microsoft.com/project", "MoveCompletedEndsBack");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveCompletedEndsBack)), "MoveCompletedEndsBack");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveRemainingStartsBack) {
            context.startElement("http://schemas.microsoft.com/project", "MoveRemainingStartsBack");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveRemainingStartsBack)), "MoveRemainingStartsBack");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveRemainingStartsForward) {
            context.startElement("http://schemas.microsoft.com/project", "MoveRemainingStartsForward");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveRemainingStartsForward)), "MoveRemainingStartsForward");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MoveCompletedEndsForward) {
            context.startElement("http://schemas.microsoft.com/project", "MoveCompletedEndsForward");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MoveCompletedEndsForward)), "MoveCompletedEndsForward");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_BaselineForEarnedValue!= null) {
            context.startElement("http://schemas.microsoft.com/project", "BaselineForEarnedValue");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BaselineForEarnedValue)), "BaselineForEarnedValue");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AutoAddNewResourcesAndTasks) {
            context.startElement("http://schemas.microsoft.com/project", "AutoAddNewResourcesAndTasks");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AutoAddNewResourcesAndTasks)), "AutoAddNewResourcesAndTasks");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_StatusDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "StatusDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StatusDate), null), "StatusDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CurrentDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrentDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CurrentDate), null), "CurrentDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MicrosoftProjectServerURL) {
            context.startElement("http://schemas.microsoft.com/project", "MicrosoftProjectServerURL");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _MicrosoftProjectServerURL)), "MicrosoftProjectServerURL");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Autolink) {
            context.startElement("http://schemas.microsoft.com/project", "Autolink");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Autolink)), "Autolink");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NewTaskStartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "NewTaskStartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _NewTaskStartDate)), "NewTaskStartDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DefaultTaskEVMethod!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultTaskEVMethod");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DefaultTaskEVMethod)), "DefaultTaskEVMethod");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ProjectExternallyEdited) {
            context.startElement("http://schemas.microsoft.com/project", "ProjectExternallyEdited");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ProjectExternallyEdited)), "ProjectExternallyEdited");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ExtendedCreationDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "ExtendedCreationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ExtendedCreationDate), null), "ExtendedCreationDate");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ActualsInSync) {
            context.startElement("http://schemas.microsoft.com/project", "ActualsInSync");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ActualsInSync)), "ActualsInSync");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_RemoveFileProperties) {
            context.startElement("http://schemas.microsoft.com/project", "RemoveFileProperties");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RemoveFileProperties)), "RemoveFileProperties");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AdminProject) {
            context.startElement("http://schemas.microsoft.com/project", "AdminProject");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AdminProject)), "AdminProject");
            } catch (java.lang.Exception e) {
                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OutlineCodes!= null) {
            context.startElement("http://schemas.microsoft.com/project", "OutlineCodes");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCodes), "OutlineCodes");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCodes), "OutlineCodes");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCodes), "OutlineCodes");
            context.endElement();
        }
        if (_WBSMasks!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WBSMasks");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WBSMasks), "WBSMasks");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WBSMasks), "WBSMasks");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _WBSMasks), "WBSMasks");
            context.endElement();
        }
        if (_ExtendedAttributes!= null) {
            context.startElement("http://schemas.microsoft.com/project", "ExtendedAttributes");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttributes), "ExtendedAttributes");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttributes), "ExtendedAttributes");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttributes), "ExtendedAttributes");
            context.endElement();
        }
        if (_Calendars!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Calendars");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Calendars), "Calendars");
            context.endElement();
        }
        if (_Tasks!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Tasks");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Tasks), "Tasks");
            context.endElement();
        }
        if (_Resources!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Resources");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Resources), "Resources");
            context.endElement();
        }
        if (_Assignments!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Assignments");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Assignments), "Assignments");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Assignments), "Assignments");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Assignments), "Assignments");
            context.endElement();
        }
    }

    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.tapsterrock.mspdi.schema.ProjectType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dt"
+"t\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLc"
+"om/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.datatype."
+"xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.dat"
+"atype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com"
+".sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacet"
+"FixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatyp"
+"e/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype"
+"/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.s"
+"un.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUri"
+"q\u0000~\u0000ZL\u0000\btypeNameq\u0000~\u0000ZL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000$http://schemas.microsoft.com/pro"
+"jectpsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preser"
+"ve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000[t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006strin"
+"gq\u0000~\u0000a\u0001q\u0000~\u0000et\u0000\tmaxLength\u0000\u0000\u0000\u0010sr\u00000com.sun.msv.grammar.Expressi"
+"on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util."
+"StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000ZL\u0000\fnamespaceURIq\u0000~\u0000Zxp"
+"t\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsr\u0000 com.sun.msv.grammar.Attrib"
+"uteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Kxq\u0000~\u0000\u0003q\u0000~\u0000Opsq\u0000"
+"~\u0000Qppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000c"
+"q\u0000~\u0000ft\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000`q\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0000tq\u0000~\u0000fsr\u0000#com.sun."
+"msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000ZL\u0000\fna"
+"mespaceURIq\u0000~\u0000Zxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"pt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com."
+"sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000N\u0001q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0003UIDq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0000\u00ffq\u0000~\u0000jsq\u0000~\u0000"
+"kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq"
+"\u0000~\u0000xt\u0000\u0004Nameq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq"
+"\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-der"
+"ivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0005Titleq\u0000"
+"~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~"
+"\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~"
+"\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0007Subjectq\u0000~\u0000^q\u0000~\u0000~sq\u0000"
+"~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000"
+"~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq"
+"\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\bCategoryq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000"
+"Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000"
+"\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000q"
+"q\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0007Companyq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~"
+"\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~s"
+"q\u0000~\u0000xt\u0000\u0007Managerq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Q"
+"ppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000eq\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0002\u0000q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring"
+"-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0006Aut"
+"horq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsr\u0000%com.su"
+"n.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.da"
+"tatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\bdateTime"
+"q\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0000\u00d6q\u0000~\u0000fsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000"
+"~sq\u0000~\u0000xt\u0000\fCreationDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000Qppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000"
+"\nbaseFacetsq\u0000~\u0000Xxq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0007integerq\u0000~\u0000vsr\u0000,com.sun.msv.da"
+"tatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun"
+".msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea"
+"\u0002\u0000\u0000xq\u0000~\u0000Wppq\u0000~\u0000v\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0007decimalq\u0000~\u0000vq\u0000~\u0000\u00e8t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000"
+"q\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0000\u00e3q\u0000~\u0000fsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~"
+"\u0000xt\u0000\bRevisionq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d2sq\u0000"
+"~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\tLastSavedq\u0000~\u0000^q\u0000~\u0000~"
+"sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsr\u0000$com.sun.msv.datatyp"
+"e.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0007booleanq\u0000~\u0000vq\u0000~\u0000js"
+"q\u0000~\u0000kq\u0000~\u0000\u00fdq\u0000~\u0000fsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0011S"
+"cheduleFromStartq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d2"
+"sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\tStartDateq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d2sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~"
+"\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\nFinishDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000O"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000Vq\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000"
+"q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f"
+"\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\fsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Zxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq"
+"\u0000~\u0001\u001bt\u0000\u00017sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bt\u0000\u00016sq\u0000~\u0001\u001bt\u0000\u00011sq\u0000~\u0001\u001bt\u0000\u000210sq\u0000~\u0001\u001bt\u0000\u00015s"
+"q\u0000~\u0001\u001bt\u0000\u000211sq\u0000~\u0001\u001bt\u0000\u00019sq\u0000~\u0001\u001bt\u0000\u00014sq\u0000~\u0001\u001bt\u0000\u00018sq\u0000~\u0001\u001bt\u0000\u000212xq\u0000~\u0000jsq\u0000"
+"~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000"
+"~sq\u0000~\u0000xt\u0000\u000bFYStartDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000\u00dfsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0012CriticalSla"
+"ckLimitq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dfsq\u0000~\u0000Hpps"
+"q\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eCurrencyDigitsq\u0000~\u0000^q\u0000~\u0000~s"
+"q\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0000Uq\u0000~\u0000^pq\u0000~\u0000a\u0000\u0000q\u0000~\u0000e"
+"q\u0000~\u0000eq\u0000~\u0000h\u0000\u0000\u0000\u0014q\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000estring-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000"
+"oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eCurrencySymbolq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000"
+"Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000"
+"\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sq\u0000~\u0001\u001bt\u0000\u00013sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bt\u0000\u00010sq\u0000~"
+"\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000O"
+"pq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0016CurrencySymbolPositionq\u0000~\u0000^q\u0000~\u0000~sq\u0000"
+"~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dfsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000"
+"zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000bCalendarUIDq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000Qppsr\u0000!com.sun.msv.datatype.xsd.TimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u00d4q\u0000~\u0000ft\u0000\u0004timeq\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0001uq\u0000~\u0000fsq\u0000~\u0000Hppsq\u0000~\u0000oq"
+"\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010DefaultStartTimeq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000"
+"Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001rsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq"
+"\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0011DefaultFinishTimeq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dfsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\rMi"
+"nutesPerDayq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dfsq\u0000~\u0000"
+"Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000eMinutesPerWeekq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dfsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~"
+"\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\fDaysPerMonthq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~"
+"\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019"
+"w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bq\u0000~\u0001_sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000f"
+"integer-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000"
+"xt\u0000\u000fDefaultTaskTypeq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003"
+"sq\u0000~\u0001\u001bt\u0000\u00013sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derived"
+"q\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0017DefaultFixe"
+"dCostAccrualq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qpps"
+"r\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun."
+"msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000cq\u0000~\u0000ft\u0000\u0005"
+"floatq\u0000~\u0000vq\u0000~\u0000jsq\u0000~\u0000kq\u0000~\u0001\u00c1q\u0000~\u0000fsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000"
+"zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013DefaultStandardRateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000"
+"~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00bdsq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt"
+"\u0000\u0013DefaultOvertimeRateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000"
+"\u0000\u001asq\u0000~\u0001\u001bt\u0000\u00013sq\u0000~\u0001\u001bt\u0000\u000241sq\u0000~\u0001\u001bt\u0000\u000239sq\u0000~\u0001\u001bt\u0000\u000236sq\u0000~\u0001\u001bt\u0000\u00016sq\u0000~\u0001"
+"\u001bt\u0000\u00015sq\u0000~\u0001\u001bt\u0000\u000237sq\u0000~\u0001\u001bt\u0000\u000211sq\u0000~\u0001\u001bt\u0000\u000240sq\u0000~\u0001\u001bt\u0000\u00014sq\u0000~\u0001\u001bt\u0000\u000212s"
+"q\u0000~\u0001\u001bt\u0000\u000252sq\u0000~\u0001\u001bt\u0000\u00017sq\u0000~\u0001\u001bt\u0000\u000238sq\u0000~\u0001\u001bt\u0000\u000220sq\u0000~\u0001\u001bt\u0000\u000242sq\u0000~\u0001\u001bt"
+"\u0000\u000253sq\u0000~\u0001\u001bt\u0000\u000243sq\u0000~\u0001\u001bt\u0000\u000221sq\u0000~\u0001\u001bt\u0000\u000210sq\u0000~\u0001\u001bt\u0000\u000235sq\u0000~\u0001\u001bt\u0000\u000244s"
+"q\u0000~\u0001\u001bt\u0000\u00019sq\u0000~\u0001\u001bt\u0000\u000219sq\u0000~\u0001\u001bt\u0000\u00018sq\u0000~\u0001\u001bt\u0000\u000251xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finte"
+"ger-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000e"
+"DurationFormatq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qp"
+"psq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sq\u0000~\u0001"
+"\u001bt\u0000\u00013sq\u0000~\u0001\u001bt\u0000\u00015sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bt\u0000\u00014sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000f"
+"integer-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000"
+"xt\u0000\nWorkFormatq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq"
+"\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013EditableActualCost"
+"sq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq"
+"\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010HonorConstraintsq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000"
+"Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000"
+"\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0001\u001bq\u0000~\u0001_sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt"
+"\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000"
+"~\u0000xt\u0000\u0011EarnedValueMethodq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u001bInsertedP"
+"rojectsLikeSummaryq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~"
+"\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015MultipleCritic"
+"alPathsq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hpps"
+"q\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0014NewTasksEffortDrivenq\u0000~\u0000^"
+"q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq"
+"\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0011NewTasksEstimatedq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq"
+"\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~s"
+"q\u0000~\u0000xt\u0000\u0015SplitsInProgressTasksq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010Spr"
+"eadActualCostq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000"
+"~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015SpreadPercentComple"
+"teq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000o"
+"q\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013TaskUpdatesResourceq\u0000~\u0000^q\u0000~\u0000~s"
+"q\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000"
+"~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000fFiscalYearStartq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000"
+"Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w"
+"\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0007sq\u0000~\u0001\u001bt\u0000\u00013sq\u0000~\u0001\u001bt\u0000\u00015sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bq\u0000~\u0001_sq\u0000~\u0001\u001b"
+"t\u0000\u00014sq\u0000~\u0001\u001bt\u0000\u00016sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^s"
+"q\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\fWeekStartDayq\u0000~\u0000^"
+"q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq"
+"\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0015MoveCompletedEndsBackq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000H"
+"ppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000"
+"~\u0000~sq\u0000~\u0000xt\u0000\u0017MoveRemainingStartsBackq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq"
+"\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000x"
+"t\u0000\u001aMoveRemainingStartsForwardq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0018Mov"
+"eCompletedEndsForwardq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000"
+"\u0000\u000bsq\u0000~\u0001\u001bt\u0000\u000210sq\u0000~\u0001\u001bt\u0000\u00013sq\u0000~\u0001\u001bt\u0000\u00015sq\u0000~\u0001\u001bt\u0000\u00017sq\u0000~\u0001\u001bt\u0000\u00012sq\u0000~\u0001\u001bq"
+"\u0000~\u0001_sq\u0000~\u0001\u001bt\u0000\u00019sq\u0000~\u0001\u001bt\u0000\u00014sq\u0000~\u0001\u001bt\u0000\u00018sq\u0000~\u0001\u001bt\u0000\u00016sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000j"
+"sq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq"
+"\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0016BaselineForEarnedValueq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq"
+"\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000x"
+"t\u0000\u001bAutoAddNewResourcesAndTasksq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d2sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\nSt"
+"atusDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d2sq\u0000~\u0000Hpp"
+"sq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u000bCurrentDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000"
+"~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000"
+"zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0019MicrosoftProjectServerURLq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq"
+"\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~s"
+"q\u0000~\u0000xt\u0000\bAutolinkq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000"
+"~\u0001\u001bq\u0000~\u0001_sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000Hp"
+"psq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0010NewTaskStartDateq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Qppsq\u0000~\u0001\u0015q\u0000~\u0000^pq\u0000~\u0000v\u0000\u0000q"
+"\u0000~\u0000\u00e2q\u0000~\u0000\u00e2q\u0000~\u0001\u0018sq\u0000~\u0001\u0019w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0001\u001bq\u0000~\u0001_sq\u0000~\u0001\u001bt\u0000\u00011xq\u0000~\u0000"
+"jsq\u0000~\u0000kt\u0000\u000finteger-derivedq\u0000~\u0000^sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000z"
+"q\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0013DefaultTaskEVMethodq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~"
+"\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000"
+"\u0017ProjectExternallyEditedq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0000\u00d2sq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0014Extended"
+"CreationDateq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~"
+"\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\rActualsInSyncq\u0000~\u0000^q\u0000"
+"~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~"
+"\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0014RemoveFilePropertiesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hpps"
+"q\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00fasq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~"
+"sq\u0000~\u0000xt\u0000\fAdminProjectq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003q\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opsr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u007fq\u0000~\u0003Dsr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000yq\u0000~\u0000~sq\u0000~\u0000xt\u00009com.tapste"
+"rrock.mspdi.schema.ProjectType.OutlineCodesTypet\u0000+http://jav"
+"a.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000"
+"~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\fOutlineCodesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hppsq\u0000~\u0003?q\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0003Dq\u0000~\u0003Fq"
+"\u0000~\u0000~sq\u0000~\u0000xt\u00005com.tapsterrock.mspdi.schema.ProjectType.WBSMas"
+"ksTypeq\u0000~\u0003Isq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\bWBSMa"
+"sksq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hpps"
+"q\u0000~\u0003?q\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0003Dq\u0000~\u0003Fq\u0000~\u0000~sq\u0000~\u0000xt\u0000?com.tapsterro"
+"ck.mspdi.schema.ProjectType.ExtendedAttributesTypeq\u0000~\u0003Isq\u0000~\u0000"
+"Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0012ExtendedAttributesq\u0000~"
+"\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hppsq\u0000~\u0003?q"
+"\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0003Dq\u0000~\u0003Fq\u0000~\u0000~sq\u0000~\u0000xt\u00006com.tapsterrock.msp"
+"di.schema.ProjectType.CalendarsTypeq\u0000~\u0003Isq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Op"
+"q\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\tCalendarsq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~"
+"\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hppsq\u0000~\u0003?q\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0003Dq\u0000"
+"~\u0003Fq\u0000~\u0000~sq\u0000~\u0000xt\u00002com.tapsterrock.mspdi.schema.ProjectType.Ta"
+"sksTypeq\u0000~\u0003Isq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\u0005Task"
+"sq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hppsq\u0000"
+"~\u0003?q\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0003Dq\u0000~\u0003Fq\u0000~\u0000~sq\u0000~\u0000xt\u00006com.tapsterrock"
+".mspdi.schema.ProjectType.ResourcesTypeq\u0000~\u0003Isq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000"
+"~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000~\u0000xt\u0000\tResourcesq\u0000~\u0000^q\u0000~\u0000~sq\u0000~\u0000Hppsq\u0000~\u0000"
+"Jq\u0000~\u0000Op\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Jpp\u0000sq\u0000~\u0000Hppsq\u0000~\u0003?q\u0000~\u0000Opsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~"
+"\u0003Dq\u0000~\u0003Fq\u0000~\u0000~sq\u0000~\u0000xt\u00008com.tapsterrock.mspdi.schema.ProjectTyp"
+"e.AssignmentsTypeq\u0000~\u0003Isq\u0000~\u0000Hppsq\u0000~\u0000oq\u0000~\u0000Opq\u0000~\u0000qq\u0000~\u0000zq\u0000~\u0000~sq\u0000"
+"~\u0000xt\u0000\u000bAssignmentsq\u0000~\u0000^q\u0000~\u0000~sr\u0000\"com.sun.msv.grammar.Expressio"
+"nPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressio"
+"nPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Cl"
+"osedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/"
+"sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0001\u001d\u0001pq\u0000~\u0002\u00f9q\u0000~\u0003:q\u0000~\u0003Nq\u0000~\u0003[q"
+"\u0000~\u0003hq\u0000~\u0003uq\u0000~\u0003\u0082q\u0000~\u0003\u008fq\u0000~\u0000Eq\u0000~\u0000\u001bq\u0000~\u0000Fq\u0000~\u0000@q\u0000~\u0003\nq\u0000~\u0003Aq\u0000~\u0003Sq\u0000~\u0003`q"
+"\u0000~\u0003mq\u0000~\u0003zq\u0000~\u0003\u0087q\u0000~\u0003\u0094q\u0000~\u0000=q\u0000~\u0000\u00a5q\u0000~\u0000#q\u0000~\u0000\u00deq\u0000~\u0001=q\u0000~\u0001Dq\u0000~\u0001jq\u0000~\u0001\u0084q"
+"\u0000~\u0001\u008bq\u0000~\u0001\u0092q\u0000~\u0002\u0010q\u0000~\u0000.q\u0000~\u0000\fq\u0000~\u0000Iq\u0000~\u0000\'q\u0000~\u0001\u00baq\u0000~\u0001\u00c7q\u0000~\u0000+q\u0000~\u0002\u000eq\u0000~\u0001\u00d0q"
+"\u0000~\u0003\bq\u0000~\u0000&q\u0000~\u0000\u008fq\u0000~\u0003 q\u0000~\u0002\u00e6q\u0000~\u0002\u00dfq\u0000~\u0001\u0005q\u0000~\u0000\u00f2q\u0000~\u0000\u00d1q\u0000~\u0001\fq\u0000~\u0000\u0005q\u0000~\u0000*q"
+"\u0000~\u0000(q\u0000~\u0000\"q\u0000~\u0003!q\u0000~\u0003\u001aq\u0000~\u0003\u0013q\u0000~\u0003\u0004q\u0000~\u0002\u00f5q\u0000~\u0002\u00eeq\u0000~\u0002\u00e7q\u0000~\u0002\u00e0q\u0000~\u0002\u00d9q\u0000~\u0000\u001dq"
+"\u0000~\u0002\u00d2q\u0000~\u0002\u00b1q\u0000~\u0002\u00aaq\u0000~\u0002\u00a3q\u0000~\u0002\u009cq\u0000~\u0002\u0095q\u0000~\u0002|q\u0000~\u0002uq\u0000~\u0002nq\u0000~\u0002gq\u0000~\u0002`q\u0000~\u0002Yq"
+"\u0000~\u0002Rq\u0000~\u0000<q\u0000~\u0002Kq\u0000~\u0002Dq\u0000~\u0002=q\u0000~\u0002.q\u0000~\u0002\'q\u0000~\u0002 q\u0000~\u0002\nq\u0000~\u0001\u0006q\u0000~\u0000\u00ffq\u0000~\u0000\u00f3q"
+"\u0000~\u0000\u00ecq\u0000~\u0000\u00d8q\u0000~\u0000\u00cbq\u0000~\u0000\u00c0q\u0000~\u0000\u00b5q\u0000~\u0000\u00aaq\u0000~\u0000\u009fq\u0000~\u0000\u0094q\u0000~\u0000\u0089q\u0000~\u0000nq\u0000~\u00017q\u0000~\u0001\rq"
+"\u0000~\u0001>q\u0000~\u0001Eq\u0000~\u0001Pq\u0000~\u0001dq\u0000~\u0001kq\u0000~\u0001wq\u0000~\u0000\u00aeq\u0000~\u0001~q\u0000~\u0001\u0085q\u0000~\u0001\u008cq\u0000~\u0001\u0093q\u0000~\u0001\u00a4q"
+"\u0000~\u0001\u00b6q\u0000~\u0001\u00c3q\u0000~\u0001\u00caq\u0000~\u0000\u00a3q\u0000~\u0003(q\u0000~\u0003/q\u0000~\u00036q\u0000~\u0003Jq\u0000~\u0000\u0084q\u0000~\u0003Wq\u0000~\u0003dq\u0000~\u0003qq"
+"\u0000~\u0003~q\u0000~\u0003\u008bq\u0000~\u0003\u0098q\u0000~\u0001\u00ceq\u0000~\u0001\u0013q\u0000~\u0000Aq\u0000~\u00003q\u0000~\u0000\u00bbq\u0000~\u0000!q\u0000~\u0000\u009aq\u0000~\u0000\u001fq\u0000~\u0000\u0018q"
+"\u0000~\u00022q\u0000~\u0000\u00b9q\u0000~\u0000\u0019q\u0000~\u00001q\u0000~\u00006q\u0000~\u0001\u00a8q\u0000~\u0001qq\u0000~\u0001}q\u0000~\u0000Pq\u0000~\u0000\u0082q\u0000~\u0002\u00b7q\u0000~\u0000/q"
+"\u0000~\u0001\u00bcq\u0000~\u0001\u00c9q\u0000~\u0003\u0019q\u0000~\u0002\u00f4q\u0000~\u0002\u00edq\u0000~\u0002\u00d8q\u0000~\u0002\u00b0q\u0000~\u0002\u00a9q\u0000~\u0002\u00a2q\u0000~\u0000)q\u0000~\u0002\u009bq\u0000~\u0002{q"
+"\u0000~\u0002tq\u0000~\u0002mq\u0000~\u0002fq\u0000~\u0002_q\u0000~\u0002Xq\u0000~\u0002Qq\u0000~\u0002Jq\u0000~\u0002Cq\u0000~\u0002-q\u0000~\u0002&q\u0000~\u0000\u00f9q\u0000~\u0003\'q"
+"\u0000~\u0003.q\u0000~\u00035q\u0000~\u0000\u0015q\u0000~\u0000\u001cq\u0000~\u0000Bq\u0000~\u0000\u00c4q\u0000~\u00008q\u0000~\u0000Gq\u0000~\u0000\u000eq\u0000~\u00004q\u0000~\u0003>q\u0000~\u0003Rq"
+"\u0000~\u0003_q\u0000~\u0000-q\u0000~\u0000\u000fq\u0000~\u0003lq\u0000~\u0003yq\u0000~\u0000\u0014q\u0000~\u0003\u0086q\u0000~\u0003\u0093q\u0000~\u0000\u0016q\u0000~\u00005q\u0000~\u0001oq\u0000~\u0001{q"
+"\u0000~\u0000;q\u0000~\u0000\u008dq\u0000~\u0000\u0007q\u0000~\u0000,q\u0000~\u0001Tq\u0000~\u0000 q\u0000~\u0003<q\u0000~\u0000\u0017q\u0000~\u0003Pq\u0000~\u0003]q\u0000~\u0003jq\u0000~\u0003wq"
+"\u0000~\u0003\u0084q\u0000~\u0003\u0091q\u0000~\u0000\u000bq\u0000~\u00002q\u0000~\u0000\nq\u0000~\u0000\u0011q\u0000~\u0001\u0097q\u0000~\u0000?q\u0000~\u0000$q\u0000~\u0001\u00aaq\u0000~\u00000q\u0000~\u0000>q"
+"\u0000~\u0001Vq\u0000~\u0003\u001eq\u0000~\u0000Dq\u0000~\u0002\u00e4q\u0000~\u0002\u00ddq\u0000~\u0001\nq\u0000~\u0001\u0003q\u0000~\u0000\u00f0q\u0000~\u0000\u00cfq\u0000~\u0001\u0099q\u0000~\u0000Cq\u0000~\u0000\u00c6q"
+"\u0000~\u00024q\u0000~\u0000\u0010q\u0000~\u0000:q\u0000~\u0001Kq\u0000~\u0000\bq\u0000~\u0000\u0098q\u0000~\u0002\u0080q\u0000~\u0000\u001eq\u0000~\u0002\u0082q\u0000~\u00009q\u0000~\u0000\rq\u0000~\u0000\u0012q"
+"\u0000~\u0003\u0017q\u0000~\u0002\u00f2q\u0000~\u0002\u00ebq\u0000~\u0002\u00d6q\u0000~\u0002\u00aeq\u0000~\u0002\u00a7q\u0000~\u0002\u00a0q\u0000~\u0002\u0099q\u0000~\u0002yq\u0000~\u0002rq\u0000~\u0002kq\u0000~\u0002dq"
+"\u0000~\u0002]q\u0000~\u0002Vq\u0000~\u0002Oq\u0000~\u0002Hq\u0000~\u0002Aq\u0000~\u0002+q\u0000~\u0002$q\u0000~\u0000\u00f7q\u0000~\u0000\u0013q\u0000~\u0003%q\u0000~\u0003,q\u0000~\u00033q"
+"\u0000~\u0002\u00fbq\u0000~\u0001\u0011q\u0000~\u00007q\u0000~\u0000\u00dcq\u0000~\u0001;q\u0000~\u0001Bq\u0000~\u0001Iq\u0000~\u0001hq\u0000~\u0001\u0082q\u0000~\u0001\u0089q\u0000~\u0001\u0090q\u0000~\u0002\u00b5q"
+"\u0000~\u0000\u001aq\u0000~\u0000%q\u0000~\u0000\tq\u0000~\u0000\u0006q\u0000~\u0000\u00b0x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class AssignmentsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Assignment;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getAssignment() {
            if (_Assignment == null) {
                _Assignment = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Assignment;
        }

        public java.util.List getAssignment() {
            return _getAssignment();
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Assignment == null)? 0 :_Assignment.size());
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Assignment");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Assignment.get(idx_0 ++)), "Assignment");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Assignment.get(idx_1 ++)), "Assignment");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Assignment.get(idx1 ++)), "Assignment");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Assignment == null)? 0 :_Assignment.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Assignment == null)? 0 :_Assignment.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000Gcom.tapsterrock.mspdi.schema.ProjectType.Assign"
+"mentsType.AssignmentTypet\u0000+http://java.sun.com/jaxb/xjc/dumm"
+"y-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"
+"q\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com."
+"sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.dat"
+"atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dataty"
+"pe.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.X"
+"SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001f"
+"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"
+"r;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000"
+"com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\nAssignmentt"
+"\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL"
+"\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013"
+"q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class AssignmentTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.util.Calendar _Resume;
            protected java.math.BigInteger _TaskUID;
            protected boolean has_FixedMaterial;
            protected boolean _FixedMaterial;
            protected java.lang.String _Work;
            protected java.math.BigInteger _FinishVariance;
            protected java.math.BigInteger _StartVariance;
            protected java.lang.String _HyperlinkSubAddress;
            protected java.lang.String _RemainingOvertimeWork;
            protected java.lang.String _ActualWorkProtected;
            protected java.math.BigInteger _CostRateTable;
            protected java.lang.String _RemainingWork;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected java.lang.String _HyperlinkAddress;
            protected boolean has_Milestone;
            protected boolean _Milestone;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected java.math.BigDecimal _ActualCost;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected boolean has_UpdateNeeded;
            protected boolean _UpdateNeeded;
            protected java.lang.String _ActualOvertimeWorkProtected;
            protected java.math.BigInteger _LevelingDelay;
            protected java.math.BigDecimal _RemainingCost;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected java.lang.String _ActualOvertimeWork;
            protected java.math.BigInteger _LevelingDelayFormat;
            protected com.sun.xml.bind.util.ListImpl _Baseline;
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.lang.String _Hyperlink;
            protected boolean has_LinkedFields;
            protected boolean _LinkedFields;
            protected com.sun.xml.bind.util.ListImpl _TimephasedData;
            protected boolean has_CostVariance;
            protected float _CostVariance;
            protected boolean has_Overallocated;
            protected boolean _Overallocated;
            protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute;
            protected boolean has_HasFixedRateUnits;
            protected boolean _HasFixedRateUnits;
            protected java.math.BigInteger _ResourceUID;
            protected java.lang.String _RegularWork;
            protected java.lang.String _OvertimeWork;
            protected java.math.BigInteger _WorkContour;
            protected boolean has_Units;
            protected float _Units;
            protected java.math.BigInteger _BookingType;
            protected boolean has_ResponsePending;
            protected boolean _ResponsePending;
            protected java.math.BigInteger _Delay;
            protected boolean has_Confirmed;
            protected boolean _Confirmed;
            protected java.util.Calendar _Stop;
            protected java.lang.String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.Calendar _ActualStart;
            protected java.lang.String _ActualWork;
            protected java.math.BigInteger _UID;
            protected boolean has_VAC;
            protected float _VAC;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.util.Calendar _ActualFinish;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.util.Calendar _CreationDate;
            protected boolean has_CV;
            protected float _CV;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.class);
            }

            public java.util.Calendar getResume() {
                return _Resume;
            }

            public void setResume(java.util.Calendar value) {
                _Resume = value;
            }

            public java.math.BigInteger getTaskUID() {
                return _TaskUID;
            }

            public void setTaskUID(java.math.BigInteger value) {
                _TaskUID = value;
            }

            public boolean isFixedMaterial() {
                return _FixedMaterial;
            }

            public void setFixedMaterial(boolean value) {
                _FixedMaterial = value;
                has_FixedMaterial = true;
            }

            public java.lang.String getWork() {
                return _Work;
            }

            public void setWork(java.lang.String value) {
                _Work = value;
            }

            public java.math.BigInteger getFinishVariance() {
                return _FinishVariance;
            }

            public void setFinishVariance(java.math.BigInteger value) {
                _FinishVariance = value;
            }

            public java.math.BigInteger getStartVariance() {
                return _StartVariance;
            }

            public void setStartVariance(java.math.BigInteger value) {
                _StartVariance = value;
            }

            public java.lang.String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(java.lang.String value) {
                _HyperlinkSubAddress = value;
            }

            public java.lang.String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(java.lang.String value) {
                _RemainingOvertimeWork = value;
            }

            public java.lang.String getActualWorkProtected() {
                return _ActualWorkProtected;
            }

            public void setActualWorkProtected(java.lang.String value) {
                _ActualWorkProtected = value;
            }

            public java.math.BigInteger getCostRateTable() {
                return _CostRateTable;
            }

            public void setCostRateTable(java.math.BigInteger value) {
                _CostRateTable = value;
            }

            public java.lang.String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(java.lang.String value) {
                _RemainingWork = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public java.lang.String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(java.lang.String value) {
                _HyperlinkAddress = value;
            }

            public boolean isMilestone() {
                return _Milestone;
            }

            public void setMilestone(boolean value) {
                _Milestone = value;
                has_Milestone = true;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public boolean isUpdateNeeded() {
                return _UpdateNeeded;
            }

            public void setUpdateNeeded(boolean value) {
                _UpdateNeeded = value;
                has_UpdateNeeded = true;
            }

            public java.lang.String getActualOvertimeWorkProtected() {
                return _ActualOvertimeWorkProtected;
            }

            public void setActualOvertimeWorkProtected(java.lang.String value) {
                _ActualOvertimeWorkProtected = value;
            }

            public java.math.BigInteger getLevelingDelay() {
                return _LevelingDelay;
            }

            public void setLevelingDelay(java.math.BigInteger value) {
                _LevelingDelay = value;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public java.lang.String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(java.lang.String value) {
                _ActualOvertimeWork = value;
            }

            public java.math.BigInteger getLevelingDelayFormat() {
                return _LevelingDelayFormat;
            }

            public void setLevelingDelayFormat(java.math.BigInteger value) {
                _LevelingDelayFormat = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getBaseline() {
                if (_Baseline == null) {
                    _Baseline = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _Baseline;
            }

            public java.util.List getBaseline() {
                return _getBaseline();
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.lang.String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(java.lang.String value) {
                _Hyperlink = value;
            }

            public boolean isLinkedFields() {
                return _LinkedFields;
            }

            public void setLinkedFields(boolean value) {
                _LinkedFields = value;
                has_LinkedFields = true;
            }

            protected com.sun.xml.bind.util.ListImpl _getTimephasedData() {
                if (_TimephasedData == null) {
                    _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _TimephasedData;
            }

            public java.util.List getTimephasedData() {
                return _getTimephasedData();
            }

            public float getCostVariance() {
                return _CostVariance;
            }

            public void setCostVariance(float value) {
                _CostVariance = value;
                has_CostVariance = true;
            }

            public boolean isOverallocated() {
                return _Overallocated;
            }

            public void setOverallocated(boolean value) {
                _Overallocated = value;
                has_Overallocated = true;
            }

            protected com.sun.xml.bind.util.ListImpl _getExtendedAttribute() {
                if (_ExtendedAttribute == null) {
                    _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _ExtendedAttribute;
            }

            public java.util.List getExtendedAttribute() {
                return _getExtendedAttribute();
            }

            public boolean isHasFixedRateUnits() {
                return _HasFixedRateUnits;
            }

            public void setHasFixedRateUnits(boolean value) {
                _HasFixedRateUnits = value;
                has_HasFixedRateUnits = true;
            }

            public java.math.BigInteger getResourceUID() {
                return _ResourceUID;
            }

            public void setResourceUID(java.math.BigInteger value) {
                _ResourceUID = value;
            }

            public java.lang.String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(java.lang.String value) {
                _RegularWork = value;
            }

            public java.lang.String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(java.lang.String value) {
                _OvertimeWork = value;
            }

            public java.math.BigInteger getWorkContour() {
                return _WorkContour;
            }

            public void setWorkContour(java.math.BigInteger value) {
                _WorkContour = value;
            }

            public float getUnits() {
                return _Units;
            }

            public void setUnits(float value) {
                _Units = value;
                has_Units = true;
            }

            public java.math.BigInteger getBookingType() {
                return _BookingType;
            }

            public void setBookingType(java.math.BigInteger value) {
                _BookingType = value;
            }

            public boolean isResponsePending() {
                return _ResponsePending;
            }

            public void setResponsePending(boolean value) {
                _ResponsePending = value;
                has_ResponsePending = true;
            }

            public java.math.BigInteger getDelay() {
                return _Delay;
            }

            public void setDelay(java.math.BigInteger value) {
                _Delay = value;
            }

            public boolean isConfirmed() {
                return _Confirmed;
            }

            public void setConfirmed(boolean value) {
                _Confirmed = value;
                has_Confirmed = true;
            }

            public java.util.Calendar getStop() {
                return _Stop;
            }

            public void setStop(java.util.Calendar value) {
                _Stop = value;
            }

            public java.lang.String getNotes() {
                return _Notes;
            }

            public void setNotes(java.lang.String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.Calendar getActualStart() {
                return _ActualStart;
            }

            public void setActualStart(java.util.Calendar value) {
                _ActualStart = value;
            }

            public java.lang.String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(java.lang.String value) {
                _ActualWork = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public float getVAC() {
                return _VAC;
            }

            public void setVAC(float value) {
                _VAC = value;
                has_VAC = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.util.Calendar getActualFinish() {
                return _ActualFinish;
            }

            public void setActualFinish(java.util.Calendar value) {
                _ActualFinish = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.util.Calendar getCreationDate() {
                return _CreationDate;
            }

            public void setCreationDate(java.util.Calendar value) {
                _CreationDate = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx28 = 0;
                final int len28 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx32 = 0;
                final int len32 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx35 = 0;
                final int len35 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_TaskUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "TaskUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _TaskUID)), "TaskUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ResourceUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ResourceUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ResourceUID)), "ResourceUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentWorkComplete)), "PercentWorkComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualCost)), "ActualCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualFinish), null), "ActualFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualOvertimeCost)), "ActualOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWork), "ActualOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualStart), null), "ActualStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWork), "ActualWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _ACWP)), "ACWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Confirmed) {
                    context.startElement("http://schemas.microsoft.com/project", "Confirmed");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Confirmed)), "Confirmed");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CostRateTable!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CostRateTable");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CostRateTable)), "CostRateTable");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CostVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "CostVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CostVariance)), "CostVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CV)), "CV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Delay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Delay");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Delay)), "Delay");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FinishVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FinishVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FinishVariance)), "FinishVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Hyperlink), "Hyperlink");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkAddress), "HyperlinkAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkSubAddress), "HyperlinkSubAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _WorkVariance)), "WorkVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_HasFixedRateUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "HasFixedRateUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _HasFixedRateUnits)), "HasFixedRateUnits");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_FixedMaterial) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedMaterial");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _FixedMaterial)), "FixedMaterial");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelay");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelay)), "LevelingDelay");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelayFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelayFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelayFormat)), "LevelingDelayFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LinkedFields) {
                    context.startElement("http://schemas.microsoft.com/project", "LinkedFields");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LinkedFields)), "LinkedFields");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Milestone) {
                    context.startElement("http://schemas.microsoft.com/project", "Milestone");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Milestone)), "Milestone");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Notes), "Notes");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Overallocated) {
                    context.startElement("http://schemas.microsoft.com/project", "Overallocated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Overallocated)), "Overallocated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeCost)), "OvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OvertimeWork), "OvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RegularWork), "RegularWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingCost)), "RemainingCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingOvertimeCost)), "RemainingOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingOvertimeWork), "RemainingOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingWork), "RemainingWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ResponsePending) {
                    context.startElement("http://schemas.microsoft.com/project", "ResponsePending");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ResponsePending)), "ResponsePending");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Stop!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Stop");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Stop), null), "Stop");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Resume!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Resume");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Resume), null), "Resume");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StartVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StartVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartVariance)), "StartVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Units) {
                    context.startElement("http://schemas.microsoft.com/project", "Units");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Units)), "Units");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_UpdateNeeded) {
                    context.startElement("http://schemas.microsoft.com/project", "UpdateNeeded");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _UpdateNeeded)), "UpdateNeeded");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_VAC) {
                    context.startElement("http://schemas.microsoft.com/project", "VAC");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _VAC)), "VAC");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Work), "Work");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WorkContour!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkContour");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorkContour)), "WorkContour");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_BookingType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BookingType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BookingType)), "BookingType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWorkProtected), "ActualWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWorkProtected), "ActualOvertimeWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CreationDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreationDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null), "CreationDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx35 != len35) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_108 = idx35;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_108 ++)), "ExtendedAttribute");
                    context.endNamespaceDecls();
                    int idx_109 = idx35;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_109 ++)), "ExtendedAttribute");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx35 ++)), "ExtendedAttribute");
                    context.endElement();
                }
                while (idx28 != len28) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_110 = idx28;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_110 ++)), "Baseline");
                    context.endNamespaceDecls();
                    int idx_111 = idx28;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_111 ++)), "Baseline");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx28 ++)), "Baseline");
                    context.endElement();
                }
                while (idx32 != len32) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_112 = idx32;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_112 ++)), "TimephasedData");
                    context.endNamespaceDecls();
                    int idx_113 = idx32;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_113 ++)), "TimephasedData");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx32 ++)), "TimephasedData");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx28 = 0;
                final int len28 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx32 = 0;
                final int len32 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx35 = 0;
                final int len35 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                while (idx35 != len35) {
                    idx35 += 1;
                }
                while (idx28 != len28) {
                    idx28 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx28 = 0;
                final int len28 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx32 = 0;
                final int len32 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx35 = 0;
                final int len35 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                while (idx35 != len35) {
                    idx35 += 1;
                }
                while (idx28 != len28) {
                    idx28 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.gram"
+"mar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/ms"
+"v/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000"
+"\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom"
+"/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xs"
+"d.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Integer"
+"DerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/"
+"xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomi"
+"cType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000LL\u0000\nwhi"
+"teSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000"
+" http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com."
+"sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalex"
+"r\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFac"
+"etT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~"
+"\u0000HL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L"
+"\u0000\tfacetNameq\u0000~\u0000Lxq\u0000~\u0000Kppq\u0000~\u0000S\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd."
+"NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0007decimalq\u0000~\u0000Sq\u0000~\u0000Zt\u0000\u000efract"
+"ionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB"
+"\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000LL\u0000\fnamespaceURIq\u0000~\u0000Lxpq\u0000~\u0000Pq\u0000~\u0000Osr\u0000\u001dc"
+"om.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.m"
+"sv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~"
+"\u0000>xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000Bpp"
+"sr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000O"
+"t\u0000\u0005QNameq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000jq\u0000~\u0000Osr\u0000#com.sun.msv.grammar.Si"
+"mpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000LL\u0000\fnamespaceURIq\u0000~\u0000"
+"Lxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000e\u0001q\u0000~\u0000rs"
+"q\u0000~\u0000lt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000appsq"
+"\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rs"
+"q\u0000~\u0000lt\u0000\u0007TaskUIDq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Es"
+"q\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bResourceUIDq\u0000~\u0000vq"
+"\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000"
+"~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013PercentWorkCompleteq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000apps"
+"q\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppq\u0000~\u0000Zq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000[q\u0000~\u0000Osq\u0000~\u0000a"
+"ppsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\nActualCostq\u0000~\u0000vq\u0000~\u0000rsq"
+"\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsr\u0000%com.sun.msv.datatype."
+"xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.Date"
+"TimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\bdateTimeq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000"
+"_q\u0000~\u0000\u009cq\u0000~\u0000Osq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fActua"
+"lFinishq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u008fsq\u0000~\u0000apps"
+"q\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0012ActualOvertimeCostq\u0000~\u0000vq\u0000"
+"~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsr\u0000%com.sun.msv.data"
+"type.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\bdurationq\u0000~\u0000Sq"
+"\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000\u00afq\u0000~\u0000Osq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000"
+"lt\u0000\u0012ActualOvertimeWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000\u0098sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bActualStar"
+"tq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000~\u0000appsq\u0000~\u0000cq"
+"\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\nActualWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000"
+"~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsr\u0000\"com.sun.msv.datatype.xsd.Float"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberTy"
+"pe\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0005floatq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0000\u00caq\u0000~\u0000Osq"
+"\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004ACWPq\u0000~\u0000vq\u0000~\u0000rsq\u0000~"
+"\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsr\u0000$com.sun.msv.datatype.xs"
+"d.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ot\u0000\u0007booleanq\u0000~\u0000Sq\u0000~\u0000^sq\u0000~\u0000"
+"_q\u0000~\u0000\u00d6q\u0000~\u0000Osq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\tConfi"
+"rmedq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u008fsq\u0000~\u0000appsq\u0000~"
+"\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004Costq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000="
+"q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsr\u0000)com.sun.msv.datatype.xsd.Enumerat"
+"ionFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.ms"
+"v.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq"
+"\u0000~\u0000Vq\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000~\u0000Nq\u0000~\u0000Nt\u0000\u000benumerationsr\u0000\u0011java.util.HashS"
+"et\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.In"
+"tegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Lxr\u0000\u0010java.lang.Number\u0086\u00ac"
+"\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000\u00eet\u0000\u00012sq\u0000~\u0000\u00eet\u0000\u00010sq\u0000~\u0000\u00eet\u0000\u00014sq\u0000~\u0000\u00eet\u0000\u00011xq\u0000~\u0000"
+"^sq\u0000~\u0000_t\u0000\u000finteger-derivedq\u0000~\u0000vsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000n"
+"q\u0000~\u0000rsq\u0000~\u0000lt\u0000\rCostRateTableq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000\u00c6sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fCostV"
+"arianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00c6sq\u0000~\u0000apps"
+"q\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0002CVq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000"
+"=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~"
+"\u0000lt\u0000\u0005Delayq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000a"
+"ppsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0006Finishq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000a"
+"ppsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000"
+"~\u0000rsq\u0000~\u0000lt\u0000\u000eFinishVarianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000Bppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxq\u0000~\u0000\u00e9q\u0000~\u0000vpsr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000R\u0000\u0000sr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000Iq"
+"\u0000~\u0000Ot\u0000\u0006stringq\u0000~\u0001*\u0001q\u0000~\u0001,t\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000estring"
+"-derivedq\u0000~\u0000vsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\tHyp"
+"erlinkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsq\u0000~\u0001\'q"
+"\u0000~\u0000vpq\u0000~\u0001*\u0000\u0000q\u0000~\u0001,q\u0000~\u0001,q\u0000~\u0001.\u0000\u0000\u0002\u0000q\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000estring-derivedq"
+"\u0000~\u0000vsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0010HyperlinkAdd"
+"ressq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsq\u0000~\u0001\'q\u0000~"
+"\u0000vpq\u0000~\u0001*\u0000\u0000q\u0000~\u0001,q\u0000~\u0001,q\u0000~\u0001.\u0000\u0000\u0002\u0000q\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000estring-derivedq\u0000~"
+"\u0000vsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013HyperlinkSubAd"
+"dressq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00c6sq\u0000~\u0000appsq\u0000"
+"~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fWorkVarianceq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000"
+"appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq"
+"\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0011HasFixedRateUnitsq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rFi"
+"xedMaterialq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000"
+"appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rLevelingDelayq\u0000~\u0000vq\u0000~"
+"\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsq\u0000~\u0000\u00e7q\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000"
+"~\u0000Nq\u0000~\u0000Nq\u0000~\u0000\u00ebsq\u0000~\u0000\u00ecw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00eet\u0000\u00013sq\u0000~\u0000\u00eet\u0000\u000241sq\u0000~\u0000\u00ee"
+"t\u0000\u000239sq\u0000~\u0000\u00eet\u0000\u000236sq\u0000~\u0000\u00eet\u0000\u00016sq\u0000~\u0000\u00eet\u0000\u00015sq\u0000~\u0000\u00eet\u0000\u000237sq\u0000~\u0000\u00eet\u0000\u000211sq"
+"\u0000~\u0000\u00eet\u0000\u000240sq\u0000~\u0000\u00eet\u0000\u00014sq\u0000~\u0000\u00eet\u0000\u000212sq\u0000~\u0000\u00eet\u0000\u000252sq\u0000~\u0000\u00eet\u0000\u00017sq\u0000~\u0000\u00eet\u0000\u0002"
+"38sq\u0000~\u0000\u00eet\u0000\u000220sq\u0000~\u0000\u00eet\u0000\u000242sq\u0000~\u0000\u00eet\u0000\u000253sq\u0000~\u0000\u00eet\u0000\u000243sq\u0000~\u0000\u00eet\u0000\u000221sq\u0000"
+"~\u0000\u00eet\u0000\u000210sq\u0000~\u0000\u00eet\u0000\u000235sq\u0000~\u0000\u00eet\u0000\u000244sq\u0000~\u0000\u00eet\u0000\u00019sq\u0000~\u0000\u00eet\u0000\u000219sq\u0000~\u0000\u00eet\u0000\u0001"
+"8sq\u0000~\u0000\u00eet\u0000\u000251xq\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000finteger-derivedq\u0000~\u0000vsq\u0000~\u0000appsq\u0000~\u0000"
+"cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013LevelingDelayFormatq\u0000~\u0000vq\u0000~\u0000r"
+"sq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq"
+"\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fLinkedFieldsq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\tMi"
+"lestoneq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppq\u0000~\u0001,q"
+"\u0000~\u0000^sq\u0000~\u0000_q\u0000~\u0001-q\u0000~\u0000Osq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000"
+"lt\u0000\u0005Notesq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000ap"
+"psq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rOverallocatedq\u0000~\u0000vq\u0000~\u0000r"
+"sq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u008fsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq"
+"\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fOvertimeCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fOv"
+"ertimeWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000~\u0000a"
+"ppsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bRegularWorkq\u0000~\u0000vq\u0000~\u0000rs"
+"q\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u008fsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000"
+"~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rRemainingCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u008fsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0015Re"
+"mainingOvertimeCostq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000\u00acsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0015RemainingOver"
+"timeWorkq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000~\u0000app"
+"sq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rRemainingWorkq\u0000~\u0000vq\u0000~\u0000rs"
+"q\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000"
+"~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000fResponsePendingq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000"
+"fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0005"
+"Startq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000appsq\u0000"
+"~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004Stopq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000"
+"=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~"
+"\u0000lt\u0000\u0006Resumeq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000"
+"appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\rStartVarianceq\u0000~\u0000vq\u0000~"
+"\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00c6sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000"
+"gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0005Unitsq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000\u00d3sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fUpdateN"
+"eededq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00c6sq\u0000~\u0000appsq\u0000"
+"~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0003VACq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000="
+"q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000"
+"lt\u0000\u0004Workq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsq\u0000~\u0000"
+"\u00e7q\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000q\u0000~\u0000Nq\u0000~\u0000Nq\u0000~\u0000\u00ebsq\u0000~\u0000\u00ecw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\tsq\u0000~\u0000\u00eet\u0000\u00013s"
+"q\u0000~\u0000\u00eet\u0000\u00015sq\u0000~\u0000\u00eet\u0000\u00017sq\u0000~\u0000\u00eet\u0000\u00012sq\u0000~\u0000\u00eeq\u0000~\u0000\u00f5sq\u0000~\u0000\u00eet\u0000\u00014sq\u0000~\u0000\u00eet\u0000\u00018"
+"sq\u0000~\u0000\u00eet\u0000\u00016sq\u0000~\u0000\u00eet\u0000\u00011xq\u0000~\u0000^sq\u0000~\u0000_t\u0000\u000finteger-derivedq\u0000~\u0000vsq\u0000~\u0000"
+"appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bWorkContourq\u0000~\u0000vq\u0000~\u0000r"
+"sq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00c6sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq"
+"\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004BCWSq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000\u00c6sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0004BCWPq\u0000~\u0000vq"
+"\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Bppsq\u0000~\u0000\u00e7q\u0000~\u0000vpq\u0000~\u0000S\u0000\u0000"
+"q\u0000~\u0000Nq\u0000~\u0000Nq\u0000~\u0000\u00ebsq\u0000~\u0000\u00ecw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00eeq\u0000~\u0000\u00f5sq\u0000~\u0000\u00eet\u0000\u00011xq\u0000~"
+"\u0000^sq\u0000~\u0000_t\u0000\u000finteger-derivedq\u0000~\u0000vsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000"
+"nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000bBookingTypeq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0013Actual"
+"WorkProtectedq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00acsq\u0000"
+"~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u001bActualOvertimeWorkP"
+"rotectedq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000app"
+"sq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\fCreationDateq\u0000~\u0000vq\u0000~\u0000rsq"
+"\u0000~\u0000appsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000fps"
+"q\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000=pp\u0000sq\u0000~\u0000appsq\u0000~\u0002\u0085q\u0000~\u0000fpsq\u0000~\u0000cq\u0000~\u0000f"
+"psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000sq\u0000~\u0002\u008fsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000mq\u0000~\u0000rsq\u0000~\u0000lt\u0000]com.tapsterrock.mspdi.schema.Pr"
+"ojectType.AssignmentsType.AssignmentType.ExtendedAttributeTy"
+"pet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000appsq\u0000~"
+"\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u0011ExtendedAttributeq\u0000~\u0000vq\u0000~\u0000rs"
+"q\u0000~\u0000appsq\u0000~\u0002\u0085q\u0000~\u0000fpsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000=pp\u0000sq\u0000~\u0000appsq\u0000"
+"~\u0002\u0085q\u0000~\u0000fpsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0002\u008fq\u0000~\u0002\u0091q\u0000~\u0000rsq\u0000~\u0000lt\u0000Tcom.tapsterrock"
+".mspdi.schema.ProjectType.AssignmentsType.AssignmentType.Bas"
+"elineTypeq\u0000~\u0002\u0094sq\u0000~\u0000appsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\bBa"
+"selineq\u0000~\u0000vq\u0000~\u0000rsq\u0000~\u0000appsq\u0000~\u0002\u0085q\u0000~\u0000fpsq\u0000~\u0000=q\u0000~\u0000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000=pp\u0000sq\u0000~\u0000appsq\u0000~\u0002\u0085q\u0000~\u0000fpsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0002\u008fq\u0000~\u0002\u0091q\u0000~\u0000rsq\u0000~\u0000lt"
+"\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypeq\u0000~\u0002\u0094sq\u0000~\u0000a"
+"ppsq\u0000~\u0000cq\u0000~\u0000fpq\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000rsq\u0000~\u0000lt\u0000\u000eTimephasedDataq\u0000~\u0000vq\u0000~"
+"\u0000rsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"
+"let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"
+"m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005cou"
+"ntB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressio"
+"nPool;xp\u0000\u0000\u0000\u00eb\u0001pq\u0000~\u0000\'q\u0000~\u0000+q\u0000~\u0000\u0007q\u0000~\u0000\u0014q\u0000~\u0001#q\u0000~\u0000\tq\u0000~\u0000;q\u0000~\u0000\nq\u0000~\u0001\u00e1q"
+"\u0000~\u0001\u00daq\u0000~\u0001\u00c5q\u0000~\u0000\u00dcq\u0000~\u0000\u00a2q\u0000~\u0000\u008cq\u0000~\u0002\u00adq\u0000~\u0002\u009fq\u0000~\u0002\u008cq\u0000~\u00007q\u0000~\u0000,q\u0000~\u0002\u0014q\u0000~\u0000\u0087q"
+"\u0000~\u0000\u0080q\u0000~\u0000yq\u0000~\u0000Aq\u0000~\u0001\u0010q\u0000~\u0001\u001eq\u0000~\u0001bq\u0000~\u0000\u0017q\u0000~\u0000-q\u0000~\u0000#q\u0000~\u0000\"q\u0000~\u0000\bq\u0000~\u0000*q"
+"\u0000~\u0000\u0019q\u0000~\u00015q\u0000~\u0001gq\u0000~\u0002Yq\u0000~\u0002Rq\u0000~\u0002\'q\u0000~\u0002\u0019q\u0000~\u0001\u0000q\u0000~\u0000\u00c3q\u0000~\u0001\u0007q\u0000~\u0001Kq\u0000~\u0000\u000bq"
+"\u0000~\u0000\u00e5q\u0000~\u0000%q\u0000~\u00006q\u0000~\u0000$q\u0000~\u0002\u007fq\u0000~\u0002\rq\u0000~\u0002\u0006q\u0000~\u0001\u00ffq\u0000~\u0000\u00b7q\u0000~\u0000\u0097q\u0000~\u0001\u0017q\u0000~\u0000\u00e3q"
+"\u0000~\u0002`q\u0000~\u0000/q\u0000~\u0002vq\u0000~\u0002oq\u0000~\u0002.q\u0000~\u0001\u00efq\u0000~\u0001\u00e8q\u0000~\u0001\u00d3q\u0000~\u0001\u00ccq\u0000~\u0000\u00bcq\u0000~\u0000\u0012q\u0000~\u0000\u00a9q"
+"\u0000~\u0002\u00a3q\u0000~\u0002\u0095q\u0000~\u0002\u0080q\u0000~\u0002yq\u0000~\u0002rq\u0000~\u0002kq\u0000~\u0002\\q\u0000~\u0002Uq\u0000~\u0002Nq\u0000~\u00021q\u0000~\u0002*q\u0000~\u0002#q"
+"\u0000~\u0002\u001cq\u0000~\u0002\u0015q\u0000~\u0002\u000eq\u0000~\u0002\u0007q\u0000~\u0002\u0000q\u0000~\u0001\u00b5q\u0000~\u0001\u00f9q\u0000~\u0001\u00f2q\u0000~\u0001\u00ebq\u0000~\u0001\u00e4q\u0000~\u0001\u00ddq\u0000~\u0001\u00d6q"
+"\u0000~\u0001\u00cfq\u0000~\u0001\u00c8q\u0000~\u0001\u00c1q\u0000~\u0001\u00baq\u0000~\u0000\u00dfq\u0000~\u0000\u00d8q\u0000~\u0000\u00ccq\u0000~\u0000\u00bfq\u0000~\u0000\u00b8q\u0000~\u0000\u00b1q\u0000~\u0000\u00a5q\u0000~\u0000\u009eq"
+"\u0000~\u0000\u0091q\u0000~\u0000\u0088q\u0000~\u0000\u0081q\u0000~\u0000zq\u0000~\u0000bq\u0000~\u0001\u0003q\u0000~\u0000\u00fcq\u0000~\u0001\nq\u0000~\u0001\u0011q\u0000~\u0001\u0018q\u0000~\u0001\u001fq\u0000~\u00011q"
+"\u0000~\u0001<q\u0000~\u0001Gq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001\\q\u0000~\u0001cq\u0000~\u0001\u00a3q\u0000~\u0001\u00aaq\u0000~\u0001\u00b1q\u0000~\u0000\rq\u0000~\u0000\u001eq\u0000~\u0002\u00b1q"
+"\u0000~\u0001Bq\u0000~\u0001%q\u0000~\u0000\u001aq\u0000~\u00009q\u0000~\u0000\u0011q\u0000~\u0000\u0018q\u0000~\u00017q\u0000~\u0002\u009aq\u0000~\u0002\u0087q\u0000~\u0002\u00a8q\u0000~\u00008q\u0000~\u0000)q"
+"\u0000~\u0001\u00b7q\u0000~\u0000\u0015q\u0000~\u0002[q\u0000~\u0002Tq\u0000~\u0002)q\u0000~\u0002\u001bq\u0000~\u0001\u0002q\u0000~\u0000\u00c5q\u0000~\u0001\tq\u0000~\u0001Mq\u0000~\u0000\u0010q\u0000~\u0002\"q"
+"\u0000~\u0001\u00f8q\u0000~\u0001\u00c0q\u0000~\u0000\u00d2q\u0000~\u0001Tq\u0000~\u0001[q\u0000~\u0001\u00a9q\u0000~\u0001\u00b0q\u0000~\u00027q\u0000~\u0000\u001dq\u0000~\u0002\u0099q\u0000~\u0002\u0084q\u0000~\u0002\u00a7q"
+"\u0000~\u0000\fq\u0000~\u0000(q\u0000~\u0000!q\u0000~\u0002\u00acq\u0000~\u0002\u009eq\u0000~\u0002\u008bq\u0000~\u00004q\u0000~\u0002bq\u0000~\u0001\u00e3q\u0000~\u0001\u00dcq\u0000~\u0001\u00c7q\u0000~\u0000\u00deq"
+"\u0000~\u0000\u00a4q\u0000~\u0000\u008eq\u0000~\u00000q\u0000~\u0000\u0016q\u0000~\u0000\u0005q\u0000~\u00003q\u0000~\u0000&q\u0000~\u0000.q\u0000~\u0002\u009cq\u0000~\u0002\u0089q\u0000~\u0002\u00aaq\u0000~\u0000 q"
+"\u0000~\u0000:q\u0000~\u0001iq\u0000~\u0000\u000fq\u0000~\u0002}q\u0000~\u0002\u000bq\u0000~\u0002\u0004q\u0000~\u0001\u00fdq\u0000~\u0000\u00b5q\u0000~\u0001@q\u0000~\u0000\u0095q\u0000~\u0001\u0015q\u0000~\u00001q"
+"\u0000~\u0000\u0013q\u0000~\u0000\u001cq\u0000~\u0002xq\u0000~\u0002qq\u0000~\u00020q\u0000~\u0001\u00f1q\u0000~\u0001\u00eaq\u0000~\u0001\u00d5q\u0000~\u0001\u00ceq\u0000~\u0000\u00beq\u0000~\u0000\u00abq\u0000~\u0000\u000eq"
+"\u0000~\u00005q\u0000~\u00002q\u0000~\u0000\u0006q\u0000~\u00025q\u0000~\u0000\u001bq\u0000~\u0002 q\u0000~\u0001\u00f6q\u0000~\u0001\u00beq\u0000~\u0000\u00d0q\u0000~\u0001Rq\u0000~\u0001Yq\u0000~\u0001\u00a7q"
+"\u0000~\u0001\u00aeq\u0000~\u0002\u0012q\u0000~\u0000\u001fq\u0000~\u0000\u0085q\u0000~\u0000~q\u0000~\u0000wq\u0000~\u0000<q\u0000~\u0001\u000eq\u0000~\u0001\u001cq\u0000~\u0001`x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected boolean has_BCWP;
                protected float _BCWP;
                protected java.lang.String _Start;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected java.lang.String _Cost;
                protected java.lang.String _Finish;
                protected java.lang.String _Number;
                protected com.sun.xml.bind.util.ListImpl _TimephasedData;
                protected java.lang.String _Work;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType.class);
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public java.lang.String getStart() {
                    return _Start;
                }

                public void setStart(java.lang.String value) {
                    _Start = value;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public java.lang.String getCost() {
                    return _Cost;
                }

                public void setCost(java.lang.String value) {
                    _Cost = value;
                }

                public java.lang.String getFinish() {
                    return _Finish;
                }

                public void setFinish(java.lang.String value) {
                    _Finish = value;
                }

                public java.lang.String getNumber() {
                    return _Number;
                }

                public void setNumber(java.lang.String value) {
                    _Number = value;
                }

                protected com.sun.xml.bind.util.ListImpl _getTimephasedData() {
                    if (_TimephasedData == null) {
                        _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _TimephasedData;
                }

                public java.util.List getTimephasedData() {
                    return _getTimephasedData();
                }

                public java.lang.String getWork() {
                    return _Work;
                }

                public void setWork(java.lang.String value) {
                    _Work = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                    while (idx7 != len7) {
                        context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                        int idx_0 = idx7;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_0 ++)), "TimephasedData");
                        context.endNamespaceDecls();
                        int idx_1 = idx7;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_1 ++)), "TimephasedData");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx7 ++)), "TimephasedData");
                        context.endElement();
                    }
                    context.startElement("http://schemas.microsoft.com/project", "Number");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Number), "Number");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    if (_Start!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Start");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Start), "Start");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Finish!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Finish");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Finish), "Finish");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Work), "Work");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Cost!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Cost), "Cost");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                    while (idx7 != len7) {
                        idx7 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                    while (idx7 != len7) {
                        idx7 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex."
+"ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar"
+"/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001ai"
+"gnoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012p\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.A"
+"ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0014xq\u0000~\u0000\u0003q\u0000~\u0000"
+"\u0012psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&"
+"xq\u0000~\u0000!t\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypet\u0000+h"
+"ttp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\fppsq\u0000~\u0000\u001bq\u0000~\u0000"
+"\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rel"
+"axng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/"
+"util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util."
+"StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xp"
+"q\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-i"
+"nstanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000eTimephasedDatat\u0000$http://schemas.microso"
+"ft.com/projectq\u0000~\u0000$sq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000,ppsr\u0000#com.sun.msv."
+"datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00001q\u0000~\u0000"
+"6t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$P"
+"reserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009\u0001q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000Jq\u0000~\u00006sq\u0000~\u0000\fppsq\u0000~\u0000\u001b"
+"q\u0000~\u0000\u0012pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0006Numberq\u0000~\u0000Dsq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Gsq\u0000~\u0000\fppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0005S"
+"tartq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Gsq\u0000~\u0000\fppsq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0006Finishq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\fppsq\u0000~"
+"\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000,ppsr\u0000%com.sun.msv.datatype.xsd.Durati"
+"onType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\bdurationq\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000f"
+"q\u0000~\u00006sq\u0000~\u0000\fppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Workq\u0000~\u0000Dq\u0000"
+"~\u0000$sq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Gsq\u0000~\u0000\fppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~"
+"\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Costq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000,ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000x"
+"q\u0000~\u00001q\u0000~\u00006t\u0000\u0005floatq\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000zq\u0000~\u00006sq\u0000~\u0000\fppsq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u0012pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004BCWSq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000"
+"\u0012p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000vsq\u0000~\u0000\fppsq\u0000~\u0000\u001bq\u0000~\u0000\u0012pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004"
+"BCWPq\u0000~\u0000Dq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"
+"ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"
+"\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gramm"
+"ar/ExpressionPool;xp\u0000\u0000\u0000!\u0001pq\u0000~\u0000`q\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u0000sq\u0000~\u0000\u0080q\u0000~\u0000\tq\u0000~\u0000"
+"\u001aq\u0000~\u0000\nq\u0000~\u0000\u0019q\u0000~\u0000\u000bq\u0000~\u0000\u0010q\u0000~\u0000\u0006q\u0000~\u0000\u0017q\u0000~\u0000\u0005q\u0000~\u0000bq\u0000~\u0000uq\u0000~\u0000\u0082q\u0000~\u0000\rq\u0000~\u0000"
+"Fq\u0000~\u0000Tq\u0000~\u0000[q\u0000~\u0000nq\u0000~\u0000Rq\u0000~\u0000Yq\u0000~\u0000lq\u0000~\u0000*q\u0000~\u0000Nq\u0000~\u0000Uq\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000"
+"oq\u0000~\u0000|q\u0000~\u0000\u0083x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------------------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 19;
                                        return ;
                                    }
                                    state = 21;
                                    continue outer;
                                case  0 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 22;
                                        return ;
                                    }
                                    state = 24;
                                    continue outer;
                                case  12 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  24 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 16;
                                        return ;
                                    }
                                    state = 18;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  8 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  17 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 18;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  23 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 24;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  14 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  24 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  20 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 21;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    state = 18;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  24 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  24 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  10 :
                                        eatText1(value);
                                        state = 11;
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  19 :
                                        eatText2(value);
                                        state = 20;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  13 :
                                        eatText3(value);
                                        state = 14;
                                        return ;
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  4 :
                                        eatText4(value);
                                        state = 5;
                                        return ;
                                    case  24 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  7 :
                                        eatText5(value);
                                        state = 8;
                                        return ;
                                    case  16 :
                                        eatText6(value);
                                        state = 17;
                                        return ;
                                    case  22 :
                                        eatText7(value);
                                        state = 23;
                                        return ;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Finish = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWS = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Number = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Start = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText6(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Cost = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText7(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWP = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected java.lang.String _Value;
                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public java.lang.String getValue() {
                    return _Value;
                }

                public void setValue(java.lang.String value) {
                    _Value = value;
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Value), "Value");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001"
+"L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lj"
+"ava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.F"
+"ractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatyp"
+"e.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.s"
+"un.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFi"
+"xedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lc"
+"om/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001b"
+"ppq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.s"
+"un.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\tppsr\u0000 com.sun.msv.gra"
+"mmar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~"
+"\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000\u0012ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#com.su"
+"n.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\f"
+"namespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/p"
+"rojectq\u0000~\u0000?sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012ppsr\u0000#com.sun."
+"msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000Jq\u0000~\u0000\u001fsq\u0000~\u0000\tppsq"
+"\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007FieldIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\tpps"
+"q\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Gsq\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?"
+"sq\u0000~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0015sq"
+"\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007ValueIDq\u0000~\u0000Cq\u0000~\u0000?s"
+"q\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012ppsr\u0000)com.sun.msv.datatype"
+".xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;x"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000Cpq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.da"
+"tatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001cxr\u0000\u0010java."
+"lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000kt\u0000\u000241sq\u0000~\u0000kt\u0000\u000239sq\u0000~\u0000kt\u0000\u00023"
+"6sq\u0000~\u0000kt\u0000\u00016sq\u0000~\u0000kt\u0000\u00015sq\u0000~\u0000kt\u0000\u000237sq\u0000~\u0000kt\u0000\u000211sq\u0000~\u0000kt\u0000\u000240sq\u0000~\u0000k"
+"t\u0000\u00014sq\u0000~\u0000kt\u0000\u000212sq\u0000~\u0000kt\u0000\u000252sq\u0000~\u0000kt\u0000\u00017sq\u0000~\u0000kt\u0000\u000238sq\u0000~\u0000kt\u0000\u000220sq"
+"\u0000~\u0000kt\u0000\u000242sq\u0000~\u0000kt\u0000\u000253sq\u0000~\u0000kt\u0000\u000243sq\u0000~\u0000kt\u0000\u000221sq\u0000~\u0000kt\u0000\u000210sq\u0000~\u0000kt"
+"\u0000\u000235sq\u0000~\u0000kt\u0000\u000244sq\u0000~\u0000kt\u0000\u00019sq\u0000~\u0000kt\u0000\u000219sq\u0000~\u0000kt\u0000\u00018sq\u0000~\u0000kt\u0000\u000251xq\u0000"
+"~\u0000.sq\u0000~\u0000/t\u0000\u000finteger-derivedq\u0000~\u0000Csq\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~"
+"\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000eDurationFormatq\u0000~\u0000Cq\u0000~\u0000?sr\u0000\"com.sun.msv.gram"
+"mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
+"mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
+"essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006p"
+"arentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0013\u0001pq\u0000~\u0000\u0005q\u0000~"
+"\u0000\u0006q\u0000~\u0000\nq\u0000~\u0000Yq\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000[q\u0000~\u0000\u0007q\u0000~\u0000`q\u0000~\u0000bq\u0000~\u0000Fq\u0000~\u0000Tq\u0000~\u0000Dq\u0000~"
+"\u0000Rq\u0000~\u00001q\u0000~\u0000Nq\u0000~\u0000Uq\u0000~\u0000\\q\u0000~\u0000\u00a3x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  14 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  11 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  13 :
                                        eatText2(value);
                                        state = 14;
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  10 :
                                        eatText3(value);
                                        state = 11;
                                        return ;
                                    case  7 :
                                        eatText4(value);
                                        state = 8;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  4 :
                                        eatText5(value);
                                        state = 5;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Value = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  54 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 55;
                                    return ;
                                }
                                state = 57;
                                continue outer;
                            case  12 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  72 :
                                if (("FixedMaterial" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 73;
                                    return ;
                                }
                                state = 75;
                                continue outer;
                            case  163 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  168 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 166;
                                    return ;
                                }
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 169;
                                    return ;
                                }
                                state = 171;
                                continue outer;
                            case  81 :
                                if (("LinkedFields" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 82;
                                    return ;
                                }
                                state = 84;
                                continue outer;
                            case  165 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 163;
                                    return ;
                                }
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 166;
                                    return ;
                                }
                                state = 168;
                                continue outer;
                            case  162 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 163;
                                    return ;
                                }
                                state = 165;
                                continue outer;
                            case  75 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 76;
                                    return ;
                                }
                                state = 78;
                                continue outer;
                            case  102 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 103;
                                    return ;
                                }
                                state = 105;
                                continue outer;
                            case  42 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 43;
                                    return ;
                                }
                                state = 45;
                                continue outer;
                            case  150 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 151;
                                    return ;
                                }
                                state = 153;
                                continue outer;
                            case  27 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  6 :
                                if (("ResourceUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  117 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 118;
                                    return ;
                                }
                                state = 120;
                                continue outer;
                            case  105 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 106;
                                    return ;
                                }
                                state = 108;
                                continue outer;
                            case  111 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 112;
                                    return ;
                                }
                                state = 114;
                                continue outer;
                            case  132 :
                                if (("UpdateNeeded" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 133;
                                    return ;
                                }
                                state = 135;
                                continue outer;
                            case  69 :
                                if (("HasFixedRateUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 70;
                                    return ;
                                }
                                state = 72;
                                continue outer;
                            case  78 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 79;
                                    return ;
                                }
                                state = 81;
                                continue outer;
                            case  144 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 145;
                                    return ;
                                }
                                state = 147;
                                continue outer;
                            case  90 :
                                if (("Overallocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 91;
                                    return ;
                                }
                                state = 93;
                                continue outer;
                            case  39 :
                                if (("CostRateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 40;
                                    return ;
                                }
                                state = 42;
                                continue outer;
                            case  24 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  45 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 46;
                                    return ;
                                }
                                state = 48;
                                continue outer;
                            case  3 :
                                if (("TaskUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  147 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 148;
                                    return ;
                                }
                                state = 150;
                                continue outer;
                            case  169 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 170, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 170, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  156 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 157;
                                    return ;
                                }
                                state = 159;
                                continue outer;
                            case  15 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  126 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 127;
                                    return ;
                                }
                                state = 129;
                                continue outer;
                            case  138 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 139;
                                    return ;
                                }
                                state = 141;
                                continue outer;
                            case  99 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 100;
                                    return ;
                                }
                                state = 102;
                                continue outer;
                            case  153 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 154;
                                    return ;
                                }
                                state = 156;
                                continue outer;
                            case  87 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 88;
                                    return ;
                                }
                                state = 90;
                                continue outer;
                            case  96 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 97;
                                    return ;
                                }
                                state = 99;
                                continue outer;
                            case  114 :
                                if (("ResponsePending" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 115;
                                    return ;
                                }
                                state = 117;
                                continue outer;
                            case  159 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 160;
                                    return ;
                                }
                                state = 162;
                                continue outer;
                            case  129 :
                                if (("Units" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 130;
                                    return ;
                                }
                                state = 132;
                                continue outer;
                            case  36 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 37;
                                    return ;
                                }
                                state = 39;
                                continue outer;
                            case  123 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 124;
                                    return ;
                                }
                                state = 126;
                                continue outer;
                            case  48 :
                                if (("Delay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 49;
                                    return ;
                                }
                                state = 51;
                                continue outer;
                            case  84 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 85;
                                    return ;
                                }
                                state = 87;
                                continue outer;
                            case  63 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 64;
                                    return ;
                                }
                                state = 66;
                                continue outer;
                            case  9 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  166 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.class), 167, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.class), 167, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  60 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 61;
                                    return ;
                                }
                                state = 63;
                                continue outer;
                            case  18 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  120 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 121;
                                    return ;
                                }
                                state = 123;
                                continue outer;
                            case  51 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 52;
                                    return ;
                                }
                                state = 54;
                                continue outer;
                            case  141 :
                                if (("WorkContour" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 142;
                                    return ;
                                }
                                state = 144;
                                continue outer;
                            case  135 :
                                if (("VAC" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 136;
                                    return ;
                                }
                                state = 138;
                                continue outer;
                            case  171 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 169;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  21 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  57 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 58;
                                    return ;
                                }
                                state = 60;
                                continue outer;
                            case  33 :
                                if (("Confirmed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  108 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 109;
                                    return ;
                                }
                                state = 111;
                                continue outer;
                            case  93 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 94;
                                    return ;
                                }
                                state = 96;
                                continue outer;
                            case  66 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 67;
                                    return ;
                                }
                                state = 69;
                                continue outer;
                            case  30 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  54 :
                                state = 57;
                                continue outer;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  98 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 99;
                                    return ;
                                }
                                break;
                            case  158 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 159;
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  38 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 39;
                                    return ;
                                }
                                break;
                            case  92 :
                                if (("Overallocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 93;
                                    return ;
                                }
                                break;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  163 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname)));
                                return ;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  53 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 54;
                                    return ;
                                }
                                break;
                            case  161 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 162;
                                    return ;
                                }
                                break;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  152 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 153;
                                    return ;
                                }
                                break;
                            case  146 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 147;
                                    return ;
                                }
                                break;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  23 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  113 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 114;
                                    return ;
                                }
                                break;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  44 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 45;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  8 :
                                if (("ResourceUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  128 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 129;
                                    return ;
                                }
                                break;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  104 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 105;
                                    return ;
                                }
                                break;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  59 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 60;
                                    return ;
                                }
                                break;
                            case  107 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 108;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("TaskUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  32 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  14 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  65 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 66;
                                    return ;
                                }
                                break;
                            case  119 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 120;
                                    return ;
                                }
                                break;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  110 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 111;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  101 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 102;
                                    return ;
                                }
                                break;
                            case  170 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 171;
                                    return ;
                                }
                                break;
                            case  20 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  95 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 96;
                                    return ;
                                }
                                break;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  149 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 150;
                                    return ;
                                }
                                break;
                            case  140 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 141;
                                    return ;
                                }
                                break;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  83 :
                                if (("LinkedFields" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 84;
                                    return ;
                                }
                                break;
                            case  167 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 168;
                                    return ;
                                }
                                break;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  50 :
                                if (("Delay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 51;
                                    return ;
                                }
                                break;
                            case  125 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 126;
                                    return ;
                                }
                                break;
                            case  131 :
                                if (("Units" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 132;
                                    return ;
                                }
                                break;
                            case  26 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  137 :
                                if (("VAC" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 138;
                                    return ;
                                }
                                break;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  71 :
                                if (("HasFixedRateUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 72;
                                    return ;
                                }
                                break;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  164 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 165;
                                    return ;
                                }
                                break;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  86 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 87;
                                    return ;
                                }
                                break;
                            case  41 :
                                if (("CostRateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 42;
                                    return ;
                                }
                                break;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  77 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 78;
                                    return ;
                                }
                                break;
                            case  74 :
                                if (("FixedMaterial" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 75;
                                    return ;
                                }
                                break;
                            case  155 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 156;
                                    return ;
                                }
                                break;
                            case  80 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 81;
                                    return ;
                                }
                                break;
                            case  171 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  56 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 57;
                                    return ;
                                }
                                break;
                            case  122 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 123;
                                    return ;
                                }
                                break;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  143 :
                                if (("WorkContour" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 144;
                                    return ;
                                }
                                break;
                            case  17 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  134 :
                                if (("UpdateNeeded" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 135;
                                    return ;
                                }
                                break;
                            case  89 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 90;
                                    return ;
                                }
                                break;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  68 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 69;
                                    return ;
                                }
                                break;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  116 :
                                if (("ResponsePending" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 117;
                                    return ;
                                }
                                break;
                            case  47 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 48;
                                    return ;
                                }
                                break;
                            case  62 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 63;
                                    return ;
                                }
                                break;
                            case  35 :
                                if (("Confirmed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  54 :
                                state = 57;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  163 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname)));
                                return ;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  171 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  54 :
                                state = 57;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  163 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, ___uri, ___local, ___qname)));
                                return ;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  171 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  54 :
                                    state = 57;
                                    continue outer;
                                case  142 :
                                    eatText1(value);
                                    state = 143;
                                    return ;
                                case  136 :
                                    eatText2(value);
                                    state = 137;
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  72 :
                                    state = 75;
                                    continue outer;
                                case  163 :
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 164, value)));
                                    return ;
                                case  118 :
                                    eatText3(value);
                                    state = 119;
                                    return ;
                                case  168 :
                                    state = 171;
                                    continue outer;
                                case  81 :
                                    state = 84;
                                    continue outer;
                                case  165 :
                                    state = 168;
                                    continue outer;
                                case  162 :
                                    state = 165;
                                    continue outer;
                                case  4 :
                                    eatText4(value);
                                    state = 5;
                                    return ;
                                case  49 :
                                    eatText5(value);
                                    state = 50;
                                    return ;
                                case  75 :
                                    state = 78;
                                    continue outer;
                                case  102 :
                                    state = 105;
                                    continue outer;
                                case  100 :
                                    eatText6(value);
                                    state = 101;
                                    return ;
                                case  42 :
                                    state = 45;
                                    continue outer;
                                case  145 :
                                    eatText7(value);
                                    state = 146;
                                    return ;
                                case  7 :
                                    eatText8(value);
                                    state = 8;
                                    return ;
                                case  150 :
                                    state = 153;
                                    continue outer;
                                case  31 :
                                    eatText9(value);
                                    state = 32;
                                    return ;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  117 :
                                    state = 120;
                                    continue outer;
                                case  105 :
                                    state = 108;
                                    continue outer;
                                case  16 :
                                    eatText10(value);
                                    state = 17;
                                    return ;
                                case  82 :
                                    eatText11(value);
                                    state = 83;
                                    return ;
                                case  111 :
                                    state = 114;
                                    continue outer;
                                case  34 :
                                    eatText12(value);
                                    state = 35;
                                    return ;
                                case  55 :
                                    eatText13(value);
                                    state = 56;
                                    return ;
                                case  148 :
                                    eatText14(value);
                                    state = 149;
                                    return ;
                                case  127 :
                                    eatText15(value);
                                    state = 128;
                                    return ;
                                case  121 :
                                    eatText16(value);
                                    state = 122;
                                    return ;
                                case  132 :
                                    state = 135;
                                    continue outer;
                                case  19 :
                                    eatText17(value);
                                    state = 20;
                                    return ;
                                case  69 :
                                    state = 72;
                                    continue outer;
                                case  73 :
                                    eatText18(value);
                                    state = 74;
                                    return ;
                                case  78 :
                                    state = 81;
                                    continue outer;
                                case  144 :
                                    state = 147;
                                    continue outer;
                                case  61 :
                                    eatText19(value);
                                    state = 62;
                                    return ;
                                case  90 :
                                    state = 93;
                                    continue outer;
                                case  39 :
                                    state = 42;
                                    continue outer;
                                case  40 :
                                    eatText20(value);
                                    state = 41;
                                    return ;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  45 :
                                    state = 48;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  64 :
                                    eatText21(value);
                                    state = 65;
                                    return ;
                                case  151 :
                                    eatText22(value);
                                    state = 152;
                                    return ;
                                case  147 :
                                    state = 150;
                                    continue outer;
                                case  70 :
                                    eatText23(value);
                                    state = 71;
                                    return ;
                                case  112 :
                                    eatText24(value);
                                    state = 113;
                                    return ;
                                case  85 :
                                    eatText25(value);
                                    state = 86;
                                    return ;
                                case  79 :
                                    eatText26(value);
                                    state = 80;
                                    return ;
                                case  156 :
                                    state = 159;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  126 :
                                    state = 129;
                                    continue outer;
                                case  154 :
                                    eatText27(value);
                                    state = 155;
                                    return ;
                                case  97 :
                                    eatText28(value);
                                    state = 98;
                                    return ;
                                case  138 :
                                    state = 141;
                                    continue outer;
                                case  99 :
                                    state = 102;
                                    continue outer;
                                case  153 :
                                    state = 156;
                                    continue outer;
                                case  87 :
                                    state = 90;
                                    continue outer;
                                case  96 :
                                    state = 99;
                                    continue outer;
                                case  109 :
                                    eatText29(value);
                                    state = 110;
                                    return ;
                                case  58 :
                                    eatText30(value);
                                    state = 59;
                                    return ;
                                case  37 :
                                    eatText31(value);
                                    state = 38;
                                    return ;
                                case  114 :
                                    state = 117;
                                    continue outer;
                                case  159 :
                                    state = 162;
                                    continue outer;
                                case  129 :
                                    state = 132;
                                    continue outer;
                                case  157 :
                                    eatText32(value);
                                    state = 158;
                                    return ;
                                case  28 :
                                    eatText33(value);
                                    state = 29;
                                    return ;
                                case  13 :
                                    eatText34(value);
                                    state = 14;
                                    return ;
                                case  36 :
                                    state = 39;
                                    continue outer;
                                case  46 :
                                    eatText35(value);
                                    state = 47;
                                    return ;
                                case  123 :
                                    state = 126;
                                    continue outer;
                                case  48 :
                                    state = 51;
                                    continue outer;
                                case  84 :
                                    state = 87;
                                    continue outer;
                                case  124 :
                                    eatText36(value);
                                    state = 125;
                                    return ;
                                case  88 :
                                    eatText37(value);
                                    state = 89;
                                    return ;
                                case  139 :
                                    eatText38(value);
                                    state = 140;
                                    return ;
                                case  63 :
                                    state = 66;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  91 :
                                    eatText39(value);
                                    state = 92;
                                    return ;
                                case  133 :
                                    eatText40(value);
                                    state = 134;
                                    return ;
                                case  106 :
                                    eatText41(value);
                                    state = 107;
                                    return ;
                                case  43 :
                                    eatText42(value);
                                    state = 44;
                                    return ;
                                case  60 :
                                    state = 63;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  22 :
                                    eatText43(value);
                                    state = 23;
                                    return ;
                                case  120 :
                                    state = 123;
                                    continue outer;
                                case  51 :
                                    state = 54;
                                    continue outer;
                                case  130 :
                                    eatText44(value);
                                    state = 131;
                                    return ;
                                case  103 :
                                    eatText45(value);
                                    state = 104;
                                    return ;
                                case  76 :
                                    eatText46(value);
                                    state = 77;
                                    return ;
                                case  141 :
                                    state = 144;
                                    continue outer;
                                case  135 :
                                    state = 138;
                                    continue outer;
                                case  160 :
                                    eatText47(value);
                                    state = 161;
                                    return ;
                                case  52 :
                                    eatText48(value);
                                    state = 53;
                                    return ;
                                case  115 :
                                    eatText49(value);
                                    state = 116;
                                    return ;
                                case  171 :
                                    revertToParentFromText(value);
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  57 :
                                    state = 60;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  25 :
                                    eatText50(value);
                                    state = 26;
                                    return ;
                                case  1 :
                                    eatText51(value);
                                    state = 2;
                                    return ;
                                case  67 :
                                    eatText52(value);
                                    state = 68;
                                    return ;
                                case  108 :
                                    state = 111;
                                    continue outer;
                                case  94 :
                                    eatText53(value);
                                    state = 95;
                                    return ;
                                case  10 :
                                    eatText54(value);
                                    state = 11;
                                    return ;
                                case  93 :
                                    state = 96;
                                    continue outer;
                                case  66 :
                                    state = 69;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkContour = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _VAC = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_VAC = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _TaskUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Delay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RegularWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWS = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResourceUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ACWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ACWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LinkedFields = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LinkedFields = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText12(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Confirmed = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Confirmed = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText13(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FinishVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText14(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText15(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StartVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText16(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Stop = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText17(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText18(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FixedMaterial = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_FixedMaterial = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText19(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText20(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostRateTable = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText21(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkSubAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText22(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BookingType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText23(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HasFixedRateUnits = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_HasFixedRateUnits = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText24(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText25(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Milestone = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Milestone = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText26(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelayFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText27(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText28(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText29(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText30(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Hyperlink = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText31(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText32(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText33(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText34(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText35(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText36(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Resume = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText37(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Notes = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText38(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText39(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Overallocated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Overallocated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText40(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UpdateNeeded = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_UpdateNeeded = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText41(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText42(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CostVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText43(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText44(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Units = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Units = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText45(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText46(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText47(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText48(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText49(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResponsePending = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ResponsePending = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText50(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText51(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText52(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_WorkVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText53(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText54(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentWorkComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getAssignment().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class CalendarsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Calendar;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getCalendar() {
            if (_Calendar == null) {
                _Calendar = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Calendar;
        }

        public java.util.List getCalendar() {
            return _getCalendar();
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Calendar == null)? 0 :_Calendar.size());
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Calendar");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Calendar.get(idx_0 ++)), "Calendar");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Calendar.get(idx_1 ++)), "Calendar");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Calendar.get(idx1 ++)), "Calendar");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Calendar == null)? 0 :_Calendar.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Calendar == null)? 0 :_Calendar.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000Ccom"
+".tapsterrock.mspdi.schema.ProjectType.CalendarsType.Calendar"
+"Typet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq"
+"\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd"
+".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAto"
+"micType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar."
+"Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.m"
+"sv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceUR"
+"Iq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XML"
+"Schema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\bCalendart\u0000$http://schemas.micro"
+"soft.com/projectsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Close"
+"dHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0"
+"N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gra"
+"mmar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u0010q\u0000~\u0000\u000fq\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u0000\"x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class CalendarTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType _WeekDays;
            protected boolean has_IsBaseCalendar;
            protected boolean _IsBaseCalendar;
            protected java.math.BigInteger _BaseCalendarUID;
            protected java.lang.String _Name;
            protected java.math.BigInteger _UID;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.class);
            }

            public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType getWeekDays() {
                return _WeekDays;
            }

            public void setWeekDays(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType value) {
                _WeekDays = value;
            }

            public boolean isIsBaseCalendar() {
                return _IsBaseCalendar;
            }

            public void setIsBaseCalendar(boolean value) {
                _IsBaseCalendar = value;
                has_IsBaseCalendar = true;
            }

            public java.math.BigInteger getBaseCalendarUID() {
                return _BaseCalendarUID;
            }

            public void setBaseCalendarUID(java.math.BigInteger value) {
                _BaseCalendarUID = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Name), "Name");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsBaseCalendar) {
                    context.startElement("http://schemas.microsoft.com/project", "IsBaseCalendar");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsBaseCalendar)), "IsBaseCalendar");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_BaseCalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BaseCalendarUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BaseCalendarUID)), "BaseCalendarUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WeekDays!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WeekDays");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WeekDays), "WeekDays");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WeekDays), "WeekDays");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _WeekDays), "WeekDays");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatyp"
+"e.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Int"
+"egerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datat"
+"ype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinA"
+"tomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000"
+"\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;"
+"xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,"
+"com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sc"
+"alexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstrain"
+"tFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"eq\u0000~\u0000\u0014L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTy"
+"pe;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000~\u0000\u0017ppq\u0000~\u0000\u001f\u0001\u0000sr\u0000#com.sun.msv.datatype."
+"xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007decimalq\u0000~\u0000\u001fq\u0000~\u0000&t\u0000\u000ef"
+"ractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bs"
+"r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\nxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~"
+"\u0000\u000eppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00006q\u0000~\u0000\u001bsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURI"
+"q\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000"
+")http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00001\u0001q\u0000"
+"~\u0000>sq\u0000~\u00008t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000-"
+"ppsq\u0000~\u0000\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000\'com.sun.msv.datatype.xsd."
+"MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatyp"
+"e.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000B"
+"psr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001e\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006stringq\u0000~\u0000K\u0001q\u0000~\u0000Mt\u0000\tmax"
+"Length\u0000\u0000\u0002\u0000q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000estring-derivedq\u0000~\u0000Bsq\u0000~\u0000-ppsq\u0000~\u0000/q\u0000~"
+"\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004Nameq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-ppsq\u0000~\u0000\tq\u0000~\u00002"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007booleanq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000\\q\u0000~\u0000\u001bsq\u0000~"
+"\u0000-ppsq\u0000~\u0000/q\u0000~\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000eIsBaseCalendarq\u0000~\u0000Bq"
+"\u0000~\u0000>sq\u0000~\u0000-ppsq\u0000~\u0000\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0011sq\u0000~\u0000-ppsq\u0000~\u0000/q\u0000~\u00002pq\u0000"
+"~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000fBaseCalendarUIDq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-ppsq\u0000~\u0000"
+"\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000-ppsr\u0000 com.sun.msv.grammar.One"
+"OrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u00002psq\u0000~\u0000/q\u0000~\u00002psr\u00002com.sun.msv.gramma"
+"r.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000?q\u0000~\u0000ss"
+"r\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009q\u0000~\u0000>sq\u0000"
+"~\u00008t\u0000Pcom.tapsterrock.mspdi.schema.ProjectType.CalendarsType"
+".CalendarType.WeekDaysTypet\u0000+http://java.sun.com/jaxb/xjc/du"
+"mmy-elementssq\u0000~\u0000-ppsq\u0000~\u0000/q\u0000~\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\bWeek"
+"Daysq\u0000~\u0000Bq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"
+"ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"
+"\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gramm"
+"ar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq\u0000~\u0000\u0005q\u0000~\u0000Xq\u0000~\u0000\u0007q\u0000~\u0000Vq\u0000~\u0000bq\u0000~\u0000iq\u0000~\u0000"
+"pq\u0000~\u0000\u0006q\u0000~\u0000\rq\u0000~\u0000dq\u0000~\u0000mq\u0000~\u0000\bq\u0000~\u0000kq\u0000~\u0000Cq\u0000~\u0000Eq\u0000~\u0000.q\u0000~\u0000Rq\u0000~\u0000^q\u0000~\u0000"
+"eq\u0000~\u0000yx"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  6 :
                                if (("IsBaseCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  13 :
                                if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  9 :
                                if (("BaseCalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  3 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  12 :
                                if (("WeekDays" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  11 :
                                if (("BaseCalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  15 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  13 :
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  5 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  14 :
                                if (("WeekDays" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("IsBaseCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  13 :
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  13 :
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  15 :
                                    revertToParentFromText(value);
                                    return ;
                                case  7 :
                                    eatText1(value);
                                    state = 8;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  10 :
                                    eatText2(value);
                                    state = 11;
                                    return ;
                                case  13 :
                                    _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 14, value));
                                    return ;
                                case  1 :
                                    eatText3(value);
                                    state = 2;
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  4 :
                                    eatText4(value);
                                    state = 5;
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsBaseCalendar = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsBaseCalendar = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BaseCalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Name = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

            public static class WeekDaysTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _WeekDay;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.class);
                }

                protected com.sun.xml.bind.util.ListImpl _getWeekDay() {
                    if (_WeekDay == null) {
                        _WeekDay = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _WeekDay;
                }

                public java.util.List getWeekDay() {
                    return _getWeekDay();
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_WeekDay == null)? 0 :_WeekDay.size());
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "WeekDay");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WeekDay.get(idx_0 ++)), "WeekDay");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WeekDay.get(idx_1 ++)), "WeekDay");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _WeekDay.get(idx1 ++)), "WeekDay");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_WeekDay == null)? 0 :_WeekDay.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_WeekDay == null)? 0 :_WeekDay.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000\\com.tapsterrock.mspdi.schema.ProjectType.Calend"
+"arsType.CalendarType.WeekDaysType.WeekDayTypet\u0000+http://java."
+"sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.s"
+"un.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUri"
+"q\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Col"
+"lapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/s"
+"q\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u0000\u0007WeekDayt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000"
+"\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"
+"et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"
+".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005coun"
+"tB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expression"
+"Pool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  0 :
                                    if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  1 :
                                    if (("DayType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getWeekDay().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  2 :
                                    if (("WeekDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

                public static class WeekDayTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected boolean has_DayWorking;
                    protected boolean _DayWorking;
                    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType _WorkingTimes;
                    protected java.math.BigInteger _DayType;
                    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType _TimePeriod;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.class);
                    }

                    public boolean isDayWorking() {
                        return _DayWorking;
                    }

                    public void setDayWorking(boolean value) {
                        _DayWorking = value;
                        has_DayWorking = true;
                    }

                    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType getWorkingTimes() {
                        return _WorkingTimes;
                    }

                    public void setWorkingTimes(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType value) {
                        _WorkingTimes = value;
                    }

                    public java.math.BigInteger getDayType() {
                        return _DayType;
                    }

                    public void setDayType(java.math.BigInteger value) {
                        _DayType = value;
                    }

                    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType getTimePeriod() {
                        return _TimePeriod;
                    }

                    public void setTimePeriod(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType value) {
                        _TimePeriod = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "DayType");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DayType)), "DayType");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (has_DayWorking) {
                            context.startElement("http://schemas.microsoft.com/project", "DayWorking");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DayWorking)), "DayWorking");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_TimePeriod!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "TimePeriod");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimePeriod), "TimePeriod");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimePeriod), "TimePeriod");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimePeriod), "TimePeriod");
                            context.endElement();
                        }
                        if (_WorkingTimes!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "WorkingTimes");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WorkingTimes), "WorkingTimes");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WorkingTimes), "WorkingTimes");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _WorkingTimes), "WorkingTimes");
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000s"
+"q\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000)com.sun.msv.datatype.xsd.En"
+"umerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com."
+"sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008a"
+"T\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/"
+"msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/m"
+"sv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/Strin"
+"g;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUriq\u0000~\u0000\u0017L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000$http://schemas.micros"
+"oft.com/projectpsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Inte"
+"gerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerive"
+"dType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000\u0015xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018t\u0000 http://www.w3.org/2001/XMLSc"
+"hemat\u0000\u0007integerq\u0000~\u0000\u001esr\u0000,com.sun.msv.datatype.xsd.FractionDigi"
+"tsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataT"
+"ypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0014ppq\u0000~\u0000\u001e\u0001\u0000sr\u0000#c"
+"om.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0007d"
+"ecimalq\u0000~\u0000\u001eq\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000#t\u0000\u000benumerationsr\u0000\u0011"
+"java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bsr\u0000)com.sun.msv."
+"datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0017xr\u0000\u0010jav"
+"a.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u00000t\u0000\u00015sq\u0000~\u00000t\u0000\u00017sq\u0000~\u00000t\u0000\u00012"
+"sq\u0000~\u00000t\u0000\u00010sq\u0000~\u00000t\u0000\u00014sq\u0000~\u00000t\u0000\u00016sq\u0000~\u00000t\u0000\u00011xsr\u00000com.sun.msv.gra"
+"mmar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom."
+"sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u0017xpt\u0000\u000finteger-derivedq\u0000~\u0000\u001bsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003sr\u0000\u0011java.la"
+"ng.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\rppsr\u0000\"com.sun.msv.dat"
+"atype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0005QNameq\u0000~\u0000\u001eq\u0000~\u0000Cs"
+"q\u0000~\u0000Dq\u0000~\u0000Pq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.gr"
+"ammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001"
+"/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Epsilo"
+"nExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000K\u0001q\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\u0007DayTypeq\u0000~\u0000"
+"\u001bsq\u0000~\u0000Gppsq\u0000~\u0000\bq\u0000~\u0000Lp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rppsr\u0000$com.sun.msv.dataty"
+"pe.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$t\u0000\u0007booleanq\u0000~\u0000\u001eq\u0000~\u0000C"
+"sq\u0000~\u0000Dq\u0000~\u0000bq\u0000~\u0000$sq\u0000~\u0000Gppsq\u0000~\u0000Iq\u0000~\u0000Lpq\u0000~\u0000Mq\u0000~\u0000Tq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\n"
+"DayWorkingq\u0000~\u0000\u001bq\u0000~\u0000Xsq\u0000~\u0000Gppsq\u0000~\u0000\bq\u0000~\u0000Lp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq"
+"\u0000~\u0000Gppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000Lps"
+"q\u0000~\u0000Iq\u0000~\u0000Lpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Yq\u0000~\u0000rsr\u0000 com.sun.msv.grammar.AnyN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000kcom.tapsterrock.mspdi"
+".schema.ProjectType.CalendarsType.CalendarType.WeekDaysType."
+"WeekDayType.TimePeriodTypet\u0000+http://java.sun.com/jaxb/xjc/du"
+"mmy-elementssq\u0000~\u0000Gppsq\u0000~\u0000Iq\u0000~\u0000Lpq\u0000~\u0000Mq\u0000~\u0000Tq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\nTime"
+"Periodq\u0000~\u0000\u001bq\u0000~\u0000Xsq\u0000~\u0000Gppsq\u0000~\u0000\bq\u0000~\u0000Lp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000G"
+"ppsq\u0000~\u0000mq\u0000~\u0000Lpsq\u0000~\u0000Iq\u0000~\u0000Lpq\u0000~\u0000rq\u0000~\u0000tq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000mcom.tapste"
+"rrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.We"
+"ekDaysType.WeekDayType.WorkingTimesTypeq\u0000~\u0000wsq\u0000~\u0000Gppsq\u0000~\u0000Iq\u0000"
+"~\u0000Lpq\u0000~\u0000Mq\u0000~\u0000Tq\u0000~\u0000Xsq\u0000~\u0000Rt\u0000\fWorkingTimesq\u0000~\u0000\u001bq\u0000~\u0000Xsr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamV"
+"ersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012"
+"\u0001pq\u0000~\u0000^q\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000|q\u0000~\u0000oq\u0000~\u0000\u0081q\u0000~\u0000\u0007q\u0000~\u0000lq\u0000~\u0000\u0080q\u0000~\u0000jq\u0000~\u0000~q\u0000~"
+"\u0000\u0005q\u0000~\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000Hq\u0000~\u0000dq\u0000~\u0000xq\u0000~\u0000\u0085x"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public static class TimePeriodTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                    {

                        protected java.util.Calendar _ToDate;
                        protected java.util.Calendar _FromDate;
                        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                        private static com.sun.msv.grammar.Grammar schemaFragment;

                        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType.class);
                        }

                        public java.util.Calendar getToDate() {
                            return _ToDate;
                        }

                        public void setToDate(java.util.Calendar value) {
                            _ToDate = value;
                        }

                        public java.util.Calendar getFromDate() {
                            return _FromDate;
                        }

                        public void setFromDate(java.util.Calendar value) {
                            _FromDate = value;
                        }

                        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.Unmarshaller(context);
                        }

                        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            if (_FromDate!= null) {
                                context.startElement("http://schemas.microsoft.com/project", "FromDate");
                                context.endNamespaceDecls();
                                context.endAttributes();
                                try {
                                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FromDate), null), "FromDate");
                                } catch (java.lang.Exception e) {
                                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                }
                                context.endElement();
                            }
                            if (_ToDate!= null) {
                                context.startElement("http://schemas.microsoft.com/project", "ToDate");
                                context.endNamespaceDecls();
                                context.endAttributes();
                                try {
                                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ToDate), null), "ToDate");
                                } catch (java.lang.Exception e) {
                                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                }
                                context.endElement();
                            }
                        }

                        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                        }

                        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                        }

                        public java.lang.Class getPrimaryInterface() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType.class);
                        }

                        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                            if (schemaFragment == null) {
                                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002"
+"L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000%com.sun.m"
+"sv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datat"
+"ype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
+"xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd"
+".ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatat"
+"ypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btyp"
+"eNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpa"
+"ceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\bdateTime"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsq\u0000~\u0000\u0006pps"
+"r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\t"
+"nameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000\rpsq\u0000~\u0000\u000fppsr\u0000\"com.sun.msv.datatype.x"
+"sd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000"
+"~\u0000*q\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.N"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSch"
+"ema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001q\u0000~\u00002sq\u0000~\u0000,t\u0000\bFromDatet\u0000$http://"
+"schemas.microsoft.com/projectq\u0000~\u00002sq\u0000~\u0000\u0006ppsq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0000\u0012sq\u0000~\u0000\u0006ppsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000\'q\u0000~\u0000.q\u0000~\u00002sq\u0000~\u0000,t\u0000\u0006ToDateq\u0000"
+"~\u00006q\u0000~\u00002sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003"
+"I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Exp"
+"ressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u00007q\u0000~\u0000$q\u0000~\u0000:q\u0000~\u0000\u000eq\u0000~\u00009x"));
                            }
                            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                        }

                        public class Unmarshaller
                            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                        {


                            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                super(context, "-------");
                            }

                            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                                this(context);
                                state = startState;
                            }

                            public java.lang.Object owner() {
                                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.this;
                            }

                            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  0 :
                                            if (("FromDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.pushAttributes(__atts, true);
                                                state = 1;
                                                return ;
                                            }
                                            state = 3;
                                            continue outer;
                                        case  3 :
                                            if (("ToDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.pushAttributes(__atts, true);
                                                state = 4;
                                                return ;
                                            }
                                            state = 6;
                                            continue outer;
                                        case  6 :
                                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                            return ;
                                    }
                                    super.enterElement(___uri, ___local, ___qname, __atts);
                                    break;
                                }
                            }

                            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  2 :
                                            if (("FromDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.popAttributes();
                                                state = 3;
                                                return ;
                                            }
                                            break;
                                        case  6 :
                                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                            return ;
                                        case  5 :
                                            if (("ToDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.popAttributes();
                                                state = 6;
                                                return ;
                                            }
                                            break;
                                    }
                                    super.leaveElement(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  6 :
                                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.enterAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  6 :
                                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.leaveAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void handleText(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    try {
                                        switch (state) {
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  1 :
                                                eatText1(value);
                                                state = 2;
                                                return ;
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                            case  4 :
                                                eatText2(value);
                                                state = 5;
                                                return ;
                                            case  6 :
                                                revertToParentFromText(value);
                                                return ;
                                        }
                                    } catch (java.lang.RuntimeException e) {
                                        handleUnexpectedTextException(value, e);
                                    }
                                    break;
                                }
                            }

                            private void eatText1(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                try {
                                    _FromDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                } catch (java.lang.Exception e) {
                                    handleParseConversionException(e);
                                }
                            }

                            private void eatText2(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                try {
                                    _ToDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                } catch (java.lang.Exception e) {
                                    handleParseConversionException(e);
                                }
                            }

                        }

                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        if (("WorkingTimes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, false);
                                            state = 10;
                                            return ;
                                        }
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        if (("FromDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                            return ;
                                        }
                                        if (("ToDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                            return ;
                                        }
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                                        return ;
                                    case  10 :
                                        if (("WorkingTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                            return ;
                                        }
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname, __atts));
                                        return ;
                                    case  12 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  6 :
                                        if (("TimePeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, false);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        if (("DayType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                    case  3 :
                                        if (("DayWorking" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  11 :
                                        if (("WorkingTimes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname));
                                        return ;
                                    case  10 :
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname));
                                        return ;
                                    case  12 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  2 :
                                        if (("DayType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  5 :
                                        if (("DayWorking" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  8 :
                                        if (("TimePeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname));
                                        return ;
                                    case  10 :
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname));
                                        return ;
                                    case  12 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  7 :
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, ___uri, ___local, ___qname));
                                        return ;
                                    case  10 :
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, ___uri, ___local, ___qname));
                                        return ;
                                    case  12 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  9 :
                                            state = 12;
                                            continue outer;
                                        case  7 :
                                            _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 8, value));
                                            return ;
                                        case  10 :
                                            _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 11, value));
                                            return ;
                                        case  12 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  1 :
                                            eatText1(value);
                                            state = 2;
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  4 :
                                            eatText2(value);
                                            state = 5;
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _DayType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _DayWorking = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_DayWorking = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                    public static class WorkingTimesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                    {

                        protected com.sun.xml.bind.util.ListImpl _WorkingTime;
                        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                        private static com.sun.msv.grammar.Grammar schemaFragment;

                        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.class);
                        }

                        protected com.sun.xml.bind.util.ListImpl _getWorkingTime() {
                            if (_WorkingTime == null) {
                                _WorkingTime = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                            }
                            return _WorkingTime;
                        }

                        public java.util.List getWorkingTime() {
                            return _getWorkingTime();
                        }

                        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.Unmarshaller(context);
                        }

                        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = ((_WorkingTime == null)? 0 :_WorkingTime.size());
                            while (idx1 != len1) {
                                context.startElement("http://schemas.microsoft.com/project", "WorkingTime");
                                int idx_0 = idx1;
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WorkingTime.get(idx_0 ++)), "WorkingTime");
                                context.endNamespaceDecls();
                                int idx_1 = idx1;
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WorkingTime.get(idx_1 ++)), "WorkingTime");
                                context.endAttributes();
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _WorkingTime.get(idx1 ++)), "WorkingTime");
                                context.endElement();
                            }
                        }

                        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = ((_WorkingTime == null)? 0 :_WorkingTime.size());
                            while (idx1 != len1) {
                                idx1 += 1;
                            }
                        }

                        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = ((_WorkingTime == null)? 0 :_WorkingTime.size());
                            while (idx1 != len1) {
                                idx1 += 1;
                            }
                        }

                        public java.lang.Class getPrimaryInterface() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.class);
                        }

                        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                            if (schemaFragment == null) {
                                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'co"
+"m.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClass"
+"t\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.El"
+"ementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMo"
+"delq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com.sun.ms"
+"v.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Una"
+"ryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\tpsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\tpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\b\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000}com.tapsterrock.mspdi.schema.ProjectType.Calend"
+"arsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesTy"
+"pe.WorkingTimeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elem"
+"entssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L"
+"\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.ms"
+"v.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
+"xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd"
+".ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatat"
+"ypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhi"
+"teSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000"
+" http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003p"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001f"
+"L\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w"
+"3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000bWorkingTimet\u0000$htt"
+"p://schemas.microsoft.com/projectsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq"
+"\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000"
+"\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tps"
+"q\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\t"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~"
+"\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;q\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dsr"
+"\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000"
+"/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.su"
+"n.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000"
+"\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPoo"
+"l;xp\u0000\u0000\u0000\u001d\u0001pq\u0000~\u0000\u0007q\u0000~\u0000Iq\u0000~\u0000>q\u0000~\u0000_q\u0000~\u0000Uq\u0000~\u0000\u0013q\u0000~\u0000Dq\u0000~\u0000Oq\u0000~\u0000Zq\u0000~\u0000d"
+"q\u0000~\u0000\u0010q\u0000~\u0000Cq\u0000~\u0000Nq\u0000~\u0000Yq\u0000~\u0000cq\u0000~\u0000Jq\u0000~\u0000\u0005q\u0000~\u0000?q\u0000~\u0000\u000eq\u0000~\u0000Aq\u0000~\u0000Lq\u0000~\u0000W"
+"q\u0000~\u0000aq\u0000~\u0000Tq\u0000~\u0000#q\u0000~\u0000Gq\u0000~\u0000Rq\u0000~\u0000]q\u0000~\u0000gx"));
                            }
                            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                        }

                        public class Unmarshaller
                            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                        {


                            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                super(context, "---");
                            }

                            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                                this(context);
                                state = startState;
                            }

                            public java.lang.Object owner() {
                                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.this;
                            }

                            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            if (("FromTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                                return ;
                                            }
                                            if (("ToTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                                return ;
                                            }
                                            _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                            return ;
                                        case  0 :
                                            if (("WorkingTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.pushAttributes(__atts, false);
                                                state = 1;
                                                return ;
                                            }
                                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                            return ;
                                    }
                                    super.enterElement(___uri, ___local, ___qname, __atts);
                                    break;
                                }
                            }

                            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                            return ;
                                        case  0 :
                                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                            return ;
                                        case  2 :
                                            if (("WorkingTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                context.popAttributes();
                                                state = 0;
                                                return ;
                                            }
                                            break;
                                    }
                                    super.leaveElement(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                            return ;
                                        case  0 :
                                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.enterAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    switch (state) {
                                        case  1 :
                                            _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                            return ;
                                        case  0 :
                                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                            return ;
                                    }
                                    super.leaveAttribute(___uri, ___local, ___qname);
                                    break;
                                }
                            }

                            public void handleText(final java.lang.String value)
                                throws org.xml.sax.SAXException
                            {
                                int attIdx;
                                outer:
                                while (true) {
                                    try {
                                        switch (state) {
                                            case  1 :
                                                _getWorkingTime().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, value)));
                                                return ;
                                            case  0 :
                                                revertToParentFromText(value);
                                                return ;
                                        }
                                    } catch (java.lang.RuntimeException e) {
                                        handleUnexpectedTextException(value, e);
                                    }
                                    break;
                                }
                            }

                        }

                        public static class WorkingTimeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                        {

                            protected java.util.Calendar _ToTime;
                            protected java.util.Calendar _FromTime;
                            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                            private static com.sun.msv.grammar.Grammar schemaFragment;

                            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType.class);
                            }

                            public java.util.Calendar getToTime() {
                                return _ToTime;
                            }

                            public void setToTime(java.util.Calendar value) {
                                _ToTime = value;
                            }

                            public java.util.Calendar getFromTime() {
                                return _FromTime;
                            }

                            public void setFromTime(java.util.Calendar value) {
                                _FromTime = value;
                            }

                            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.Unmarshaller(context);
                            }

                            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                                if (_FromTime!= null) {
                                    context.startElement("http://schemas.microsoft.com/project", "FromTime");
                                    context.endNamespaceDecls();
                                    context.endAttributes();
                                    try {
                                        context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FromTime), null), "FromTime");
                                    } catch (java.lang.Exception e) {
                                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endElement();
                                }
                                if (_ToTime!= null) {
                                    context.startElement("http://schemas.microsoft.com/project", "ToTime");
                                    context.endNamespaceDecls();
                                    context.endAttributes();
                                    try {
                                        context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ToTime), null), "ToTime");
                                    } catch (java.lang.Exception e) {
                                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endElement();
                                }
                            }

                            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                            }

                            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                            }

                            public java.lang.Class getPrimaryInterface() {
                                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType.class);
                            }

                            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                                if (schemaFragment == null) {
                                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002"
+"L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000!com.sun.m"
+"sv.datatype.xsd.TimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype."
+"xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd."
+"BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Con"
+"creteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeI"
+"mpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNam"
+"eq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePr"
+"ocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0004timesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsq\u0000~\u0000\u0006ppsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000\rpsq\u0000~\u0000\u000fppsr\u0000\"com.sun.msv.datatype.xsd.Qname"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000*q\u0000~\u0000\u001b"
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"ancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001q\u0000~\u00002sq\u0000~\u0000,t\u0000\bFromTimet\u0000$http://schemas."
+"microsoft.com/projectq\u0000~\u00002sq\u0000~\u0000\u0006ppsq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0012"
+"sq\u0000~\u0000\u0006ppsq\u0000~\u0000%q\u0000~\u0000\rpq\u0000~\u0000\'q\u0000~\u0000.q\u0000~\u00002sq\u0000~\u0000,t\u0000\u0006ToTimeq\u0000~\u00006q\u0000~\u00002"
+"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTable"
+"t\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com."
+"sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005count"
+"B\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionP"
+"ool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000\u000eq\u0000~\u00009q\u0000~\u0000\u0007q\u0000~\u00007q\u0000~\u0000$q\u0000~\u0000:q\u0000~\u0000\u0005x"));
                                }
                                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                            }

                            public class Unmarshaller
                                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                            {


                                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                                    super(context, "-------");
                                }

                                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                                    this(context);
                                    state = startState;
                                }

                                public java.lang.Object owner() {
                                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.this;
                                }

                                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  0 :
                                                if (("FromTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.pushAttributes(__atts, true);
                                                    state = 1;
                                                    return ;
                                                }
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                                return ;
                                            case  3 :
                                                if (("ToTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.pushAttributes(__atts, true);
                                                    state = 4;
                                                    return ;
                                                }
                                                state = 6;
                                                continue outer;
                                        }
                                        super.enterElement(___uri, ___local, ___qname, __atts);
                                        break;
                                    }
                                }

                                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  5 :
                                                if (("ToTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.popAttributes();
                                                    state = 6;
                                                    return ;
                                                }
                                                break;
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  2 :
                                                if (("FromTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                                    context.popAttributes();
                                                    state = 3;
                                                    return ;
                                                }
                                                break;
                                            case  6 :
                                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                                return ;
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                        }
                                        super.leaveElement(___uri, ___local, ___qname);
                                        break;
                                    }
                                }

                                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                                return ;
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                        }
                                        super.enterAttribute(___uri, ___local, ___qname);
                                        break;
                                    }
                                }

                                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        switch (state) {
                                            case  0 :
                                                state = 3;
                                                continue outer;
                                            case  6 :
                                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                                return ;
                                            case  3 :
                                                state = 6;
                                                continue outer;
                                        }
                                        super.leaveAttribute(___uri, ___local, ___qname);
                                        break;
                                    }
                                }

                                public void handleText(final java.lang.String value)
                                    throws org.xml.sax.SAXException
                                {
                                    int attIdx;
                                    outer:
                                    while (true) {
                                        try {
                                            switch (state) {
                                                case  4 :
                                                    eatText1(value);
                                                    state = 5;
                                                    return ;
                                                case  0 :
                                                    state = 3;
                                                    continue outer;
                                                case  1 :
                                                    eatText2(value);
                                                    state = 2;
                                                    return ;
                                                case  6 :
                                                    revertToParentFromText(value);
                                                    return ;
                                                case  3 :
                                                    state = 6;
                                                    continue outer;
                                            }
                                        } catch (java.lang.RuntimeException e) {
                                            handleUnexpectedTextException(value, e);
                                        }
                                        break;
                                    }
                                }

                                private void eatText1(final java.lang.String value)
                                    throws org.xml.sax.SAXException
                                {
                                    try {
                                        _ToTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                    } catch (java.lang.Exception e) {
                                        handleParseConversionException(e);
                                    }
                                }

                                private void eatText2(final java.lang.String value)
                                    throws org.xml.sax.SAXException
                                {
                                    try {
                                        _FromTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                                    } catch (java.lang.Exception e) {
                                        handleParseConversionException(e);
                                    }
                                }

                            }

                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            break;
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getCalendar().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class ExtendedAttributesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getExtendedAttribute() {
            if (_ExtendedAttribute == null) {
                _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _ExtendedAttribute;
        }

        public java.util.List getExtendedAttribute() {
            return _getExtendedAttribute();
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_0 ++)), "ExtendedAttribute");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_1 ++)), "ExtendedAttribute");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx1 ++)), "ExtendedAttribute");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000Ucom.tapsterrock.mspdi.schema.ProjectType.Extend"
+"edAttributesType.ExtendedAttributeTypet\u0000+http://java.sun.com"
+"/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv."
+"grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"
+"type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"
+"\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*c"
+"om.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com."
+"sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv."
+"datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000"
+"\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whit"
+"eSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNam"
+"esr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000"
+"\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u0000\u0011ExtendedAttributet\u0000$http://schemas.microsoft.com/projectq"
+"\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected boolean has_AppendNewValues;
            protected boolean _AppendNewValues;
            protected com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType _ValueList;
            protected java.lang.String _FieldID;
            protected java.lang.String _FieldName;
            protected java.math.BigInteger _ValuelistSortOrder;
            protected java.math.BigInteger _CalculationType;
            protected java.math.BigInteger _RollupType;
            protected java.lang.String _Default;
            protected boolean has_RestrictValues;
            protected boolean _RestrictValues;
            protected java.lang.String _Formula;
            protected java.lang.String _PhoneticAlias;
            protected java.lang.String _Alias;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.class);
            }

            public boolean isAppendNewValues() {
                return _AppendNewValues;
            }

            public void setAppendNewValues(boolean value) {
                _AppendNewValues = value;
                has_AppendNewValues = true;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType getValueList() {
                return _ValueList;
            }

            public void setValueList(com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType value) {
                _ValueList = value;
            }

            public java.lang.String getFieldID() {
                return _FieldID;
            }

            public void setFieldID(java.lang.String value) {
                _FieldID = value;
            }

            public java.lang.String getFieldName() {
                return _FieldName;
            }

            public void setFieldName(java.lang.String value) {
                _FieldName = value;
            }

            public java.math.BigInteger getValuelistSortOrder() {
                return _ValuelistSortOrder;
            }

            public void setValuelistSortOrder(java.math.BigInteger value) {
                _ValuelistSortOrder = value;
            }

            public java.math.BigInteger getCalculationType() {
                return _CalculationType;
            }

            public void setCalculationType(java.math.BigInteger value) {
                _CalculationType = value;
            }

            public java.math.BigInteger getRollupType() {
                return _RollupType;
            }

            public void setRollupType(java.math.BigInteger value) {
                _RollupType = value;
            }

            public java.lang.String getDefault() {
                return _Default;
            }

            public void setDefault(java.lang.String value) {
                _Default = value;
            }

            public boolean isRestrictValues() {
                return _RestrictValues;
            }

            public void setRestrictValues(boolean value) {
                _RestrictValues = value;
                has_RestrictValues = true;
            }

            public java.lang.String getFormula() {
                return _Formula;
            }

            public void setFormula(java.lang.String value) {
                _Formula = value;
            }

            public java.lang.String getPhoneticAlias() {
                return _PhoneticAlias;
            }

            public void setPhoneticAlias(java.lang.String value) {
                _PhoneticAlias = value;
            }

            public java.lang.String getAlias() {
                return _Alias;
            }

            public void setAlias(java.lang.String value) {
                _Alias = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FieldID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldID), "FieldID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FieldName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldName");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldName), "FieldName");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Alias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Alias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Alias), "Alias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PhoneticAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhoneticAlias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _PhoneticAlias), "PhoneticAlias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RollupType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RollupType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _RollupType)), "RollupType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CalculationType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalculationType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalculationType)), "CalculationType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Formula!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Formula");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Formula), "Formula");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_RestrictValues) {
                    context.startElement("http://schemas.microsoft.com/project", "RestrictValues");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RestrictValues)), "RestrictValues");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ValuelistSortOrder!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ValuelistSortOrder");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValuelistSortOrder)), "ValuelistSortOrder");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_AppendNewValues) {
                    context.startElement("http://schemas.microsoft.com/project", "AppendNewValues");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AppendNewValues)), "AppendNewValues");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Default!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Default");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Default), "Default");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ValueList!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ValueList");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ValueList), "ValueList");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ValueList), "ValueList");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ValueList), "ValueList");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.gram"
+"mar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex"
+".ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001a"
+"ignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java"
+".lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv"
+".grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dat"
+"atype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;x"
+"q\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\r"
+"isAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xpq\u0000~\u0000%q\u0000~\u0000$sq\u0000~\u0000\u0010ppsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003q\u0000~"
+"\u0000\u0017psq\u0000~\u0000\u0019ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\'q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00003q\u0000~\u0000$sr\u0000#co"
+"m.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"!L\u0000\fnamespaceURIq\u0000~\u0000!xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0016\u0001q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007FieldIDt\u0000$http://schemas.microso"
+"ft.com/projectq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010p"
+"psq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\tFieldNameq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~"
+"\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsr\u0000\'com.sun.msv.datatype.xs"
+"d.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datat"
+"ype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.s"
+"un.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFi"
+"xedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/"
+"xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/x"
+"sd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000!xq\u0000~\u0000 q\u0000~\u0000Apq\u0000~\u0000(\u0000\u0000q\u0000~\u0000#q\u0000~"
+"\u0000#t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000estring-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010pps"
+"q\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Aliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq"
+"\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsq\u0000~\u0000Mq\u0000~\u0000Apq\u0000~\u0000(\u0000\u0000q\u0000~\u0000#q\u0000~\u0000#q\u0000~\u0000"
+"S\u0000\u0000\u00002q\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000estring-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000"
+"~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\rPhoneticAliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q"
+"\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsr\u0000)com.sun.msv.datatype.xsd.Enumerati"
+"onFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000Nq\u0000~\u0000Apq\u0000~"
+"\u00005\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+c"
+"om.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbase"
+"Facetsq\u0000~\u0000Pxq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007integerq\u0000~\u00005sr\u0000,com.sun.msv.datatyp"
+"e.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv."
+"datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq"
+"\u0000~\u0000Oppq\u0000~\u00005\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u00005q\u0000~\u0000tt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000n"
+"t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000"
+"\u0000\bsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\u0005valueq\u0000~\u0000!xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000zt\u0000\u00015sq"
+"\u0000~\u0000zt\u0000\u00017sq\u0000~\u0000zt\u0000\u00012sq\u0000~\u0000zt\u0000\u00010sq\u0000~\u0000zt\u0000\u00014sq\u0000~\u0000zt\u0000\u00016sq\u0000~\u0000zt\u0000\u00011xq"
+"\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000finteger-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000"
+"~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\nRollupTypeq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsq\u0000~\u0000iq\u0000~\u0000Apq\u0000~\u00005\u0000\u0000q\u0000~\u0000nq\u0000~\u0000nq\u0000~\u0000wsq\u0000~\u0000xw\f\u0000\u0000\u0000\u0010"
+"?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000zt\u0000\u00012sq\u0000~\u0000zq\u0000~\u0000\u0085sq\u0000~\u0000zt\u0000\u00011xq\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000fintege"
+"r-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000fCa"
+"lculationTypeq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000"
+"~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007Formulaq\u0000~\u0000Aq\u0000~\u0000=sq"
+"\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsr\u0000$com.sun.msv.datatype."
+"xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007booleanq\u0000~\u00005q\u0000~\u0000*sq\u0000"
+"~\u0000+q\u0000~\u0000\u00b0q\u0000~\u0000$sq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000eRes"
+"trictValuesq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsq"
+"\u0000~\u0000iq\u0000~\u0000Apq\u0000~\u00005\u0000\u0000q\u0000~\u0000nq\u0000~\u0000nq\u0000~\u0000wsq\u0000~\u0000xw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000zq\u0000"
+"~\u0000\u0085sq\u0000~\u0000zt\u0000\u00011xq\u0000~\u0000*sq\u0000~\u0000+t\u0000\u000finteger-derivedq\u0000~\u0000Asq\u0000~\u0000\u0010ppsq\u0000~"
+"\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0012ValuelistSortOrderq\u0000~\u0000Aq\u0000~\u0000="
+"sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00adsq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q"
+"\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000fAppendNewValuesq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~"
+"\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000"
+"\u0007Defaultq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~"
+"\u0000\u0010ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0017psq\u0000"
+"~\u0000.q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Expression$AnyStringExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000>q\u0000~\u0000\u00ddsr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=sq\u0000~\u00007t\u0000ccom.tapsterrock.mspdi.s"
+"chema.ProjectType.ExtendedAttributesType.ExtendedAttributeTy"
+"pe.ValueListTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\tValueListq\u0000~\u0000A"
+"q\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexp"
+"Tablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000"
+"-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005"
+"countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expres"
+"sionPool;xp\u0000\u0000\u00001\u0001pq\u0000~\u0000\rq\u0000~\u0000\u00acq\u0000~\u0000\u00c7q\u0000~\u0000\u00b8q\u0000~\u0000\tq\u0000~\u0000Iq\u0000~\u0000Zq\u0000~\u0000\u00aaq\u0000~"
+"\u0000\u00c5q\u0000~\u0000\u00d3q\u0000~\u0000\u00daq\u0000~\u0000\u00d7q\u0000~\u0000\fq\u0000~\u0000\u0092q\u0000~\u0000\u00d5q\u0000~\u0000\u0007q\u0000~\u0000\u000fq\u0000~\u0000\\q\u0000~\u0000\u0006q\u0000~\u0000eq\u0000~"
+"\u0000gq\u0000~\u0000\bq\u0000~\u0000\u0094q\u0000~\u0000\u000eq\u0000~\u0000\nq\u0000~\u0000\u000bq\u0000~\u0000\u0018q\u0000~\u0000Dq\u0000~\u0000\u00a5q\u0000~\u0000\u00ceq\u0000~\u0000\u0005q\u0000~\u0000\u00b6q\u0000~"
+"\u0000\u0011q\u0000~\u0000Bq\u0000~\u0000\u00a3q\u0000~\u0000\u00ccq\u0000~\u0000-q\u0000~\u0000Eq\u0000~\u0000Vq\u0000~\u0000Kq\u0000~\u0000aq\u0000~\u0000\u008eq\u0000~\u0000\u009fq\u0000~\u0000\u00a6q\u0000~"
+"\u0000\u00b2q\u0000~\u0000\u00c1q\u0000~\u0000\u00c8q\u0000~\u0000\u00cfq\u0000~\u0000\u00e3x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                if (("CalculationType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  24 :
                                if (("ValuelistSortOrder" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  34 :
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _ValueList = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                            case  27 :
                                if (("AppendNewValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  30 :
                                if (("Default" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  36 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  21 :
                                if (("RestrictValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  6 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  12 :
                                if (("RollupType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  9 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  3 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  33 :
                                if (("ValueList" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  0 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  18 :
                                if (("Formula" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                state = 18;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  35 :
                                if (("ValueList" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("AppendNewValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  26 :
                                if (("ValuelistSortOrder" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  36 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  5 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  20 :
                                if (("Formula" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  23 :
                                if (("RestrictValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  14 :
                                if (("RollupType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  32 :
                                if (("Default" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  17 :
                                if (("CalculationType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  18 :
                                state = 21;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                state = 18;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  36 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                state = 18;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  36 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  25 :
                                    eatText1(value);
                                    state = 26;
                                    return ;
                                case  31 :
                                    eatText2(value);
                                    state = 32;
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  19 :
                                    eatText3(value);
                                    state = 20;
                                    return ;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  1 :
                                    eatText4(value);
                                    state = 2;
                                    return ;
                                case  7 :
                                    eatText5(value);
                                    state = 8;
                                    return ;
                                case  4 :
                                    eatText6(value);
                                    state = 5;
                                    return ;
                                case  36 :
                                    revertToParentFromText(value);
                                    return ;
                                case  28 :
                                    eatText7(value);
                                    state = 29;
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  16 :
                                    eatText8(value);
                                    state = 17;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  13 :
                                    eatText9(value);
                                    state = 14;
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  10 :
                                    eatText10(value);
                                    state = 11;
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  22 :
                                    eatText11(value);
                                    state = 23;
                                    return ;
                                case  18 :
                                    state = 21;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ValuelistSortOrder = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Default = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Formula = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldID = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Alias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldName = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AppendNewValues = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_AppendNewValues = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CalculationType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RollupType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PhoneticAlias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RestrictValues = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_RestrictValues = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

            public static class ValueListTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Value;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.class);
                }

                protected com.sun.xml.bind.util.ListImpl _getValue() {
                    if (_Value == null) {
                        _Value = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _Value;
                }

                public java.util.List getValue() {
                    return _getValue();
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Value == null)? 0 :_Value.size());
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Value.get(idx_0 ++)), "Value");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Value.get(idx_1 ++)), "Value");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Value == null)? 0 :_Value.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Value == null)? 0 :_Value.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
+"mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
+"L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
+"~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0006pp\u0000sr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000bppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000mcom"
+".tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType"
+".ExtendedAttributeType.ValueListType.ValueTypet\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"iq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000."
+"sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~"
+"\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0005Valuet\u0000$http://schemas.microsoft.com/projectsr\u0000\"c"
+"om.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lc"
+"om/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.m"
+"sv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rst"
+"reamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;x"
+"p\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u0010q\u0000~\u0000\u000fq\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u0000\"x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  0 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  1 :
                                    if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, value)));
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

                public static class ValueTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _Value;
                    protected java.lang.String _Description;
                    protected java.math.BigInteger _ID;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType.class);
                    }

                    public java.lang.String getValue() {
                        return _Value;
                    }

                    public void setValue(java.lang.String value) {
                        _Value = value;
                    }

                    public java.lang.String getDescription() {
                        return _Description;
                    }

                    public void setDescription(java.lang.String value) {
                        _Description = value;
                    }

                    public java.math.BigInteger getID() {
                        return _ID;
                    }

                    public void setID(java.math.BigInteger value) {
                        _ID = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "ID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ID)), "ID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (_Value!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Value");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Value), "Value");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Description!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Description");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Description), "Description");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/g"
+"rammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expres"
+"sion\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L"
+"\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.E"
+"lementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/"
+"NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aig"
+"noreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom"
+".sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\u001bcom.sun.m"
+"sv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/D"
+"atatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair"
+";xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000"
+"\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*c"
+"om.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com."
+"sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv."
+"datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljav"
+"a/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/d"
+"atatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/"
+"XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.Fra"
+"ctionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype."
+"xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun"
+".msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixe"
+"dZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0013L\u0000\fconcreteTypet\u0000\'Lcom"
+"/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016pp"
+"q\u0000~\u0000\u001e\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000\u001eq\u0000~\u0000%t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pp"
+"sr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L"
+"\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun.msv.grammar.Choic"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\bxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Bo"
+"olean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\rppsr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNameq\u0000~\u0000\u001eq\u0000~\u0000)sq\u0000~\u0000*"
+"q\u0000~\u00005q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar"
+".NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00000\u0001q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0002IDt\u0000$http://sche"
+"mas.microsoft.com/projectsq\u0000~\u0000,ppsq\u0000~\u0000\u0007q\u0000~\u00001p\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\r"
+"ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlw"
+"aysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001d\u0001q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Hq"
+"\u0000~\u0000\u001asq\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Valueq\u0000~\u0000Aq\u0000"
+"~\u0000=sq\u0000~\u0000,ppsq\u0000~\u0000\u0007q\u0000~\u00001p\u0000sq\u0000~\u0000\u000bppq\u0000~\u0000Esq\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~"
+"\u00002q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000bDescriptionq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000"
+"\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\n\u0001pq\u0000~\u0000\u0005q"
+"\u0000~\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000Bq\u0000~\u0000Pq\u0000~\u0000-q\u0000~\u0000Lq\u0000~\u0000Sx"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 5;
                                            return ;
                                        }
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 3;
                                            return ;
                                        }
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  4 :
                                        if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  6 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  0 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  5 :
                                            eatText1(value);
                                            state = 6;
                                            return ;
                                        case  3 :
                                            eatText2(value);
                                            state = 4;
                                            return ;
                                        case  1 :
                                            eatText3(value);
                                            state = 2;
                                            return ;
                                        case  0 :
                                            revertToParentFromText(value);
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Description = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _ID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Value = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("RollupType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("CalculationType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Formula" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("RestrictValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("ValuelistSortOrder" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("AppendNewValues" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Default" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("ValueList" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        case  0 :
                            if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  1 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, value)));
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class OutlineCodesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _OutlineCode;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getOutlineCode() {
            if (_OutlineCode == null) {
                _OutlineCode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _OutlineCode;
        }

        public java.util.List getOutlineCode() {
            return _getOutlineCode();
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_0 ++)), "OutlineCode");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_1 ++)), "OutlineCode");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx1 ++)), "OutlineCode");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000Icom.tapsterrock.mspdi.schema.ProjectType.Outlin"
+"eCodesType.OutlineCodeTypet\u0000+http://java.sun.com/jaxb/xjc/du"
+"mmy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"co"
+"m.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
+"atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
+"type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
+".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~"
+"\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
+"sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+",com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http"
+"://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u000bOutlineCo"
+"det\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.ms"
+"v.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/ms"
+"v/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramma"
+"r.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersi"
+"onL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000"
+"~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected boolean has_Enterprise;
            protected boolean _Enterprise;
            protected java.lang.String _FieldID;
            protected java.math.BigInteger _EnterpriseOutlineCodeAlias;
            protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType _Values;
            protected java.lang.String _FieldName;
            protected boolean has_OnlyTableValuesAllowed;
            protected boolean _OnlyTableValuesAllowed;
            protected boolean has_LeafOnly;
            protected boolean _LeafOnly;
            protected boolean has_ResourceSubstitutionEnabled;
            protected boolean _ResourceSubstitutionEnabled;
            protected boolean has_AllLevelsRequired;
            protected boolean _AllLevelsRequired;
            protected java.lang.String _PhoneticAlias;
            protected java.lang.String _Alias;
            protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType _Masks;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.class);
            }

            public boolean isEnterprise() {
                return _Enterprise;
            }

            public void setEnterprise(boolean value) {
                _Enterprise = value;
                has_Enterprise = true;
            }

            public java.lang.String getFieldID() {
                return _FieldID;
            }

            public void setFieldID(java.lang.String value) {
                _FieldID = value;
            }

            public java.math.BigInteger getEnterpriseOutlineCodeAlias() {
                return _EnterpriseOutlineCodeAlias;
            }

            public void setEnterpriseOutlineCodeAlias(java.math.BigInteger value) {
                _EnterpriseOutlineCodeAlias = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType getValues() {
                return _Values;
            }

            public void setValues(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType value) {
                _Values = value;
            }

            public java.lang.String getFieldName() {
                return _FieldName;
            }

            public void setFieldName(java.lang.String value) {
                _FieldName = value;
            }

            public boolean isOnlyTableValuesAllowed() {
                return _OnlyTableValuesAllowed;
            }

            public void setOnlyTableValuesAllowed(boolean value) {
                _OnlyTableValuesAllowed = value;
                has_OnlyTableValuesAllowed = true;
            }

            public boolean isLeafOnly() {
                return _LeafOnly;
            }

            public void setLeafOnly(boolean value) {
                _LeafOnly = value;
                has_LeafOnly = true;
            }

            public boolean isResourceSubstitutionEnabled() {
                return _ResourceSubstitutionEnabled;
            }

            public void setResourceSubstitutionEnabled(boolean value) {
                _ResourceSubstitutionEnabled = value;
                has_ResourceSubstitutionEnabled = true;
            }

            public boolean isAllLevelsRequired() {
                return _AllLevelsRequired;
            }

            public void setAllLevelsRequired(boolean value) {
                _AllLevelsRequired = value;
                has_AllLevelsRequired = true;
            }

            public java.lang.String getPhoneticAlias() {
                return _PhoneticAlias;
            }

            public void setPhoneticAlias(java.lang.String value) {
                _PhoneticAlias = value;
            }

            public java.lang.String getAlias() {
                return _Alias;
            }

            public void setAlias(java.lang.String value) {
                _Alias = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType getMasks() {
                return _Masks;
            }

            public void setMasks(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType value) {
                _Masks = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FieldID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldID), "FieldID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FieldName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldName");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FieldName), "FieldName");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Alias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Alias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Alias), "Alias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PhoneticAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhoneticAlias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _PhoneticAlias), "PhoneticAlias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Values!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Values");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Values), "Values");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Values), "Values");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Values), "Values");
                    context.endElement();
                }
                if (has_Enterprise) {
                    context.startElement("http://schemas.microsoft.com/project", "Enterprise");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Enterprise)), "Enterprise");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EnterpriseOutlineCodeAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EnterpriseOutlineCodeAlias");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EnterpriseOutlineCodeAlias)), "EnterpriseOutlineCodeAlias");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ResourceSubstitutionEnabled) {
                    context.startElement("http://schemas.microsoft.com/project", "ResourceSubstitutionEnabled");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ResourceSubstitutionEnabled)), "ResourceSubstitutionEnabled");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LeafOnly) {
                    context.startElement("http://schemas.microsoft.com/project", "LeafOnly");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LeafOnly)), "LeafOnly");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_AllLevelsRequired) {
                    context.startElement("http://schemas.microsoft.com/project", "AllLevelsRequired");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AllLevelsRequired)), "AllLevelsRequired");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_OnlyTableValuesAllowed) {
                    context.startElement("http://schemas.microsoft.com/project", "OnlyTableValuesAllowed");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OnlyTableValuesAllowed)), "OnlyTableValuesAllowed");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Masks!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Masks");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Masks), "Masks");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Masks), "Masks");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Masks), "Masks");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.gram"
+"mar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex"
+".ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001a"
+"ignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java"
+".lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv"
+".grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dat"
+"atype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;x"
+"q\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\r"
+"isAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xpq\u0000~\u0000%q\u0000~\u0000$sq\u0000~\u0000\u0010ppsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003q\u0000~"
+"\u0000\u0017psq\u0000~\u0000\u0019ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\'q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00003q\u0000~\u0000$sr\u0000#co"
+"m.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"!L\u0000\fnamespaceURIq\u0000~\u0000!xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0016\u0001q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007FieldIDt\u0000$http://schemas.microso"
+"ft.com/projectq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010p"
+"psq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\tFieldNameq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~"
+"\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009"
+"q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Aliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\rPhoneticAlias"
+"q\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u0010ppsr\u0000 "
+"com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.g"
+"rammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0017psq\u0000~\u0000.q\u0000~\u0000\u0017"
+"psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000>q\u0000~\u0000asr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=sq\u0000~\u00007t\u0000Tcom.tapsterrock.mspdi.schema.Pr"
+"ojectType.OutlineCodesType.OutlineCodeType.ValuesTypet\u0000+http"
+"://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq"
+"\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0006Valuesq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007booleanq\u0000~\u00005q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000qq\u0000~\u0000$sq\u0000~\u0000\u0010"
+"ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\nEnterpriseq\u0000~\u0000Aq\u0000~\u0000=sq"
+"\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsr\u0000$com.sun.msv.datatype."
+"xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Integ"
+"erDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatyp"
+"e/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007integerq\u0000~\u00005sr\u0000,com.sun.m"
+"sv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;co"
+"m.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c"
+">\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000}L\u0000\f"
+"concreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfac"
+"etNameq\u0000~\u0000!xq\u0000~\u0000 ppq\u0000~\u00005\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Numbe"
+"rType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u00005q\u0000~\u0000\u0086t\u0000\u000efractionDi"
+"gits\u0000\u0000\u0000\u0000q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000\u007fq\u0000~\u0000$sq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q"
+"\u0000~\u0000=sq\u0000~\u00007t\u0000\u001aEnterpriseOutlineCodeAliasq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000"
+"~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000nsq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq"
+"\u0000~\u00007t\u0000\u001bResourceSubstitutionEnabledq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000"
+"~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000nsq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t"
+"\u0000\bLeafOnlyq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000nsq\u0000~\u0000\u0010"
+"ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0011AllLevelsRequiredq\u0000~\u0000A"
+"q\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000nsq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq"
+"\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0016OnlyTableValuesAllowedq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000"
+"\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u0010ppsq\u0000~\u0000\\q\u0000~\u0000\u0017psq\u0000~\u0000.q"
+"\u0000~\u0000\u0017pq\u0000~\u0000aq\u0000~\u0000cq\u0000~\u0000=sq\u0000~\u00007t\u0000Scom.tapsterrock.mspdi.schema.Pr"
+"ojectType.OutlineCodesType.OutlineCodeType.MasksTypeq\u0000~\u0000fsq\u0000"
+"~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0005Masksq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rs"
+"treamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;"
+"xp\u0000\u0000\u00003\u0001pq\u0000~\u0000\u000bq\u0000~\u0000mq\u0000~\u0000\u0090q\u0000~\u0000\u0097q\u0000~\u0000\u009eq\u0000~\u0000\u00a5q\u0000~\u0000kq\u0000~\u0000\u008eq\u0000~\u0000\u0095q\u0000~\u0000\u009cq\u0000"
+"~\u0000\u00a3q\u0000~\u0000Wq\u0000~\u0000wq\u0000~\u0000\u00aaq\u0000~\u0000^q\u0000~\u0000\u00afq\u0000~\u0000\fq\u0000~\u0000\bq\u0000~\u0000yq\u0000~\u0000[q\u0000~\u0000\u00aeq\u0000~\u0000\rq\u0000"
+"~\u0000Yq\u0000~\u0000\u00acq\u0000~\u0000\u000fq\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000Dq\u0000~\u0000Kq\u0000~\u0000Rq\u0000"
+"~\u0000\u0011q\u0000~\u0000Bq\u0000~\u0000Iq\u0000~\u0000Pq\u0000~\u0000-q\u0000~\u0000Eq\u0000~\u0000Lq\u0000~\u0000Sq\u0000~\u0000gq\u0000~\u0000sq\u0000~\u0000\u008aq\u0000~\u0000\u0091q\u0000"
+"~\u0000\u0098q\u0000~\u0000\u009fq\u0000~\u0000\u00a6q\u0000~\u0000\u000eq\u0000~\u0000\u00b3x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class MasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Mask;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.class);
                }

                protected com.sun.xml.bind.util.ListImpl _getMask() {
                    if (_Mask == null) {
                        _Mask = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _Mask;
                }

                public java.util.List getMask() {
                    return _getMask();
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Mask == null)? 0 :_Mask.size());
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Mask");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Mask.get(idx_0 ++)), "Mask");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Mask.get(idx_1 ++)), "Mask");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Mask.get(idx1 ++)), "Mask");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Mask == null)? 0 :_Mask.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Mask == null)? 0 :_Mask.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000\\com.tapsterrock.mspdi.schema.ProjectType.Outlin"
+"eCodesType.OutlineCodeType.MasksType.MaskTypet\u0000+http://java."
+"sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.s"
+"un.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUri"
+"q\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/x"
+"sd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchema"
+"t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Col"
+"lapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/s"
+"q\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u0000\u0004Maskt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr"
+"\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000"
+"/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.su"
+"n.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000"
+"\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPoo"
+"l;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class MaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _Separator;
                    protected java.math.BigInteger _Type;
                    protected java.math.BigInteger _Length;
                    protected java.math.BigInteger _Level;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType.class);
                    }

                    public java.lang.String getSeparator() {
                        return _Separator;
                    }

                    public void setSeparator(java.lang.String value) {
                        _Separator = value;
                    }

                    public java.math.BigInteger getType() {
                        return _Type;
                    }

                    public void setType(java.math.BigInteger value) {
                        _Type = value;
                    }

                    public java.math.BigInteger getLength() {
                        return _Length;
                    }

                    public void setLength(java.math.BigInteger value) {
                        _Length = value;
                    }

                    public java.math.BigInteger getLevel() {
                        return _Level;
                    }

                    public void setLevel(java.math.BigInteger value) {
                        _Level = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_Level!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Level");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Level)), "Level");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Type!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Type");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Length!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Length");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Length)), "Length");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Separator!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Separator");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Separator), "Separator");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+co"
+"m.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseF"
+"acetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.dataty"
+"pe.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang"
+"/String;L\u0000\btypeNameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatyp"
+"e/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSch"
+"emat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionD"
+"igitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.Da"
+"taTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
+"atatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012ne"
+"edValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0017L\u0000\fconcreteTypet\u0000\'Lcom/sun/m"
+"sv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001bxq\u0000~\u0000\u001appq\u0000~\u0000\"\u0001"
+"\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001et\u0000\u0007decimalq\u0000~\u0000\"q\u0000~\u0000)t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.g"
+"rammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fname"
+"spaceURIq\u0000~\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~\u0000\u001esq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.Att"
+"ributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0011ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0005QNameq\u0000~\u0000\"q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u00006q\u0000~\u0000\u001esr\u0000#com.sun.msv.gr"
+"ammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespac"
+"eURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000"
+"\u000e\u0001q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0005Levelt\u0000$http://schemas.microsoft.com/project"
+"q\u0000~\u0000>sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsr\u0000)com.sun.msv.da"
+"tatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util"
+"/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrain"
+"tFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000Bpq\u0000~\u0000\"\u0000\u0000q\u0000~\u0000\u001dq\u0000~\u0000\u001dt\u0000\u000benumeration"
+"sr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun."
+"msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001bxr\u0000"
+"\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000Nt\u0000\u00012sq\u0000~\u0000Nt\u0000\u00010sq\u0000~\u0000N"
+"t\u0000\u00011xq\u0000~\u0000-sq\u0000~\u0000.t\u0000\u000finteger-derivedq\u0000~\u0000Bsq\u0000~\u0000\bppsq\u0000~\u00001q\u0000~\u0000\u000fpq"
+"\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004Typeq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000\bppsq\u0000~\u00001q\u0000~\u0000\u000fpq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0006Lengt"
+"hq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsr\u0000#com.sun."
+"msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001et\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!\u0001q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000kq\u0000~\u0000\u001esq\u0000~\u0000\bppsq"
+"\u0000~\u00001q\u0000~\u0000\u000fpq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\tSeparatorq\u0000~\u0000Bq\u0000~\u0000>sr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
+"amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
+"\u0000\u0000\u000f\u0001pq\u0000~\u0000\tq\u0000~\u0000^q\u0000~\u0000Cq\u0000~\u0000\u0010q\u0000~\u0000`q\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000gq\u0000~\u0000eq\u0000~\u00000"
+"q\u0000~\u0000Zq\u0000~\u0000aq\u0000~\u0000Eq\u0000~\u0000ox"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  6 :
                                        if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  3 :
                                        if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                    case  9 :
                                        if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 10;
                                            return ;
                                        }
                                        state = 12;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  8 :
                                        if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  5 :
                                        if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  12 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  11 :
                                        if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  12 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  1 :
                                            eatText1(value);
                                            state = 2;
                                            return ;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  10 :
                                            eatText2(value);
                                            state = 11;
                                            return ;
                                        case  7 :
                                            eatText3(value);
                                            state = 8;
                                            return ;
                                        case  12 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  4 :
                                            eatText4(value);
                                            state = 5;
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  9 :
                                            state = 12;
                                            continue outer;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Level = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Separator = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Length = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                case  0 :
                                    if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  2 :
                                    if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  1 :
                                    _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _getMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, value)));
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                if (("Enterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  21 :
                                if (("ResourceSubstitutionEnabled" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  18 :
                                if (("EnterpriseOutlineCodeAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  27 :
                                if (("AllLevelsRequired" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  30 :
                                if (("OnlyTableValuesAllowed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  12 :
                                if (("Values" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  34 :
                                if (("Mask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  36 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  13 :
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  6 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  3 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  9 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  33 :
                                if (("Masks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  0 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                state = 3;
                                continue outer;
                            case  24 :
                                if (("LeafOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  35 :
                                if (("Masks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  23 :
                                if (("ResourceSubstitutionEnabled" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  14 :
                                if (("Values" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  20 :
                                if (("EnterpriseOutlineCodeAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  26 :
                                if (("LeafOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  34 :
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname));
                                return ;
                            case  5 :
                                if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  17 :
                                if (("Enterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  36 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  29 :
                                if (("AllLevelsRequired" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  13 :
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  32 :
                                if (("OnlyTableValuesAllowed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  8 :
                                if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  34 :
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  13 :
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                state = 18;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  34 :
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  13 :
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, ___uri, ___local, ___qname));
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  16 :
                                    eatText1(value);
                                    state = 17;
                                    return ;
                                case  19 :
                                    eatText2(value);
                                    state = 20;
                                    return ;
                                case  10 :
                                    eatText3(value);
                                    state = 11;
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  25 :
                                    eatText4(value);
                                    state = 26;
                                    return ;
                                case  4 :
                                    eatText5(value);
                                    state = 5;
                                    return ;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  34 :
                                    _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 35, value));
                                    return ;
                                case  36 :
                                    revertToParentFromText(value);
                                    return ;
                                case  13 :
                                    _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 14, value));
                                    return ;
                                case  28 :
                                    eatText6(value);
                                    state = 29;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  7 :
                                    eatText7(value);
                                    state = 8;
                                    return ;
                                case  1 :
                                    eatText8(value);
                                    state = 2;
                                    return ;
                                case  22 :
                                    eatText9(value);
                                    state = 23;
                                    return ;
                                case  31 :
                                    eatText10(value);
                                    state = 32;
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Enterprise = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Enterprise = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EnterpriseOutlineCodeAlias = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PhoneticAlias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LeafOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LeafOnly = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldName = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AllLevelsRequired = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_AllLevelsRequired = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Alias = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FieldID = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResourceSubstitutionEnabled = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ResourceSubstitutionEnabled = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OnlyTableValuesAllowed = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_OnlyTableValuesAllowed = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

            public static class ValuesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Value;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.class);
                }

                protected com.sun.xml.bind.util.ListImpl _getValue() {
                    if (_Value == null) {
                        _Value = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _Value;
                }

                public java.util.List getValue() {
                    return _getValue();
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Value == null)? 0 :_Value.size());
                    while (idx1 != len1) {
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Value == null)? 0 :_Value.size());
                    while (idx1 != len1) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Value == null)? 0 :_Value.size());
                    while (idx1 != len1) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Value.get(idx1 ++)), "Value");
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar."
+"AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~"
+"\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0014sr\u0000 com.sun.msv.grammar.AnyNameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0015q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001cxq\u0000~\u0000\u0017t\u0000Zcom.tapsterrock.mspdi.schema.ProjectType.OutlineCo"
+"desType.OutlineCodeType.ValuesType.Valuet\u0000+http://java.sun.c"
+"om/jaxb/xjc/dummy-elementsq\u0000~\u0000\u001asr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$L"
+"com/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0004\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\u0010q\u0000~\u0000\bq\u0000"
+"~\u0000\u000fx"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "--");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  0 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getValue().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    state = 1;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 1;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 1;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  1 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  0 :
                                    state = 1;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  1 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  0 :
                                        state = 1;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

                public static class ValueImpl
                    extends com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl
                    implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value.class);
                    }

                    public java.lang.String ____jaxb_ri____getNamespaceURI() {
                        return "http://schemas.microsoft.com/project";
                    }

                    public java.lang.String ____jaxb_ri____getLocalName() {
                        return "Value";
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        super.serializeURIs(context);
                        context.endNamespaceDecls();
                        super.serializeAttributes(context);
                        context.endAttributes();
                        super.serializeBody(context);
                        context.endElement();
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000!com.sun.msv.g"
+"rammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsr\u0000\u001dc"
+"om.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0000sr\u0000\u0011jav"
+"a.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007ppsr\u0000\u001bcom.sun.ms"
+"v.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Da"
+"tatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;"
+"xq\u0000~\u0000\u0004ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\n"
+"baseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava"
+"/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"
+"tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.Frac"
+"tionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.x"
+"sd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixed"
+"Z\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u001aL\u0000\fconcreteTypet\u0000\'Lcom/"
+"sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001exq\u0000~\u0000\u001dppq"
+"\u0000~\u0000%\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u001bq\u0000~\u0000!t\u0000\u0007decimalq\u0000~\u0000%q\u0000~\u0000,t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun."
+"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004pps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000"
+"\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000\"q\u0000~\u0000!sq\u0000~\u0000\u000eppsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q"
+"\u0000~\u0000\u0012psq\u0000~\u0000\u0014ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0005QNameq\u0000~\u0000%q\u0000~\u00000sq\u0000~\u00001q\u0000~\u00009q\u0000~\u0000!sr\u0000#com.sun.m"
+"sv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001exr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004"
+"sq\u0000~\u0000\u0011\u0001q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0007ValueIDt\u0000$http://schemas.microsoft.com/"
+"projectq\u0000~\u0000Asq\u0000~\u0000\u000eppsq\u0000~\u0000\u0000q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0007ppq\u0000~\u0000\u0017sq\u0000~\u0000\u000eppsq\u0000~\u00004"
+"q\u0000~\u0000\u0012pq\u0000~\u00006q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\rParentValueIDq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u000ep"
+"psq\u0000~\u0000\u0000q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0014ppsr\u0000#com.sun.msv.datatype.xsd.S"
+"tringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u001bq\u0000~\u0000!t\u0000\u0006stringsr\u00005"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000$\u0001q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000Sq\u0000~\u0000!sq\u0000~\u0000\u000eppsq\u0000~\u00004q\u0000~\u0000\u0012pq\u0000~\u00006q\u0000~"
+"\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0005Valueq\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u000eppsq\u0000~\u0000\u0000q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0007pp"
+"q\u0000~\u0000Psq\u0000~\u0000\u000eppsq\u0000~\u00004q\u0000~\u0000\u0012pq\u0000~\u00006q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bDescription"
+"q\u0000~\u0000Eq\u0000~\u0000Asq\u0000~\u0000\u000eppsq\u0000~\u00004q\u0000~\u0000\u0012pq\u0000~\u00006q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0005Valueq"
+"\u0000~\u0000Esr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000\u0011\u0001pq\u0000~\u0000\rq\u0000~\u0000\u000fq\u0000~\u0000Fq\u0000~\u0000\u000bq\u0000~\u0000\u0013q\u0000~\u0000Hq\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000"
+"Oq\u0000~\u0000]q\u0000~\u0000Mq\u0000~\u0000[q\u0000~\u00003q\u0000~\u0000Iq\u0000~\u0000Wq\u0000~\u0000^q\u0000~\u0000bx"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "----");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        if (("ParentValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                            return ;
                                        }
                                        spawnHandlerFromEnterElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  3 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  0 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, false);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        spawnHandlerFromLeaveElement((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  2 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        spawnHandlerFromEnterAttribute((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  1 :
                                        spawnHandlerFromLeaveAttribute((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  1 :
                                            spawnHandlerFromText((((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl)com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this).new Unmarshaller(context)), 2, value);
                                            return ;
                                        case  3 :
                                            revertToParentFromText(value);
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                    }

                }

                public static class ValueTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.lang.String _Value;
                    protected java.lang.String _Description;
                    protected java.math.BigInteger _ValueID;
                    protected java.math.BigInteger _ParentValueID;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType.class);
                    }

                    public java.lang.String getValue() {
                        return _Value;
                    }

                    public void setValue(java.lang.String value) {
                        _Value = value;
                    }

                    public java.lang.String getDescription() {
                        return _Description;
                    }

                    public void setDescription(java.lang.String value) {
                        _Description = value;
                    }

                    public java.math.BigInteger getValueID() {
                        return _ValueID;
                    }

                    public void setValueID(java.math.BigInteger value) {
                        _ValueID = value;
                    }

                    public java.math.BigInteger getParentValueID() {
                        return _ParentValueID;
                    }

                    public void setParentValueID(java.math.BigInteger value) {
                        _ParentValueID = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_ValueID!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "ValueID");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_ParentValueID!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "ParentValueID");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ParentValueID)), "ParentValueID");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Value!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Value");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Value), "Value");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_Description!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Description");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(((java.lang.String) _Description), "Description");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/g"
+"rammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expres"
+"sion\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L"
+"\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.gramma"
+"r.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.E"
+"lementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/"
+"NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aig"
+"noreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.l"
+"ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001fcom.sun.msv.grammar.S"
+"equenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.s"
+"un.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.da"
+"tatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom"
+"/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatyp"
+"e.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.x"
+"sd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDat"
+"atypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\bt"
+"ypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteS"
+"paceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007intege"
+"rsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLe"
+"xicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd."
+"DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheck"
+"FlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/"
+"xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001bppq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun"
+".msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimal"
+"q\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expre"
+"ssion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.ut"
+"il.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsq\u0000~\u0000\u0012ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005Q"
+"Nameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Simple"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Ex"
+"pression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000?sq\u0000~\u0000"
+"9t\u0000\u0007ValueIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000?sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010ppq\u0000~\u0000\u0015sq\u0000~\u0000\bppsq\u0000~\u00002q\u0000~\u0000\u000fpq\u0000~\u00004q\u0000~\u0000;q"
+"\u0000~\u0000?sq\u0000~\u00009t\u0000\rParentValueIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000"
+"~\u0000\u0010ppsq\u0000~\u0000\u0012ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.s"
+"q\u0000~\u0000/q\u0000~\u0000Qq\u0000~\u0000\u001fsq\u0000~\u0000\bppsq\u0000~\u00002q\u0000~\u0000\u000fpq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0005V"
+"alueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010ppq\u0000~\u0000Nsq\u0000~\u0000\bppsq\u0000~"
+"\u00002q\u0000~\u0000\u000fpq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000bDescriptionq\u0000~\u0000Cq\u0000~\u0000?sr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
+"amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
+"\u0000\u0000\u000f\u0001pq\u0000~\u0000\u0007q\u0000~\u0000\tq\u0000~\u0000Dq\u0000~\u0000\u0005q\u0000~\u0000\u0011q\u0000~\u0000Fq\u0000~\u0000\u0006q\u0000~\u0000Mq\u0000~\u0000[q\u0000~\u0000Kq\u0000~\u0000Y"
+"q\u0000~\u00001q\u0000~\u0000Gq\u0000~\u0000Uq\u0000~\u0000\\x"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "---------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 5;
                                            return ;
                                        }
                                        if (("ParentValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 3;
                                            return ;
                                        }
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  8 :
                                        if (("Description" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  4 :
                                        if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  0 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  6 :
                                        if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if (("ParentValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  5 :
                                            eatText1(value);
                                            state = 6;
                                            return ;
                                        case  3 :
                                            eatText2(value);
                                            state = 4;
                                            return ;
                                        case  7 :
                                            eatText3(value);
                                            state = 8;
                                            return ;
                                        case  0 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  1 :
                                            eatText4(value);
                                            state = 2;
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Value = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _Description = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _ParentValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("FieldName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Alias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("PhoneticAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Values" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Enterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("EnterpriseOutlineCodeAlias" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("ResourceSubstitutionEnabled" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("LeafOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("AllLevelsRequired" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("OnlyTableValuesAllowed" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            if (("Masks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  1 :
                            _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  1 :
                            _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  1 :
                            _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, ___qname)));
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  1 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, value)));
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class ResourcesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Resource;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getResource() {
            if (_Resource == null) {
                _Resource = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Resource;
        }

        public java.util.List getResource() {
            return _getResource();
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Resource == null)? 0 :_Resource.size());
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Resource");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Resource.get(idx_0 ++)), "Resource");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Resource.get(idx_1 ++)), "Resource");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Resource.get(idx1 ++)), "Resource");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Resource == null)? 0 :_Resource.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Resource == null)? 0 :_Resource.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000Ccom.tapsterrock.mspdi.schema.ProjectType.Resour"
+"cesType.ResourceTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-el"
+"ementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000"
+"\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatyp"
+"e.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.x"
+"sd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDat"
+"atypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nw"
+"hiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xp"
+"t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com."
+"sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www"
+".w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\bResourcet\u0000$http"
+"://schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar"
+".ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar"
+"/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Express"
+"ionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pare"
+"ntt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0012q"
+"\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ResourceTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.lang.String _EmailAddress;
            protected java.math.BigInteger _StandardRateFormat;
            protected java.lang.String _Phonetics;
            protected java.lang.String _NTAccount;
            protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType _AvailabilityPeriods;
            protected boolean has_IsEnterprise;
            protected boolean _IsEnterprise;
            protected java.lang.String _Group;
            protected java.lang.String _Work;
            protected java.util.Calendar _AvailableFrom;
            protected java.math.BigInteger _CalendarUID;
            protected java.math.BigInteger _WorkGroup;
            protected java.lang.String _HyperlinkSubAddress;
            protected java.lang.String _RemainingOvertimeWork;
            protected java.lang.String _ActualWorkProtected;
            protected java.lang.String _RemainingWork;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected java.lang.String _HyperlinkAddress;
            protected boolean has_MaxUnits;
            protected float _MaxUnits;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected java.math.BigDecimal _ActualCost;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected boolean has_IsInactive;
            protected boolean _IsInactive;
            protected java.lang.String _ActualOvertimeWorkProtected;
            protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType _Rates;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _RemainingCost;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected java.lang.String _ActualOvertimeWork;
            protected boolean has_IsGeneric;
            protected boolean _IsGeneric;
            protected com.sun.xml.bind.util.ListImpl _Baseline;
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.lang.String _Hyperlink;
            protected java.math.BigInteger _ID;
            protected boolean has_CanLevel;
            protected boolean _CanLevel;
            protected java.math.BigInteger _Type;
            protected boolean has_IsNull;
            protected boolean _IsNull;
            protected com.sun.xml.bind.util.ListImpl _TimephasedData;
            protected boolean has_CostVariance;
            protected float _CostVariance;
            protected boolean has_PeakUnits;
            protected float _PeakUnits;
            protected java.math.BigDecimal _CostPerUse;
            protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute;
            protected java.math.BigInteger _AccrueAt;
            protected java.math.BigInteger _OvertimeRateFormat;
            protected java.lang.String _Code;
            protected java.lang.String _RegularWork;
            protected java.lang.String _Name;
            protected java.lang.String _OvertimeWork;
            protected java.lang.String _Initials;
            protected java.math.BigDecimal _StandardRate;
            protected boolean has_SV;
            protected float _SV;
            protected java.lang.String _ActiveDirectoryGUID;
            protected java.math.BigInteger _BookingType;
            protected java.lang.String _Notes;
            protected java.util.Calendar _Finish;
            protected com.sun.xml.bind.util.ListImpl _OutlineCode;
            protected java.lang.String _ActualWork;
            protected java.math.BigInteger _UID;
            protected boolean has_OverAllocated;
            protected boolean _OverAllocated;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.lang.String _MaterialLabel;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.util.Calendar _AvailableTo;
            protected java.math.BigDecimal _OvertimeRate;
            protected java.util.Calendar _CreationDate;
            protected boolean has_CV;
            protected float _CV;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.class);
            }

            public java.lang.String getEmailAddress() {
                return _EmailAddress;
            }

            public void setEmailAddress(java.lang.String value) {
                _EmailAddress = value;
            }

            public java.math.BigInteger getStandardRateFormat() {
                return _StandardRateFormat;
            }

            public void setStandardRateFormat(java.math.BigInteger value) {
                _StandardRateFormat = value;
            }

            public java.lang.String getPhonetics() {
                return _Phonetics;
            }

            public void setPhonetics(java.lang.String value) {
                _Phonetics = value;
            }

            public java.lang.String getNTAccount() {
                return _NTAccount;
            }

            public void setNTAccount(java.lang.String value) {
                _NTAccount = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType getAvailabilityPeriods() {
                return _AvailabilityPeriods;
            }

            public void setAvailabilityPeriods(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType value) {
                _AvailabilityPeriods = value;
            }

            public boolean isIsEnterprise() {
                return _IsEnterprise;
            }

            public void setIsEnterprise(boolean value) {
                _IsEnterprise = value;
                has_IsEnterprise = true;
            }

            public java.lang.String getGroup() {
                return _Group;
            }

            public void setGroup(java.lang.String value) {
                _Group = value;
            }

            public java.lang.String getWork() {
                return _Work;
            }

            public void setWork(java.lang.String value) {
                _Work = value;
            }

            public java.util.Calendar getAvailableFrom() {
                return _AvailableFrom;
            }

            public void setAvailableFrom(java.util.Calendar value) {
                _AvailableFrom = value;
            }

            public java.math.BigInteger getCalendarUID() {
                return _CalendarUID;
            }

            public void setCalendarUID(java.math.BigInteger value) {
                _CalendarUID = value;
            }

            public java.math.BigInteger getWorkGroup() {
                return _WorkGroup;
            }

            public void setWorkGroup(java.math.BigInteger value) {
                _WorkGroup = value;
            }

            public java.lang.String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(java.lang.String value) {
                _HyperlinkSubAddress = value;
            }

            public java.lang.String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(java.lang.String value) {
                _RemainingOvertimeWork = value;
            }

            public java.lang.String getActualWorkProtected() {
                return _ActualWorkProtected;
            }

            public void setActualWorkProtected(java.lang.String value) {
                _ActualWorkProtected = value;
            }

            public java.lang.String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(java.lang.String value) {
                _RemainingWork = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public java.lang.String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(java.lang.String value) {
                _HyperlinkAddress = value;
            }

            public float getMaxUnits() {
                return _MaxUnits;
            }

            public void setMaxUnits(float value) {
                _MaxUnits = value;
                has_MaxUnits = true;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public boolean isIsInactive() {
                return _IsInactive;
            }

            public void setIsInactive(boolean value) {
                _IsInactive = value;
                has_IsInactive = true;
            }

            public java.lang.String getActualOvertimeWorkProtected() {
                return _ActualOvertimeWorkProtected;
            }

            public void setActualOvertimeWorkProtected(java.lang.String value) {
                _ActualOvertimeWorkProtected = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType getRates() {
                return _Rates;
            }

            public void setRates(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType value) {
                _Rates = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public java.lang.String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(java.lang.String value) {
                _ActualOvertimeWork = value;
            }

            public boolean isIsGeneric() {
                return _IsGeneric;
            }

            public void setIsGeneric(boolean value) {
                _IsGeneric = value;
                has_IsGeneric = true;
            }

            protected com.sun.xml.bind.util.ListImpl _getBaseline() {
                if (_Baseline == null) {
                    _Baseline = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _Baseline;
            }

            public java.util.List getBaseline() {
                return _getBaseline();
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.lang.String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(java.lang.String value) {
                _Hyperlink = value;
            }

            public java.math.BigInteger getID() {
                return _ID;
            }

            public void setID(java.math.BigInteger value) {
                _ID = value;
            }

            public boolean isCanLevel() {
                return _CanLevel;
            }

            public void setCanLevel(boolean value) {
                _CanLevel = value;
                has_CanLevel = true;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public boolean isIsNull() {
                return _IsNull;
            }

            public void setIsNull(boolean value) {
                _IsNull = value;
                has_IsNull = true;
            }

            protected com.sun.xml.bind.util.ListImpl _getTimephasedData() {
                if (_TimephasedData == null) {
                    _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _TimephasedData;
            }

            public java.util.List getTimephasedData() {
                return _getTimephasedData();
            }

            public float getCostVariance() {
                return _CostVariance;
            }

            public void setCostVariance(float value) {
                _CostVariance = value;
                has_CostVariance = true;
            }

            public float getPeakUnits() {
                return _PeakUnits;
            }

            public void setPeakUnits(float value) {
                _PeakUnits = value;
                has_PeakUnits = true;
            }

            public java.math.BigDecimal getCostPerUse() {
                return _CostPerUse;
            }

            public void setCostPerUse(java.math.BigDecimal value) {
                _CostPerUse = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getExtendedAttribute() {
                if (_ExtendedAttribute == null) {
                    _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _ExtendedAttribute;
            }

            public java.util.List getExtendedAttribute() {
                return _getExtendedAttribute();
            }

            public java.math.BigInteger getAccrueAt() {
                return _AccrueAt;
            }

            public void setAccrueAt(java.math.BigInteger value) {
                _AccrueAt = value;
            }

            public java.math.BigInteger getOvertimeRateFormat() {
                return _OvertimeRateFormat;
            }

            public void setOvertimeRateFormat(java.math.BigInteger value) {
                _OvertimeRateFormat = value;
            }

            public java.lang.String getCode() {
                return _Code;
            }

            public void setCode(java.lang.String value) {
                _Code = value;
            }

            public java.lang.String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(java.lang.String value) {
                _RegularWork = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.lang.String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(java.lang.String value) {
                _OvertimeWork = value;
            }

            public java.lang.String getInitials() {
                return _Initials;
            }

            public void setInitials(java.lang.String value) {
                _Initials = value;
            }

            public java.math.BigDecimal getStandardRate() {
                return _StandardRate;
            }

            public void setStandardRate(java.math.BigDecimal value) {
                _StandardRate = value;
            }

            public float getSV() {
                return _SV;
            }

            public void setSV(float value) {
                _SV = value;
                has_SV = true;
            }

            public java.lang.String getActiveDirectoryGUID() {
                return _ActiveDirectoryGUID;
            }

            public void setActiveDirectoryGUID(java.lang.String value) {
                _ActiveDirectoryGUID = value;
            }

            public java.math.BigInteger getBookingType() {
                return _BookingType;
            }

            public void setBookingType(java.math.BigInteger value) {
                _BookingType = value;
            }

            public java.lang.String getNotes() {
                return _Notes;
            }

            public void setNotes(java.lang.String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getOutlineCode() {
                if (_OutlineCode == null) {
                    _OutlineCode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _OutlineCode;
            }

            public java.util.List getOutlineCode() {
                return _getOutlineCode();
            }

            public java.lang.String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(java.lang.String value) {
                _ActualWork = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public boolean isOverAllocated() {
                return _OverAllocated;
            }

            public void setOverAllocated(boolean value) {
                _OverAllocated = value;
                has_OverAllocated = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.lang.String getMaterialLabel() {
                return _MaterialLabel;
            }

            public void setMaterialLabel(java.lang.String value) {
                _MaterialLabel = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.util.Calendar getAvailableTo() {
                return _AvailableTo;
            }

            public void setAvailableTo(java.util.Calendar value) {
                _AvailableTo = value;
            }

            public java.math.BigDecimal getOvertimeRate() {
                return _OvertimeRate;
            }

            public void setOvertimeRate(java.math.BigDecimal value) {
                _OvertimeRate = value;
            }

            public java.util.Calendar getCreationDate() {
                return _CreationDate;
            }

            public void setCreationDate(java.util.Calendar value) {
                _CreationDate = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx32 = 0;
                final int len32 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx39 = 0;
                final int len39 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx43 = 0;
                final int len43 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                int idx57 = 0;
                final int len57 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_ID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ID)), "ID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Name), "Name");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Type!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Type");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsNull) {
                    context.startElement("http://schemas.microsoft.com/project", "IsNull");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsNull)), "IsNull");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Initials!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Initials");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Initials), "Initials");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Phonetics!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Phonetics");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Phonetics), "Phonetics");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_NTAccount!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "NTAccount");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _NTAccount), "NTAccount");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_MaterialLabel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "MaterialLabel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _MaterialLabel), "MaterialLabel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Code!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Code");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Code), "Code");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Group!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Group");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Group), "Group");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WorkGroup!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkGroup");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _WorkGroup)), "WorkGroup");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EmailAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EmailAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _EmailAddress), "EmailAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Hyperlink), "Hyperlink");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkAddress), "HyperlinkAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkSubAddress), "HyperlinkSubAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_MaxUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "MaxUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _MaxUnits)), "MaxUnits");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_PeakUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "PeakUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _PeakUnits)), "PeakUnits");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_OverAllocated) {
                    context.startElement("http://schemas.microsoft.com/project", "OverAllocated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OverAllocated)), "OverAllocated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_AvailableFrom!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailableFrom");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableFrom), null), "AvailableFrom");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_AvailableTo!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailableTo");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableTo), null), "AvailableTo");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CanLevel) {
                    context.startElement("http://schemas.microsoft.com/project", "CanLevel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CanLevel)), "CanLevel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_AccrueAt!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AccrueAt");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _AccrueAt)), "AccrueAt");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Work), "Work");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RegularWork), "RegularWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OvertimeWork), "OvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWork), "ActualWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingWork), "RemainingWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWork), "ActualOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingOvertimeWork), "RemainingOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentWorkComplete)), "PercentWorkComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StandardRate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StandardRate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _StandardRate)), "StandardRate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StandardRateFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StandardRateFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StandardRateFormat)), "StandardRateFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeRate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeRate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeRate)), "OvertimeRate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeRateFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeRateFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _OvertimeRateFormat)), "OvertimeRateFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeCost)), "OvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CostPerUse!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CostPerUse");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _CostPerUse)), "CostPerUse");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualCost)), "ActualCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualOvertimeCost)), "ActualOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingCost)), "RemainingCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingOvertimeCost)), "RemainingOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _WorkVariance)), "WorkVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CostVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "CostVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CostVariance)), "CostVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_SV) {
                    context.startElement("http://schemas.microsoft.com/project", "SV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _SV)), "SV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CV)), "CV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _ACWP)), "ACWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalendarUID)), "CalendarUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Notes), "Notes");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsGeneric) {
                    context.startElement("http://schemas.microsoft.com/project", "IsGeneric");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsGeneric)), "IsGeneric");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsInactive) {
                    context.startElement("http://schemas.microsoft.com/project", "IsInactive");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsInactive)), "IsInactive");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsEnterprise) {
                    context.startElement("http://schemas.microsoft.com/project", "IsEnterprise");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsEnterprise)), "IsEnterprise");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_BookingType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BookingType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BookingType)), "BookingType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWorkProtected), "ActualWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWorkProtected), "ActualOvertimeWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActiveDirectoryGUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActiveDirectoryGUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActiveDirectoryGUID), "ActiveDirectoryGUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CreationDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreationDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null), "CreationDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx43 != len43) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_122 = idx43;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_122 ++)), "ExtendedAttribute");
                    context.endNamespaceDecls();
                    int idx_123 = idx43;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_123 ++)), "ExtendedAttribute");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx43 ++)), "ExtendedAttribute");
                    context.endElement();
                }
                while (idx32 != len32) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_124 = idx32;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_124 ++)), "Baseline");
                    context.endNamespaceDecls();
                    int idx_125 = idx32;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_125 ++)), "Baseline");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx32 ++)), "Baseline");
                    context.endElement();
                }
                while (idx57 != len57) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                    int idx_126 = idx57;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_126 ++)), "OutlineCode");
                    context.endNamespaceDecls();
                    int idx_127 = idx57;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_127 ++)), "OutlineCode");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx57 ++)), "OutlineCode");
                    context.endElement();
                }
                if (_AvailabilityPeriods!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailabilityPeriods");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriods), "AvailabilityPeriods");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriods), "AvailabilityPeriods");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriods), "AvailabilityPeriods");
                    context.endElement();
                }
                if (_Rates!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Rates");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Rates), "Rates");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Rates), "Rates");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Rates), "Rates");
                    context.endElement();
                }
                while (idx39 != len39) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_132 = idx39;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_132 ++)), "TimephasedData");
                    context.endNamespaceDecls();
                    int idx_133 = idx39;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_133 ++)), "TimephasedData");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx39 ++)), "TimephasedData");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx32 = 0;
                final int len32 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx39 = 0;
                final int len39 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx43 = 0;
                final int len43 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                int idx57 = 0;
                final int len57 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
                while (idx43 != len43) {
                    idx43 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
                while (idx57 != len57) {
                    idx57 += 1;
                }
                while (idx39 != len39) {
                    idx39 += 1;
                }
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx32 = 0;
                final int len32 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx39 = 0;
                final int len39 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx43 = 0;
                final int len43 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                int idx57 = 0;
                final int len57 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
                while (idx43 != len43) {
                    idx43 += 1;
                }
                while (idx32 != len32) {
                    idx32 += 1;
                }
                while (idx57 != len57) {
                    idx57 += 1;
                }
                while (idx39 != len39) {
                    idx39 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com"
+".sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv."
+"datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lc"
+"om/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datat"
+"ype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype"
+".xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSD"
+"atatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000"
+"\btypeNameq\u0000~\u0000VL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whit"
+"eSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007inte"
+"gersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWith"
+"LexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xs"
+"d.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueChe"
+"ckFlagL\u0000\bbaseTypeq\u0000~\u0000RL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatyp"
+"e/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000Vxq\u0000~\u0000Uppq\u0000~\u0000]\u0001\u0000sr\u0000#com.s"
+"un.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0007decim"
+"alq\u0000~\u0000]q\u0000~\u0000dt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Exp"
+"ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv."
+"util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000VL\u0000\fnamespaceURIq\u0000"
+"~\u0000Vxpq\u0000~\u0000Zq\u0000~\u0000Ysr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Hxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000psq\u0000~\u0000Lppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0005QNameq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000tq\u0000~\u0000Ysr\u0000#co"
+"m.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"VL\u0000\fnamespaceURIq\u0000~\u0000Vxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000o\u0001q\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0003UIDt\u0000$http://schemas.microsoft.c"
+"om/projectsq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000kppsq\u0000~\u0000mq\u0000"
+"~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0002IDq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataType"
+"WithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000`q\u0000~\u0000\u0080psr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\\\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAl"
+"waysValidxq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0006stringq\u0000~\u0000\u0090\u0001q\u0000~\u0000\u0092t\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000"
+"hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq"
+"\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Nameq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000Lppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000\u008dq\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xt\u0000\u000be"
+"numerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sr"
+"\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005val"
+"ueq\u0000~\u0000Vxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010sq\u0000~\u0000\u00a5t\u0000\u00011xq\u0000~\u0000h"
+"sq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq"
+"\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Typeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000Lppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"Sq\u0000~\u0000Yt\u0000\u0007booleanq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000\u00b7q\u0000~\u0000Ysq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000"
+"ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0006IsNullq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000"
+"pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~"
+"\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000x"
+"q\u0000~\u0000|sq\u0000~\u0000vt\u0000\bInitialsq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000"
+"\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000"
+"vt\u0000\tPhoneticsq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lpp"
+"sq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-d"
+"erivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tNTAcc"
+"ountq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000~"
+"\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~"
+"\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rMaterialLabelq"
+"\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000"
+"~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000"
+"~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Codeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000"
+"kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000"
+"\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~"
+"\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0005Groupq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000"
+"pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u009fq\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a2sq\u0000~\u0000\u00a3w"
+"\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sq\u0000~\u0000\u00a5t\u0000\u00013sq\u0000~\u0000\u00a5t\u0000\u00012sq\u0000~\u0000\u00a5q\u0000~\u0000\u00a8sq\u0000~\u0000\u00a5t\u0000\u00011xq\u0000~\u0000h"
+"sq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq"
+"\u0000~\u0000|sq\u0000~\u0000vt\u0000\tWorkGroupq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000"
+"\u000estring-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000"
+"vt\u0000\fEmailAddressq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"Lppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estrin"
+"g-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tHy"
+"perlinkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u008c"
+"q\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derived"
+"q\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0010HyperlinkAd"
+"dressq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u008cq\u0000"
+"~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring-derivedq\u0000"
+"~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013HyperlinkSubA"
+"ddressq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsr\u0000\"com"
+".sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.da"
+"tatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\u0005floatq"
+"\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0001Eq\u0000~\u0000Ysq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|"
+"sq\u0000~\u0000vt\u0000\bMaxUnitsq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001"
+"Asq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tPeakUnitsq\u0000~\u0000\u0080q"
+"\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00b4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000"
+"~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rOverAllocatedq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq"
+"\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsr\u0000%com.sun.msv.datatype.xsd.DateTimeT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014"
+"W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\bdateTimeq\u0000~\u0000]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0001`q\u0000~\u0000Ysq"
+"\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rAvailableFromq\u0000~\u0000\u0080"
+"q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\\sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq"
+"\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bAvailableToq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000"
+"~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\\sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt"
+"\u0000\u0005Startq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\\sq\u0000~\u0000kpps"
+"q\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0006Finishq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kpps"
+"q\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00b4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|"
+"sq\u0000~\u0000vt\u0000\bCanLevelq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000Lppsq\u0000~\u0000\u009fq\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a2sq\u0000~\u0000\u00a3w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq"
+"\u0000~\u0000\u00a5t\u0000\u00013sq\u0000~\u0000\u00a5t\u0000\u00012sq\u0000~\u0000\u00a5t\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000"
+"~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\bAccrueAtq\u0000~\u0000\u0080"
+"q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsr\u0000%com.sun.msv.da"
+"tatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sq\u0000~\u0000Yt\u0000\bdurationq\u0000~\u0000"
+"]q\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0001\u009aq\u0000~\u0000Ysq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000"
+"~\u0000vt\u0000\u0004Workq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000k"
+"ppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bRegularWorkq\u0000~\u0000\u0080q\u0000~\u0000|s"
+"q\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000"
+"~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fOvertimeWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\nAct"
+"ualWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000kpps"
+"q\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rRemainingWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq"
+"\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~"
+"\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012ActualOvertimeWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000"
+"~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt"
+"\u0000\u0015RemainingOvertimeWorkq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000Osq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013PercentWo"
+"rkCompleteq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppq\u0000~"
+"\u0000dq\u0000~\u0000hsq\u0000~\u0000iq\u0000~\u0000eq\u0000~\u0000Ysq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq"
+"\u0000~\u0000vt\u0000\fStandardRateq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000Lppsq\u0000~\u0000\u009fq\u0000~\u0000\u0080pq\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a2sq\u0000~\u0000\u00a3w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0007"
+"sq\u0000~\u0000\u00a5t\u0000\u00013sq\u0000~\u0000\u00a5t\u0000\u00015sq\u0000~\u0000\u00a5t\u0000\u00017sq\u0000~\u0000\u00a5t\u0000\u00012sq\u0000~\u0000\u00a5t\u0000\u00014sq\u0000~\u0000\u00a5t\u0000\u00018"
+"sq\u0000~\u0000\u00a5t\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq"
+"\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012StandardRateFormatq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000"
+"~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000"
+"xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004Costq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0001\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fOvertimeRateq"
+"\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u009fq\u0000~\u0000\u0080pq\u0000"
+"~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a2sq\u0000~\u0000\u00a3w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000\u00a5t\u0000\u00013sq\u0000~\u0000\u00a5t\u0000\u00015"
+"sq\u0000~\u0000\u00a5t\u0000\u00017sq\u0000~\u0000\u00a5t\u0000\u00012sq\u0000~\u0000\u00a5t\u0000\u00014sq\u0000~\u0000\u00a5t\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteg"
+"er-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012O"
+"vertimeRateFormatq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001"
+"\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fOvertimeCostq\u0000~"
+"\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000p"
+"pq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\nCostPerUseq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq"
+"\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000v"
+"t\u0000\nActualCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00d4sq\u0000"
+"~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0012ActualOvertimeCostq"
+"\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~"
+"\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\rRemainingCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq"
+"\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u00d4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|s"
+"q\u0000~\u0000vt\u0000\u0015RemainingOvertimeCostq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0001Asq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fWor"
+"kVarianceq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001Asq\u0000~\u0000kp"
+"psq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fCostVarianceq\u0000~\u0000\u0080q\u0000~\u0000|s"
+"q\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001Asq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000"
+"~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0002SVq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0001Asq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0002CVq\u0000~\u0000\u0080q\u0000~\u0000|s"
+"q\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001Asq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000"
+"~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004ACWPq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000Osq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bCalendarUID"
+"q\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppq\u0000~\u0000\u0092q\u0000~\u0000hsq\u0000"
+"~\u0000iq\u0000~\u0000\u0093q\u0000~\u0000Ysq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0005Not"
+"esq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001Asq\u0000~\u0000kppsq\u0000~\u0000m"
+"q\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0004BCWSq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000"
+"~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001Asq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt"
+"\u0000\u0004BCWPq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00b4sq\u0000~\u0000kppsq"
+"\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\tIsGenericq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kp"
+"psq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00b4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~"
+"\u0000|sq\u0000~\u0000vt\u0000\nIsInactiveq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000\u00b4sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fIsEnterpris"
+"eq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lppsq\u0000~\u0000\u009fq\u0000~\u0000\u0080p"
+"q\u0000~\u0000]\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000Xq\u0000~\u0000\u00a2sq\u0000~\u0000\u00a3w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00a5q\u0000~\u0000\u00a8sq\u0000~\u0000\u00a5t"
+"\u0000\u00011xq\u0000~\u0000hsq\u0000~\u0000it\u0000\u000finteger-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000"
+"~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bBookingTypeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~"
+"\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\u0097sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000"
+"\u0013ActualWorkProtectedq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0001\u0097sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u001bActualOverti"
+"meWorkProtectedq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000L"
+"ppsq\u0000~\u0000\u008cq\u0000~\u0000\u0080pq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0000\u0010q\u0000~\u0000hsq\u0000~\u0000it\u0000\u000estring"
+"-derivedq\u0000~\u0000\u0080sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013Act"
+"iveDirectoryGUIDq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001\\"
+"sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\fCreationDateq\u0000~\u0000"
+"\u0080q\u0000~\u0000|sq\u0000~\u0000kppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000ppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Gpp\u0000sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000"
+"~\u0000mq\u0000~\u0000ppsr\u00002com.sun.msv.grammar.Expression$AnyStringExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000}q\u0000~\u0002\u00d4sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000wq\u0000~\u0000|sq\u0000~\u0000vt\u0000Ycom.tapsterrock.mspdi.s"
+"chema.ProjectType.ResourcesType.ResourceType.ExtendedAttribu"
+"teTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000kpp"
+"sq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0011ExtendedAttributeq\u0000~\u0000\u0080q\u0000"
+"~\u0000|sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Gpp\u0000sq\u0000~\u0000kp"
+"psq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0002\u00d4q\u0000~\u0002\u00d6q\u0000~\u0000|sq\u0000~\u0000vt\u0000Pcom.tapster"
+"rock.mspdi.schema.ProjectType.ResourcesType.ResourceType.Bas"
+"elineTypeq\u0000~\u0002\u00d9sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\bBa"
+"selineq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000Gpp\u0000sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0002\u00d4q\u0000~\u0002\u00d6q\u0000~\u0000|sq\u0000~\u0000vt"
+"\u0000Scom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.Res"
+"ourceType.OutlineCodeTypeq\u0000~\u0002\u00d9sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000x"
+"q\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000bOutlineCodeq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000Gpp\u0000sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0002\u00d4q\u0000~\u0002\u00d6q\u0000~\u0000|"
+"sq\u0000~\u0000vt\u0000[com.tapsterrock.mspdi.schema.ProjectType.ResourcesT"
+"ype.ResourceType.AvailabilityPeriodsTypeq\u0000~\u0002\u00d9sq\u0000~\u0000kppsq\u0000~\u0000mq"
+"\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0013AvailabilityPeriodsq\u0000~\u0000\u0080q\u0000~\u0000|sq"
+"\u0000~\u0000kppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Gpp\u0000sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~"
+"\u0000mq\u0000~\u0000ppq\u0000~\u0002\u00d4q\u0000~\u0002\u00d6q\u0000~\u0000|sq\u0000~\u0000vt\u0000Mcom.tapsterrock.mspdi.schema"
+".ProjectType.ResourcesType.ResourceType.RatesTypeq\u0000~\u0002\u00d9sq\u0000~\u0000k"
+"ppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u0005Ratesq\u0000~\u0000\u0080q\u0000~\u0000|sq\u0000~\u0000kp"
+"psq\u0000~\u0002\u00caq\u0000~\u0000ppsq\u0000~\u0000Gq\u0000~\u0000pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Gpp\u0000sq\u0000~\u0000kppsq\u0000~\u0002\u00caq\u0000~"
+"\u0000ppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0002\u00d4q\u0000~\u0002\u00d6q\u0000~\u0000|sq\u0000~\u0000vt\u0000/com.tapsterrock.mspdi"
+".schema.TimephasedDataTypeq\u0000~\u0002\u00d9sq\u0000~\u0000kppsq\u0000~\u0000mq\u0000~\u0000ppq\u0000~\u0000qq\u0000~\u0000"
+"xq\u0000~\u0000|sq\u0000~\u0000vt\u0000\u000eTimephasedDataq\u0000~\u0000\u0080q\u0000~\u0000|sr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0001\u001a\u0001pq\u0000~\u0000\u0010q\u0000~\u0002"
+"\u00faq\u0000~\u0003\u0007q\u0000~\u0000Cq\u0000~\u0000\u001cq\u0000~\u0000\u0005q\u0000~\u0000\u00e0q\u0000~\u0000;q\u0000~\u0000\u001dq\u0000~\u0000$q\u0000~\u00003q\u0000~\u0001\u0001q\u0000~\u0000+q\u0000~\u0000"
+":q\u0000~\u0000*q\u0000~\u0002=q\u0000~\u00026q\u0000~\u0002/q\u0000~\u0002(q\u0000~\u0002!q\u0000~\u0002\u001aq\u0000~\u0001\u00fbq\u0000~\u0001\u00f4q\u0000~\u0001\u00d1q\u0000~\u0002\u00d1q\u0000~\u0002"
+"\u00e4q\u0000~\u0000\u00f6q\u0000~\u0002\u00f2q\u0000~\u0002\u00ffq\u0000~\u0003\fq\u0000~\u0003\u001aq\u0000~\u0002iq\u0000~\u0001\u00ccq\u0000~\u0000\u0083q\u0000~\u0000Kq\u0000~\u0000\u00deq\u0000~\u0001\u001fq\u0000~\u0000"
+"\u0013q\u0000~\u0002~q\u0000~\u0002wq\u0000~\u0002`q\u0000~\u0002Yq\u0000~\u0002Rq\u0000~\u0002Kq\u0000~\u0002Dq\u0000~\u0001>q\u0000~\u0001Kq\u0000~\u0000\rq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u009bq\u0000~\u0000/q\u0000~\u0000\u00ebq\u0000~\u00013q\u0000~\u0000\u001bq\u0000~\u0000\'q\u0000~\u0001[q\u0000~\u0001hq\u0000~\u0001oq\u0000~\u0001vq\u0000~\u0002\u00c4q\u0000~\u0000\bq\u0000~\u0000"
+"\u0012q\u0000~\u0002\u00a9q\u0000~\u0001\u00c3q\u0000~\u0001\u00bcq\u0000~\u0001\u00b5q\u0000~\u0001\u0094q\u0000~\u0001\u00a0q\u0000~\u0001\u00a7q\u0000~\u0001\u0012q\u0000~\u0001\u00aeq\u0000~\u0002\u00acq\u0000~\u0002\u00a5q\u0000~\u0002"
+"\u0096q\u0000~\u0002\u008fq\u0000~\u0002\u0088q\u0000~\u0002\u0081q\u0000~\u0002zq\u0000~\u0002sq\u0000~\u0002jq\u0000~\u0002cq\u0000~\u0002\\q\u0000~\u0002Uq\u0000~\u0002Nq\u0000~\u0002Gq\u0000~\u0002"
+"@q\u0000~\u00029q\u0000~\u00022q\u0000~\u0002+q\u0000~\u0002nq\u0000~\u0002$q\u0000~\u0002\u001dq\u0000~\u0002\u0016q\u0000~\u0001\u00feq\u0000~\u0001\u00f7q\u0000~\u0001\u00f0q\u0000~\u0001\u00d6q\u0000~\u0001"
+"\u00cdq\u0000~\u0001\u00c6q\u0000~\u0001\u00bfq\u0000~\u0001\u00b8q\u0000~\u0001/q\u0000~\u0001$q\u0000~\u0001\u0019q\u0000~\u0001\u000eq\u0000~\u0000\u00fbq\u0000~\u0000\u00f0q\u0000~\u0000\u00e5q\u0000~\u0000\u00daq\u0000~\u0000"
+"\u00cfq\u0000~\u0000\u00c4q\u0000~\u0000\u00b9q\u0000~\u0000\u00adq\u0000~\u0000\u0097q\u0000~\u0000\u0084q\u0000~\u0000lq\u0000~\u0001:q\u0000~\u0001Gq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001bq\u0000~\u0001"
+"iq\u0000~\u0001pq\u0000~\u0001wq\u0000~\u0001~q\u0000~\u0001\u0090q\u0000~\u0001\u009cq\u0000~\u0001\u00a3q\u0000~\u0001\u00aaq\u0000~\u0001\u00b1q\u0000~\u00004q\u0000~\u0000?q\u0000~\u0002\u00b3q\u0000~\u0000"
+"-q\u0000~\u0002\u00b0q\u0000~\u0002\u00beq\u0000~\u0002\u00c5q\u0000~\u0002\u00daq\u0000~\u0002\u00e8q\u0000~\u0002\u00f6q\u0000~\u0003\u0003q\u0000~\u0003\u0010q\u0000~\u0003\u001eq\u0000~\u0002\u00b9q\u0000~\u0000Bq\u0000~\u0000"
+"5q\u0000~\u00002q\u0000~\u0000\u001eq\u0000~\u0000\u00f4q\u0000~\u0002\u0004q\u0000~\u0000\u001aq\u0000~\u0002\u00ccq\u0000~\u0002\u00dfq\u0000~\u0002\u00edq\u0000~\u0003\u0015q\u0000~\u0000\u0006q\u0000~\u0000\u00ffq\u0000~\u0000"
+"\u000eq\u0000~\u0000\u0016q\u0000~\u0000\u000bq\u0000~\u00006q\u0000~\u0002pq\u0000~\u00007q\u0000~\u0001\u00daq\u0000~\u0000Aq\u0000~\u0001\u0014q\u0000~\u0000Eq\u0000~\u0001\u001dq\u0000~\u00000q\u0000~\u0002"
+"\u0080q\u0000~\u0002yq\u0000~\u0002bq\u0000~\u0002[q\u0000~\u0002Tq\u0000~\u0002Mq\u0000~\u0002Fq\u0000~\u0001@q\u0000~\u0002\u0002q\u0000~\u0001Mq\u0000~\u0002\u0095q\u0000~\u0002\u008eq\u0000~\u0002"
+"\u0087q\u0000~\u0000\u00b3q\u0000~\u0001Tq\u0000~\u0001}q\u0000~\u0002\u00c9q\u0000~\u0002\u00deq\u0000~\u0002\u00ecq\u0000~\u0003\u0014q\u0000~\u0000.q\u0000~\u0002\u00d0q\u0000~\u0002\u00e3q\u0000~\u0002\u00f1q\u0000~\u0002"
+"\u00feq\u0000~\u0003\u000bq\u0000~\u0003\u0019q\u0000~\u0000)q\u0000~\u0000\u000fq\u0000~\u0000\tq\u0000~\u0000\u00c8q\u0000~\u0002?q\u0000~\u00028q\u0000~\u00021q\u0000~\u0002*q\u0000~\u0002#q\u0000~\u0002"
+"\u001cq\u0000~\u0001\u00fdq\u0000~\u0001\u00f6q\u0000~\u0001\u00d3q\u0000~\u0000 q\u0000~\u0000\u001fq\u0000~\u0000Dq\u0000~\u0000\u00d3q\u0000~\u0002\u00ceq\u0000~\u0002\u00e1q\u0000~\u00009q\u0000~\u0002\u00efq\u0000~\u0002"
+"\u00fcq\u0000~\u0003\tq\u0000~\u0003\u0017q\u0000~\u0000=q\u0000~\u0000\u0014q\u0000~\u0000!q\u0000~\u0000\u00bdq\u0000~\u0000\u0018q\u0000~\u0000\u0088q\u0000~\u0001\u0084q\u0000~\u0002\u009aq\u0000~\u0000%q\u0000~\u0000"
+"\u0019q\u0000~\u0000\u009dq\u0000~\u00015q\u0000~\u0000\u0007q\u0000~\u0001Yq\u0000~\u0001fq\u0000~\u0001mq\u0000~\u0001tq\u0000~\u0002\u00c2q\u0000~\u0002\u00b7q\u0000~\u0000@q\u0000~\u0001(q\u0000~\u0000"
+"(q\u0000~\u0002\u00abq\u0000~\u0001\u00c5q\u0000~\u0001\u00beq\u0000~\u0000,q\u0000~\u0001\u00b7q\u0000~\u0001\u0096q\u0000~\u0001\u00a2q\u0000~\u0001\u00a9q\u0000~\u0001\u00b0q\u0000~\u0000\u00caq\u0000~\u0002\u00b2q\u0000~\u0000"
+">q\u0000~\u0000\u00e9q\u0000~\u0000#q\u0000~\u0000\nq\u0000~\u00008q\u0000~\u0000\u008aq\u0000~\u0001*q\u0000~\u0001\u00dcq\u0000~\u0000\u00d5q\u0000~\u0000\u0011q\u0000~\u0000\u0017q\u0000~\u0002\u0093q\u0000~\u0002"
+"\u008cq\u0000~\u0002\u0085q\u0000~\u0000\u00b1q\u0000~\u0001Rq\u0000~\u0001{q\u0000~\u0000\fq\u0000~\u0000\u00bfq\u0000~\u0001\u0082q\u0000~\u0002gq\u0000~\u0001\u00caq\u0000~\u0000\u0081q\u0000~\u0000Fq\u0000~\u0000"
+"<q\u0000~\u0000\"q\u0000~\u0002\u009cq\u0000~\u0000&q\u0000~\u00001x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class AvailabilityPeriodsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _AvailabilityPeriod;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.class);
                }

                protected com.sun.xml.bind.util.ListImpl _getAvailabilityPeriod() {
                    if (_AvailabilityPeriod == null) {
                        _AvailabilityPeriod = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _AvailabilityPeriod;
                }

                public java.util.List getAvailabilityPeriod() {
                    return _getAvailabilityPeriod();
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_AvailabilityPeriod == null)? 0 :_AvailabilityPeriod.size());
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "AvailabilityPeriod");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriod.get(idx_0 ++)), "AvailabilityPeriod");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriod.get(idx_1 ++)), "AvailabilityPeriod");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _AvailabilityPeriod.get(idx1 ++)), "AvailabilityPeriod");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_AvailabilityPeriod == null)? 0 :_AvailabilityPeriod.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_AvailabilityPeriod == null)? 0 :_AvailabilityPeriod.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000rcom.tapsterrock.mspdi.schema.ProjectType.Resour"
+"cesType.ResourceType.AvailabilityPeriodsType.AvailabilityPer"
+"iodTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dt"
+"t\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLc"
+"om/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.L"
+"com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"
+".w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramm"
+"ar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.su"
+"n.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespac"
+"eURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/"
+"XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0012AvailabilityPeriodt\u0000$http://"
+"schemas.microsoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.Ex"
+"pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
+"pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
+"Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt"
+"\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000"
+"\bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000#x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class AvailabilityPeriodTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.util.Calendar _AvailableFrom;
                    protected java.util.Calendar _AvailableTo;
                    protected boolean has_AvailableUnits;
                    protected float _AvailableUnits;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType.class);
                    }

                    public java.util.Calendar getAvailableFrom() {
                        return _AvailableFrom;
                    }

                    public void setAvailableFrom(java.util.Calendar value) {
                        _AvailableFrom = value;
                    }

                    public java.util.Calendar getAvailableTo() {
                        return _AvailableTo;
                    }

                    public void setAvailableTo(java.util.Calendar value) {
                        _AvailableTo = value;
                    }

                    public float getAvailableUnits() {
                        return _AvailableUnits;
                    }

                    public void setAvailableUnits(float value) {
                        _AvailableUnits = value;
                        has_AvailableUnits = true;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_AvailableFrom!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableFrom");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableFrom), null), "AvailableFrom");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_AvailableTo!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableTo");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableTo), null), "AvailableTo");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (has_AvailableUnits) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableUnits");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _AvailableUnits)), "AvailableUnits");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000%c"
+"om.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.m"
+"sv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
+"atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
+"type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
+".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/"
+"WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\b"
+"dateTimesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Col"
+"lapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001cs"
+"q\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003q\u0000~\u0000\u000epsq\u0000~\u0000\u0010ppsr\u0000\"com.sun.msv.da"
+"tatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QNameq\u0000~\u0000 q\u0000~\u0000\""
+"sq\u0000~\u0000#q\u0000~\u0000+q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.g"
+"rammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/200"
+"1/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Epsil"
+"onExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u00003sq\u0000~\u0000-t\u0000\rAvailableF"
+"romt\u0000$http://schemas.microsoft.com/projectq\u0000~\u00003sq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\tq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0013sq\u0000~\u0000\u0007ppsq\u0000~\u0000&q\u0000~\u0000\u000epq\u0000~\u0000(q\u0000~\u0000/q\u0000~\u00003sq\u0000~"
+"\u0000-t\u0000\u000bAvailableToq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u0010ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com."
+"sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001ct\u0000\u0005floatq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000Fq\u0000~\u0000\u001csq\u0000~\u0000\u0007ppsq\u0000~\u0000&q\u0000~\u0000\u000epq\u0000~\u0000("
+"q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u000eAvailableUnitsq\u0000~\u00007q\u0000~\u00003sr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL"
+"\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000?"
+"q\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000Aq\u0000~\u0000\bq\u0000~\u00008q\u0000~\u0000%q\u0000~\u0000;q\u0000~\u0000Hq\u0000~\u0000\u000fq\u0000~\u0000:x"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "----------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  3 :
                                        if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        state = 3;
                                        continue outer;
                                    case  6 :
                                        if (("AvailableUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  5 :
                                        if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  9 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  2 :
                                        if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  8 :
                                        if (("AvailableUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  9 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  9 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  7 :
                                            eatText1(value);
                                            state = 8;
                                            return ;
                                        case  3 :
                                            state = 6;
                                            continue outer;
                                        case  0 :
                                            state = 3;
                                            continue outer;
                                        case  1 :
                                            eatText2(value);
                                            state = 2;
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  4 :
                                            eatText3(value);
                                            state = 5;
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _AvailableUnits = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                has_AvailableUnits = true;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _AvailableFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _AvailableTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("AvailableUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                case  0 :
                                    if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  1 :
                                    _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, ___qname)));
                                    return ;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _getAvailabilityPeriod().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, value)));
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected boolean has_BCWP;
                protected float _BCWP;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected boolean has_Cost;
                protected float _Cost;
                protected java.math.BigInteger _Number;
                protected java.lang.String _Work;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType.class);
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public float getCost() {
                    return _Cost;
                }

                public void setCost(float value) {
                    _Cost = value;
                    has_Cost = true;
                }

                public java.math.BigInteger getNumber() {
                    return _Number;
                }

                public void setNumber(java.math.BigInteger value) {
                    _Number = value;
                }

                public java.lang.String getWork() {
                    return _Work;
                }

                public void setWork(java.lang.String value) {
                    _Work = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    context.startElement("http://schemas.microsoft.com/project", "Number");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Number)), "Number");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Work), "Work");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_Cost) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _Cost)), "Cost");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatyp"
+"e.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Int"
+"egerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datat"
+"ype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinA"
+"tomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000"
+"\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;"
+"xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,c"
+"om.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,"
+"com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sc"
+"alexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstrain"
+"tFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTyp"
+"eq\u0000~\u0000\u0014L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTy"
+"pe;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000~\u0000\u0017ppq\u0000~\u0000\u001f\u0001\u0000sr\u0000#com.sun.msv.datatype."
+"xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007decimalq\u0000~\u0000\u001fq\u0000~\u0000&t\u0000\u000ef"
+"ractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bs"
+"r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\nxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~"
+"\u0000\u000eppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u001bt\u0000\u0005QNameq\u0000~\u0000\u001fq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00006q\u0000~\u0000\u001bsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURI"
+"q\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000"
+")http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00001\u0001q\u0000"
+"~\u0000>sq\u0000~\u00008t\u0000\u0006Numbert\u0000$http://schemas.microsoft.com/projectsq\u0000"
+"~\u0000-ppsq\u0000~\u0000\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000%com.sun.msv.datatype.x"
+"sd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\bdurationq\u0000~\u0000\u001fq\u0000~\u0000*sq"
+"\u0000~\u0000+q\u0000~\u0000Iq\u0000~\u0000\u001bsq\u0000~\u0000-ppsq\u0000~\u0000/q\u0000~\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004Wo"
+"rkq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-ppsq\u0000~\u0000\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000\"com.sun"
+".msv.datatype.xsd.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.dataty"
+"pe.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005floatq\u0000~\u0000\u001f"
+"q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Vq\u0000~\u0000\u001bsq\u0000~\u0000-ppsq\u0000~\u0000/q\u0000~\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~"
+"\u00008t\u0000\u0004Costq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-ppsq\u0000~\u0000\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Rsq\u0000~\u0000-p"
+"psq\u0000~\u0000/q\u0000~\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0004BCWSq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000-pps"
+"q\u0000~\u0000\tq\u0000~\u00002p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Rsq\u0000~\u0000-ppsq\u0000~\u0000/q\u0000~\u00002pq\u0000~\u00003q\u0000~\u0000:q\u0000~\u0000>"
+"sq\u0000~\u00008t\u0000\u0004BCWPq\u0000~\u0000Bq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/"
+"msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012\u0001pq\u0000~\u0000Cq\u0000~\u0000\u0006q\u0000~\u0000Oq\u0000~\u0000\\q\u0000~\u0000c"
+"q\u0000~\u0000\bq\u0000~\u0000\rq\u0000~\u0000\u0007q\u0000~\u0000Eq\u0000~\u0000Qq\u0000~\u0000^q\u0000~\u0000eq\u0000~\u0000\u0005q\u0000~\u0000.q\u0000~\u0000Kq\u0000~\u0000Xq\u0000~\u0000_"
+"q\u0000~\u0000fx"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  12 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  6 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  5 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  14 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  11 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  2 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  13 :
                                        eatText1(value);
                                        state = 14;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  1 :
                                        eatText2(value);
                                        state = 2;
                                        return ;
                                    case  4 :
                                        eatText3(value);
                                        state = 5;
                                        return ;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  10 :
                                        eatText4(value);
                                        state = 11;
                                        return ;
                                    case  7 :
                                        eatText5(value);
                                        state = 8;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWP = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Number = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWS = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Cost = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Cost = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected java.lang.String _Value;
                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public java.lang.String getValue() {
                    return _Value;
                }

                public void setValue(java.lang.String value) {
                    _Value = value;
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Value), "Value");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001"
+"L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lj"
+"ava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.F"
+"ractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatyp"
+"e.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.s"
+"un.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFi"
+"xedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lc"
+"om/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001b"
+"ppq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.s"
+"un.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\tppsr\u0000 com.sun.msv.gra"
+"mmar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~"
+"\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000\u0012ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#com.su"
+"n.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\f"
+"namespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/p"
+"rojectq\u0000~\u0000?sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012ppsr\u0000#com.sun."
+"msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000Jq\u0000~\u0000\u001fsq\u0000~\u0000\tppsq"
+"\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007FieldIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\tpps"
+"q\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Gsq\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?"
+"sq\u0000~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0015sq"
+"\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007ValueIDq\u0000~\u0000Cq\u0000~\u0000?s"
+"q\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012ppsr\u0000)com.sun.msv.datatype"
+".xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;x"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000Cpq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.da"
+"tatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001cxr\u0000\u0010java."
+"lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000kt\u0000\u000241sq\u0000~\u0000kt\u0000\u000239sq\u0000~\u0000kt\u0000\u00023"
+"6sq\u0000~\u0000kt\u0000\u00016sq\u0000~\u0000kt\u0000\u00015sq\u0000~\u0000kt\u0000\u000237sq\u0000~\u0000kt\u0000\u000211sq\u0000~\u0000kt\u0000\u000240sq\u0000~\u0000k"
+"t\u0000\u00014sq\u0000~\u0000kt\u0000\u000212sq\u0000~\u0000kt\u0000\u000252sq\u0000~\u0000kt\u0000\u00017sq\u0000~\u0000kt\u0000\u000238sq\u0000~\u0000kt\u0000\u000220sq"
+"\u0000~\u0000kt\u0000\u000242sq\u0000~\u0000kt\u0000\u000253sq\u0000~\u0000kt\u0000\u000243sq\u0000~\u0000kt\u0000\u000221sq\u0000~\u0000kt\u0000\u000210sq\u0000~\u0000kt"
+"\u0000\u000235sq\u0000~\u0000kt\u0000\u000244sq\u0000~\u0000kt\u0000\u00019sq\u0000~\u0000kt\u0000\u000219sq\u0000~\u0000kt\u0000\u00018sq\u0000~\u0000kt\u0000\u000251xq\u0000"
+"~\u0000.sq\u0000~\u0000/t\u0000\u000finteger-derivedq\u0000~\u0000Csq\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~"
+"\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000eDurationFormatq\u0000~\u0000Cq\u0000~\u0000?sr\u0000\"com.sun.msv.gram"
+"mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
+"mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
+"essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006p"
+"arentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0013\u0001pq\u0000~\u0000\u0006q\u0000~"
+"\u0000\nq\u0000~\u0000Yq\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000[q\u0000~\u0000\u0005q\u0000~\u0000bq\u0000~\u0000\u0007q\u0000~\u0000`q\u0000~\u0000Fq\u0000~\u0000Tq\u0000~\u0000Dq\u0000~"
+"\u0000Rq\u0000~\u00001q\u0000~\u0000Nq\u0000~\u0000Uq\u0000~\u0000\\q\u0000~\u0000\u00a3x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  12 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  9 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  14 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  8 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  11 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  7 :
                                        eatText1(value);
                                        state = 8;
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  13 :
                                        eatText2(value);
                                        state = 14;
                                        return ;
                                    case  4 :
                                        eatText3(value);
                                        state = 5;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  1 :
                                        eatText4(value);
                                        state = 2;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  10 :
                                        eatText5(value);
                                        state = 11;
                                        return ;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Value = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType.class);
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$c"
+"om.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.ms"
+"v.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)"
+"Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.dat"
+"atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dataty"
+"pe.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.X"
+"SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;"
+"L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007in"
+"tegersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collap"
+"se\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWi"
+"thLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
+"xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueC"
+"heckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datat"
+"ype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019ppq\u0000~\u0000!\u0001\u0000sr\u0000#com"
+".sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007dec"
+"imalq\u0000~\u0000!q\u0000~\u0000(t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURI"
+"q\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.grammar.AttributeEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003q\u0000~\u0000\u000epsq\u0000~\u0000\u0010pp"
+"sr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001d"
+"t\u0000\u0005QNameq\u0000~\u0000!q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u00005q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.Si"
+"mpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000=s"
+"q\u0000~\u00007t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000=sq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0006stringsr"
+"\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 \u0001q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000Hq\u0000~\u0000\u001dsq\u0000~\u0000\u0007ppsq\u0000~\u00000q\u0000~\u0000\u000epq\u0000~\u00002q"
+"\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007FieldIDq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\u000ep\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000\u0013sq\u0000~\u0000\u0007ppsq\u0000~\u00000q\u0000~\u0000\u000epq\u0000~\u00002q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007ValueID"
+"q\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
+"\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
+"xpressionPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000\bq\u0000~\u0000Pq\u0000~\u0000\u0006q\u0000~\u0000\u000fq\u0000~\u0000Rq\u0000~\u0000Dq\u0000~\u0000Bq\u0000~"
+"\u0000/q\u0000~\u0000Lq\u0000~\u0000Sq\u0000~\u0000\u0005x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  8 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  7 :
                                        eatText1(value);
                                        state = 8;
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  4 :
                                        eatText2(value);
                                        state = 5;
                                        return ;
                                    case  1 :
                                        eatText3(value);
                                        state = 2;
                                        return ;
                                    case  9 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class RatesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected com.sun.xml.bind.util.ListImpl _Rate;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.class);
                }

                protected com.sun.xml.bind.util.ListImpl _getRate() {
                    if (_Rate == null) {
                        _Rate = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _Rate;
                }

                public java.util.List getRate() {
                    return _getRate();
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Rate == null)? 0 :_Rate.size());
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Rate");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Rate.get(idx_0 ++)), "Rate");
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Rate.get(idx_1 ++)), "Rate");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Rate.get(idx1 ++)), "Rate");
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Rate == null)? 0 :_Rate.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = ((_Rate == null)? 0 :_Rate.size());
                    while (idx1 != len1) {
                        idx1 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'co"
+"m.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClass"
+"t\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.El"
+"ementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMo"
+"delq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com.sun.ms"
+"v.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Una"
+"ryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\tpsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\tpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\b\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000Vcom.tapsterrock.mspdi.schema.ProjectType.Resour"
+"cesType.ResourceType.RatesType.RateTypet\u0000+http://java.sun.co"
+"m/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpsr\u0000\u001bcom.sun.msv"
+".grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dat"
+"atype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;x"
+"q\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*"
+"com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
+".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv"
+".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL"
+"\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNa"
+"mesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d"
+"\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u0000\u0004Ratet\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000"
+"~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tp"
+"q\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~"
+"\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014"
+"q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000s"
+"q\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000"
+"~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001d"
+"q\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq"
+"\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u0000"
+"8q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q"
+"\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000"
+"~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014"
+"q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~"
+"\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq"
+"\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tp"
+"sq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~"
+"\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~"
+"\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011"
+"q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\t"
+"p\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~"
+"\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000"
+"\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000"
+"~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000"
+"\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\t"
+"psq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~"
+"\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q"
+"\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000"
+"\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~"
+"\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000"
+"~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tp"
+"q\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0006q\u0000~\u0000\tpsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~"
+"\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014"
+"q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;sq\u0000~\u0000\u0000ppsq\u0000~\u0000\nq\u0000~\u0000\tp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000"
+"\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\tpsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001eq\u0000~"
+"\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\tpq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dq\u0000~\u0000;q\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000\u001dsr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstrea"
+"mVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000"
+"\u0000\u0095\u0001pq\u0000~\u0000\u0080q\u0000~\u0000\u00a2q\u0000~\u0000\u00f9q\u0000~\u0000uq\u0000~\u0000\u00d9q\u0000~\u0000\u00c3q\u0000~\u0000\u00c2q\u0000~\u0000\u00a1q\u0000~\u0001\u001bq\u0000~\u0001\u0010q\u0000~\u0001Cq"
+"\u0000~\u00019q\u0000~\u0001.q\u0000~\u0001#q\u0000~\u0001\u0018q\u0000~\u0001\rq\u0000~\u0001\u0002q\u0000~\u0000\u00f7q\u0000~\u0000\u00ecq\u0000~\u0000\u00e1q\u0000~\u0000\u00d6q\u0000~\u0000#q\u0000~\u0000Gq"
+"\u0000~\u0000Rq\u0000~\u0000]q\u0000~\u0000hq\u0000~\u0000sq\u0000~\u0000~q\u0000~\u0000\u0089q\u0000~\u0000\u0094q\u0000~\u0000\u009fq\u0000~\u0000\u00aaq\u0000~\u0000\u00b5q\u0000~\u0001+q\u0000~\u0001 q"
+"\u0000~\u0001\u0015q\u0000~\u0001\nq\u0000~\u0000\u00ffq\u0000~\u0000\u00f4q\u0000~\u0000\u00e9q\u0000~\u0000\u00deq\u0000~\u0000\u0013q\u0000~\u0000Dq\u0000~\u0000Oq\u0000~\u0000Zq\u0000~\u0000eq\u0000~\u0000pq"
+"\u0000~\u0000{q\u0000~\u0000\u0086q\u0000~\u0000\u0091q\u0000~\u0000\u009cq\u0000~\u0000\u00a7q\u0000~\u0000\u00b2q\u0000~\u0000\u00bdq\u0000~\u0000\u00c8q\u0000~\u0000\u00d3q\u0000~\u0000\u00c0q\u0000~\u0000\u00cbq\u0000~\u0001@q"
+"\u0000~\u00016q\u0000~\u0000Tq\u0000~\u0000Iq\u0000~\u0001;q\u0000~\u0000\u00e4q\u0000~\u0000\u0097q\u0000~\u0000\u008bq\u0000~\u0000\u00e3q\u0000~\u0000?q\u0000~\u0000>q\u0000~\u0000\u00d8q\u0000~\u00010q"
+"\u0000~\u0000jq\u0000~\u00011q\u0000~\u0001\u001dq\u0000~\u0001\u0012q\u0000~\u0001\u0007q\u0000~\u0000\u00fcq\u0000~\u0000\u00f1q\u0000~\u0000\u00e6q\u0000~\u0000\u00dbq\u0000~\u0000\u00d0q\u0000~\u0000\u000eq\u0000~\u0000Aq"
+"\u0000~\u0000Lq\u0000~\u0000Wq\u0000~\u0000bq\u0000~\u0000mq\u0000~\u0000xq\u0000~\u0000\u0083q\u0000~\u0000\u008eq\u0000~\u0000\u0099q\u0000~\u0000\u00a4q\u0000~\u0000\u00afq\u0000~\u0000\u00baq\u0000~\u0000\u00c5q"
+"\u0000~\u0001=q\u0000~\u00013q\u0000~\u0001(q\u0000~\u0000\u00acq\u0000~\u0000\u00b7q\u0000~\u0001&q\u0000~\u0001\u0005q\u0000~\u0000\u00faq\u0000~\u0000\u00b8q\u0000~\u0000kq\u0000~\u0001\u0004q\u0000~\u0000_q"
+"\u0000~\u0000\u00cdq\u0000~\u0001%q\u0000~\u0000\u0096q\u0000~\u0001?q\u0000~\u00015q\u0000~\u0001*q\u0000~\u0001\u001fq\u0000~\u0001\u0014q\u0000~\u0001\tq\u0000~\u0000\u00feq\u0000~\u0000\u00f3q\u0000~\u0000\u00e8q"
+"\u0000~\u0000\u00ddq\u0000~\u0000\u00d2q\u0000~\u0000\u0010q\u0000~\u0000Cq\u0000~\u0000Nq\u0000~\u0000Yq\u0000~\u0000dq\u0000~\u0000oq\u0000~\u0000zq\u0000~\u0000\u0085q\u0000~\u0000\u0090q\u0000~\u0000\u009bq"
+"\u0000~\u0000\u00a6q\u0000~\u0000\u00b1q\u0000~\u0000\u00bcq\u0000~\u0000\u00c7q\u0000~\u0000`q\u0000~\u0000Uq\u0000~\u0000\u008cq\u0000~\u0000\u0007q\u0000~\u0000\u00ceq\u0000~\u0000\u0081q\u0000~\u0001\u001aq\u0000~\u0000Jq"
+"\u0000~\u0000\u00efq\u0000~\u0000\u00eeq\u0000~\u0001\u000fq\u0000~\u0000vq\u0000~\u0000\u0005q\u0000~\u0000\u00adx"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class RateTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
                {

                    protected java.util.Calendar _RatesFrom;
                    protected java.math.BigDecimal _CostPerUse;
                    protected java.math.BigInteger _StandardRateFormat;
                    protected java.math.BigInteger _RateTable;
                    protected java.math.BigInteger _OvertimeRateFormat;
                    protected java.util.Calendar _RatesTo;
                    protected java.math.BigDecimal _OvertimeRate;
                    protected java.math.BigDecimal _StandardRate;
                    public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                    private static com.sun.msv.grammar.Grammar schemaFragment;

                    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType.class);
                    }

                    public java.util.Calendar getRatesFrom() {
                        return _RatesFrom;
                    }

                    public void setRatesFrom(java.util.Calendar value) {
                        _RatesFrom = value;
                    }

                    public java.math.BigDecimal getCostPerUse() {
                        return _CostPerUse;
                    }

                    public void setCostPerUse(java.math.BigDecimal value) {
                        _CostPerUse = value;
                    }

                    public java.math.BigInteger getStandardRateFormat() {
                        return _StandardRateFormat;
                    }

                    public void setStandardRateFormat(java.math.BigInteger value) {
                        _StandardRateFormat = value;
                    }

                    public java.math.BigInteger getRateTable() {
                        return _RateTable;
                    }

                    public void setRateTable(java.math.BigInteger value) {
                        _RateTable = value;
                    }

                    public java.math.BigInteger getOvertimeRateFormat() {
                        return _OvertimeRateFormat;
                    }

                    public void setOvertimeRateFormat(java.math.BigInteger value) {
                        _OvertimeRateFormat = value;
                    }

                    public java.util.Calendar getRatesTo() {
                        return _RatesTo;
                    }

                    public void setRatesTo(java.util.Calendar value) {
                        _RatesTo = value;
                    }

                    public java.math.BigDecimal getOvertimeRate() {
                        return _OvertimeRate;
                    }

                    public void setOvertimeRate(java.math.BigDecimal value) {
                        _OvertimeRate = value;
                    }

                    public java.math.BigDecimal getStandardRate() {
                        return _StandardRate;
                    }

                    public void setStandardRate(java.math.BigDecimal value) {
                        _StandardRate = value;
                    }

                    public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.Unmarshaller(context);
                    }

                    public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "RatesFrom");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _RatesFrom), null), "RatesFrom");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        context.startElement("http://schemas.microsoft.com/project", "RatesTo");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _RatesTo), null), "RatesTo");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                        if (_RateTable!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "RateTable");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _RateTable)), "RateTable");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_StandardRate!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "StandardRate");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _StandardRate)), "StandardRate");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_StandardRateFormat!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "StandardRateFormat");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StandardRateFormat)), "StandardRateFormat");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_OvertimeRate!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "OvertimeRate");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeRate)), "OvertimeRate");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_OvertimeRateFormat!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "OvertimeRateFormat");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _OvertimeRateFormat)), "OvertimeRateFormat");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                        if (_CostPerUse!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "CostPerUse");
                            context.endNamespaceDecls();
                            context.endAttributes();
                            try {
                                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _CostPerUse)), "CostPerUse");
                            } catch (java.lang.Exception e) {
                                com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                            }
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public java.lang.Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        if (schemaFragment == null) {
                            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gramm"
+"ar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;"
+"L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003p"
+"psr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com"
+".sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun"
+".msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.ms"
+"v.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.dataty"
+"pe.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang"
+"/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatyp"
+"e/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSch"
+"emat\u0000\bdateTimesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpac"
+"eProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Nu"
+"llSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.Strin"
+"gPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001e"
+"q\u0000~\u0000\u001dsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000"
+" com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tna"
+"meClassq\u0000~\u0000\rxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp"
+"\u0000psq\u0000~\u0000\u0011ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0005QNameq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u0000/q\u0000~\u0000\u001dsr\u0000#com.sun.msv."
+"grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamesp"
+"aceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004"
+"typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun."
+"msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000"
+"~\u0000*\u0001q\u0000~\u00007sq\u0000~\u00001t\u0000\tRatesFromt\u0000$http://schemas.microsoft.com/p"
+"rojectsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00003q\u0000"
+"~\u00007sq\u0000~\u00001t\u0000\u0007RatesToq\u0000~\u0000;sq\u0000~\u0000&ppsq\u0000~\u0000\fq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011p"
+"psr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006"
+"valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTyp"
+"eWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype"
+".xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValue"
+"CheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeI"
+"mpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType"
+";L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019q\u0000~\u0000;pq\u0000~\u0000!\u0000\u0000sr\u0000$com.sun.msv.datatyp"
+"e.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Int"
+"egerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Jxq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007in"
+"tegerq\u0000~\u0000!sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLe"
+"xicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Ippq\u0000~\u0000!\u0001\u0000sr\u0000#com.sun.ms"
+"v.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007decimalq\u0000~"
+"\u0000!q\u0000~\u0000Ut\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Ot\u0000\u000benumerationsr\u0000\u0011java.util"
+".HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sr\u0000)com.sun.msv.datatype."
+"xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001axr\u0000\u0010java.lang.Nu"
+"mber\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000[t\u0000\u00012sq\u0000~\u0000[t\u0000\u00010sq\u0000~\u0000[t\u0000\u00014sq\u0000~\u0000[t\u0000\u0001"
+"1xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000;sq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000"
+",q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\tRateTableq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&ppsq\u0000~\u0000\fq\u0000~\u0000+p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppq\u0000~\u0000Uq\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u0000Vq\u0000~\u0000\u001dsq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000"
+"+pq\u0000~\u0000,q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\fStandardRateq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&ppsq\u0000~"
+"\u0000\fq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsq\u0000~\u0000Fq\u0000~\u0000;pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000Oq\u0000~\u0000Oq\u0000~\u0000Xs"
+"q\u0000~\u0000Yw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000[t\u0000\u00013sq\u0000~\u0000[t\u0000\u00015sq\u0000~\u0000[t\u0000\u00017sq\u0000~\u0000[t\u0000\u00012s"
+"q\u0000~\u0000[t\u0000\u00014sq\u0000~\u0000[t\u0000\u00011xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000;sq\u0000~\u0000&"
+"ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u0012StandardRateFormatq\u0000~\u0000"
+";q\u0000~\u00007sq\u0000~\u0000&ppsq\u0000~\u0000\fq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000psq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+p"
+"q\u0000~\u0000,q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\fOvertimeRateq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000&ppsq\u0000~\u0000\f"
+"q\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsq\u0000~\u0000Fq\u0000~\u0000;pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000Oq\u0000~\u0000Oq\u0000~\u0000Xsq\u0000"
+"~\u0000Yw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000[t\u0000\u00013sq\u0000~\u0000[t\u0000\u00015sq\u0000~\u0000[t\u0000\u00017sq\u0000~\u0000[t\u0000\u00012sq\u0000"
+"~\u0000[t\u0000\u00014sq\u0000~\u0000[t\u0000\u00011xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000;sq\u0000~\u0000&pp"
+"sq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u0012OvertimeRateFormatq\u0000~\u0000;q"
+"\u0000~\u00007sq\u0000~\u0000&ppsq\u0000~\u0000\fq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000psq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000"
+"~\u0000,q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\nCostPerUseq\u0000~\u0000;q\u0000~\u00007sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000"
+"\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u001d\u0001pq\u0000~\u0000Dq"
+"\u0000~\u0000\u0095q\u0000~\u0000\u0006q\u0000~\u0000\bq\u0000~\u0000\u000bq\u0000~\u0000\tq\u0000~\u0000Bq\u0000~\u0000vq\u0000~\u0000\nq\u0000~\u0000\u0007q\u0000~\u0000\u0097q\u0000~\u0000xq\u0000~\u0000oq"
+"\u0000~\u0000\u0090q\u0000~\u0000\u00afq\u0000~\u0000mq\u0000~\u0000\u008eq\u0000~\u0000\u00adq\u0000~\u0000\'q\u0000~\u0000>q\u0000~\u0000iq\u0000~\u0000rq\u0000~\u0000\u008aq\u0000~\u0000\u0010q\u0000~\u0000=q"
+"\u0000~\u0000\u0091q\u0000~\u0000\u00a9q\u0000~\u0000\u00b0q\u0000~\u0000\u0005x"));
                        }
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                    {


                        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                            super(context, "-------------------------");
                        }

                        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                            this(context);
                            state = startState;
                        }

                        public java.lang.Object owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.this;
                        }

                        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  21 :
                                        if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 22;
                                            return ;
                                        }
                                        state = 24;
                                        continue outer;
                                    case  15 :
                                        if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 16;
                                            return ;
                                        }
                                        state = 18;
                                        continue outer;
                                    case  6 :
                                        if (("RateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 7;
                                            return ;
                                        }
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 13;
                                            return ;
                                        }
                                        state = 15;
                                        continue outer;
                                    case  0 :
                                        if (("RatesFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 1;
                                            return ;
                                        }
                                        break;
                                    case  9 :
                                        if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 10;
                                            return ;
                                        }
                                        state = 12;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                        return ;
                                    case  3 :
                                        if (("RatesTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 4;
                                            return ;
                                        }
                                        break;
                                    case  18 :
                                        if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.pushAttributes(__atts, true);
                                            state = 19;
                                            return ;
                                        }
                                        state = 21;
                                        continue outer;
                                }
                                super.enterElement(___uri, ___local, ___qname, __atts);
                                break;
                            }
                        }

                        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  5 :
                                        if (("RatesTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 6;
                                            return ;
                                        }
                                        break;
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  23 :
                                        if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 24;
                                            return ;
                                        }
                                        break;
                                    case  8 :
                                        if (("RateTable" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 9;
                                            return ;
                                        }
                                        break;
                                    case  17 :
                                        if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 18;
                                            return ;
                                        }
                                        break;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  2 :
                                        if (("RatesFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 3;
                                            return ;
                                        }
                                        break;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                        return ;
                                    case  20 :
                                        if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 21;
                                            return ;
                                        }
                                        break;
                                    case  11 :
                                        if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 12;
                                            return ;
                                        }
                                        break;
                                    case  14 :
                                        if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                            context.popAttributes();
                                            state = 15;
                                            return ;
                                        }
                                        break;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                }
                                super.leaveElement(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                }
                                super.enterAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                switch (state) {
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  24 :
                                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                        return ;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                }
                                super.leaveAttribute(___uri, ___local, ___qname);
                                break;
                            }
                        }

                        public void handleText(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            int attIdx;
                            outer:
                            while (true) {
                                try {
                                    switch (state) {
                                        case  19 :
                                            eatText1(value);
                                            state = 20;
                                            return ;
                                        case  21 :
                                            state = 24;
                                            continue outer;
                                        case  10 :
                                            eatText2(value);
                                            state = 11;
                                            return ;
                                        case  15 :
                                            state = 18;
                                            continue outer;
                                        case  1 :
                                            eatText3(value);
                                            state = 2;
                                            return ;
                                        case  6 :
                                            state = 9;
                                            continue outer;
                                        case  7 :
                                            eatText4(value);
                                            state = 8;
                                            return ;
                                        case  12 :
                                            state = 15;
                                            continue outer;
                                        case  9 :
                                            state = 12;
                                            continue outer;
                                        case  16 :
                                            eatText5(value);
                                            state = 17;
                                            return ;
                                        case  24 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  4 :
                                            eatText6(value);
                                            state = 5;
                                            return ;
                                        case  18 :
                                            state = 21;
                                            continue outer;
                                        case  13 :
                                            eatText7(value);
                                            state = 14;
                                            return ;
                                        case  22 :
                                            eatText8(value);
                                            state = 23;
                                            return ;
                                    }
                                } catch (java.lang.RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                                break;
                            }
                        }

                        private void eatText1(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _OvertimeRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText2(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _StandardRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText3(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _RatesFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText4(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _RateTable = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText5(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _OvertimeRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText6(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _RatesTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText7(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _StandardRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                        private void eatText8(final java.lang.String value)
                            throws org.xml.sax.SAXException
                        {
                            try {
                                _CostPerUse = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "---");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    if (("Rate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  1 :
                                    if (("RatesFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getRate().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  2 :
                                    if (("Rate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  0 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 136;
                                    return ;
                                }
                                state = 138;
                                continue outer;
                            case  72 :
                                if (("AccrueAt" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 73;
                                    return ;
                                }
                                state = 75;
                                continue outer;
                            case  117 :
                                if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 118;
                                    return ;
                                }
                                state = 120;
                                continue outer;
                            case  48 :
                                if (("MaxUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 49;
                                    return ;
                                }
                                state = 51;
                                continue outer;
                            case  138 :
                                if (("SV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 139;
                                    return ;
                                }
                                state = 141;
                                continue outer;
                            case  195 :
                                if (("Rates" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 196;
                                    return ;
                                }
                                state = 198;
                                continue outer;
                            case  78 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 79;
                                    return ;
                                }
                                state = 81;
                                continue outer;
                            case  6 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  190 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  123 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 124;
                                    return ;
                                }
                                state = 126;
                                continue outer;
                            case  192 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 190;
                                    return ;
                                }
                                if (("AvailabilityPeriods" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 193;
                                    return ;
                                }
                                state = 195;
                                continue outer;
                            case  199 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 200, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 200, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  189 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 187;
                                    return ;
                                }
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 190;
                                    return ;
                                }
                                state = 192;
                                continue outer;
                            case  105 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 106;
                                    return ;
                                }
                                state = 108;
                                continue outer;
                            case  144 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 145;
                                    return ;
                                }
                                state = 147;
                                continue outer;
                            case  3 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  81 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 82;
                                    return ;
                                }
                                state = 84;
                                continue outer;
                            case  45 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 46;
                                    return ;
                                }
                                state = 48;
                                continue outer;
                            case  196 :
                                if (("Rate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  187 :
                                if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.class), 188, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  87 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 88;
                                    return ;
                                }
                                state = 90;
                                continue outer;
                            case  159 :
                                if (("IsGeneric" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 160;
                                    return ;
                                }
                                state = 162;
                                continue outer;
                            case  9 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  99 :
                                if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 100;
                                    return ;
                                }
                                state = 102;
                                continue outer;
                            case  114 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 115;
                                    return ;
                                }
                                state = 117;
                                continue outer;
                            case  51 :
                                if (("PeakUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 52;
                                    return ;
                                }
                                state = 54;
                                continue outer;
                            case  201 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 199;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  93 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 94;
                                    return ;
                                }
                                state = 96;
                                continue outer;
                            case  186 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 184;
                                    return ;
                                }
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 187;
                                    return ;
                                }
                                state = 189;
                                continue outer;
                            case  108 :
                                if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 109;
                                    return ;
                                }
                                state = 111;
                                continue outer;
                            case  198 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 199;
                                    return ;
                                }
                                state = 201;
                                continue outer;
                            case  150 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 151;
                                    return ;
                                }
                                state = 153;
                                continue outer;
                            case  12 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  30 :
                                if (("Group" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  120 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 121;
                                    return ;
                                }
                                state = 123;
                                continue outer;
                            case  33 :
                                if (("WorkGroup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  111 :
                                if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 112;
                                    return ;
                                }
                                state = 114;
                                continue outer;
                            case  153 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 154;
                                    return ;
                                }
                                state = 156;
                                continue outer;
                            case  184 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  27 :
                                if (("Code" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  54 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 55;
                                    return ;
                                }
                                state = 57;
                                continue outer;
                            case  174 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 175;
                                    return ;
                                }
                                state = 177;
                                continue outer;
                            case  162 :
                                if (("IsInactive" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 163;
                                    return ;
                                }
                                state = 165;
                                continue outer;
                            case  96 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 97;
                                    return ;
                                }
                                state = 99;
                                continue outer;
                            case  57 :
                                if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 58;
                                    return ;
                                }
                                state = 60;
                                continue outer;
                            case  21 :
                                if (("NTAccount" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  102 :
                                if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 103;
                                    return ;
                                }
                                state = 105;
                                continue outer;
                            case  39 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 40;
                                    return ;
                                }
                                state = 42;
                                continue outer;
                            case  126 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 127;
                                    return ;
                                }
                                state = 129;
                                continue outer;
                            case  180 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 181;
                                    return ;
                                }
                                state = 183;
                                continue outer;
                            case  90 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 91;
                                    return ;
                                }
                                state = 93;
                                continue outer;
                            case  42 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 43;
                                    return ;
                                }
                                state = 45;
                                continue outer;
                            case  147 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 148;
                                    return ;
                                }
                                state = 150;
                                continue outer;
                            case  75 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 76;
                                    return ;
                                }
                                state = 78;
                                continue outer;
                            case  168 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 169;
                                    return ;
                                }
                                state = 171;
                                continue outer;
                            case  15 :
                                if (("Initials" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  141 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 142;
                                    return ;
                                }
                                state = 144;
                                continue outer;
                            case  129 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 130;
                                    return ;
                                }
                                state = 132;
                                continue outer;
                            case  156 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 157;
                                    return ;
                                }
                                state = 159;
                                continue outer;
                            case  18 :
                                if (("Phonetics" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  177 :
                                if (("ActiveDirectoryGUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 178;
                                    return ;
                                }
                                state = 180;
                                continue outer;
                            case  183 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 184;
                                    return ;
                                }
                                state = 186;
                                continue outer;
                            case  69 :
                                if (("CanLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 70;
                                    return ;
                                }
                                state = 72;
                                continue outer;
                            case  63 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 64;
                                    return ;
                                }
                                state = 66;
                                continue outer;
                            case  165 :
                                if (("IsEnterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 166;
                                    return ;
                                }
                                state = 168;
                                continue outer;
                            case  171 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 172;
                                    return ;
                                }
                                state = 174;
                                continue outer;
                            case  132 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 133;
                                    return ;
                                }
                                state = 135;
                                continue outer;
                            case  24 :
                                if (("MaterialLabel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  193 :
                                if (("AvailabilityPeriod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname, __atts));
                                return ;
                            case  36 :
                                if (("EmailAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 37;
                                    return ;
                                }
                                state = 39;
                                continue outer;
                            case  60 :
                                if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 61;
                                    return ;
                                }
                                state = 63;
                                continue outer;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  66 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 67;
                                    return ;
                                }
                                state = 69;
                                continue outer;
                            case  84 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 85;
                                    return ;
                                }
                                state = 87;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                state = 138;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  14 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  98 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 99;
                                    return ;
                                }
                                break;
                            case  179 :
                                if (("ActiveDirectoryGUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 180;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  134 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 135;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("Code" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  200 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 201;
                                    return ;
                                }
                                break;
                            case  71 :
                                if (("CanLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 72;
                                    return ;
                                }
                                break;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  190 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname)));
                                return ;
                            case  161 :
                                if (("IsGeneric" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 162;
                                    return ;
                                }
                                break;
                            case  92 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 93;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  44 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 45;
                                    return ;
                                }
                                break;
                            case  74 :
                                if (("AccrueAt" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 75;
                                    return ;
                                }
                                break;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  116 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 117;
                                    return ;
                                }
                                break;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  185 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 186;
                                    return ;
                                }
                                break;
                            case  194 :
                                if (("AvailabilityPeriods" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 195;
                                    return ;
                                }
                                break;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  107 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 108;
                                    return ;
                                }
                                break;
                            case  32 :
                                if (("Group" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  65 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 66;
                                    return ;
                                }
                                break;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  173 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 174;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  35 :
                                if (("WorkGroup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  196 :
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname));
                                return ;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  23 :
                                if (("NTAccount" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  62 :
                                if (("AvailableTo" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 63;
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  5 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  104 :
                                if (("StandardRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 105;
                                    return ;
                                }
                                break;
                            case  158 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 159;
                                    return ;
                                }
                                break;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  164 :
                                if (("IsInactive" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 165;
                                    return ;
                                }
                                break;
                            case  201 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  170 :
                                if (("BookingType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 171;
                                    return ;
                                }
                                break;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  68 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 69;
                                    return ;
                                }
                                break;
                            case  113 :
                                if (("OvertimeRateFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 114;
                                    return ;
                                }
                                break;
                            case  95 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 96;
                                    return ;
                                }
                                break;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  188 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 189;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  152 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 153;
                                    return ;
                                }
                                break;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  155 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 156;
                                    return ;
                                }
                                break;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  197 :
                                if (("Rates" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 198;
                                    return ;
                                }
                                break;
                            case  182 :
                                if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 183;
                                    return ;
                                }
                                break;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  184 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname)));
                                return ;
                            case  83 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 84;
                                    return ;
                                }
                                break;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  86 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 87;
                                    return ;
                                }
                                break;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  167 :
                                if (("IsEnterprise" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 168;
                                    return ;
                                }
                                break;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  137 :
                                if (("CostVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 138;
                                    return ;
                                }
                                break;
                            case  131 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 132;
                                    return ;
                                }
                                break;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  149 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 150;
                                    return ;
                                }
                                break;
                            case  128 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 129;
                                    return ;
                                }
                                break;
                            case  80 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 81;
                                    return ;
                                }
                                break;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  38 :
                                if (("EmailAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 39;
                                    return ;
                                }
                                break;
                            case  122 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 123;
                                    return ;
                                }
                                break;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  110 :
                                if (("OvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 111;
                                    return ;
                                }
                                break;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  17 :
                                if (("Initials" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  41 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 42;
                                    return ;
                                }
                                break;
                            case  125 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 126;
                                    return ;
                                }
                                break;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  119 :
                                if (("CostPerUse" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 120;
                                    return ;
                                }
                                break;
                            case  143 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 144;
                                    return ;
                                }
                                break;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  50 :
                                if (("MaxUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 51;
                                    return ;
                                }
                                break;
                            case  59 :
                                if (("AvailableFrom" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 60;
                                    return ;
                                }
                                break;
                            case  56 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 57;
                                    return ;
                                }
                                break;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  191 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 192;
                                    return ;
                                }
                                break;
                            case  47 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 48;
                                    return ;
                                }
                                break;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  101 :
                                if (("StandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 102;
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  176 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 177;
                                    return ;
                                }
                                break;
                            case  89 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 90;
                                    return ;
                                }
                                break;
                            case  53 :
                                if (("PeakUnits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 54;
                                    return ;
                                }
                                break;
                            case  193 :
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  146 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 147;
                                    return ;
                                }
                                break;
                            case  20 :
                                if (("Phonetics" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  77 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 78;
                                    return ;
                                }
                                break;
                            case  140 :
                                if (("SV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 141;
                                    return ;
                                }
                                break;
                            case  26 :
                                if (("MaterialLabel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                state = 138;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  190 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname)));
                                return ;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  196 :
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname));
                                return ;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  201 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  184 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname)));
                                return ;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  193 :
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  135 :
                                state = 138;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  195 :
                                state = 198;
                                continue outer;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  190 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, ___uri, ___local, ___qname)));
                                return ;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  196 :
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, ___uri, ___local, ___qname));
                                return ;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  201 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  184 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, ___uri, ___local, ___qname)));
                                return ;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  193 :
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, ___uri, ___local, ___qname));
                                return ;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  135 :
                                    state = 138;
                                    continue outer;
                                case  72 :
                                    state = 75;
                                    continue outer;
                                case  64 :
                                    eatText1(value);
                                    state = 65;
                                    return ;
                                case  16 :
                                    eatText2(value);
                                    state = 17;
                                    return ;
                                case  100 :
                                    eatText3(value);
                                    state = 101;
                                    return ;
                                case  117 :
                                    state = 120;
                                    continue outer;
                                case  48 :
                                    state = 51;
                                    continue outer;
                                case  55 :
                                    eatText4(value);
                                    state = 56;
                                    return ;
                                case  139 :
                                    eatText5(value);
                                    state = 140;
                                    return ;
                                case  138 :
                                    state = 141;
                                    continue outer;
                                case  195 :
                                    state = 198;
                                    continue outer;
                                case  133 :
                                    eatText6(value);
                                    state = 134;
                                    return ;
                                case  78 :
                                    state = 81;
                                    continue outer;
                                case  70 :
                                    eatText7(value);
                                    state = 71;
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  190 :
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 191, value)));
                                    return ;
                                case  94 :
                                    eatText8(value);
                                    state = 95;
                                    return ;
                                case  123 :
                                    state = 126;
                                    continue outer;
                                case  67 :
                                    eatText9(value);
                                    state = 68;
                                    return ;
                                case  151 :
                                    eatText10(value);
                                    state = 152;
                                    return ;
                                case  192 :
                                    state = 195;
                                    continue outer;
                                case  25 :
                                    eatText11(value);
                                    state = 26;
                                    return ;
                                case  10 :
                                    eatText12(value);
                                    state = 11;
                                    return ;
                                case  106 :
                                    eatText13(value);
                                    state = 107;
                                    return ;
                                case  189 :
                                    state = 192;
                                    continue outer;
                                case  105 :
                                    state = 108;
                                    continue outer;
                                case  144 :
                                    state = 147;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  85 :
                                    eatText14(value);
                                    state = 86;
                                    return ;
                                case  22 :
                                    eatText15(value);
                                    state = 23;
                                    return ;
                                case  166 :
                                    eatText16(value);
                                    state = 167;
                                    return ;
                                case  81 :
                                    state = 84;
                                    continue outer;
                                case  45 :
                                    state = 48;
                                    continue outer;
                                case  97 :
                                    eatText17(value);
                                    state = 98;
                                    return ;
                                case  175 :
                                    eatText18(value);
                                    state = 176;
                                    return ;
                                case  31 :
                                    eatText19(value);
                                    state = 32;
                                    return ;
                                case  196 :
                                    _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 197, value));
                                    return ;
                                case  87 :
                                    state = 90;
                                    continue outer;
                                case  169 :
                                    eatText20(value);
                                    state = 170;
                                    return ;
                                case  43 :
                                    eatText21(value);
                                    state = 44;
                                    return ;
                                case  7 :
                                    eatText22(value);
                                    state = 8;
                                    return ;
                                case  37 :
                                    eatText23(value);
                                    state = 38;
                                    return ;
                                case  159 :
                                    state = 162;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  99 :
                                    state = 102;
                                    continue outer;
                                case  49 :
                                    eatText24(value);
                                    state = 50;
                                    return ;
                                case  109 :
                                    eatText25(value);
                                    state = 110;
                                    return ;
                                case  114 :
                                    state = 117;
                                    continue outer;
                                case  51 :
                                    state = 54;
                                    continue outer;
                                case  4 :
                                    eatText26(value);
                                    state = 5;
                                    return ;
                                case  130 :
                                    eatText27(value);
                                    state = 131;
                                    return ;
                                case  46 :
                                    eatText28(value);
                                    state = 47;
                                    return ;
                                case  82 :
                                    eatText29(value);
                                    state = 83;
                                    return ;
                                case  201 :
                                    revertToParentFromText(value);
                                    return ;
                                case  93 :
                                    state = 96;
                                    continue outer;
                                case  127 :
                                    eatText30(value);
                                    state = 128;
                                    return ;
                                case  148 :
                                    eatText31(value);
                                    state = 149;
                                    return ;
                                case  157 :
                                    eatText32(value);
                                    state = 158;
                                    return ;
                                case  118 :
                                    eatText33(value);
                                    state = 119;
                                    return ;
                                case  186 :
                                    state = 189;
                                    continue outer;
                                case  108 :
                                    state = 111;
                                    continue outer;
                                case  142 :
                                    eatText34(value);
                                    state = 143;
                                    return ;
                                case  88 :
                                    eatText35(value);
                                    state = 89;
                                    return ;
                                case  103 :
                                    eatText36(value);
                                    state = 104;
                                    return ;
                                case  13 :
                                    eatText37(value);
                                    state = 14;
                                    return ;
                                case  79 :
                                    eatText38(value);
                                    state = 80;
                                    return ;
                                case  178 :
                                    eatText39(value);
                                    state = 179;
                                    return ;
                                case  198 :
                                    state = 201;
                                    continue outer;
                                case  154 :
                                    eatText40(value);
                                    state = 155;
                                    return ;
                                case  150 :
                                    state = 153;
                                    continue outer;
                                case  76 :
                                    eatText41(value);
                                    state = 77;
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  120 :
                                    state = 123;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  111 :
                                    state = 114;
                                    continue outer;
                                case  153 :
                                    state = 156;
                                    continue outer;
                                case  184 :
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 185, value)));
                                    return ;
                                case  28 :
                                    eatText42(value);
                                    state = 29;
                                    return ;
                                case  58 :
                                    eatText43(value);
                                    state = 59;
                                    return ;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  54 :
                                    state = 57;
                                    continue outer;
                                case  174 :
                                    state = 177;
                                    continue outer;
                                case  162 :
                                    state = 165;
                                    continue outer;
                                case  96 :
                                    state = 99;
                                    continue outer;
                                case  57 :
                                    state = 60;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  112 :
                                    eatText44(value);
                                    state = 113;
                                    return ;
                                case  124 :
                                    eatText45(value);
                                    state = 125;
                                    return ;
                                case  102 :
                                    state = 105;
                                    continue outer;
                                case  121 :
                                    eatText46(value);
                                    state = 122;
                                    return ;
                                case  39 :
                                    state = 42;
                                    continue outer;
                                case  126 :
                                    state = 129;
                                    continue outer;
                                case  163 :
                                    eatText47(value);
                                    state = 164;
                                    return ;
                                case  180 :
                                    state = 183;
                                    continue outer;
                                case  90 :
                                    state = 93;
                                    continue outer;
                                case  42 :
                                    state = 45;
                                    continue outer;
                                case  147 :
                                    state = 150;
                                    continue outer;
                                case  52 :
                                    eatText48(value);
                                    state = 53;
                                    return ;
                                case  75 :
                                    state = 78;
                                    continue outer;
                                case  168 :
                                    state = 171;
                                    continue outer;
                                case  136 :
                                    eatText49(value);
                                    state = 137;
                                    return ;
                                case  145 :
                                    eatText50(value);
                                    state = 146;
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  141 :
                                    state = 144;
                                    continue outer;
                                case  40 :
                                    eatText51(value);
                                    state = 41;
                                    return ;
                                case  129 :
                                    state = 132;
                                    continue outer;
                                case  156 :
                                    state = 159;
                                    continue outer;
                                case  73 :
                                    eatText52(value);
                                    state = 74;
                                    return ;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  181 :
                                    eatText53(value);
                                    state = 182;
                                    return ;
                                case  177 :
                                    state = 180;
                                    continue outer;
                                case  183 :
                                    state = 186;
                                    continue outer;
                                case  1 :
                                    eatText54(value);
                                    state = 2;
                                    return ;
                                case  91 :
                                    eatText55(value);
                                    state = 92;
                                    return ;
                                case  69 :
                                    state = 72;
                                    continue outer;
                                case  160 :
                                    eatText56(value);
                                    state = 161;
                                    return ;
                                case  19 :
                                    eatText57(value);
                                    state = 20;
                                    return ;
                                case  63 :
                                    state = 66;
                                    continue outer;
                                case  165 :
                                    state = 168;
                                    continue outer;
                                case  171 :
                                    state = 174;
                                    continue outer;
                                case  61 :
                                    eatText58(value);
                                    state = 62;
                                    return ;
                                case  172 :
                                    eatText59(value);
                                    state = 173;
                                    return ;
                                case  132 :
                                    state = 135;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  193 :
                                    _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 194, value));
                                    return ;
                                case  36 :
                                    state = 39;
                                    continue outer;
                                case  34 :
                                    eatText60(value);
                                    state = 35;
                                    return ;
                                case  60 :
                                    state = 63;
                                    continue outer;
                                case  66 :
                                    state = 69;
                                    continue outer;
                                case  84 :
                                    state = 87;
                                    continue outer;
                                case  115 :
                                    eatText61(value);
                                    state = 116;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Initials = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StandardRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OverAllocated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_OverAllocated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _SV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_SV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_WorkVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CanLevel = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CanLevel = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Notes = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _MaterialLabel = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText12(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText13(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText14(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText15(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _NTAccount = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText16(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsEnterprise = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsEnterprise = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText17(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentWorkComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText18(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText19(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Group = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText20(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BookingType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText21(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText22(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Name = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText23(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EmailAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText24(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _MaxUnits = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_MaxUnits = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText25(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeRate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText26(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText27(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText28(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkSubAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText29(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText30(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText31(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText32(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText33(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostPerUse = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText34(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText35(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText36(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StandardRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText37(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsNull = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsNull = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText38(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RegularWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText39(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActiveDirectoryGUID = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText40(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWS = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText41(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText42(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Code = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText43(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AvailableFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText44(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeRateFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText45(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText46(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText47(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsInactive = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsInactive = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText48(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PeakUnits = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_PeakUnits = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText49(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CostVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CostVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText50(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ACWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ACWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText51(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Hyperlink = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText52(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AccrueAt = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText53(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText54(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText55(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText56(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsGeneric = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsGeneric = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText57(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Phonetics = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText58(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _AvailableTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText59(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText60(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkGroup = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText61(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getResource().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class TasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Task;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getTask() {
            if (_Task == null) {
                _Task = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Task;
        }

        public java.util.List getTask() {
            return _getTask();
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Task == null)? 0 :_Task.size());
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Task");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Task.get(idx_0 ++)), "Task");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Task.get(idx_1 ++)), "Task");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Task.get(idx1 ++)), "Task");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Task == null)? 0 :_Task.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Task == null)? 0 :_Task.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000;com.tapsterrock.mspdi.schema.ProjectType.TasksT"
+"ype.TaskTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004name"
+"t\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.data"
+"type.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Bu"
+"iltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concr"
+"eteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImp"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv."
+"grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnam"
+"espaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/"
+"2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Taskt\u0000$http://schemas.m"
+"icrosoft.com/projectq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionP"
+"ool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionP"
+"ool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clos"
+"edHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/su"
+"n/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000~\u0000\u0010q\u0000~"
+"\u0000\u0005q\u0000~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class TaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.util.Calendar _LateFinish;
            protected java.util.Calendar _PreLeveledStart;
            protected boolean has_Summary;
            protected boolean _Summary;
            protected java.util.Calendar _Resume;
            protected boolean has_Recurring;
            protected boolean _Recurring;
            protected boolean has_Critical;
            protected boolean _Critical;
            protected java.util.Calendar _CreateDate;
            protected java.lang.String _Work;
            protected java.util.Calendar _PreLeveledFinish;
            protected boolean has_Estimated;
            protected boolean _Estimated;
            protected boolean has_IgnoreResourceCalendar;
            protected boolean _IgnoreResourceCalendar;
            protected java.math.BigInteger _StartVariance;
            protected java.math.BigInteger _FinishVariance;
            protected java.math.BigInteger _CalendarUID;
            protected java.lang.String _HyperlinkSubAddress;
            protected java.lang.String _RemainingOvertimeWork;
            protected boolean has_IsSubprojectReadOnly;
            protected boolean _IsSubprojectReadOnly;
            protected java.lang.String _ActualWorkProtected;
            protected java.lang.String _RemainingWork;
            protected java.util.Calendar _Deadline;
            protected java.lang.String _WBSLevel;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected java.lang.String _HyperlinkAddress;
            protected boolean has_Milestone;
            protected boolean _Milestone;
            protected java.lang.String _WBS;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigDecimal _ActualCost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected java.lang.String _ActualOvertimeWorkProtected;
            protected java.math.BigInteger _LevelingDelay;
            protected boolean has_FixedCost;
            protected float _FixedCost;
            protected java.math.BigDecimal _RemainingCost;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected java.lang.String _Contact;
            protected java.lang.String _ActualOvertimeWork;
            protected java.math.BigInteger _LevelingDelayFormat;
            protected java.lang.String _SubprojectName;
            protected java.math.BigInteger _FreeSlack;
            protected boolean has_EffortDriven;
            protected boolean _EffortDriven;
            protected boolean has_LevelAssignments;
            protected boolean _LevelAssignments;
            protected java.lang.String _Duration;
            protected com.sun.xml.bind.util.ListImpl _Baseline;
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.lang.String _Hyperlink;
            protected java.math.BigInteger _ID;
            protected java.math.BigInteger _PhysicalPercentComplete;
            protected java.math.BigInteger _DurationFormat;
            protected java.math.BigInteger _Type;
            protected boolean has_IsNull;
            protected boolean _IsNull;
            protected java.math.BigInteger _ConstraintType;
            protected java.math.BigInteger _PercentComplete;
            protected java.util.Calendar _EarlyStart;
            protected com.sun.xml.bind.util.ListImpl _TimephasedData;
            protected java.math.BigInteger _Priority;
            protected boolean has_LevelingCanSplit;
            protected boolean _LevelingCanSplit;
            protected boolean has_IsSubproject;
            protected boolean _IsSubproject;
            protected java.util.Calendar _ConstraintDate;
            protected com.sun.xml.bind.util.ListImpl _ExtendedAttribute;
            protected boolean has_HideBar;
            protected boolean _HideBar;
            protected java.lang.String _RegularWork;
            protected java.lang.String _Name;
            protected java.lang.String _ActualDuration;
            protected java.lang.String _OvertimeWork;
            protected java.lang.String _OutlineNumber;
            protected boolean has_ExternalTask;
            protected boolean _ExternalTask;
            protected java.lang.String _FixedCostAccrual;
            protected java.util.Calendar _Stop;
            protected com.sun.xml.bind.util.ListImpl _PredecessorLink;
            protected java.util.Calendar _EarlyFinish;
            protected java.lang.String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.Calendar _LateStart;
            protected java.util.Calendar _ActualStart;
            protected com.sun.xml.bind.util.ListImpl _OutlineCode;
            protected java.math.BigInteger _TotalSlack;
            protected java.lang.String _ActualWork;
            protected boolean has_ResumeValid;
            protected boolean _ResumeValid;
            protected java.math.BigInteger _UID;
            protected boolean has_Rollup;
            protected boolean _Rollup;
            protected java.util.Calendar _ActualFinish;
            protected boolean has_OverAllocated;
            protected boolean _OverAllocated;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.math.BigInteger _EarnedValueMethod;
            protected java.lang.String _RemainingDuration;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.math.BigInteger _OutlineLevel;
            protected java.lang.String _ExternalTaskProject;
            protected boolean has_CV;
            protected float _CV;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.class);
            }

            public java.util.Calendar getLateFinish() {
                return _LateFinish;
            }

            public void setLateFinish(java.util.Calendar value) {
                _LateFinish = value;
            }

            public java.util.Calendar getPreLeveledStart() {
                return _PreLeveledStart;
            }

            public void setPreLeveledStart(java.util.Calendar value) {
                _PreLeveledStart = value;
            }

            public boolean isSummary() {
                return _Summary;
            }

            public void setSummary(boolean value) {
                _Summary = value;
                has_Summary = true;
            }

            public java.util.Calendar getResume() {
                return _Resume;
            }

            public void setResume(java.util.Calendar value) {
                _Resume = value;
            }

            public boolean isRecurring() {
                return _Recurring;
            }

            public void setRecurring(boolean value) {
                _Recurring = value;
                has_Recurring = true;
            }

            public boolean isCritical() {
                return _Critical;
            }

            public void setCritical(boolean value) {
                _Critical = value;
                has_Critical = true;
            }

            public java.util.Calendar getCreateDate() {
                return _CreateDate;
            }

            public void setCreateDate(java.util.Calendar value) {
                _CreateDate = value;
            }

            public java.lang.String getWork() {
                return _Work;
            }

            public void setWork(java.lang.String value) {
                _Work = value;
            }

            public java.util.Calendar getPreLeveledFinish() {
                return _PreLeveledFinish;
            }

            public void setPreLeveledFinish(java.util.Calendar value) {
                _PreLeveledFinish = value;
            }

            public boolean isEstimated() {
                return _Estimated;
            }

            public void setEstimated(boolean value) {
                _Estimated = value;
                has_Estimated = true;
            }

            public boolean isIgnoreResourceCalendar() {
                return _IgnoreResourceCalendar;
            }

            public void setIgnoreResourceCalendar(boolean value) {
                _IgnoreResourceCalendar = value;
                has_IgnoreResourceCalendar = true;
            }

            public java.math.BigInteger getStartVariance() {
                return _StartVariance;
            }

            public void setStartVariance(java.math.BigInteger value) {
                _StartVariance = value;
            }

            public java.math.BigInteger getFinishVariance() {
                return _FinishVariance;
            }

            public void setFinishVariance(java.math.BigInteger value) {
                _FinishVariance = value;
            }

            public java.math.BigInteger getCalendarUID() {
                return _CalendarUID;
            }

            public void setCalendarUID(java.math.BigInteger value) {
                _CalendarUID = value;
            }

            public java.lang.String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(java.lang.String value) {
                _HyperlinkSubAddress = value;
            }

            public java.lang.String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(java.lang.String value) {
                _RemainingOvertimeWork = value;
            }

            public boolean isIsSubprojectReadOnly() {
                return _IsSubprojectReadOnly;
            }

            public void setIsSubprojectReadOnly(boolean value) {
                _IsSubprojectReadOnly = value;
                has_IsSubprojectReadOnly = true;
            }

            public java.lang.String getActualWorkProtected() {
                return _ActualWorkProtected;
            }

            public void setActualWorkProtected(java.lang.String value) {
                _ActualWorkProtected = value;
            }

            public java.lang.String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(java.lang.String value) {
                _RemainingWork = value;
            }

            public java.util.Calendar getDeadline() {
                return _Deadline;
            }

            public void setDeadline(java.util.Calendar value) {
                _Deadline = value;
            }

            public java.lang.String getWBSLevel() {
                return _WBSLevel;
            }

            public void setWBSLevel(java.lang.String value) {
                _WBSLevel = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public java.lang.String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(java.lang.String value) {
                _HyperlinkAddress = value;
            }

            public boolean isMilestone() {
                return _Milestone;
            }

            public void setMilestone(boolean value) {
                _Milestone = value;
                has_Milestone = true;
            }

            public java.lang.String getWBS() {
                return _WBS;
            }

            public void setWBS(java.lang.String value) {
                _WBS = value;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public java.lang.String getActualOvertimeWorkProtected() {
                return _ActualOvertimeWorkProtected;
            }

            public void setActualOvertimeWorkProtected(java.lang.String value) {
                _ActualOvertimeWorkProtected = value;
            }

            public java.math.BigInteger getLevelingDelay() {
                return _LevelingDelay;
            }

            public void setLevelingDelay(java.math.BigInteger value) {
                _LevelingDelay = value;
            }

            public float getFixedCost() {
                return _FixedCost;
            }

            public void setFixedCost(float value) {
                _FixedCost = value;
                has_FixedCost = true;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public java.lang.String getContact() {
                return _Contact;
            }

            public void setContact(java.lang.String value) {
                _Contact = value;
            }

            public java.lang.String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(java.lang.String value) {
                _ActualOvertimeWork = value;
            }

            public java.math.BigInteger getLevelingDelayFormat() {
                return _LevelingDelayFormat;
            }

            public void setLevelingDelayFormat(java.math.BigInteger value) {
                _LevelingDelayFormat = value;
            }

            public java.lang.String getSubprojectName() {
                return _SubprojectName;
            }

            public void setSubprojectName(java.lang.String value) {
                _SubprojectName = value;
            }

            public java.math.BigInteger getFreeSlack() {
                return _FreeSlack;
            }

            public void setFreeSlack(java.math.BigInteger value) {
                _FreeSlack = value;
            }

            public boolean isEffortDriven() {
                return _EffortDriven;
            }

            public void setEffortDriven(boolean value) {
                _EffortDriven = value;
                has_EffortDriven = true;
            }

            public boolean isLevelAssignments() {
                return _LevelAssignments;
            }

            public void setLevelAssignments(boolean value) {
                _LevelAssignments = value;
                has_LevelAssignments = true;
            }

            public java.lang.String getDuration() {
                return _Duration;
            }

            public void setDuration(java.lang.String value) {
                _Duration = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getBaseline() {
                if (_Baseline == null) {
                    _Baseline = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _Baseline;
            }

            public java.util.List getBaseline() {
                return _getBaseline();
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.lang.String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(java.lang.String value) {
                _Hyperlink = value;
            }

            public java.math.BigInteger getID() {
                return _ID;
            }

            public void setID(java.math.BigInteger value) {
                _ID = value;
            }

            public java.math.BigInteger getPhysicalPercentComplete() {
                return _PhysicalPercentComplete;
            }

            public void setPhysicalPercentComplete(java.math.BigInteger value) {
                _PhysicalPercentComplete = value;
            }

            public java.math.BigInteger getDurationFormat() {
                return _DurationFormat;
            }

            public void setDurationFormat(java.math.BigInteger value) {
                _DurationFormat = value;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public boolean isIsNull() {
                return _IsNull;
            }

            public void setIsNull(boolean value) {
                _IsNull = value;
                has_IsNull = true;
            }

            public java.math.BigInteger getConstraintType() {
                return _ConstraintType;
            }

            public void setConstraintType(java.math.BigInteger value) {
                _ConstraintType = value;
            }

            public java.math.BigInteger getPercentComplete() {
                return _PercentComplete;
            }

            public void setPercentComplete(java.math.BigInteger value) {
                _PercentComplete = value;
            }

            public java.util.Calendar getEarlyStart() {
                return _EarlyStart;
            }

            public void setEarlyStart(java.util.Calendar value) {
                _EarlyStart = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getTimephasedData() {
                if (_TimephasedData == null) {
                    _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _TimephasedData;
            }

            public java.util.List getTimephasedData() {
                return _getTimephasedData();
            }

            public java.math.BigInteger getPriority() {
                return _Priority;
            }

            public void setPriority(java.math.BigInteger value) {
                _Priority = value;
            }

            public boolean isLevelingCanSplit() {
                return _LevelingCanSplit;
            }

            public void setLevelingCanSplit(boolean value) {
                _LevelingCanSplit = value;
                has_LevelingCanSplit = true;
            }

            public boolean isIsSubproject() {
                return _IsSubproject;
            }

            public void setIsSubproject(boolean value) {
                _IsSubproject = value;
                has_IsSubproject = true;
            }

            public java.util.Calendar getConstraintDate() {
                return _ConstraintDate;
            }

            public void setConstraintDate(java.util.Calendar value) {
                _ConstraintDate = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getExtendedAttribute() {
                if (_ExtendedAttribute == null) {
                    _ExtendedAttribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _ExtendedAttribute;
            }

            public java.util.List getExtendedAttribute() {
                return _getExtendedAttribute();
            }

            public boolean isHideBar() {
                return _HideBar;
            }

            public void setHideBar(boolean value) {
                _HideBar = value;
                has_HideBar = true;
            }

            public java.lang.String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(java.lang.String value) {
                _RegularWork = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.lang.String getActualDuration() {
                return _ActualDuration;
            }

            public void setActualDuration(java.lang.String value) {
                _ActualDuration = value;
            }

            public java.lang.String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(java.lang.String value) {
                _OvertimeWork = value;
            }

            public java.lang.String getOutlineNumber() {
                return _OutlineNumber;
            }

            public void setOutlineNumber(java.lang.String value) {
                _OutlineNumber = value;
            }

            public boolean isExternalTask() {
                return _ExternalTask;
            }

            public void setExternalTask(boolean value) {
                _ExternalTask = value;
                has_ExternalTask = true;
            }

            public java.lang.String getFixedCostAccrual() {
                return _FixedCostAccrual;
            }

            public void setFixedCostAccrual(java.lang.String value) {
                _FixedCostAccrual = value;
            }

            public java.util.Calendar getStop() {
                return _Stop;
            }

            public void setStop(java.util.Calendar value) {
                _Stop = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getPredecessorLink() {
                if (_PredecessorLink == null) {
                    _PredecessorLink = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _PredecessorLink;
            }

            public java.util.List getPredecessorLink() {
                return _getPredecessorLink();
            }

            public java.util.Calendar getEarlyFinish() {
                return _EarlyFinish;
            }

            public void setEarlyFinish(java.util.Calendar value) {
                _EarlyFinish = value;
            }

            public java.lang.String getNotes() {
                return _Notes;
            }

            public void setNotes(java.lang.String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.Calendar getLateStart() {
                return _LateStart;
            }

            public void setLateStart(java.util.Calendar value) {
                _LateStart = value;
            }

            public java.util.Calendar getActualStart() {
                return _ActualStart;
            }

            public void setActualStart(java.util.Calendar value) {
                _ActualStart = value;
            }

            protected com.sun.xml.bind.util.ListImpl _getOutlineCode() {
                if (_OutlineCode == null) {
                    _OutlineCode = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _OutlineCode;
            }

            public java.util.List getOutlineCode() {
                return _getOutlineCode();
            }

            public java.math.BigInteger getTotalSlack() {
                return _TotalSlack;
            }

            public void setTotalSlack(java.math.BigInteger value) {
                _TotalSlack = value;
            }

            public java.lang.String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(java.lang.String value) {
                _ActualWork = value;
            }

            public boolean isResumeValid() {
                return _ResumeValid;
            }

            public void setResumeValid(boolean value) {
                _ResumeValid = value;
                has_ResumeValid = true;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public boolean isRollup() {
                return _Rollup;
            }

            public void setRollup(boolean value) {
                _Rollup = value;
                has_Rollup = true;
            }

            public java.util.Calendar getActualFinish() {
                return _ActualFinish;
            }

            public void setActualFinish(java.util.Calendar value) {
                _ActualFinish = value;
            }

            public boolean isOverAllocated() {
                return _OverAllocated;
            }

            public void setOverAllocated(boolean value) {
                _OverAllocated = value;
                has_OverAllocated = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.math.BigInteger getEarnedValueMethod() {
                return _EarnedValueMethod;
            }

            public void setEarnedValueMethod(java.math.BigInteger value) {
                _EarnedValueMethod = value;
            }

            public java.lang.String getRemainingDuration() {
                return _RemainingDuration;
            }

            public void setRemainingDuration(java.lang.String value) {
                _RemainingDuration = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.math.BigInteger getOutlineLevel() {
                return _OutlineLevel;
            }

            public void setOutlineLevel(java.math.BigInteger value) {
                _OutlineLevel = value;
            }

            public java.lang.String getExternalTaskProject() {
                return _ExternalTaskProject;
            }

            public void setExternalTaskProject(java.lang.String value) {
                _ExternalTaskProject = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx45 = 0;
                final int len45 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx56 = 0;
                final int len56 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx61 = 0;
                final int len61 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                int idx71 = 0;
                final int len71 = ((_PredecessorLink == null)? 0 :_PredecessorLink.size());
                int idx77 = 0;
                final int len77 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                if (_ID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ID)), "ID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Name), "Name");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Type!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Type");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsNull) {
                    context.startElement("http://schemas.microsoft.com/project", "IsNull");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsNull)), "IsNull");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CreateDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreateDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreateDate), null), "CreateDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Contact!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Contact");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Contact), "Contact");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WBS!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WBS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _WBS), "WBS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_WBSLevel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WBSLevel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _WBSLevel), "WBSLevel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OutlineNumber!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineNumber");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OutlineNumber), "OutlineNumber");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OutlineLevel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineLevel");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _OutlineLevel)), "OutlineLevel");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Priority!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Priority");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Priority)), "Priority");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Duration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Duration");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Duration), "Duration");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_DurationFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Work), "Work");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Stop!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Stop");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Stop), null), "Stop");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Resume!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Resume");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Resume), null), "Resume");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ResumeValid) {
                    context.startElement("http://schemas.microsoft.com/project", "ResumeValid");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ResumeValid)), "ResumeValid");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_EffortDriven) {
                    context.startElement("http://schemas.microsoft.com/project", "EffortDriven");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EffortDriven)), "EffortDriven");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Recurring) {
                    context.startElement("http://schemas.microsoft.com/project", "Recurring");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Recurring)), "Recurring");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_OverAllocated) {
                    context.startElement("http://schemas.microsoft.com/project", "OverAllocated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OverAllocated)), "OverAllocated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Estimated) {
                    context.startElement("http://schemas.microsoft.com/project", "Estimated");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Estimated)), "Estimated");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Milestone) {
                    context.startElement("http://schemas.microsoft.com/project", "Milestone");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Milestone)), "Milestone");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Summary) {
                    context.startElement("http://schemas.microsoft.com/project", "Summary");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Summary)), "Summary");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Critical) {
                    context.startElement("http://schemas.microsoft.com/project", "Critical");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Critical)), "Critical");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsSubproject) {
                    context.startElement("http://schemas.microsoft.com/project", "IsSubproject");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsSubproject)), "IsSubproject");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IsSubprojectReadOnly) {
                    context.startElement("http://schemas.microsoft.com/project", "IsSubprojectReadOnly");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsSubprojectReadOnly)), "IsSubprojectReadOnly");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_SubprojectName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "SubprojectName");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _SubprojectName), "SubprojectName");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ExternalTask) {
                    context.startElement("http://schemas.microsoft.com/project", "ExternalTask");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ExternalTask)), "ExternalTask");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ExternalTaskProject!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ExternalTaskProject");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ExternalTaskProject), "ExternalTaskProject");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EarlyStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarlyStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EarlyStart), null), "EarlyStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EarlyFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarlyFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EarlyFinish), null), "EarlyFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LateStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LateStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LateStart), null), "LateStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LateFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LateFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LateFinish), null), "LateFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_StartVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StartVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _StartVariance)), "StartVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FinishVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FinishVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FinishVariance)), "FinishVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _WorkVariance)), "WorkVariance");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FreeSlack!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FreeSlack");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _FreeSlack)), "FreeSlack");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_TotalSlack!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "TotalSlack");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _TotalSlack)), "TotalSlack");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_FixedCost) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _FixedCost)), "FixedCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_FixedCostAccrual!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedCostAccrual");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _FixedCostAccrual), "FixedCostAccrual");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentComplete)), "PercentComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PercentWorkComplete)), "PercentWorkComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OvertimeCost)), "OvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _OvertimeWork), "OvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualStart), null), "ActualStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualFinish), null), "ActualFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualDuration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualDuration");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualDuration), "ActualDuration");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualCost)), "ActualCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ActualOvertimeCost)), "ActualOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWork), "ActualWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWork), "ActualOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RegularWork), "RegularWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingDuration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingDuration");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingDuration), "RemainingDuration");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingCost)), "RemainingCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingWork), "RemainingWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _RemainingOvertimeCost)), "RemainingOvertimeCost");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _RemainingOvertimeWork), "RemainingOvertimeWork");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _ACWP)), "ACWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _CV)), "CV");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ConstraintType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ConstraintType");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ConstraintType)), "ConstraintType");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_CalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _CalendarUID)), "CalendarUID");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ConstraintDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ConstraintDate");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ConstraintDate), null), "ConstraintDate");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Deadline!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Deadline");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Deadline), null), "Deadline");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LevelAssignments) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelAssignments");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LevelAssignments)), "LevelAssignments");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_LevelingCanSplit) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingCanSplit");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _LevelingCanSplit)), "LevelingCanSplit");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelay");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelay)), "LevelingDelay");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_LevelingDelayFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelayFormat");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LevelingDelayFormat)), "LevelingDelayFormat");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PreLeveledStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PreLeveledStart");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _PreLeveledStart), null), "PreLeveledStart");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PreLeveledFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PreLeveledFinish");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _PreLeveledFinish), null), "PreLeveledFinish");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Hyperlink), "Hyperlink");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkAddress), "HyperlinkAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _HyperlinkSubAddress), "HyperlinkSubAddress");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_IgnoreResourceCalendar) {
                    context.startElement("http://schemas.microsoft.com/project", "IgnoreResourceCalendar");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IgnoreResourceCalendar)), "IgnoreResourceCalendar");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _Notes), "Notes");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_HideBar) {
                    context.startElement("http://schemas.microsoft.com/project", "HideBar");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _HideBar)), "HideBar");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_Rollup) {
                    context.startElement("http://schemas.microsoft.com/project", "Rollup");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Rollup)), "Rollup");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_PhysicalPercentComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhysicalPercentComplete");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PhysicalPercentComplete)), "PhysicalPercentComplete");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_EarnedValueMethod!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarnedValueMethod");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _EarnedValueMethod)), "EarnedValueMethod");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx71 != len71) {
                    context.startElement("http://schemas.microsoft.com/project", "PredecessorLink");
                    int idx_168 = idx71;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PredecessorLink.get(idx_168 ++)), "PredecessorLink");
                    context.endNamespaceDecls();
                    int idx_169 = idx71;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PredecessorLink.get(idx_169 ++)), "PredecessorLink");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _PredecessorLink.get(idx71 ++)), "PredecessorLink");
                    context.endElement();
                }
                if (_ActualWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualWorkProtected), "ActualWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                if (_ActualOvertimeWorkProtected!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWorkProtected");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _ActualOvertimeWorkProtected), "ActualOvertimeWorkProtected");
                    } catch (java.lang.Exception e) {
                        com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }
                while (idx61 != len61) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_174 = idx61;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_174 ++)), "ExtendedAttribute");
                    context.endNamespaceDecls();
                    int idx_175 = idx61;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx_175 ++)), "ExtendedAttribute");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExtendedAttribute.get(idx61 ++)), "ExtendedAttribute");
                    context.endElement();
                }
                while (idx45 != len45) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_176 = idx45;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_176 ++)), "Baseline");
                    context.endNamespaceDecls();
                    int idx_177 = idx45;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx_177 ++)), "Baseline");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Baseline.get(idx45 ++)), "Baseline");
                    context.endElement();
                }
                while (idx77 != len77) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                    int idx_178 = idx77;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_178 ++)), "OutlineCode");
                    context.endNamespaceDecls();
                    int idx_179 = idx77;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx_179 ++)), "OutlineCode");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _OutlineCode.get(idx77 ++)), "OutlineCode");
                    context.endElement();
                }
                while (idx56 != len56) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_180 = idx56;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_180 ++)), "TimephasedData");
                    context.endNamespaceDecls();
                    int idx_181 = idx56;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_181 ++)), "TimephasedData");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx56 ++)), "TimephasedData");
                    context.endElement();
                }
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx45 = 0;
                final int len45 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx56 = 0;
                final int len56 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx61 = 0;
                final int len61 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                int idx71 = 0;
                final int len71 = ((_PredecessorLink == null)? 0 :_PredecessorLink.size());
                int idx77 = 0;
                final int len77 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
                while (idx71 != len71) {
                    idx71 += 1;
                }
                while (idx61 != len61) {
                    idx61 += 1;
                }
                while (idx45 != len45) {
                    idx45 += 1;
                }
                while (idx77 != len77) {
                    idx77 += 1;
                }
                while (idx56 != len56) {
                    idx56 += 1;
                }
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx45 = 0;
                final int len45 = ((_Baseline == null)? 0 :_Baseline.size());
                int idx56 = 0;
                final int len56 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                int idx61 = 0;
                final int len61 = ((_ExtendedAttribute == null)? 0 :_ExtendedAttribute.size());
                int idx71 = 0;
                final int len71 = ((_PredecessorLink == null)? 0 :_PredecessorLink.size());
                int idx77 = 0;
                final int len77 = ((_OutlineCode == null)? 0 :_OutlineCode.size());
                while (idx71 != len71) {
                    idx71 += 1;
                }
                while (idx61 != len61) {
                    idx61 += 1;
                }
                while (idx45 != len45) {
                    idx45 += 1;
                }
                while (idx77 != len77) {
                    idx77 += 1;
                }
                while (idx56 != len56) {
                    idx56 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+"
+"com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbas"
+"eFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.s"
+"un.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun."
+"msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.data"
+"type.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/la"
+"ng/String;L\u0000\btypeNameq\u0000~\u0000nL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.Fractio"
+"nDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd."
+"DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012"
+"needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000jL\u0000\fconcreteTypet\u0000\'Lcom/sun"
+"/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000nxq\u0000~\u0000mppq\u0000~\u0000"
+"u\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq"
+"\u0000~\u0000qt\u0000\u0007decimalq\u0000~\u0000uq\u0000~\u0000|t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv"
+".grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001b"
+"com.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000nL\u0000\fna"
+"mespaceURIq\u0000~\u0000nxpq\u0000~\u0000rq\u0000~\u0000qsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000`xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000dppsr\u0000\"com.sun.msv.datatype.xsd"
+".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0005QNameq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000"
+"\u008cq\u0000~\u0000qsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000nL\u0000\fnamespaceURIq\u0000~\u0000nxr\u0000\u001dcom.sun.msv.grammar.Nam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"
+"a-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0087\u0001q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0003UIDt\u0000$http://schemas"
+".microsoft.com/projectsq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0002IDq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083pp"
+"sq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsr\u0000\'com.sun.msv.datatype.xsd.Ma"
+"xLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype."
+"xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000xq\u0000~\u0000\u0098ps"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000t\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0006stringq\u0000~\u0000\u00a8\u0001q\u0000~\u0000\u00aat\u0000\tmaxLe"
+"ngth\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088"
+"pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Nameq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000\u00a5q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000"
+"~\u0000pq\u0000~\u0000pt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000"
+"\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000nxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00012sq\u0000~"
+"\u0000\u00bdt\u0000\u00010sq\u0000~\u0000\u00bdt\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083pps"
+"q\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Typeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000"
+"~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsr\u0000$com.sun.msv.datatype.xsd.Boole"
+"anType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0007booleanq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000\u00d1q"
+"\u0000~\u0000qsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006IsNullq\u0000~\u0000\u0098q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsr\u0000%com.sun.msv.dat"
+"atype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xs"
+"d.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\bdateTimeq\u0000~\u0000uq\u0000~\u0000"
+"\u0080sq\u0000~\u0000\u0081q\u0000~\u0000\u00deq\u0000~\u0000qsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000"
+"\nCreateDateq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq"
+"\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-der"
+"ivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0007Contact"
+"q\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppq\u0000~\u0000\u00aaq\u0000~\u0000\u0080sq\u0000"
+"~\u0000\u0081q\u0000~\u0000\u00abq\u0000~\u0000qsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0003WBS"
+"q\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00f2sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000"
+"~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bWBSLevelq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_"
+"q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002"
+"\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q"
+"\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rOutlineNumberq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fO"
+"utlineLevelq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000"
+"\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bPriorityq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000"
+"~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000"
+"\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0005Startq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006Finishq\u0000~\u0000\u0098q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsr\u0000%com.sun.msv.dat"
+"atype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\bdurationq\u0000~\u0000u"
+"q\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0001,q\u0000~\u0000qsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u008et\u0000\bDurationq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dpp"
+"sq\u0000~\u0000\u00b7q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pq\u0000~\u0000\u00basq\u0000~\u0000\u00bbw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00bd"
+"t\u0000\u00013sq\u0000~\u0000\u00bdt\u0000\u000241sq\u0000~\u0000\u00bdt\u0000\u000239sq\u0000~\u0000\u00bdt\u0000\u000236sq\u0000~\u0000\u00bdt\u0000\u00016sq\u0000~\u0000\u00bdt\u0000\u00015sq\u0000"
+"~\u0000\u00bdt\u0000\u000237sq\u0000~\u0000\u00bdt\u0000\u000211sq\u0000~\u0000\u00bdt\u0000\u000240sq\u0000~\u0000\u00bdt\u0000\u00014sq\u0000~\u0000\u00bdt\u0000\u000212sq\u0000~\u0000\u00bdt\u0000\u0002"
+"52sq\u0000~\u0000\u00bdt\u0000\u00017sq\u0000~\u0000\u00bdt\u0000\u000238sq\u0000~\u0000\u00bdt\u0000\u000220sq\u0000~\u0000\u00bdt\u0000\u000242sq\u0000~\u0000\u00bdt\u0000\u000253sq\u0000~"
+"\u0000\u00bdt\u0000\u000243sq\u0000~\u0000\u00bdt\u0000\u000221sq\u0000~\u0000\u00bdt\u0000\u000210sq\u0000~\u0000\u00bdt\u0000\u000235sq\u0000~\u0000\u00bdt\u0000\u000244sq\u0000~\u0000\u00bdt\u0000\u0001"
+"9sq\u0000~\u0000\u00bdt\u0000\u000219sq\u0000~\u0000\u00bdt\u0000\u00018sq\u0000~\u0000\u00bdt\u0000\u000251xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-deri"
+"vedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eDuration"
+"Formatq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq"
+"\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Workq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~"
+"\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000"
+"~\u0000\u008et\u0000\u0004Stopq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083"
+"ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006Resumeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083"
+"ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000"
+"~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bResumeValidq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fEffortDri"
+"venq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000"
+"\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tRecurringq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq"
+"\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000\rOverAllocatedq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tEstimatedq\u0000"
+"~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000"
+"\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tMilestoneq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q"
+"\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008e"
+"t\u0000\u0007Summaryq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083"
+"ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bCriticalq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090"
+"q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fIsSubprojectq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0014IsSubp"
+"rojectReadOnlyq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dp"
+"psq\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-"
+"derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eSubp"
+"rojectNameq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083"
+"ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fExternalTaskq\u0000~\u0000\u0098q\u0000~\u0000\u0094"
+"sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000"
+"\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~"
+"\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013ExternalTaskProjectq\u0000~\u0000\u0098q\u0000~\u0000"
+"\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089"
+"q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nEarlyStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bEar"
+"lyFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083pp"
+"sq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tLateStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nLateFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rStartVari"
+"anceq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~"
+"\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eFinishVarianceq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsr\u0000\"com.sun.msv.datatype.xs"
+"d.FloatType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingN"
+"umberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000qt\u0000\u0005floatq\u0000~\u0000uq\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0002\u001b"
+"q\u0000~\u0000qsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fWorkVarianc"
+"eq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q"
+"\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tFreeSlackq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~"
+"\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000"
+"~\u0000\u008et\u0000\nTotalSlackq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002\u0017"
+"sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tFixedCostq\u0000~\u0000\u0098q\u0000"
+"~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00b7q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q"
+"\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00basq\u0000~\u0000\u00bbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u00013t\u0000\u00012t\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000"
+"\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u008et\u0000\u0010FixedCostAccrualq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000fPercentCompl"
+"eteq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000"
+"\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013PercentWorkCompleteq\u0000~\u0000\u0098q\u0000~\u0000\u0094"
+"sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppq\u0000~\u0000|q\u0000~\u0000\u0080sq\u0000~\u0000\u0081q\u0000~\u0000}q\u0000"
+"~\u0000qsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004Costq\u0000~\u0000\u0098q\u0000~\u0000"
+"\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002Vsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089"
+"q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fOvertimeCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fO"
+"vertimeWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000"
+"\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bActualStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094"
+"sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q"
+"\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\fActualFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eAc"
+"tualDurationq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002Vsq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\nActualCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094"
+"sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002Vsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q"
+"\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0012ActualOvertimeCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_"
+"q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u008et\u0000\nActualWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq"
+"\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0012ActualOvertimeWork"
+"q\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000"
+"~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bRegularWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000"
+"~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq"
+"\u0000~\u0000\u008et\u0000\u0011RemainingDurationq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0002Vsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rRemainin"
+"gCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000"
+"~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rRemainingWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002Vsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090"
+"q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0015RemainingOvertimeCostq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q"
+"\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008e"
+"t\u0000\u0015RemainingOvertimeWorkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0002\u0017sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004ACWPq\u0000~\u0000"
+"\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002\u0017sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088p"
+"q\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0002CVq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00b7q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pq\u0000~\u0000\u00basq\u0000~\u0000\u00bbw\f\u0000\u0000\u0000\u0010?"
+"@\u0000\u0000\u0000\u0000\u0000\bsq\u0000~\u0000\u00bdt\u0000\u00013sq\u0000~\u0000\u00bdt\u0000\u00015sq\u0000~\u0000\u00bdt\u0000\u00017sq\u0000~\u0000\u00bdt\u0000\u00012sq\u0000~\u0000\u00bdq\u0000~\u0000\u00c2sq"
+"\u0000~\u0000\u00bdt\u0000\u00014sq\u0000~\u0000\u00bdt\u0000\u00016sq\u0000~\u0000\u00bdt\u0000\u00011xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000"
+"~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000eConstraintTyp"
+"eq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q"
+"\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bCalendarUIDq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq"
+"\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000\u000eConstraintDateq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bDeadlineq\u0000"
+"~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000"
+"\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0010LevelAssignmentsq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083pp"
+"sq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000"
+"\u0094sq\u0000~\u0000\u008et\u0000\u0010LevelingCanSplitq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\rLeveli"
+"ngDelayq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00b7"
+"q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000pq\u0000~\u0000pq\u0000~\u0000\u00basq\u0000~\u0000\u00bbw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00bdt\u0000\u00013sq"
+"\u0000~\u0000\u00bdt\u0000\u000241sq\u0000~\u0000\u00bdt\u0000\u000239sq\u0000~\u0000\u00bdt\u0000\u000236sq\u0000~\u0000\u00bdt\u0000\u00016sq\u0000~\u0000\u00bdt\u0000\u00015sq\u0000~\u0000\u00bdt\u0000\u0002"
+"37sq\u0000~\u0000\u00bdt\u0000\u000211sq\u0000~\u0000\u00bdt\u0000\u000240sq\u0000~\u0000\u00bdt\u0000\u00014sq\u0000~\u0000\u00bdt\u0000\u000212sq\u0000~\u0000\u00bdt\u0000\u000252sq\u0000~"
+"\u0000\u00bdt\u0000\u00017sq\u0000~\u0000\u00bdt\u0000\u000238sq\u0000~\u0000\u00bdt\u0000\u000220sq\u0000~\u0000\u00bdt\u0000\u000242sq\u0000~\u0000\u00bdt\u0000\u000253sq\u0000~\u0000\u00bdt\u0000\u00024"
+"3sq\u0000~\u0000\u00bdt\u0000\u000221sq\u0000~\u0000\u00bdt\u0000\u000210sq\u0000~\u0000\u00bdt\u0000\u000235sq\u0000~\u0000\u00bdt\u0000\u000244sq\u0000~\u0000\u00bdt\u0000\u00019sq\u0000~\u0000"
+"\u00bdt\u0000\u000219sq\u0000~\u0000\u00bdt\u0000\u00018sq\u0000~\u0000\u00bdt\u0000\u000251xq\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~"
+"\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013LevelingDelayF"
+"ormatq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000"
+"~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000fPreLeveledStartq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq"
+"\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00dasq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~"
+"\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0010PreLeveledFinishq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000"
+"\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002\u0000q\u0000~"
+"\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090"
+"q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\tHyperlinkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000dppsq\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t"
+"\u0000\u000estring-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u008et\u0000\u0010HyperlinkAddressq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000dppsq\u0000~\u0000\u00a4q\u0000~\u0000\u0098pq\u0000~\u0000\u00a8\u0000\u0000q\u0000~\u0000\u00aaq\u0000~\u0000\u00aaq\u0000~\u0000\u00ac\u0000\u0000\u0002\u0000q\u0000~\u0000\u0080sq\u0000~\u0000\u0081t\u0000\u000e"
+"string-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008e"
+"t\u0000\u0013HyperlinkSubAddressq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0016IgnoreReso"
+"urceCalendarq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00f2sq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0005Notesq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000"
+"\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0007HideBarq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\u00cesq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0006Rollupq\u0000~\u0000\u0098q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0002\u0017sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000"
+"~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004BCWSq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0002\u0017sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0004BCWPq\u0000"
+"~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000gsq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000"
+"\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0017PhysicalPercentCompleteq\u0000~\u0000\u0098q\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000dppsq\u0000~\u0000\u00b7q\u0000~\u0000\u0098pq\u0000~\u0000u\u0000\u0000q\u0000~\u0000p"
+"q\u0000~\u0000pq\u0000~\u0000\u00basq\u0000~\u0000\u00bbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00bdq\u0000~\u0000\u00c2sq\u0000~\u0000\u00bdt\u0000\u00011xq\u0000~\u0000\u0080sq\u0000"
+"~\u0000\u0081t\u0000\u000finteger-derivedq\u0000~\u0000\u0098sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000"
+"\u0094sq\u0000~\u0000\u008et\u0000\u0011EarnedValueMethodq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsr\u0000 com.sun.msv"
+".grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Unar"
+"yExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0088psq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000_pp\u0000sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000\u0085q\u0000~\u0000\u0088psr\u00002com.sun.msv.gram"
+"mar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0095q\u0000~\u0003"
+"\u00d2sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u008fq\u0000~\u0000\u0094s"
+"q\u0000~\u0000\u008et\u0000Ocom.tapsterrock.mspdi.schema.ProjectType.TasksType.T"
+"askType.PredecessorLinkTypet\u0000+http://java.sun.com/jaxb/xjc/d"
+"ummy-elementssq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000fPre"
+"decessorLinkq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~"
+"\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0013ActualWorkProtectedq"
+"\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0001)sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~"
+"\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u001bActualOvertimeWorkProtectedq\u0000~\u0000\u0098q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000_pp\u0000sq\u0000~\u0000\u0083"
+"ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0003\u00d2q\u0000~\u0003\u00d4q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Qcom.tapste"
+"rrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAt"
+"tributeTypeq\u0000~\u0003\u00d7sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u0011"
+"ExtendedAttributeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000_pp\u0000sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0003\u00d2q\u0000~\u0003\u00d4q"
+"\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Hcom.tapsterrock.mspdi.schema.ProjectType.TasksT"
+"ype.TaskType.BaselineTypeq\u0000~\u0003\u00d7sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090"
+"q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\bBaselineq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000_q\u0000"
+"~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000_pp\u0000sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0003\u00d2q"
+"\u0000~\u0003\u00d4q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000Kcom.tapsterrock.mspdi.schema.ProjectType.T"
+"asksType.TaskType.OutlineCodeTypeq\u0000~\u0003\u00d7sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000"
+"~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000\u000bOutlineCodeq\u0000~\u0000\u0098q\u0000~\u0000\u0094sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~"
+"\u0000\u0088psq\u0000~\u0000_q\u0000~\u0000\u0088p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000_pp\u0000sq\u0000~\u0000\u0083ppsq\u0000~\u0003\u00c8q\u0000~\u0000\u0088psq\u0000~\u0000\u0085q"
+"\u0000~\u0000\u0088pq\u0000~\u0003\u00d2q\u0000~\u0003\u00d4q\u0000~\u0000\u0094sq\u0000~\u0000\u008et\u0000/com.tapsterrock.mspdi.schema.Ti"
+"mephasedDataTypeq\u0000~\u0003\u00d7sq\u0000~\u0000\u0083ppsq\u0000~\u0000\u0085q\u0000~\u0000\u0088pq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0094sq\u0000~"
+"\u0000\u008et\u0000\u000eTimephasedDataq\u0000~\u0000\u0098q\u0000~\u0000\u0094sr\u0000\"com.sun.msv.grammar.Express"
+"ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
+"ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
+"ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lco"
+"m/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0001y\u0001pq\u0000~\u0000-q\u0000~\u0002\u00d5q\u0000~\u0001\u00dfq\u0000~\u0000"
+"Hq\u0000~\u0000\u0006q\u0000~\u0001\u00cfq\u0000~\u0000\u0013q\u0000~\u0000!q\u0000~\u00000q\u0000~\u00028q\u0000~\u0003\u00baq\u0000~\u0000Fq\u0000~\u0000Iq\u0000~\u0000\bq\u0000~\u0002\u00a9q\u0000~\u0002"
+"\u0086q\u0000~\u0002\u007fq\u0000~\u0002\\q\u0000~\u0002Sq\u0000~\u0000Sq\u0000~\u0002\u00b7q\u0000~\u0003\u00cfq\u0000~\u0003\u00f0q\u0000~\u0003\u00feq\u0000~\u0004\fq\u0000~\u0004\u001aq\u0000~\u0000Yq\u0000~\u0000"
+"Pq\u0000~\u0000\u0018q\u0000~\u0001\u00cdq\u0000~\u0002Nq\u0000~\u0002Gq\u0000~\u0002*q\u0000~\u0002#q\u0000~\u0002\u000fq\u0000~\u0002\bq\u0000~\u0001\u0013q\u0000~\u0001\fq\u0000~\u0000\u009bq\u0000~\u0000"
+"cq\u0000~\u0002\u00f0q\u0000~\u00014q\u0000~\u0003\u0013q\u0000~\u0000\u0016q\u0000~\u0003\u00b3q\u0000~\u0000%q\u0000~\u0000Lq\u0000~\u0000Vq\u0000~\u0000\u0010q\u0000~\u0003\u0018q\u0000~\u0000,q\u0000~\u0002"
+"/q\u0000~\u0002\u0014q\u0000~\u0002\u00c5q\u0000~\u0002\u00ccq\u0000~\u0003\u00a3q\u0000~\u0003\u00aaq\u0000~\u0000\"q\u0000~\u0003\u00b8q\u0000~\u0000\u0012q\u0000~\u0000\u0017q\u0000~\u0000Jq\u0000~\u0000(q\u0000~\u0000"
+"=q\u0000~\u0002sq\u0000~\u0002lq\u0000~\u0002\u0001q\u0000~\u0001\u00faq\u0000~\u0001\u00f3q\u0000~\u0001\u00ecq\u0000~\u0001\u001aq\u0000~\u0000\u00d9q\u0000~\u0001!q\u0000~\u0001{q\u0000~\u0001\u0082q\u0000~\u0002"
+"\u00f7q\u0000~\u0002\u00feq\u0000~\u0003Zq\u0000~\u0003aq\u0000~\u0000\fq\u0000~\u00003q\u0000~\u0000]q\u0000~\u0002\u00a2q\u0000~\u0002\u009bq\u0000~\u0002\u0094q\u0000~\u0002\u008dq\u0000~\u0002xq\u0000~\u0002"
+"cq\u0000~\u0001&q\u0000~\u0001rq\u0000~\u0002\u00acq\u0000~\u0002\u00a5q\u0000~\u0002\u009eq\u0000~\u0002\u0097q\u0000~\u0002\u0090q\u0000~\u0002\u0089q\u0000~\u0002\u0082q\u0000~\u0002{q\u0000~\u0002tq\u0000~\u0002"
+"mq\u0000~\u0002fq\u0000~\u0002_q\u0000~\u0002Xq\u0000~\u0002Oq\u0000~\u0002Hq\u0000~\u0002Aq\u0000~\u00022q\u0000~\u0002+q\u0000~\u0002$q\u0000~\u0000\u00f8q\u0000~\u0000\u00efq\u0000~\u0002"
+"\u001dq\u0000~\u0002\u0010q\u0000~\u0002\tq\u0000~\u0002\u0002q\u0000~\u0001\u00fbq\u0000~\u0001\u00f4q\u0000~\u0001\u00edq\u0000~\u0001\u00e6q\u0000~\u0001\u00dbq\u0000~\u0001\u00d4q\u0000~\u0001\u001bq\u0000~\u0001\u0014q\u0000~\u0001"
+"\rq\u0000~\u0001\u0006q\u0000~\u0000\u00fbq\u0000~\u0000\u00f4q\u0000~\u0000\u00ebq\u0000~\u0000\u00e0q\u0000~\u0000\u00d3q\u0000~\u0000\u00c7q\u0000~\u0000Cq\u0000~\u0000\u00afq\u0000~\u0000\u009cq\u0000~\u0000\u0084q\u0000~\u0001"
+".q\u0000~\u0000<q\u0000~\u0001\"q\u0000~\u0001nq\u0000~\u0001uq\u0000~\u0001|q\u0000~\u0001\u0083q\u0000~\u0001\u008aq\u0000~\u0001\u0091q\u0000~\u0001\u0098q\u0000~\u0001\u009fq\u0000~\u0001\u00a6q\u0000~\u0001"
+"\u00adq\u0000~\u0001\u00b4q\u0000~\u00006q\u0000~\u00005q\u0000~\u0001\u00bbq\u0000~\u0001\u00c2q\u0000~\u0001\u00c9q\u0000~\u0000Oq\u0000~\u0002\u00b3q\u0000~\u0002\u00b0q\u0000~\u0000[q\u0000~\u0002\u00baq\u0000~\u0002"
+"\u00c1q\u0000~\u0002\u00beq\u0000~\u0001\u0001q\u0000~\u0002\u00c8q\u0000~\u0002\u00cfq\u0000~\u0002\u00eaq\u0000~\u0002\u00f1q\u0000~\u0002\u00f8q\u0000~\u0002\u00ffq\u0000~\u0000\u001dq\u0000~\u0003\u0006q\u0000~\u0003\rq\u0000~\u0003"
+"\u0014q\u0000~\u0003Tq\u0000~\u0003[q\u0000~\u0003bq\u0000~\u0003mq\u0000~\u0003xq\u0000~\u0003\u0083q\u0000~\u0003\u008aq\u0000~\u0003\u0091q\u0000~\u0003\u008eq\u0000~\u0003\u0098q\u0000~\u0003\u009fq\u0000~\u0003"
+"\u00a6q\u0000~\u0003\u00adq\u0000~\u0003\u00b4q\u0000~\u0003\u00c3q\u0000~\u0003\u00d8q\u0000~\u0003\u00dfq\u0000~\u0003\u00dcq\u0000~\u0003\u00e6q\u0000~\u0003\u00e3q\u0000~\u0003\u00f4q\u0000~\u0004\u0002q\u0000~\u0004\u0010q\u0000~\u0004"
+"\u001eq\u0000~\u0000Kq\u0000~\u0000\u00b3q\u0000~\u0000Mq\u0000~\u0003\u00caq\u0000~\u0003\u00ebq\u0000~\u0003\u00f9q\u0000~\u0004\u0007q\u0000~\u0004\u0015q\u0000~\u0000@q\u0000~\u0001\u00e1q\u0000~\u0000\u0011q\u0000~\u0000"
+"\u000bq\u0000~\u0000.q\u0000~\u0003fq\u0000~\u0000\u00faq\u0000~\u0000\u00f1q\u0000~\u0003\u0090q\u0000~\u0000\nq\u0000~\u00021q\u0000~\u0002\u0016q\u0000~\u0002\u00c7q\u0000~\u00012q\u0000~\u0002\u00ceq\u0000~\u0003"
+"\u00a5q\u0000~\u0003\u00acq\u0000~\u0001\u00daq\u0000~\u0000\u00cdq\u0000~\u0001\u0089q\u0000~\u0001\u0090q\u0000~\u0001\u0097q\u0000~\u0001\u009eq\u0000~\u0001\u00a5q\u0000~\u0001\u00acq\u0000~\u0001\u00b3q\u0000~\u0001\u00baq\u0000~\u0001"
+"\u00c1q\u0000~\u0001\u00c8q\u0000~\u0000Dq\u0000~\u0003\u0005q\u0000~\u0003\fq\u0000~\u0003\u0089q\u0000~\u0003\u0097q\u0000~\u0003\u009eq\u0000~\u0000\u000fq\u0000~\u0003\u00c7q\u0000~\u0003\u00eaq\u0000~\u0003\u00f8q\u0000~\u0004"
+"\u0006q\u0000~\u0004\u0014q\u0000~\u0000\u0014q\u0000~\u0000:q\u0000~\u0002\u00d3q\u0000~\u0000Tq\u0000~\u0000\u00a0q\u0000~\u0000\u001aq\u0000~\u0000\u001fq\u0000~\u0003~q\u0000~\u0000Wq\u0000~\u0000\u001eq\u0000~\u0003"
+"\u00ceq\u0000~\u0003\u00efq\u0000~\u0003\u00fdq\u0000~\u0004\u000bq\u0000~\u0004\u0019q\u0000~\u0000\u00b5q\u0000~\u0000\rq\u0000~\u0002\u00abq\u0000~\u0002\u0088q\u0000~\u0002\u0081q\u0000~\u0002^q\u0000~\u0002Uq\u0000~\u0002"
+"\u00b9q\u0000~\u0000\u000eq\u0000~\u0003qq\u0000~\u0000Uq\u0000~\u0000\u0015q\u0000~\u0000Xq\u0000~\u0000\tq\u0000~\u0003\u00ccq\u0000~\u0000Qq\u0000~\u0003\u00edq\u0000~\u0003\u00fbq\u0000~\u0004\tq\u0000~\u0004"
+"\u0017q\u0000~\u00009q\u0000~\u0000\u0019q\u0000~\u0000\u00a2q\u0000~\u0000 q\u0000~\u00007q\u0000~\u0000?q\u0000~\u00002q\u0000~\u0000\u0005q\u0000~\u0000Aq\u0000~\u0000\u00e4q\u0000~\u0000\'q\u0000~\u0000"
+"\u0007q\u0000~\u0000)q\u0000~\u00001q\u0000~\u0002qq\u0000~\u0002jq\u0000~\u0001\u00ffq\u0000~\u0001\u00f8q\u0000~\u0001\u00f1q\u0000~\u0001\u00eaq\u0000~\u0001\u001fq\u0000~\u0001\u0018q\u0000~\u0000\u00d7q\u0000~\u0001"
+"yq\u0000~\u0001\u0080q\u0000~\u0000+q\u0000~\u0002\u00f5q\u0000~\u0002\u00fcq\u0000~\u0003Xq\u0000~\u0003_q\u0000~\u0003\u001aq\u0000~\u0000>q\u0000~\u0002\u00a4q\u0000~\u0002\u009dq\u0000~\u0002\u0096q\u0000~\u0002"
+"\u008fq\u0000~\u0002zq\u0000~\u0002eq\u0000~\u0001(q\u0000~\u0001tq\u0000~\u0002\u00b2q\u0000~\u0002\u00c0q\u0000~\u0003\u00deq\u0000~\u0003\u00e5q\u0000~\u00008q\u0000~\u0000\u001cq\u0000~\u0000Rq\u0000~\u0000"
+"\\q\u0000~\u0000Gq\u0000~\u0000Bq\u0000~\u0000/q\u0000~\u0000#q\u0000~\u0003sq\u0000~\u0000\u00e6q\u0000~\u0000&q\u0000~\u0003|q\u0000~\u0000*q\u0000~\u0001\u00d8q\u0000~\u0000\u00cbq\u0000~\u0001"
+"\u0087q\u0000~\u0001\u008eq\u0000~\u0001\u0095q\u0000~\u0001\u009cq\u0000~\u0001\u00a3q\u0000~\u0001\u00aaq\u0000~\u0001\u00b1q\u0000~\u0001\u00b8q\u0000~\u0001\u00bfq\u0000~\u0001\u00c6q\u0000~\u0003\u0003q\u0000~\u0003\nq\u0000~\u0003"
+"\u0087q\u0000~\u0000Zq\u0000~\u0003\u0095q\u0000~\u0003\u009cq\u0000~\u00026q\u0000~\u0000\u00ffq\u0000~\u0003hq\u0000~\u0000$q\u0000~\u0002Lq\u0000~\u0002Eq\u0000~\u0002(q\u0000~\u0002!q\u0000~\u0002"
+"\rq\u0000~\u0000^q\u0000~\u0002\u0006q\u0000~\u0001\u0011q\u0000~\u0001\nq\u0000~\u0000\u0099q\u0000~\u0002\u00eeq\u0000~\u0003\u0011q\u0000~\u0003\u00b1q\u0000~\u00004q\u0000~\u0000Eq\u0000~\u0000Nq\u0000~\u0000"
+"\u001bq\u0000~\u0000;x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected boolean has_BCWP;
                protected float _BCWP;
                protected java.util.Calendar _Start;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected java.math.BigDecimal _Cost;
                protected java.util.Calendar _Finish;
                protected java.math.BigInteger _Number;
                protected com.sun.xml.bind.util.ListImpl _TimephasedData;
                protected java.lang.String _Duration;
                protected boolean has_Interim;
                protected boolean _Interim;
                protected java.lang.String _Work;
                protected boolean has_EstimatedDuration;
                protected boolean _EstimatedDuration;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public java.util.Calendar getStart() {
                    return _Start;
                }

                public void setStart(java.util.Calendar value) {
                    _Start = value;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public java.math.BigDecimal getCost() {
                    return _Cost;
                }

                public void setCost(java.math.BigDecimal value) {
                    _Cost = value;
                }

                public java.util.Calendar getFinish() {
                    return _Finish;
                }

                public void setFinish(java.util.Calendar value) {
                    _Finish = value;
                }

                public java.math.BigInteger getNumber() {
                    return _Number;
                }

                public void setNumber(java.math.BigInteger value) {
                    _Number = value;
                }

                protected com.sun.xml.bind.util.ListImpl _getTimephasedData() {
                    if (_TimephasedData == null) {
                        _TimephasedData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                    }
                    return _TimephasedData;
                }

                public java.util.List getTimephasedData() {
                    return _getTimephasedData();
                }

                public java.lang.String getDuration() {
                    return _Duration;
                }

                public void setDuration(java.lang.String value) {
                    _Duration = value;
                }

                public boolean isInterim() {
                    return _Interim;
                }

                public void setInterim(boolean value) {
                    _Interim = value;
                    has_Interim = true;
                }

                public java.lang.String getWork() {
                    return _Work;
                }

                public void setWork(java.lang.String value) {
                    _Work = value;
                }

                public boolean isEstimatedDuration() {
                    return _EstimatedDuration;
                }

                public void setEstimatedDuration(boolean value) {
                    _EstimatedDuration = value;
                    has_EstimatedDuration = true;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                    while (idx8 != len8) {
                        context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                        int idx_0 = idx8;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_0 ++)), "TimephasedData");
                        context.endNamespaceDecls();
                        int idx_1 = idx8;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx_1 ++)), "TimephasedData");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _TimephasedData.get(idx8 ++)), "TimephasedData");
                        context.endElement();
                    }
                    if (_Number!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Number");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Number)), "Number");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_Interim) {
                        context.startElement("http://schemas.microsoft.com/project", "Interim");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Interim)), "Interim");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Start!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Start");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null), "Start");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Finish!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Finish");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null), "Finish");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Duration!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Duration");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Duration), "Duration");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_EstimatedDuration) {
                        context.startElement("http://schemas.microsoft.com/project", "EstimatedDuration");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EstimatedDuration)), "EstimatedDuration");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Work), "Work");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Cost!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)), "Cost");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWS)), "BCWS");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printFloat(((float) _BCWP)), "BCWP");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                    while (idx8 != len8) {
                        idx8 += 1;
                    }
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = ((_TimephasedData == null)? 0 :_TimephasedData.size());
                    while (idx8 != len8) {
                        idx8 += 1;
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.gram"
+"mar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneO"
+"rMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuex"
+"p\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\t"
+"nameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.g"
+"rammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\f"
+"contentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0010ppsq\u0000~\u0000"
+"\u0012q\u0000~\u0000\u0016psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0018xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0015\u0001q\u0000~\u0000\"sr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000#q\u0000~\u0000(sr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000*xq\u0000~\u0000%t\u0000/com.tapsterrock.msp"
+"di.schema.TimephasedDataTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000*L\u0000\btypeNameq"
+"\u0000~\u0000*L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000*L\u0000\fnamespaceURIq\u0000~\u0000*xpq\u0000~\u0000;q\u0000~\u0000:sq\u0000~\u0000)t\u0000\u0004typet\u0000)ht"
+"tp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u000eTimepha"
+"sedDatat\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000(sq\u0000~\u0000\u0010pps"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000ppsr\u0000$com.sun.msv.datatype.xsd.Int"
+"egerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDeriv"
+"edType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/X"
+"SDatatypeImpl;xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0007integerq\u0000~\u0000>sr\u0000,com.sun.msv.data"
+"type.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.m"
+"sv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000"
+"\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000OL\u0000\fconcret"
+"eTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq"
+"\u0000~\u0000*xq\u0000~\u00007ppq\u0000~\u0000>\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0007decimalq\u0000~\u0000>q\u0000~\u0000Xt\u0000\u000efractionDigits\u0000\u0000\u0000"
+"\u0000q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000:sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000"
+"~\u0000)t\u0000\u0006Numberq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000pps"
+"r\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000"
+":t\u0000\u0007booleanq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000fq\u0000~\u0000:sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~"
+"\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0007Interimq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u00000ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5"
+"\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\bdateTimeq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000sq\u0000~\u0000:sq\u0000~\u0000\u0010pps"
+"q\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0005Startq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000osq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(s"
+"q\u0000~\u0000)t\u0000\u0006Finishq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000p"
+"psr\u0000%com.sun.msv.datatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q"
+"\u0000~\u0000:t\u0000\bdurationq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000\u0086q\u0000~\u0000:sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016"
+"pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\bDurationq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000ppsr\u0000)com.sun.msv.datatype.xsd.Enumeration"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.d"
+"atatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000"
+"Tq\u0000~\u0000Hpq\u0000~\u0000>\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00ba"
+"D\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.datatype.xsd.Integ"
+"erValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000*xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b"
+"\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000\u0097t\u0000\u000241sq\u0000~\u0000\u0097t\u0000\u000239sq\u0000~\u0000\u0097t\u0000\u000236sq\u0000~\u0000\u0097t\u0000\u00016sq\u0000~\u0000"
+"\u0097t\u0000\u00015sq\u0000~\u0000\u0097t\u0000\u000237sq\u0000~\u0000\u0097t\u0000\u000211sq\u0000~\u0000\u0097t\u0000\u000240sq\u0000~\u0000\u0097t\u0000\u00014sq\u0000~\u0000\u0097t\u0000\u000212s"
+"q\u0000~\u0000\u0097t\u0000\u000252sq\u0000~\u0000\u0097t\u0000\u00017sq\u0000~\u0000\u0097t\u0000\u000238sq\u0000~\u0000\u0097t\u0000\u000220sq\u0000~\u0000\u0097t\u0000\u000242sq\u0000~\u0000\u0097t"
+"\u0000\u000253sq\u0000~\u0000\u0097t\u0000\u000243sq\u0000~\u0000\u0097t\u0000\u000221sq\u0000~\u0000\u0097t\u0000\u000210sq\u0000~\u0000\u0097t\u0000\u000235sq\u0000~\u0000\u0097t\u0000\u000244s"
+"q\u0000~\u0000\u0097t\u0000\u00019sq\u0000~\u0000\u0097t\u0000\u000219sq\u0000~\u0000\u0097t\u0000\u00018sq\u0000~\u0000\u0097t\u0000\u000251xq\u0000~\u0000@sq\u0000~\u0000At\u0000\u000finte"
+"ger-derivedq\u0000~\u0000Hsq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u000e"
+"DurationFormatq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000csq"
+"\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0011EstimatedDurationq"
+"\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0083sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~"
+"\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0004Workq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000ppq\u0000~\u0000Xq\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000Yq\u0000~\u0000:sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000"
+"~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0004Costq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00000ppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c"
+"\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0005floatq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000\u00f1q\u0000~\u0000:sq\u0000~\u0000\u0010pps"
+"q\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0004BCWSq\u0000~\u0000Hq\u0000~\u0000(sq\u0000~\u0000\u0010ppsq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00edsq\u0000~\u0000\u0010ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000(sq"
+"\u0000~\u0000)t\u0000\u0004BCWPq\u0000~\u0000Hq\u0000~\u0000(sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u00002\u0001pq\u0000~\u0000bq\u0000~\u0000\u0080q\u0000~\u0000\u00d5q\u0000~\u0000\u00daq\u0000~\u0000`q\u0000"
+"~\u0000\u00d3q\u0000~\u0000\u00eaq\u0000~\u0000\u00f7q\u0000~\u0000Iq\u0000~\u0000\u0007q\u0000~\u0000\u001eq\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000~\u0000Kq\u0000~\u0000\u008eq\u0000~\u0000\u001dq\u0000~\u0000\u0014q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u000fq\u0000~\u0000\u0082q\u0000~\u0000\u00dcq\u0000~\u0000\u000eq\u0000~\u0000\bq\u0000~\u0000\u00ecq\u0000~\u0000\u00f9q\u0000~\u0000\fq\u0000~\u0000\u0005q\u0000~\u0000\tq\u0000~\u0000lq\u0000"
+"~\u0000yq\u0000~\u0000\u00e3q\u0000~\u0000\u0011q\u0000~\u0000\u00e1q\u0000~\u0000\rq\u0000~\u0000\u000bq\u0000~\u0000.q\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000uq\u0000~\u0000|q\u0000~\u0000nq\u0000"
+"~\u0000{q\u0000~\u0000\u0088q\u0000~\u0000\u00cfq\u0000~\u0000\u008cq\u0000~\u0000\u00d6q\u0000~\u0000\u00ddq\u0000~\u0000\u00e6q\u0000~\u0000\u00f3q\u0000~\u0000\u00fax"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------------------------------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  27 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 28;
                                        return ;
                                    }
                                    state = 30;
                                    continue outer;
                                case  15 :
                                    if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 16;
                                        return ;
                                    }
                                    state = 18;
                                    continue outer;
                                case  33 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 34;
                                        return ;
                                    }
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  36 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  6 :
                                    if (("Interim" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  24 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 25;
                                        return ;
                                    }
                                    state = 27;
                                    continue outer;
                                case  18 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 19;
                                        return ;
                                    }
                                    state = 21;
                                    continue outer;
                                case  30 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 31;
                                        return ;
                                    }
                                    state = 33;
                                    continue outer;
                                case  0 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, false);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    if (("EstimatedDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 22;
                                        return ;
                                    }
                                    state = 24;
                                    continue outer;
                                case  1 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  5 :
                                    if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  35 :
                                    if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 36;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  29 :
                                    if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 30;
                                        return ;
                                    }
                                    break;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  11 :
                                    if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  14 :
                                    if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  23 :
                                    if (("EstimatedDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 24;
                                        return ;
                                    }
                                    break;
                                case  36 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  20 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 21;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  32 :
                                    if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 33;
                                        return ;
                                    }
                                    break;
                                case  26 :
                                    if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 27;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  17 :
                                    if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 18;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if (("Interim" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  36 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  36 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  21 :
                                    state = 24;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  16 :
                                        eatText1(value);
                                        state = 17;
                                        return ;
                                    case  27 :
                                        state = 30;
                                        continue outer;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  28 :
                                        eatText2(value);
                                        state = 29;
                                        return ;
                                    case  33 :
                                        state = 36;
                                        continue outer;
                                    case  19 :
                                        eatText3(value);
                                        state = 20;
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  4 :
                                        eatText4(value);
                                        state = 5;
                                        return ;
                                    case  36 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  7 :
                                        eatText5(value);
                                        state = 8;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  24 :
                                        state = 27;
                                        continue outer;
                                    case  13 :
                                        eatText6(value);
                                        state = 14;
                                        return ;
                                    case  18 :
                                        state = 21;
                                        continue outer;
                                    case  22 :
                                        eatText7(value);
                                        state = 23;
                                        return ;
                                    case  30 :
                                        state = 33;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  25 :
                                        eatText8(value);
                                        state = 26;
                                        return ;
                                    case  31 :
                                        eatText9(value);
                                        state = 32;
                                        return ;
                                    case  10 :
                                        eatText10(value);
                                        state = 11;
                                        return ;
                                    case  34 :
                                        eatText11(value);
                                        state = 35;
                                        return ;
                                    case  21 :
                                        state = 24;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Duration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Number = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Interim = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Interim = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText6(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText7(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _EstimatedDuration = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_EstimatedDuration = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText8(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText9(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWS = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText10(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText11(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_BCWP = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _DurationFormat;
                protected java.lang.String _Value;
                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType.class);
                }

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public java.lang.String getValue() {
                    return _Value;
                }

                public void setValue(java.lang.String value) {
                    _Value = value;
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _Value), "Value");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _DurationFormat)), "DurationFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001"
+"L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lj"
+"ava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.F"
+"ractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatyp"
+"e.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.s"
+"un.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFi"
+"xedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0018L\u0000\fconcreteTypet\u0000\'Lc"
+"om/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001b"
+"ppq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000*t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.s"
+"un.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsq\u0000~\u0000\tppsr\u0000 com.sun.msv.gra"
+"mmar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~"
+"\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000\u0012ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000#q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u00007q\u0000~\u0000\u001fsr\u0000#com.su"
+"n.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\f"
+"namespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/p"
+"rojectq\u0000~\u0000?sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012ppsr\u0000#com.sun."
+"msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001ft\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"\u0001q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000Jq\u0000~\u0000\u001fsq\u0000~\u0000\tppsq"
+"\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007FieldIDq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\tpps"
+"q\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Gsq\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?"
+"sq\u0000~\u00009t\u0000\u0005Valueq\u0000~\u0000Cq\u0000~\u0000?sq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0015sq"
+"\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u0007ValueIDq\u0000~\u0000Cq\u0000~\u0000?s"
+"q\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012ppsr\u0000)com.sun.msv.datatype"
+".xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;x"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000Cpq\u0000~\u0000#\u0000\u0000q\u0000~\u0000\u001eq\u0000~\u0000\u001et\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.da"
+"tatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001cxr\u0000\u0010java."
+"lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013sq\u0000~\u0000kt\u0000\u000241sq\u0000~\u0000kt\u0000\u000239sq\u0000~\u0000kt\u0000\u00023"
+"6sq\u0000~\u0000kt\u0000\u00016sq\u0000~\u0000kt\u0000\u00015sq\u0000~\u0000kt\u0000\u000237sq\u0000~\u0000kt\u0000\u000211sq\u0000~\u0000kt\u0000\u000240sq\u0000~\u0000k"
+"t\u0000\u00014sq\u0000~\u0000kt\u0000\u000212sq\u0000~\u0000kt\u0000\u000252sq\u0000~\u0000kt\u0000\u00017sq\u0000~\u0000kt\u0000\u000238sq\u0000~\u0000kt\u0000\u000220sq"
+"\u0000~\u0000kt\u0000\u000242sq\u0000~\u0000kt\u0000\u000253sq\u0000~\u0000kt\u0000\u000243sq\u0000~\u0000kt\u0000\u000221sq\u0000~\u0000kt\u0000\u000210sq\u0000~\u0000kt"
+"\u0000\u000235sq\u0000~\u0000kt\u0000\u000244sq\u0000~\u0000kt\u0000\u00019sq\u0000~\u0000kt\u0000\u000219sq\u0000~\u0000kt\u0000\u00018sq\u0000~\u0000kt\u0000\u000251xq\u0000"
+"~\u0000.sq\u0000~\u0000/t\u0000\u000finteger-derivedq\u0000~\u0000Csq\u0000~\u0000\tppsq\u0000~\u00002q\u0000~\u0000\u0010pq\u0000~\u00004q\u0000~"
+"\u0000;q\u0000~\u0000?sq\u0000~\u00009t\u0000\u000eDurationFormatq\u0000~\u0000Cq\u0000~\u0000?sr\u0000\"com.sun.msv.gram"
+"mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
+"mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
+"essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006p"
+"arentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0013\u0001pq\u0000~\u0000\u0005q\u0000~"
+"\u0000`q\u0000~\u0000bq\u0000~\u0000\u0006q\u0000~\u0000\nq\u0000~\u0000Yq\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000[q\u0000~\u0000\u0007q\u0000~\u0000Fq\u0000~\u0000Tq\u0000~\u0000Dq\u0000~"
+"\u0000Rq\u0000~\u00001q\u0000~\u0000Nq\u0000~\u0000Uq\u0000~\u0000\\q\u0000~\u0000\u00a3x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  6 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  14 :
                                    if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  11 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  8 :
                                    if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  10 :
                                        eatText1(value);
                                        state = 11;
                                        return ;
                                    case  4 :
                                        eatText2(value);
                                        state = 5;
                                        return ;
                                    case  1 :
                                        eatText3(value);
                                        state = 2;
                                        return ;
                                    case  7 :
                                        eatText4(value);
                                        state = 8;
                                        return ;
                                    case  13 :
                                        eatText5(value);
                                        state = 14;
                                        return ;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Value = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.lang.String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType.class);
                }

                public java.lang.String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(java.lang.String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _UID)), "UID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _FieldID), "FieldID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _ValueID)), "ValueID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$c"
+"om.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.ms"
+"v.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)"
+"Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xr\u0000*com.sun.msv.dat"
+"atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dataty"
+"pe.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.X"
+"SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;"
+"L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007in"
+"tegersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collap"
+"se\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWi"
+"thLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
+"xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueC"
+"heckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0016L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datat"
+"ype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019ppq\u0000~\u0000!\u0001\u0000sr\u0000#com"
+".sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0007dec"
+"imalq\u0000~\u0000!q\u0000~\u0000(t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURI"
+"q\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.grammar.AttributeEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003q\u0000~\u0000\u000epsq\u0000~\u0000\u0010pp"
+"sr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001d"
+"t\u0000\u0005QNameq\u0000~\u0000!q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u00005q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.Si"
+"mpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000=s"
+"q\u0000~\u00007t\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000=sq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0006stringsr"
+"\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 \u0001q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000Hq\u0000~\u0000\u001dsq\u0000~\u0000\u0007ppsq\u0000~\u00000q\u0000~\u0000\u000epq\u0000~\u00002q"
+"\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007FieldIDq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tq\u0000~\u0000\u000ep\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000\u0013sq\u0000~\u0000\u0007ppsq\u0000~\u00000q\u0000~\u0000\u000epq\u0000~\u00002q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0007ValueID"
+"q\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
+"\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
+"xpressionPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000\bq\u0000~\u0000Pq\u0000~\u0000\u0006q\u0000~\u0000\u000fq\u0000~\u0000Rq\u0000~\u0000Dq\u0000~\u0000Bq\u0000~"
+"\u0000/q\u0000~\u0000Lq\u0000~\u0000Sq\u0000~\u0000\u0005x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "----------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  6 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  5 :
                                    if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  8 :
                                    if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  1 :
                                        eatText1(value);
                                        state = 2;
                                        return ;
                                    case  4 :
                                        eatText2(value);
                                        state = 5;
                                        return ;
                                    case  9 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  7 :
                                        eatText3(value);
                                        state = 8;
                                        return ;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _FieldID = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _ValueID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public static class PredecessorLinkTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
            {

                protected java.math.BigInteger _Type;
                protected java.lang.String _CrossProjectName;
                protected java.math.BigInteger _PredecessorUID;
                protected java.math.BigInteger _LagFormat;
                protected boolean has_CrossProject;
                protected boolean _CrossProject;
                protected java.math.BigInteger _LinkLag;
                public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType.class);
                }

                public java.math.BigInteger getType() {
                    return _Type;
                }

                public void setType(java.math.BigInteger value) {
                    _Type = value;
                }

                public java.lang.String getCrossProjectName() {
                    return _CrossProjectName;
                }

                public void setCrossProjectName(java.lang.String value) {
                    _CrossProjectName = value;
                }

                public java.math.BigInteger getPredecessorUID() {
                    return _PredecessorUID;
                }

                public void setPredecessorUID(java.math.BigInteger value) {
                    _PredecessorUID = value;
                }

                public java.math.BigInteger getLagFormat() {
                    return _LagFormat;
                }

                public void setLagFormat(java.math.BigInteger value) {
                    _LagFormat = value;
                }

                public boolean isCrossProject() {
                    return _CrossProject;
                }

                public void setCrossProject(boolean value) {
                    _CrossProject = value;
                    has_CrossProject = true;
                }

                public java.math.BigInteger getLinkLag() {
                    return _LinkLag;
                }

                public void setLinkLag(java.math.BigInteger value) {
                    _LinkLag = value;
                }

                public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_PredecessorUID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "PredecessorUID");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _PredecessorUID)), "PredecessorUID");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_Type!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Type");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (has_CrossProject) {
                        context.startElement("http://schemas.microsoft.com/project", "CrossProject");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CrossProject)), "CrossProject");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_CrossProjectName!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "CrossProjectName");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(((java.lang.String) _CrossProjectName), "CrossProjectName");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_LinkLag!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "LinkLag");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LinkLag)), "LinkLag");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                    if (_LagFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "LagFormat");
                        context.endNamespaceDecls();
                        context.endAttributes();
                        try {
                            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _LagFormat)), "LagFormat");
                        } catch (java.lang.Exception e) {
                            com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                        }
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public java.lang.Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000"
+"\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"
+"datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"
+"StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]"
+"\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatype"
+"Impl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'co"
+"m.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespace"
+"Urit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.dataty"
+"pe.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv"
+".datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000x"
+"r\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fi"
+"sFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0019L\u0000\fconcreteT"
+"ypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~"
+"\u0000\u001dxq\u0000~\u0000\u001cppq\u0000~\u0000$\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007decimalq\u0000~\u0000$q\u0000~\u0000+t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000s"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sq\u0000~\u0000\nppsr\u0000 com.sun"
+".msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq"
+"\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005QNameq\u0000~\u0000$q\u0000~\u0000/sq\u0000~\u00000q\u0000~\u00008q\u0000~\u0000 sr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"
+"cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000ePredecessorUIDt\u0000$http://sche"
+"mas.microsoft.com/projectq\u0000~\u0000@sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u0013ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.D"
+"ataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000\'q\u0000~\u0000Dpq\u0000~\u0000$\u0000"
+"\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001ft\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw"
+"\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001dxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00013s"
+"q\u0000~\u0000Pt\u0000\u00012sq\u0000~\u0000Pt\u0000\u00010sq\u0000~\u0000Pt\u0000\u00011xq\u0000~\u0000/sq\u0000~\u00000t\u0000\u000finteger-derivedq"
+"\u0000~\u0000Dsq\u0000~\u0000\nppsq\u0000~\u00003q\u0000~\u0000\u0011pq\u0000~\u00005q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0004Typeq\u0000~\u0000Dq\u0000~"
+"\u0000@sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppsr\u0000$com.sun.msv.datat"
+"ype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007booleanq\u0000~\u0000$q\u0000~\u0000"
+"/sq\u0000~\u00000q\u0000~\u0000fq\u0000~\u0000 sq\u0000~\u0000\nppsq\u0000~\u00003q\u0000~\u0000\u0011pq\u0000~\u00005q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000"
+"\fCrossProjectq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp"
+"sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlway"
+"sValidxq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#\u0001q\u0000~\u0000/sq\u0000~\u00000q\u0000~\u0000rq\u0000~"
+"\u0000 sq\u0000~\u0000\nppsq\u0000~\u00003q\u0000~\u0000\u0011pq\u0000~\u00005q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0010CrossProjectNa"
+"meq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~\u0000\nppsq\u0000~\u00003"
+"q\u0000~\u0000\u0011pq\u0000~\u00005q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0007LinkLagq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\nppsq\u0000~\u0000"
+"\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013ppsq\u0000~\u0000Iq\u0000~\u0000Dpq\u0000~\u0000$\u0000\u0000q\u0000~\u0000\u001fq\u0000~\u0000\u001fq\u0000~\u0000Msq"
+"\u0000~\u0000Nw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u0019sq\u0000~\u0000Pt\u0000\u00013sq\u0000~\u0000Pt\u0000\u000241sq\u0000~\u0000Pt\u0000\u000239sq\u0000~\u0000Pt\u0000\u00023"
+"6sq\u0000~\u0000Pt\u0000\u00016sq\u0000~\u0000Pt\u0000\u00015sq\u0000~\u0000Pt\u0000\u000237sq\u0000~\u0000Pt\u0000\u000211sq\u0000~\u0000Pt\u0000\u000240sq\u0000~\u0000P"
+"t\u0000\u00014sq\u0000~\u0000Pt\u0000\u000212sq\u0000~\u0000Pt\u0000\u000252sq\u0000~\u0000Pt\u0000\u00017sq\u0000~\u0000Pt\u0000\u000238sq\u0000~\u0000Pt\u0000\u000220sq"
+"\u0000~\u0000Pt\u0000\u000242sq\u0000~\u0000Pt\u0000\u000253sq\u0000~\u0000Pt\u0000\u000243sq\u0000~\u0000Pt\u0000\u000210sq\u0000~\u0000Pt\u0000\u000235sq\u0000~\u0000Pt"
+"\u0000\u000244sq\u0000~\u0000Pt\u0000\u00019sq\u0000~\u0000Pt\u0000\u000219sq\u0000~\u0000Pt\u0000\u00018sq\u0000~\u0000Pt\u0000\u000251xq\u0000~\u0000/sq\u0000~\u00000t\u0000"
+"\u000finteger-derivedq\u0000~\u0000Dsq\u0000~\u0000\nppsq\u0000~\u00003q\u0000~\u0000\u0011pq\u0000~\u00005q\u0000~\u0000<q\u0000~\u0000@sq\u0000~"
+"\u0000:t\u0000\tLagFormatq\u0000~\u0000Dq\u0000~\u0000@sr\u0000\"com.sun.msv.grammar.ExpressionPo"
+"ol\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPo"
+"ol$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Close"
+"dHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun"
+"/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0017\u0001pq\u0000~\u0000bq\u0000~\u0000Gq\u0000~\u0000\u0081q\u0000~\u0000`q\u0000~\u0000"
+"\u000bq\u0000~\u0000zq\u0000~\u0000\bq\u0000~\u0000\u0007q\u0000~\u0000\u0083q\u0000~\u0000\tq\u0000~\u0000\u0012q\u0000~\u0000Eq\u0000~\u0000|q\u0000~\u0000\u0006q\u0000~\u0000nq\u0000~\u0000\u0005q\u0000~\u0000"
+"lq\u0000~\u00002q\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000vq\u0000~\u0000}q\u0000~\u0000\u00bbx"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                        super(context, "-------------------");
                    }

                    protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    if (("CrossProjectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    state = 12;
                                    continue outer;
                                case  18 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                                case  12 :
                                    if (("LinkLag" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    if (("PredecessorUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    if (("LagFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 16;
                                        return ;
                                    }
                                    state = 18;
                                    continue outer;
                                case  6 :
                                    if (("CrossProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    state = 9;
                                    continue outer;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  2 :
                                    if (("PredecessorUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if (("CrossProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  18 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  11 :
                                    if (("CrossProjectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  14 :
                                    if (("LinkLag" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  17 :
                                    if (("LagFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                        context.popAttributes();
                                        state = 18;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  18 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  18 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  0 :
                                    state = 3;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  9 :
                                        state = 12;
                                        continue outer;
                                    case  16 :
                                        eatText1(value);
                                        state = 17;
                                        return ;
                                    case  1 :
                                        eatText2(value);
                                        state = 2;
                                        return ;
                                    case  18 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  12 :
                                        state = 15;
                                        continue outer;
                                    case  0 :
                                        state = 3;
                                        continue outer;
                                    case  3 :
                                        state = 6;
                                        continue outer;
                                    case  13 :
                                        eatText3(value);
                                        state = 14;
                                        return ;
                                    case  15 :
                                        state = 18;
                                        continue outer;
                                    case  10 :
                                        eatText4(value);
                                        state = 11;
                                        return ;
                                    case  6 :
                                        state = 9;
                                        continue outer;
                                    case  4 :
                                        eatText5(value);
                                        state = 5;
                                        return ;
                                    case  7 :
                                        eatText6(value);
                                        state = 8;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _LagFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _PredecessorUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _LinkLag = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _CrossProjectName = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText6(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _CrossProject = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_CrossProject = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  195 :
                                if (("ConstraintDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 196;
                                    return ;
                                }
                                state = 198;
                                continue outer;
                            case  33 :
                                if (("Priority" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 34;
                                    return ;
                                }
                                state = 36;
                                continue outer;
                            case  249 :
                                if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 250;
                                    return ;
                                }
                                state = 252;
                                continue outer;
                            case  69 :
                                if (("Estimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 70;
                                    return ;
                                }
                                state = 72;
                                continue outer;
                            case  258 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 259;
                                    return ;
                                }
                                state = 261;
                                continue outer;
                            case  12 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                state = 15;
                                continue outer;
                            case  24 :
                                if (("WBSLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 25;
                                    return ;
                                }
                                state = 27;
                                continue outer;
                            case  153 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 154;
                                    return ;
                                }
                                state = 156;
                                continue outer;
                            case  93 :
                                if (("ExternalTaskProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 94;
                                    return ;
                                }
                                state = 96;
                                continue outer;
                            case  111 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 112;
                                    return ;
                                }
                                state = 114;
                                continue outer;
                            case  102 :
                                if (("LateStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 103;
                                    return ;
                                }
                                state = 105;
                                continue outer;
                            case  120 :
                                if (("TotalSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 121;
                                    return ;
                                }
                                state = 123;
                                continue outer;
                            case  237 :
                                if (("Rollup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 238;
                                    return ;
                                }
                                state = 240;
                                continue outer;
                            case  201 :
                                if (("LevelAssignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 202;
                                    return ;
                                }
                                state = 204;
                                continue outer;
                            case  15 :
                                if (("CreateDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 16;
                                    return ;
                                }
                                state = 18;
                                continue outer;
                            case  150 :
                                if (("ActualDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 151;
                                    return ;
                                }
                                state = 153;
                                continue outer;
                            case  84 :
                                if (("IsSubprojectReadOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 85;
                                    return ;
                                }
                                state = 87;
                                continue outer;
                            case  45 :
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 46;
                                    return ;
                                }
                                state = 48;
                                continue outer;
                            case  180 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 181;
                                    return ;
                                }
                                state = 183;
                                continue outer;
                            case  66 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 67;
                                    return ;
                                }
                                state = 69;
                                continue outer;
                            case  81 :
                                if (("IsSubproject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 82;
                                    return ;
                                }
                                state = 84;
                                continue outer;
                            case  144 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 145;
                                    return ;
                                }
                                state = 147;
                                continue outer;
                            case  225 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 226;
                                    return ;
                                }
                                state = 228;
                                continue outer;
                            case  246 :
                                if (("PhysicalPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 247;
                                    return ;
                                }
                                state = 249;
                                continue outer;
                            case  252 :
                                if (("PredecessorLink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 253;
                                    return ;
                                }
                                state = 255;
                                continue outer;
                            case  60 :
                                if (("EffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 61;
                                    return ;
                                }
                                state = 63;
                                continue outer;
                            case  141 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 142;
                                    return ;
                                }
                                state = 144;
                                continue outer;
                            case  96 :
                                if (("EarlyStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 97;
                                    return ;
                                }
                                state = 99;
                                continue outer;
                            case  75 :
                                if (("Summary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 76;
                                    return ;
                                }
                                state = 78;
                                continue outer;
                            case  271 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 272, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getTimephasedData().add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 272, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  228 :
                                if (("IgnoreResourceCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 229;
                                    return ;
                                }
                                state = 231;
                                continue outer;
                            case  39 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 40;
                                    return ;
                                }
                                state = 42;
                                continue outer;
                            case  42 :
                                if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 43;
                                    return ;
                                }
                                state = 45;
                                continue outer;
                            case  207 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 208;
                                    return ;
                                }
                                state = 210;
                                continue outer;
                            case  222 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 223;
                                    return ;
                                }
                                state = 225;
                                continue outer;
                            case  72 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 73;
                                    return ;
                                }
                                state = 75;
                                continue outer;
                            case  265 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Number" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Interim" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("EstimatedDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  135 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 136;
                                    return ;
                                }
                                state = 138;
                                continue outer;
                            case  165 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 166;
                                    return ;
                                }
                                state = 168;
                                continue outer;
                            case  90 :
                                if (("ExternalTask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 91;
                                    return ;
                                }
                                state = 93;
                                continue outer;
                            case  114 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 115;
                                    return ;
                                }
                                state = 117;
                                continue outer;
                            case  213 :
                                if (("PreLeveledStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 214;
                                    return ;
                                }
                                state = 216;
                                continue outer;
                            case  63 :
                                if (("Recurring" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 64;
                                    return ;
                                }
                                state = 66;
                                continue outer;
                            case  231 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 232;
                                    return ;
                                }
                                state = 234;
                                continue outer;
                            case  210 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 211;
                                    return ;
                                }
                                state = 213;
                                continue outer;
                            case  198 :
                                if (("Deadline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 199;
                                    return ;
                                }
                                state = 201;
                                continue outer;
                            case  30 :
                                if (("OutlineLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 31;
                                    return ;
                                }
                                state = 33;
                                continue outer;
                            case  240 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 241;
                                    return ;
                                }
                                state = 243;
                                continue outer;
                            case  174 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 175;
                                    return ;
                                }
                                state = 177;
                                continue outer;
                            case  268 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  216 :
                                if (("PreLeveledFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 217;
                                    return ;
                                }
                                state = 219;
                                continue outer;
                            case  87 :
                                if (("SubprojectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 88;
                                    return ;
                                }
                                state = 90;
                                continue outer;
                            case  189 :
                                if (("ConstraintType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 190;
                                    return ;
                                }
                                state = 192;
                                continue outer;
                            case  243 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 244;
                                    return ;
                                }
                                state = 246;
                                continue outer;
                            case  6 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                state = 9;
                                continue outer;
                            case  270 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 268;
                                    return ;
                                }
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 271;
                                    return ;
                                }
                                state = 273;
                                continue outer;
                            case  262 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("FieldID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Value" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("ValueID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  78 :
                                if (("Critical" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 79;
                                    return ;
                                }
                                state = 81;
                                continue outer;
                            case  162 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 163;
                                    return ;
                                }
                                state = 165;
                                continue outer;
                            case  57 :
                                if (("ResumeValid" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 58;
                                    return ;
                                }
                                state = 60;
                                continue outer;
                            case  192 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 193;
                                    return ;
                                }
                                state = 195;
                                continue outer;
                            case  27 :
                                if (("OutlineNumber" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 28;
                                    return ;
                                }
                                state = 30;
                                continue outer;
                            case  264 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 262;
                                    return ;
                                }
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 265;
                                    return ;
                                }
                                state = 267;
                                continue outer;
                            case  3 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                state = 6;
                                continue outer;
                            case  108 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 109;
                                    return ;
                                }
                                state = 111;
                                continue outer;
                            case  21 :
                                if (("WBS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 22;
                                    return ;
                                }
                                state = 24;
                                continue outer;
                            case  177 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 178;
                                    return ;
                                }
                                state = 180;
                                continue outer;
                            case  18 :
                                if (("Contact" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 19;
                                    return ;
                                }
                                state = 21;
                                continue outer;
                            case  171 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 172;
                                    return ;
                                }
                                state = 174;
                                continue outer;
                            case  261 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 262;
                                    return ;
                                }
                                state = 264;
                                continue outer;
                            case  99 :
                                if (("EarlyFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 100;
                                    return ;
                                }
                                state = 102;
                                continue outer;
                            case  138 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 139;
                                    return ;
                                }
                                state = 141;
                                continue outer;
                            case  147 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 148;
                                    return ;
                                }
                                state = 150;
                                continue outer;
                            case  156 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 157;
                                    return ;
                                }
                                state = 159;
                                continue outer;
                            case  123 :
                                if (("FixedCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 124;
                                    return ;
                                }
                                state = 126;
                                continue outer;
                            case  253 :
                                if (("PredecessorUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("CrossProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("CrossProjectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("LinkLag" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("LagFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname, __atts)));
                                return ;
                            case  54 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 55;
                                    return ;
                                }
                                state = 57;
                                continue outer;
                            case  126 :
                                if (("FixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 127;
                                    return ;
                                }
                                state = 129;
                                continue outer;
                            case  132 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 133;
                                    return ;
                                }
                                state = 135;
                                continue outer;
                            case  117 :
                                if (("FreeSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 118;
                                    return ;
                                }
                                state = 120;
                                continue outer;
                            case  183 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 184;
                                    return ;
                                }
                                state = 186;
                                continue outer;
                            case  234 :
                                if (("HideBar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 235;
                                    return ;
                                }
                                state = 237;
                                continue outer;
                            case  204 :
                                if (("LevelingCanSplit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 205;
                                    return ;
                                }
                                state = 207;
                                continue outer;
                            case  48 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 49;
                                    return ;
                                }
                                state = 51;
                                continue outer;
                            case  129 :
                                if (("PercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 130;
                                    return ;
                                }
                                state = 132;
                                continue outer;
                            case  36 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 37;
                                    return ;
                                }
                                state = 39;
                                continue outer;
                            case  219 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 220;
                                    return ;
                                }
                                state = 222;
                                continue outer;
                            case  51 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 52;
                                    return ;
                                }
                                state = 54;
                                continue outer;
                            case  105 :
                                if (("LateFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 106;
                                    return ;
                                }
                                state = 108;
                                continue outer;
                            case  159 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 160;
                                    return ;
                                }
                                state = 162;
                                continue outer;
                            case  168 :
                                if (("RemainingDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 169;
                                    return ;
                                }
                                state = 171;
                                continue outer;
                            case  255 :
                                if (("PredecessorLink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 253;
                                    return ;
                                }
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 256;
                                    return ;
                                }
                                state = 258;
                                continue outer;
                            case  273 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 271;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  9 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                state = 12;
                                continue outer;
                            case  0 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  267 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 265;
                                    return ;
                                }
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 268;
                                    return ;
                                }
                                state = 270;
                                continue outer;
                            case  186 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 187;
                                    return ;
                                }
                                state = 189;
                                continue outer;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  195 :
                                state = 198;
                                continue outer;
                            case  230 :
                                if (("IgnoreResourceCalendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 231;
                                    return ;
                                }
                                break;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  56 :
                                if (("Resume" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 57;
                                    return ;
                                }
                                break;
                            case  53 :
                                if (("Stop" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 54;
                                    return ;
                                }
                                break;
                            case  249 :
                                state = 252;
                                continue outer;
                            case  89 :
                                if (("SubprojectName" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 90;
                                    return ;
                                }
                                break;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  258 :
                                state = 261;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  170 :
                                if (("RemainingDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 171;
                                    return ;
                                }
                                break;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  176 :
                                if (("RemainingWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 177;
                                    return ;
                                }
                                break;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  266 :
                                if (("Baseline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 267;
                                    return ;
                                }
                                break;
                            case  86 :
                                if (("IsSubprojectReadOnly" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 87;
                                    return ;
                                }
                                break;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  137 :
                                if (("Cost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 138;
                                    return ;
                                }
                                break;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  107 :
                                if (("LateFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 108;
                                    return ;
                                }
                                break;
                            case  251 :
                                if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 252;
                                    return ;
                                }
                                break;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  237 :
                                state = 240;
                                continue outer;
                            case  167 :
                                if (("RegularWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 168;
                                    return ;
                                }
                                break;
                            case  227 :
                                if (("HyperlinkSubAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 228;
                                    return ;
                                }
                                break;
                            case  201 :
                                state = 204;
                                continue outer;
                            case  221 :
                                if (("Hyperlink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 222;
                                    return ;
                                }
                                break;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  200 :
                                if (("Deadline" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 201;
                                    return ;
                                }
                                break;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  14 :
                                if (("IsNull" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  225 :
                                state = 228;
                                continue outer;
                            case  62 :
                                if (("EffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 63;
                                    return ;
                                }
                                break;
                            case  161 :
                                if (("ActualWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 162;
                                    return ;
                                }
                                break;
                            case  32 :
                                if (("OutlineLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 33;
                                    return ;
                                }
                                break;
                            case  246 :
                                state = 249;
                                continue outer;
                            case  74 :
                                if (("Milestone" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 75;
                                    return ;
                                }
                                break;
                            case  164 :
                                if (("ActualOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 165;
                                    return ;
                                }
                                break;
                            case  203 :
                                if (("LevelAssignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 204;
                                    return ;
                                }
                                break;
                            case  212 :
                                if (("LevelingDelayFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 213;
                                    return ;
                                }
                                break;
                            case  44 :
                                if (("Duration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 45;
                                    return ;
                                }
                                break;
                            case  252 :
                                state = 255;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  110 :
                                if (("StartVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 111;
                                    return ;
                                }
                                break;
                            case  119 :
                                if (("FreeSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 120;
                                    return ;
                                }
                                break;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  194 :
                                if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 195;
                                    return ;
                                }
                                break;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  26 :
                                if (("WBSLevel" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 27;
                                    return ;
                                }
                                break;
                            case  228 :
                                state = 231;
                                continue outer;
                            case  239 :
                                if (("Rollup" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 240;
                                    return ;
                                }
                                break;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  207 :
                                state = 210;
                                continue outer;
                            case  215 :
                                if (("PreLeveledStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 216;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  272 :
                                if (("TimephasedData" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 273;
                                    return ;
                                }
                                break;
                            case  65 :
                                if (("Recurring" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 66;
                                    return ;
                                }
                                break;
                            case  182 :
                                if (("RemainingOvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 183;
                                    return ;
                                }
                                break;
                            case  222 :
                                state = 225;
                                continue outer;
                            case  140 :
                                if (("OvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 141;
                                    return ;
                                }
                                break;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  233 :
                                if (("Notes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 234;
                                    return ;
                                }
                                break;
                            case  143 :
                                if (("OvertimeWork" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 144;
                                    return ;
                                }
                                break;
                            case  191 :
                                if (("ConstraintType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 192;
                                    return ;
                                }
                                break;
                            case  265 :
                                _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname)));
                                return ;
                            case  5 :
                                if (("ID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  213 :
                                state = 216;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  146 :
                                if (("ActualStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 147;
                                    return ;
                                }
                                break;
                            case  113 :
                                if (("FinishVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 114;
                                    return ;
                                }
                                break;
                            case  231 :
                                state = 234;
                                continue outer;
                            case  210 :
                                state = 213;
                                continue outer;
                            case  50 :
                                if (("Work" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 51;
                                    return ;
                                }
                                break;
                            case  248 :
                                if (("PhysicalPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 249;
                                    return ;
                                }
                                break;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  134 :
                                if (("PercentWorkComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 135;
                                    return ;
                                }
                                break;
                            case  240 :
                                state = 243;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  59 :
                                if (("ResumeValid" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 60;
                                    return ;
                                }
                                break;
                            case  125 :
                                if (("FixedCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 126;
                                    return ;
                                }
                                break;
                            case  104 :
                                if (("LateStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 105;
                                    return ;
                                }
                                break;
                            case  188 :
                                if (("CV" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 189;
                                    return ;
                                }
                                break;
                            case  268 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname)));
                                return ;
                            case  92 :
                                if (("ExternalTask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 93;
                                    return ;
                                }
                                break;
                            case  216 :
                                state = 219;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  38 :
                                if (("Start" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 39;
                                    return ;
                                }
                                break;
                            case  236 :
                                if (("HideBar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 237;
                                    return ;
                                }
                                break;
                            case  243 :
                                state = 246;
                                continue outer;
                            case  224 :
                                if (("HyperlinkAddress" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 225;
                                    return ;
                                }
                                break;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  270 :
                                state = 273;
                                continue outer;
                            case  262 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname)));
                                return ;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  41 :
                                if (("Finish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 42;
                                    return ;
                                }
                                break;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  152 :
                                if (("ActualDuration" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 153;
                                    return ;
                                }
                                break;
                            case  80 :
                                if (("Critical" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 81;
                                    return ;
                                }
                                break;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  264 :
                                state = 267;
                                continue outer;
                            case  128 :
                                if (("FixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 129;
                                    return ;
                                }
                                break;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  158 :
                                if (("ActualOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 159;
                                    return ;
                                }
                                break;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  155 :
                                if (("ActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 156;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  242 :
                                if (("BCWS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 243;
                                    return ;
                                }
                                break;
                            case  83 :
                                if (("IsSubproject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 84;
                                    return ;
                                }
                                break;
                            case  2 :
                                if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  173 :
                                if (("RemainingCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 174;
                                    return ;
                                }
                                break;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  261 :
                                state = 264;
                                continue outer;
                            case  77 :
                                if (("Summary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 78;
                                    return ;
                                }
                                break;
                            case  263 :
                                if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 264;
                                    return ;
                                }
                                break;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  95 :
                                if (("ExternalTaskProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 96;
                                    return ;
                                }
                                break;
                            case  131 :
                                if (("PercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 132;
                                    return ;
                                }
                                break;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  206 :
                                if (("LevelingCanSplit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 207;
                                    return ;
                                }
                                break;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  269 :
                                if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 270;
                                    return ;
                                }
                                break;
                            case  254 :
                                if (("PredecessorLink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 255;
                                    return ;
                                }
                                break;
                            case  253 :
                                _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname)));
                                return ;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  101 :
                                if (("EarlyFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 102;
                                    return ;
                                }
                                break;
                            case  245 :
                                if (("BCWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 246;
                                    return ;
                                }
                                break;
                            case  260 :
                                if (("ActualOvertimeWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 261;
                                    return ;
                                }
                                break;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  234 :
                                state = 237;
                                continue outer;
                            case  204 :
                                state = 207;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  98 :
                                if (("EarlyStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 99;
                                    return ;
                                }
                                break;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  23 :
                                if (("WBS" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 24;
                                    return ;
                                }
                                break;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  219 :
                                state = 222;
                                continue outer;
                            case  17 :
                                if (("CreateDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 18;
                                    return ;
                                }
                                break;
                            case  197 :
                                if (("ConstraintDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 198;
                                    return ;
                                }
                                break;
                            case  71 :
                                if (("Estimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 72;
                                    return ;
                                }
                                break;
                            case  47 :
                                if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 48;
                                    return ;
                                }
                                break;
                            case  257 :
                                if (("ActualWorkProtected" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 258;
                                    return ;
                                }
                                break;
                            case  122 :
                                if (("TotalSlack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 123;
                                    return ;
                                }
                                break;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  116 :
                                if (("WorkVariance" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 117;
                                    return ;
                                }
                                break;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  209 :
                                if (("LevelingDelay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 210;
                                    return ;
                                }
                                break;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  35 :
                                if (("Priority" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 36;
                                    return ;
                                }
                                break;
                            case  29 :
                                if (("OutlineNumber" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 30;
                                    return ;
                                }
                                break;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  255 :
                                state = 258;
                                continue outer;
                            case  273 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  149 :
                                if (("ActualFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 150;
                                    return ;
                                }
                                break;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  185 :
                                if (("ACWP" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 186;
                                    return ;
                                }
                                break;
                            case  20 :
                                if (("Contact" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 21;
                                    return ;
                                }
                                break;
                            case  68 :
                                if (("OverAllocated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 69;
                                    return ;
                                }
                                break;
                            case  267 :
                                state = 270;
                                continue outer;
                            case  218 :
                                if (("PreLeveledFinish" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 219;
                                    return ;
                                }
                                break;
                            case  186 :
                                state = 189;
                                continue outer;
                            case  179 :
                                if (("RemainingOvertimeCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 180;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  195 :
                                state = 198;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  249 :
                                state = 252;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  258 :
                                state = 261;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  237 :
                                state = 240;
                                continue outer;
                            case  201 :
                                state = 204;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  225 :
                                state = 228;
                                continue outer;
                            case  246 :
                                state = 249;
                                continue outer;
                            case  252 :
                                state = 255;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  228 :
                                state = 231;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  207 :
                                state = 210;
                                continue outer;
                            case  222 :
                                state = 225;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  265 :
                                _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname)));
                                return ;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  213 :
                                state = 216;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  231 :
                                state = 234;
                                continue outer;
                            case  210 :
                                state = 213;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  240 :
                                state = 243;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  268 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname)));
                                return ;
                            case  216 :
                                state = 219;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  243 :
                                state = 246;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  270 :
                                state = 273;
                                continue outer;
                            case  262 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname)));
                                return ;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  264 :
                                state = 267;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  261 :
                                state = 264;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  253 :
                                _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname)));
                                return ;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  234 :
                                state = 237;
                                continue outer;
                            case  204 :
                                state = 207;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  219 :
                                state = 222;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  255 :
                                state = 258;
                                continue outer;
                            case  273 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  267 :
                                state = 270;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  195 :
                                state = 198;
                                continue outer;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  249 :
                                state = 252;
                                continue outer;
                            case  69 :
                                state = 72;
                                continue outer;
                            case  258 :
                                state = 261;
                                continue outer;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  153 :
                                state = 156;
                                continue outer;
                            case  93 :
                                state = 96;
                                continue outer;
                            case  111 :
                                state = 114;
                                continue outer;
                            case  102 :
                                state = 105;
                                continue outer;
                            case  120 :
                                state = 123;
                                continue outer;
                            case  237 :
                                state = 240;
                                continue outer;
                            case  201 :
                                state = 204;
                                continue outer;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  150 :
                                state = 153;
                                continue outer;
                            case  84 :
                                state = 87;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  180 :
                                state = 183;
                                continue outer;
                            case  66 :
                                state = 69;
                                continue outer;
                            case  81 :
                                state = 84;
                                continue outer;
                            case  144 :
                                state = 147;
                                continue outer;
                            case  225 :
                                state = 228;
                                continue outer;
                            case  246 :
                                state = 249;
                                continue outer;
                            case  252 :
                                state = 255;
                                continue outer;
                            case  60 :
                                state = 63;
                                continue outer;
                            case  141 :
                                state = 144;
                                continue outer;
                            case  96 :
                                state = 99;
                                continue outer;
                            case  75 :
                                state = 78;
                                continue outer;
                            case  228 :
                                state = 231;
                                continue outer;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  207 :
                                state = 210;
                                continue outer;
                            case  222 :
                                state = 225;
                                continue outer;
                            case  72 :
                                state = 75;
                                continue outer;
                            case  265 :
                                _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, ___uri, ___local, ___qname)));
                                return ;
                            case  135 :
                                state = 138;
                                continue outer;
                            case  165 :
                                state = 168;
                                continue outer;
                            case  90 :
                                state = 93;
                                continue outer;
                            case  114 :
                                state = 117;
                                continue outer;
                            case  213 :
                                state = 216;
                                continue outer;
                            case  63 :
                                state = 66;
                                continue outer;
                            case  231 :
                                state = 234;
                                continue outer;
                            case  210 :
                                state = 213;
                                continue outer;
                            case  198 :
                                state = 201;
                                continue outer;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  240 :
                                state = 243;
                                continue outer;
                            case  174 :
                                state = 177;
                                continue outer;
                            case  268 :
                                _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, ___uri, ___local, ___qname)));
                                return ;
                            case  216 :
                                state = 219;
                                continue outer;
                            case  87 :
                                state = 90;
                                continue outer;
                            case  189 :
                                state = 192;
                                continue outer;
                            case  243 :
                                state = 246;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  270 :
                                state = 273;
                                continue outer;
                            case  262 :
                                _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, ___uri, ___local, ___qname)));
                                return ;
                            case  78 :
                                state = 81;
                                continue outer;
                            case  162 :
                                state = 165;
                                continue outer;
                            case  57 :
                                state = 60;
                                continue outer;
                            case  192 :
                                state = 195;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  264 :
                                state = 267;
                                continue outer;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  108 :
                                state = 111;
                                continue outer;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  177 :
                                state = 180;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  171 :
                                state = 174;
                                continue outer;
                            case  261 :
                                state = 264;
                                continue outer;
                            case  99 :
                                state = 102;
                                continue outer;
                            case  138 :
                                state = 141;
                                continue outer;
                            case  147 :
                                state = 150;
                                continue outer;
                            case  156 :
                                state = 159;
                                continue outer;
                            case  123 :
                                state = 126;
                                continue outer;
                            case  253 :
                                _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, ___uri, ___local, ___qname)));
                                return ;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  126 :
                                state = 129;
                                continue outer;
                            case  132 :
                                state = 135;
                                continue outer;
                            case  117 :
                                state = 120;
                                continue outer;
                            case  183 :
                                state = 186;
                                continue outer;
                            case  234 :
                                state = 237;
                                continue outer;
                            case  204 :
                                state = 207;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  129 :
                                state = 132;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  219 :
                                state = 222;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  105 :
                                state = 108;
                                continue outer;
                            case  159 :
                                state = 162;
                                continue outer;
                            case  168 :
                                state = 171;
                                continue outer;
                            case  255 :
                                state = 258;
                                continue outer;
                            case  273 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  267 :
                                state = 270;
                                continue outer;
                            case  186 :
                                state = 189;
                                continue outer;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  195 :
                                    state = 198;
                                    continue outer;
                                case  40 :
                                    eatText1(value);
                                    state = 41;
                                    return ;
                                case  33 :
                                    state = 36;
                                    continue outer;
                                case  55 :
                                    eatText2(value);
                                    state = 56;
                                    return ;
                                case  172 :
                                    eatText3(value);
                                    state = 173;
                                    return ;
                                case  249 :
                                    state = 252;
                                    continue outer;
                                case  69 :
                                    state = 72;
                                    continue outer;
                                case  238 :
                                    eatText4(value);
                                    state = 239;
                                    return ;
                                case  258 :
                                    state = 261;
                                    continue outer;
                                case  12 :
                                    state = 15;
                                    continue outer;
                                case  175 :
                                    eatText5(value);
                                    state = 176;
                                    return ;
                                case  157 :
                                    eatText6(value);
                                    state = 158;
                                    return ;
                                case  24 :
                                    state = 27;
                                    continue outer;
                                case  153 :
                                    state = 156;
                                    continue outer;
                                case  93 :
                                    state = 96;
                                    continue outer;
                                case  79 :
                                    eatText7(value);
                                    state = 80;
                                    return ;
                                case  1 :
                                    eatText8(value);
                                    state = 2;
                                    return ;
                                case  31 :
                                    eatText9(value);
                                    state = 32;
                                    return ;
                                case  111 :
                                    state = 114;
                                    continue outer;
                                case  102 :
                                    state = 105;
                                    continue outer;
                                case  120 :
                                    state = 123;
                                    continue outer;
                                case  130 :
                                    eatText10(value);
                                    state = 131;
                                    return ;
                                case  148 :
                                    eatText11(value);
                                    state = 149;
                                    return ;
                                case  237 :
                                    state = 240;
                                    continue outer;
                                case  201 :
                                    state = 204;
                                    continue outer;
                                case  76 :
                                    eatText12(value);
                                    state = 77;
                                    return ;
                                case  160 :
                                    eatText13(value);
                                    state = 161;
                                    return ;
                                case  15 :
                                    state = 18;
                                    continue outer;
                                case  150 :
                                    state = 153;
                                    continue outer;
                                case  84 :
                                    state = 87;
                                    continue outer;
                                case  45 :
                                    state = 48;
                                    continue outer;
                                case  139 :
                                    eatText14(value);
                                    state = 140;
                                    return ;
                                case  13 :
                                    eatText15(value);
                                    state = 14;
                                    return ;
                                case  180 :
                                    state = 183;
                                    continue outer;
                                case  66 :
                                    state = 69;
                                    continue outer;
                                case  25 :
                                    eatText16(value);
                                    state = 26;
                                    return ;
                                case  81 :
                                    state = 84;
                                    continue outer;
                                case  235 :
                                    eatText17(value);
                                    state = 236;
                                    return ;
                                case  144 :
                                    state = 147;
                                    continue outer;
                                case  196 :
                                    eatText18(value);
                                    state = 197;
                                    return ;
                                case  225 :
                                    state = 228;
                                    continue outer;
                                case  178 :
                                    eatText19(value);
                                    state = 179;
                                    return ;
                                case  256 :
                                    eatText20(value);
                                    state = 257;
                                    return ;
                                case  82 :
                                    eatText21(value);
                                    state = 83;
                                    return ;
                                case  246 :
                                    state = 249;
                                    continue outer;
                                case  112 :
                                    eatText22(value);
                                    state = 113;
                                    return ;
                                case  115 :
                                    eatText23(value);
                                    state = 116;
                                    return ;
                                case  145 :
                                    eatText24(value);
                                    state = 146;
                                    return ;
                                case  22 :
                                    eatText25(value);
                                    state = 23;
                                    return ;
                                case  109 :
                                    eatText26(value);
                                    state = 110;
                                    return ;
                                case  252 :
                                    state = 255;
                                    continue outer;
                                case  60 :
                                    state = 63;
                                    continue outer;
                                case  61 :
                                    eatText27(value);
                                    state = 62;
                                    return ;
                                case  141 :
                                    state = 144;
                                    continue outer;
                                case  96 :
                                    state = 99;
                                    continue outer;
                                case  133 :
                                    eatText28(value);
                                    state = 134;
                                    return ;
                                case  67 :
                                    eatText29(value);
                                    state = 68;
                                    return ;
                                case  75 :
                                    state = 78;
                                    continue outer;
                                case  228 :
                                    state = 231;
                                    continue outer;
                                case  247 :
                                    eatText30(value);
                                    state = 248;
                                    return ;
                                case  49 :
                                    eatText31(value);
                                    state = 50;
                                    return ;
                                case  39 :
                                    state = 42;
                                    continue outer;
                                case  42 :
                                    state = 45;
                                    continue outer;
                                case  207 :
                                    state = 210;
                                    continue outer;
                                case  100 :
                                    eatText32(value);
                                    state = 101;
                                    return ;
                                case  208 :
                                    eatText33(value);
                                    state = 209;
                                    return ;
                                case  222 :
                                    state = 225;
                                    continue outer;
                                case  10 :
                                    eatText34(value);
                                    state = 11;
                                    return ;
                                case  37 :
                                    eatText35(value);
                                    state = 38;
                                    return ;
                                case  190 :
                                    eatText36(value);
                                    state = 191;
                                    return ;
                                case  94 :
                                    eatText37(value);
                                    state = 95;
                                    return ;
                                case  72 :
                                    state = 75;
                                    continue outer;
                                case  58 :
                                    eatText38(value);
                                    state = 59;
                                    return ;
                                case  265 :
                                    _getBaseline().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 266, value)));
                                    return ;
                                case  34 :
                                    eatText39(value);
                                    state = 35;
                                    return ;
                                case  166 :
                                    eatText40(value);
                                    state = 167;
                                    return ;
                                case  64 :
                                    eatText41(value);
                                    state = 65;
                                    return ;
                                case  135 :
                                    state = 138;
                                    continue outer;
                                case  91 :
                                    eatText42(value);
                                    state = 92;
                                    return ;
                                case  103 :
                                    eatText43(value);
                                    state = 104;
                                    return ;
                                case  165 :
                                    state = 168;
                                    continue outer;
                                case  90 :
                                    state = 93;
                                    continue outer;
                                case  232 :
                                    eatText44(value);
                                    state = 233;
                                    return ;
                                case  114 :
                                    state = 117;
                                    continue outer;
                                case  7 :
                                    eatText45(value);
                                    state = 8;
                                    return ;
                                case  213 :
                                    state = 216;
                                    continue outer;
                                case  63 :
                                    state = 66;
                                    continue outer;
                                case  226 :
                                    eatText46(value);
                                    state = 227;
                                    return ;
                                case  231 :
                                    state = 234;
                                    continue outer;
                                case  210 :
                                    state = 213;
                                    continue outer;
                                case  142 :
                                    eatText47(value);
                                    state = 143;
                                    return ;
                                case  163 :
                                    eatText48(value);
                                    state = 164;
                                    return ;
                                case  211 :
                                    eatText49(value);
                                    state = 212;
                                    return ;
                                case  198 :
                                    state = 201;
                                    continue outer;
                                case  30 :
                                    state = 33;
                                    continue outer;
                                case  184 :
                                    eatText50(value);
                                    state = 185;
                                    return ;
                                case  240 :
                                    state = 243;
                                    continue outer;
                                case  174 :
                                    state = 177;
                                    continue outer;
                                case  187 :
                                    eatText51(value);
                                    state = 188;
                                    return ;
                                case  268 :
                                    _getOutlineCode().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 269, value)));
                                    return ;
                                case  216 :
                                    state = 219;
                                    continue outer;
                                case  169 :
                                    eatText52(value);
                                    state = 170;
                                    return ;
                                case  87 :
                                    state = 90;
                                    continue outer;
                                case  189 :
                                    state = 192;
                                    continue outer;
                                case  243 :
                                    state = 246;
                                    continue outer;
                                case  6 :
                                    state = 9;
                                    continue outer;
                                case  52 :
                                    eatText53(value);
                                    state = 53;
                                    return ;
                                case  4 :
                                    eatText54(value);
                                    state = 5;
                                    return ;
                                case  97 :
                                    eatText55(value);
                                    state = 98;
                                    return ;
                                case  270 :
                                    state = 273;
                                    continue outer;
                                case  262 :
                                    _getExtendedAttribute().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 263, value)));
                                    return ;
                                case  78 :
                                    state = 81;
                                    continue outer;
                                case  250 :
                                    eatText56(value);
                                    state = 251;
                                    return ;
                                case  162 :
                                    state = 165;
                                    continue outer;
                                case  181 :
                                    eatText57(value);
                                    state = 182;
                                    return ;
                                case  57 :
                                    state = 60;
                                    continue outer;
                                case  192 :
                                    state = 195;
                                    continue outer;
                                case  27 :
                                    state = 30;
                                    continue outer;
                                case  127 :
                                    eatText58(value);
                                    state = 128;
                                    return ;
                                case  205 :
                                    eatText59(value);
                                    state = 206;
                                    return ;
                                case  154 :
                                    eatText60(value);
                                    state = 155;
                                    return ;
                                case  264 :
                                    state = 267;
                                    continue outer;
                                case  3 :
                                    state = 6;
                                    continue outer;
                                case  28 :
                                    eatText61(value);
                                    state = 29;
                                    return ;
                                case  121 :
                                    eatText62(value);
                                    state = 122;
                                    return ;
                                case  70 :
                                    eatText63(value);
                                    state = 71;
                                    return ;
                                case  108 :
                                    state = 111;
                                    continue outer;
                                case  106 :
                                    eatText64(value);
                                    state = 107;
                                    return ;
                                case  21 :
                                    state = 24;
                                    continue outer;
                                case  85 :
                                    eatText65(value);
                                    state = 86;
                                    return ;
                                case  177 :
                                    state = 180;
                                    continue outer;
                                case  18 :
                                    state = 21;
                                    continue outer;
                                case  202 :
                                    eatText66(value);
                                    state = 203;
                                    return ;
                                case  171 :
                                    state = 174;
                                    continue outer;
                                case  261 :
                                    state = 264;
                                    continue outer;
                                case  99 :
                                    state = 102;
                                    continue outer;
                                case  193 :
                                    eatText67(value);
                                    state = 194;
                                    return ;
                                case  43 :
                                    eatText68(value);
                                    state = 44;
                                    return ;
                                case  138 :
                                    state = 141;
                                    continue outer;
                                case  147 :
                                    state = 150;
                                    continue outer;
                                case  151 :
                                    eatText69(value);
                                    state = 152;
                                    return ;
                                case  156 :
                                    state = 159;
                                    continue outer;
                                case  123 :
                                    state = 126;
                                    continue outer;
                                case  259 :
                                    eatText70(value);
                                    state = 260;
                                    return ;
                                case  253 :
                                    _getPredecessorLink().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 254, value)));
                                    return ;
                                case  54 :
                                    state = 57;
                                    continue outer;
                                case  124 :
                                    eatText71(value);
                                    state = 125;
                                    return ;
                                case  126 :
                                    state = 129;
                                    continue outer;
                                case  132 :
                                    state = 135;
                                    continue outer;
                                case  117 :
                                    state = 120;
                                    continue outer;
                                case  183 :
                                    state = 186;
                                    continue outer;
                                case  244 :
                                    eatText72(value);
                                    state = 245;
                                    return ;
                                case  234 :
                                    state = 237;
                                    continue outer;
                                case  204 :
                                    state = 207;
                                    continue outer;
                                case  48 :
                                    state = 51;
                                    continue outer;
                                case  129 :
                                    state = 132;
                                    continue outer;
                                case  136 :
                                    eatText73(value);
                                    state = 137;
                                    return ;
                                case  36 :
                                    state = 39;
                                    continue outer;
                                case  219 :
                                    state = 222;
                                    continue outer;
                                case  16 :
                                    eatText74(value);
                                    state = 17;
                                    return ;
                                case  51 :
                                    state = 54;
                                    continue outer;
                                case  105 :
                                    state = 108;
                                    continue outer;
                                case  46 :
                                    eatText75(value);
                                    state = 47;
                                    return ;
                                case  88 :
                                    eatText76(value);
                                    state = 89;
                                    return ;
                                case  19 :
                                    eatText77(value);
                                    state = 20;
                                    return ;
                                case  220 :
                                    eatText78(value);
                                    state = 221;
                                    return ;
                                case  159 :
                                    state = 162;
                                    continue outer;
                                case  168 :
                                    state = 171;
                                    continue outer;
                                case  255 :
                                    state = 258;
                                    continue outer;
                                case  273 :
                                    revertToParentFromText(value);
                                    return ;
                                case  199 :
                                    eatText79(value);
                                    state = 200;
                                    return ;
                                case  9 :
                                    state = 12;
                                    continue outer;
                                case  241 :
                                    eatText80(value);
                                    state = 242;
                                    return ;
                                case  217 :
                                    eatText81(value);
                                    state = 218;
                                    return ;
                                case  73 :
                                    eatText82(value);
                                    state = 74;
                                    return ;
                                case  267 :
                                    state = 270;
                                    continue outer;
                                case  223 :
                                    eatText83(value);
                                    state = 224;
                                    return ;
                                case  186 :
                                    state = 189;
                                    continue outer;
                                case  229 :
                                    eatText84(value);
                                    state = 230;
                                    return ;
                                case  118 :
                                    eatText85(value);
                                    state = 119;
                                    return ;
                                case  214 :
                                    eatText86(value);
                                    state = 215;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Resume = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Rollup = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Rollup = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText5(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText6(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText7(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Critical = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Critical = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText8(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _UID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText9(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OutlineLevel = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText10(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText11(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText12(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Summary = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Summary = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText13(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText14(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText15(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsNull = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsNull = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText16(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WBSLevel = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText17(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HideBar = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_HideBar = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText18(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ConstraintDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText19(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText20(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText21(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsSubproject = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsSubproject = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText22(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FinishVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText23(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WorkVariance = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_WorkVariance = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText24(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText25(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _WBS = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText26(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StartVariance = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText27(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EffortDriven = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_EffortDriven = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText28(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PercentWorkComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText29(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OverAllocated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_OverAllocated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText30(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PhysicalPercentComplete = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText31(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Work = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText32(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EarlyFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText33(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText34(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText35(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText36(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ConstraintType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText37(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ExternalTaskProject = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText38(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ResumeValid = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ResumeValid = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText39(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Priority = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText40(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RegularWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText41(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Recurring = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Recurring = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText42(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ExternalTask = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ExternalTask = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText43(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LateStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText44(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Notes = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText45(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Name = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText46(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkSubAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText47(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText48(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText49(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingDelayFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText50(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ACWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_ACWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText51(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CV = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_CV = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText52(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingDuration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText53(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Stop = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText54(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText55(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EarlyStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText56(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _EarnedValueMethod = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText57(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RemainingOvertimeWork = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText58(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FixedCostAccrual = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText59(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelingCanSplit = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LevelingCanSplit = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText60(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText61(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _OutlineNumber = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText62(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _TotalSlack = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText63(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Estimated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Estimated = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText64(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LateFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText65(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IsSubprojectReadOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IsSubprojectReadOnly = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText66(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _LevelAssignments = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_LevelAssignments = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText67(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText68(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Duration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText69(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualDuration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText70(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _ActualOvertimeWorkProtected = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText71(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FixedCost = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_FixedCost = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText72(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWP = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWP = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText73(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText74(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _CreateDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText75(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText76(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _SubprojectName = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText77(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Contact = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText78(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Hyperlink = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText79(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Deadline = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText80(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _BCWS = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_BCWS = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText81(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PreLeveledFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText82(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Milestone = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_Milestone = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText83(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _HyperlinkAddress = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText84(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _IgnoreResourceCalendar = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_IgnoreResourceCalendar = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText85(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _FreeSlack = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText86(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _PreLeveledStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getTask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  3 :
                            if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  2 :
                            if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        }

        protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  190 :
                        if (("ExtendedAttribute" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  69 :
                        if (("MinutesPerWeek" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 70;
                            return ;
                        }
                        state = 72;
                        continue outer;
                    case  138 :
                        if (("MoveRemainingStartsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 139;
                            return ;
                        }
                        state = 141;
                        continue outer;
                    case  144 :
                        if (("BaselineForEarnedValue" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 145;
                            return ;
                        }
                        state = 147;
                        continue outer;
                    case  147 :
                        if (("AutoAddNewResourcesAndTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 148;
                            return ;
                        }
                        state = 150;
                        continue outer;
                    case  12 :
                        if (("Category" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  105 :
                        if (("MultipleCriticalPaths" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 106;
                            return ;
                        }
                        state = 108;
                        continue outer;
                    case  21 :
                        if (("Author" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  180 :
                        if (("AdminProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 181;
                            return ;
                        }
                        state = 183;
                        continue outer;
                    case  66 :
                        if (("MinutesPerDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        state = 69;
                        continue outer;
                    case  165 :
                        if (("DefaultTaskEVMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 166;
                            return ;
                        }
                        state = 168;
                        continue outer;
                    case  201 :
                        if (("Assignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 202;
                            return ;
                        }
                        state = 204;
                        continue outer;
                    case  111 :
                        if (("NewTasksEstimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 112;
                            return ;
                        }
                        state = 114;
                        continue outer;
                    case  120 :
                        if (("SpreadPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 121;
                            return ;
                        }
                        state = 123;
                        continue outer;
                    case  84 :
                        if (("DefaultOvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 85;
                            return ;
                        }
                        state = 87;
                        continue outer;
                    case  141 :
                        if (("MoveCompletedEndsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 142;
                            return ;
                        }
                        state = 144;
                        continue outer;
                    case  15 :
                        if (("Company" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  202 :
                        if (("Assignment" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  45 :
                        if (("CriticalSlackLimit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  171 :
                        if (("ExtendedCreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 172;
                            return ;
                        }
                        state = 174;
                        continue outer;
                    case  196 :
                        if (("Task" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  36 :
                        if (("StartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  51 :
                        if (("CurrencySymbol" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  159 :
                        if (("Autolink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 160;
                            return ;
                        }
                        state = 162;
                        continue outer;
                    case  102 :
                        if (("InsertedProjectsLikeSummary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 103;
                            return ;
                        }
                        state = 105;
                        continue outer;
                    case  0 :
                        if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  27 :
                        if (("Revision" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  174 :
                        if (("ActualsInSync" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 175;
                            return ;
                        }
                        state = 177;
                        continue outer;
                    case  183 :
                        if (("OutlineCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 184;
                            return ;
                        }
                        state = 186;
                        continue outer;
                    case  199 :
                        if (("Resource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  189 :
                        if (("ExtendedAttributes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 190;
                            return ;
                        }
                        state = 192;
                        continue outer;
                    case  156 :
                        if (("MicrosoftProjectServerURL" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 157;
                            return ;
                        }
                        state = 159;
                        continue outer;
                    case  193 :
                        if (("Calendar" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _Calendars = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.class), 194, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  187 :
                        if (("VerifyUniqueCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GenerateCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Prefix" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  186 :
                        if (("WBSMasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 187;
                            return ;
                        }
                        state = 189;
                        continue outer;
                    case  192 :
                        if (("Calendars" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 193;
                            return ;
                        }
                        state = 195;
                        continue outer;
                    case  198 :
                        if (("Resources" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 199;
                            return ;
                        }
                        state = 201;
                        continue outer;
                    case  78 :
                        if (("DefaultFixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 79;
                            return ;
                        }
                        state = 81;
                        continue outer;
                    case  72 :
                        if (("DaysPerMonth" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 73;
                            return ;
                        }
                        state = 75;
                        continue outer;
                    case  42 :
                        if (("FYStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  3 :
                        if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  184 :
                        if (("OutlineCode" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  99 :
                        if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 100;
                            return ;
                        }
                        state = 102;
                        continue outer;
                    case  6 :
                        if (("Title" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  135 :
                        if (("MoveRemainingStartsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 136;
                            return ;
                        }
                        state = 138;
                        continue outer;
                    case  75 :
                        if (("DefaultTaskType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 76;
                            return ;
                        }
                        state = 78;
                        continue outer;
                    case  93 :
                        if (("EditableActualCosts" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 94;
                            return ;
                        }
                        state = 96;
                        continue outer;
                    case  57 :
                        if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  90 :
                        if (("WorkFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 91;
                            return ;
                        }
                        state = 93;
                        continue outer;
                    case  81 :
                        if (("DefaultStandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 82;
                            return ;
                        }
                        state = 84;
                        continue outer;
                    case  96 :
                        if (("HonorConstraints" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 97;
                            return ;
                        }
                        state = 99;
                        continue outer;
                    case  54 :
                        if (("CurrencySymbolPosition" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  123 :
                        if (("TaskUpdatesResource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 124;
                            return ;
                        }
                        state = 126;
                        continue outer;
                    case  204 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  60 :
                        if (("DefaultStartTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  39 :
                        if (("FinishDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  18 :
                        if (("Manager" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  63 :
                        if (("DefaultFinishTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 64;
                            return ;
                        }
                        state = 66;
                        continue outer;
                    case  129 :
                        if (("WeekStartDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 130;
                            return ;
                        }
                        state = 132;
                        continue outer;
                    case  87 :
                        if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 88;
                            return ;
                        }
                        state = 90;
                        continue outer;
                    case  177 :
                        if (("RemoveFileProperties" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 178;
                            return ;
                        }
                        state = 180;
                        continue outer;
                    case  33 :
                        if (("ScheduleFromStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  108 :
                        if (("NewTasksEffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 109;
                            return ;
                        }
                        state = 111;
                        continue outer;
                    case  168 :
                        if (("ProjectExternallyEdited" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 169;
                            return ;
                        }
                        state = 171;
                        continue outer;
                    case  153 :
                        if (("CurrentDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 154;
                            return ;
                        }
                        state = 156;
                        continue outer;
                    case  162 :
                        if (("NewTaskStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 163;
                            return ;
                        }
                        state = 165;
                        continue outer;
                    case  48 :
                        if (("CurrencyDigits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  9 :
                        if (("Subject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  114 :
                        if (("SplitsInProgressTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 115;
                            return ;
                        }
                        state = 117;
                        continue outer;
                    case  195 :
                        if (("Tasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 196;
                            return ;
                        }
                        state = 198;
                        continue outer;
                    case  126 :
                        if (("FiscalYearStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 127;
                            return ;
                        }
                        state = 129;
                        continue outer;
                    case  117 :
                        if (("SpreadActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 118;
                            return ;
                        }
                        state = 120;
                        continue outer;
                    case  150 :
                        if (("StatusDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 151;
                            return ;
                        }
                        state = 153;
                        continue outer;
                    case  30 :
                        if (("LastSaved" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  132 :
                        if (("MoveCompletedEndsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 133;
                            return ;
                        }
                        state = 135;
                        continue outer;
                    case  24 :
                        if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  190 :
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname));
                        return ;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  122 :
                        if (("SpreadPercentComplete" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 123;
                            return ;
                        }
                        break;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  137 :
                        if (("MoveRemainingStartsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 138;
                            return ;
                        }
                        break;
                    case  173 :
                        if (("ExtendedCreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 174;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("Category" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("StartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  143 :
                        if (("MoveCompletedEndsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 144;
                            return ;
                        }
                        break;
                    case  92 :
                        if (("WorkFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 93;
                            return ;
                        }
                        break;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  68 :
                        if (("MinutesPerDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  128 :
                        if (("FiscalYearStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 129;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("CurrencySymbolPosition" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  86 :
                        if (("DefaultOvertimeRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 87;
                            return ;
                        }
                        break;
                    case  62 :
                        if (("DefaultStartTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  149 :
                        if (("AutoAddNewResourcesAndTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 150;
                            return ;
                        }
                        break;
                    case  179 :
                        if (("RemoveFileProperties" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 180;
                            return ;
                        }
                        break;
                    case  158 :
                        if (("MicrosoftProjectServerURL" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 159;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("MinutesPerWeek" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 72;
                            return ;
                        }
                        break;
                    case  201 :
                        state = 204;
                        continue outer;
                    case  98 :
                        if (("HonorConstraints" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 99;
                            return ;
                        }
                        break;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  200 :
                        if (("Resources" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 201;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("Revision" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  116 :
                        if (("SplitsInProgressTasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 117;
                            return ;
                        }
                        break;
                    case  170 :
                        if (("ProjectExternallyEdited" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 171;
                            return ;
                        }
                        break;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  11 :
                        if (("Subject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  182 :
                        if (("AdminProject" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 183;
                            return ;
                        }
                        break;
                    case  164 :
                        if (("NewTaskStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 165;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  202 :
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname));
                        return ;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  196 :
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        if (("Title" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  113 :
                        if (("NewTasksEstimated" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 114;
                            return ;
                        }
                        break;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  53 :
                        if (("CurrencySymbol" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  167 :
                        if (("DefaultTaskEVMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 168;
                            return ;
                        }
                        break;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  199 :
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname));
                        return ;
                    case  77 :
                        if (("DefaultTaskType" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 78;
                            return ;
                        }
                        break;
                    case  189 :
                        state = 192;
                        continue outer;
                    case  47 :
                        if (("CriticalSlackLimit" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  187 :
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname));
                        return ;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  125 :
                        if (("TaskUpdatesResource" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 126;
                            return ;
                        }
                        break;
                    case  89 :
                        if (("DurationFormat" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 90;
                            return ;
                        }
                        break;
                    case  83 :
                        if (("DefaultStandardRate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 84;
                            return ;
                        }
                        break;
                    case  192 :
                        state = 195;
                        continue outer;
                    case  41 :
                        if (("FinishDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  198 :
                        state = 201;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  110 :
                        if (("NewTasksEffortDriven" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 111;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Name" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  131 :
                        if (("WeekStartDay" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 132;
                            return ;
                        }
                        break;
                    case  194 :
                        if (("Calendars" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 195;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("Manager" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  65 :
                        if (("DefaultFinishTime" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  152 :
                        if (("StatusDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 153;
                            return ;
                        }
                        break;
                    case  74 :
                        if (("DaysPerMonth" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 75;
                            return ;
                        }
                        break;
                    case  197 :
                        if (("Tasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 198;
                            return ;
                        }
                        break;
                    case  184 :
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname));
                        return ;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  26 :
                        if (("CreationDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  203 :
                        if (("Assignments" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 204;
                            return ;
                        }
                        break;
                    case  140 :
                        if (("MoveRemainingStartsForward" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 141;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  17 :
                        if (("Company" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("UID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  134 :
                        if (("MoveCompletedEndsBack" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 135;
                            return ;
                        }
                        break;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  35 :
                        if (("ScheduleFromStart" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("CurrencyDigits" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  107 :
                        if (("MultipleCriticalPaths" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 108;
                            return ;
                        }
                        break;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  104 :
                        if (("InsertedProjectsLikeSummary" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 105;
                            return ;
                        }
                        break;
                    case  204 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  95 :
                        if (("EditableActualCosts" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 96;
                            return ;
                        }
                        break;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  101 :
                        if (("EarnedValueMethod" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 102;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("FYStartDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("CalendarUID" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  191 :
                        if (("ExtendedAttributes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 192;
                            return ;
                        }
                        break;
                    case  155 :
                        if (("CurrentDate" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 156;
                            return ;
                        }
                        break;
                    case  176 :
                        if (("ActualsInSync" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 177;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  80 :
                        if (("DefaultFixedCostAccrual" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 81;
                            return ;
                        }
                        break;
                    case  188 :
                        if (("WBSMasks" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 189;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("Author" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  146 :
                        if (("BaselineForEarnedValue" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 147;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  195 :
                        state = 198;
                        continue outer;
                    case  119 :
                        if (("SpreadActualCost" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 120;
                            return ;
                        }
                        break;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  161 :
                        if (("Autolink" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 162;
                            return ;
                        }
                        break;
                    case  185 :
                        if (("OutlineCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 186;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("LastSaved" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  190 :
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname));
                        return ;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  201 :
                        state = 204;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  202 :
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname));
                        return ;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  196 :
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname));
                        return ;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  199 :
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname));
                        return ;
                    case  189 :
                        state = 192;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  187 :
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname));
                        return ;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  192 :
                        state = 195;
                        continue outer;
                    case  198 :
                        state = 201;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  184 :
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname));
                        return ;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  204 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  195 :
                        state = 198;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  190 :
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, ___uri, ___local, ___qname));
                        return ;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  201 :
                        state = 204;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  202 :
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, ___uri, ___local, ___qname));
                        return ;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  196 :
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, ___uri, ___local, ___qname));
                        return ;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  199 :
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, ___uri, ___local, ___qname));
                        return ;
                    case  189 :
                        state = 192;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  187 :
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, ___uri, ___local, ___qname));
                        return ;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  192 :
                        state = 195;
                        continue outer;
                    case  198 :
                        state = 201;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  184 :
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromLeaveAttribute((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, ___uri, ___local, ___qname));
                        return ;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  204 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  195 :
                        state = 198;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            eatText1(value);
                            state = 14;
                            return ;
                        case  190 :
                            _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 191, value));
                            return ;
                        case  69 :
                            state = 72;
                            continue outer;
                        case  138 :
                            state = 141;
                            continue outer;
                        case  22 :
                            eatText2(value);
                            state = 23;
                            return ;
                        case  144 :
                            state = 147;
                            continue outer;
                        case  147 :
                            state = 150;
                            continue outer;
                        case  109 :
                            eatText3(value);
                            state = 110;
                            return ;
                        case  154 :
                            eatText4(value);
                            state = 155;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  73 :
                            eatText5(value);
                            state = 74;
                            return ;
                        case  105 :
                            state = 108;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  148 :
                            eatText6(value);
                            state = 149;
                            return ;
                        case  151 :
                            eatText7(value);
                            state = 152;
                            return ;
                        case  175 :
                            eatText8(value);
                            state = 176;
                            return ;
                        case  180 :
                            state = 183;
                            continue outer;
                        case  66 :
                            state = 69;
                            continue outer;
                        case  181 :
                            eatText9(value);
                            state = 182;
                            return ;
                        case  55 :
                            eatText10(value);
                            state = 56;
                            return ;
                        case  165 :
                            state = 168;
                            continue outer;
                        case  76 :
                            eatText11(value);
                            state = 77;
                            return ;
                        case  201 :
                            state = 204;
                            continue outer;
                        case  111 :
                            state = 114;
                            continue outer;
                        case  94 :
                            eatText12(value);
                            state = 95;
                            return ;
                        case  100 :
                            eatText13(value);
                            state = 101;
                            return ;
                        case  120 :
                            state = 123;
                            continue outer;
                        case  82 :
                            eatText14(value);
                            state = 83;
                            return ;
                        case  84 :
                            state = 87;
                            continue outer;
                        case  16 :
                            eatText15(value);
                            state = 17;
                            return ;
                        case  141 :
                            state = 144;
                            continue outer;
                        case  91 :
                            eatText16(value);
                            state = 92;
                            return ;
                        case  10 :
                            eatText17(value);
                            state = 11;
                            return ;
                        case  64 :
                            eatText18(value);
                            state = 65;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  202 :
                            _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 203, value));
                            return ;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  142 :
                            eatText19(value);
                            state = 143;
                            return ;
                        case  171 :
                            state = 174;
                            continue outer;
                        case  196 :
                            _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 197, value));
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  79 :
                            eatText20(value);
                            state = 80;
                            return ;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  159 :
                            state = 162;
                            continue outer;
                        case  102 :
                            state = 105;
                            continue outer;
                        case  124 :
                            eatText21(value);
                            state = 125;
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  4 :
                            eatText22(value);
                            state = 5;
                            return ;
                        case  145 :
                            eatText23(value);
                            state = 146;
                            return ;
                        case  157 :
                            eatText24(value);
                            state = 158;
                            return ;
                        case  133 :
                            eatText25(value);
                            state = 134;
                            return ;
                        case  97 :
                            eatText26(value);
                            state = 98;
                            return ;
                        case  58 :
                            eatText27(value);
                            state = 59;
                            return ;
                        case  174 :
                            state = 177;
                            continue outer;
                        case  61 :
                            eatText28(value);
                            state = 62;
                            return ;
                        case  183 :
                            state = 186;
                            continue outer;
                        case  160 :
                            eatText29(value);
                            state = 161;
                            return ;
                        case  199 :
                            _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 200, value));
                            return ;
                        case  189 :
                            state = 192;
                            continue outer;
                        case  156 :
                            state = 159;
                            continue outer;
                        case  130 :
                            eatText30(value);
                            state = 131;
                            return ;
                        case  187 :
                            _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 188, value));
                            return ;
                        case  43 :
                            eatText31(value);
                            state = 44;
                            return ;
                        case  186 :
                            state = 189;
                            continue outer;
                        case  67 :
                            eatText32(value);
                            state = 68;
                            return ;
                        case  192 :
                            state = 195;
                            continue outer;
                        case  166 :
                            eatText33(value);
                            state = 167;
                            return ;
                        case  19 :
                            eatText34(value);
                            state = 20;
                            return ;
                        case  198 :
                            state = 201;
                            continue outer;
                        case  78 :
                            state = 81;
                            continue outer;
                        case  72 :
                            state = 75;
                            continue outer;
                        case  49 :
                            eatText35(value);
                            state = 50;
                            return ;
                        case  1 :
                            eatText36(value);
                            state = 2;
                            return ;
                        case  37 :
                            eatText37(value);
                            state = 38;
                            return ;
                        case  163 :
                            eatText38(value);
                            state = 164;
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  118 :
                            eatText39(value);
                            state = 119;
                            return ;
                        case  7 :
                            eatText40(value);
                            state = 8;
                            return ;
                        case  184 :
                            _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromText((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 185, value));
                            return ;
                        case  99 :
                            state = 102;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  135 :
                            state = 138;
                            continue outer;
                        case  115 :
                            eatText41(value);
                            state = 116;
                            return ;
                        case  75 :
                            state = 78;
                            continue outer;
                        case  46 :
                            eatText42(value);
                            state = 47;
                            return ;
                        case  93 :
                            state = 96;
                            continue outer;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  25 :
                            eatText43(value);
                            state = 26;
                            return ;
                        case  90 :
                            state = 93;
                            continue outer;
                        case  81 :
                            state = 84;
                            continue outer;
                        case  96 :
                            state = 99;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  123 :
                            state = 126;
                            continue outer;
                        case  106 :
                            eatText44(value);
                            state = 107;
                            return ;
                        case  204 :
                            revertToParentFromText(value);
                            return ;
                        case  169 :
                            eatText45(value);
                            state = 170;
                            return ;
                        case  31 :
                            eatText46(value);
                            state = 32;
                            return ;
                        case  60 :
                            state = 63;
                            continue outer;
                        case  52 :
                            eatText47(value);
                            state = 53;
                            return ;
                        case  88 :
                            eatText48(value);
                            state = 89;
                            return ;
                        case  112 :
                            eatText49(value);
                            state = 113;
                            return ;
                        case  139 :
                            eatText50(value);
                            state = 140;
                            return ;
                        case  127 :
                            eatText51(value);
                            state = 128;
                            return ;
                        case  40 :
                            eatText52(value);
                            state = 41;
                            return ;
                        case  34 :
                            eatText53(value);
                            state = 35;
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  136 :
                            eatText54(value);
                            state = 137;
                            return ;
                        case  63 :
                            state = 66;
                            continue outer;
                        case  129 :
                            state = 132;
                            continue outer;
                        case  87 :
                            state = 90;
                            continue outer;
                        case  70 :
                            eatText55(value);
                            state = 71;
                            return ;
                        case  85 :
                            eatText56(value);
                            state = 86;
                            return ;
                        case  177 :
                            state = 180;
                            continue outer;
                        case  172 :
                            eatText57(value);
                            state = 173;
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  108 :
                            state = 111;
                            continue outer;
                        case  168 :
                            state = 171;
                            continue outer;
                        case  153 :
                            state = 156;
                            continue outer;
                        case  162 :
                            state = 165;
                            continue outer;
                        case  28 :
                            eatText58(value);
                            state = 29;
                            return ;
                        case  121 :
                            eatText59(value);
                            state = 122;
                            return ;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  114 :
                            state = 117;
                            continue outer;
                        case  195 :
                            state = 198;
                            continue outer;
                        case  126 :
                            state = 129;
                            continue outer;
                        case  178 :
                            eatText60(value);
                            state = 179;
                            return ;
                        case  117 :
                            state = 120;
                            continue outer;
                        case  150 :
                            state = 153;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  132 :
                            state = 135;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  103 :
                            eatText61(value);
                            state = 104;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Category = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Author = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewTasksEffortDriven = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NewTasksEffortDriven = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrentDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DaysPerMonth = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AutoAddNewResourcesAndTasks = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AutoAddNewResourcesAndTasks = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StatusDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ActualsInSync = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ActualsInSync = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AdminProject = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AdminProject = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrencySymbolPosition = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultTaskType = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EditableActualCosts = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_EditableActualCosts = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EarnedValueMethod = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultStandardRate = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DefaultStandardRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Company = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WorkFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Subject = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultFinishTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveCompletedEndsForward = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveCompletedEndsForward = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultFixedCostAccrual = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TaskUpdatesResource = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_TaskUpdatesResource = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BaselineForEarnedValue = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MicrosoftProjectServerURL = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MicrosoftProjectServerURL = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText25(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveCompletedEndsBack = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveCompletedEndsBack = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText26(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _HonorConstraints = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_HonorConstraints = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText27(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CalendarUID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText28(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultStartTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText29(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Autolink = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Autolink = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText30(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WeekStartDay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText31(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FYStartDate = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText32(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MinutesPerDay = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText33(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultTaskEVMethod = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText34(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Manager = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText35(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrencyDigits = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText36(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UID = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText37(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText38(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewTaskStartDate = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText39(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SpreadActualCost = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SpreadActualCost = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText40(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Title = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText41(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SplitsInProgressTasks = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SplitsInProgressTasks = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText42(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CriticalSlackLimit = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText43(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText44(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MultipleCriticalPaths = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MultipleCriticalPaths = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText45(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProjectExternallyEdited = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ProjectExternallyEdited = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText46(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastSaved = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText47(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CurrencySymbol = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText48(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DurationFormat = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText49(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NewTasksEstimated = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NewTasksEstimated = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText50(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveRemainingStartsForward = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveRemainingStartsForward = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText51(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FiscalYearStart = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FiscalYearStart = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText52(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FinishDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText53(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ScheduleFromStart = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ScheduleFromStart = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText54(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MoveRemainingStartsBack = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_MoveRemainingStartsBack = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText55(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MinutesPerWeek = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText56(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DefaultOvertimeRate = javax.xml.bind.DatatypeConverter.parseFloat(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DefaultOvertimeRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText57(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ExtendedCreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText58(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Revision = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText59(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SpreadPercentComplete = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SpreadPercentComplete = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText60(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RemoveFileProperties = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RemoveFileProperties = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText61(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InsertedProjectsLikeSummary = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_InsertedProjectsLikeSummary = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

    public static class WBSMasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _WBSMask;
        protected boolean has_GenerateCodes;
        protected boolean _GenerateCodes;
        protected java.lang.String _Prefix;
        protected boolean has_VerifyUniqueCodes;
        protected boolean _VerifyUniqueCodes;
        public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getWBSMask() {
            if (_WBSMask == null) {
                _WBSMask = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _WBSMask;
        }

        public java.util.List getWBSMask() {
            return _getWBSMask();
        }

        public boolean isGenerateCodes() {
            return _GenerateCodes;
        }

        public void setGenerateCodes(boolean value) {
            _GenerateCodes = value;
            has_GenerateCodes = true;
        }

        public java.lang.String getPrefix() {
            return _Prefix;
        }

        public void setPrefix(java.lang.String value) {
            _Prefix = value;
        }

        public boolean isVerifyUniqueCodes() {
            return _VerifyUniqueCodes;
        }

        public void setVerifyUniqueCodes(boolean value) {
            _VerifyUniqueCodes = value;
            has_VerifyUniqueCodes = true;
        }

        public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_WBSMask == null)? 0 :_WBSMask.size());
            if (has_VerifyUniqueCodes) {
                context.startElement("http://schemas.microsoft.com/project", "VerifyUniqueCodes");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _VerifyUniqueCodes)), "VerifyUniqueCodes");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_GenerateCodes) {
                context.startElement("http://schemas.microsoft.com/project", "GenerateCodes");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _GenerateCodes)), "GenerateCodes");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_Prefix!= null) {
                context.startElement("http://schemas.microsoft.com/project", "Prefix");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Prefix), "Prefix");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "WBSMask");
                int idx_6 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _WBSMask.get(idx_6 ++)), "WBSMask");
                context.endNamespaceDecls();
                int idx_7 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _WBSMask.get(idx_7 ++)), "WBSMask");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _WBSMask.get(idx1 ++)), "WBSMask");
                context.endElement();
            }
        }

        public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_WBSMask == null)? 0 :_WBSMask.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_WBSMask == null)? 0 :_WBSMask.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava"
+"/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"
+"tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0007booleansr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"
+"n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.S"
+"tringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001csq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsq\u0000~\u0000\u0011ppsr\u0000\"com."
+"sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QName"
+"q\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000+q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0011"
+"VerifyUniqueCodest\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000"
+"3sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000\bppsq\u0000~\u0000&q\u0000~\u0000\u000fpq\u0000~\u0000("
+"q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\rGenerateCodesq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000\bppsq\u0000~\u0000\nq\u0000~\u0000"
+"\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTy"
+"peWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatyp"
+"e.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValu"
+"eCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatype"
+"Impl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteTyp"
+"e;L\u0000\tfacetNameq\u0000~\u0000\u0019xq\u0000~\u0000\u0018q\u0000~\u00007psr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001f\u0000\u0000sr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0016q"
+"\u0000~\u0000\u001ct\u0000\u0006stringq\u0000~\u0000J\u0001q\u0000~\u0000Lt\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000estring"
+"-derivedq\u0000~\u00007sq\u0000~\u0000\bppsq\u0000~\u0000&q\u0000~\u0000\u000fpq\u0000~\u0000(q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0006Pre"
+"fixq\u0000~\u00007q\u0000~\u00003sq\u0000~\u0000\bppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~"
+"\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000Vq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000&q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00004q\u0000~\u0000`sr\u0000 com.sun.msv.grammar"
+".AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00003sq\u0000~\u0000-t\u0000Acom.tapsterrock."
+"mspdi.schema.ProjectType.WBSMasksType.WBSMaskTypet\u0000+http://j"
+"ava.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\bppsq\u0000~\u0000&q\u0000~\u0000\u000fpq\u0000~\u0000("
+"q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0007WBSMaskq\u0000~\u00007q\u0000~\u00003sr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren"
+"tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0012\u0001pq\u0000~\u0000\u0010q\u0000~\u0000:q\u0000"
+"~\u0000\tq\u0000~\u00008q\u0000~\u0000]q\u0000~\u0000\\q\u0000~\u0000Xq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000Zq\u0000~\u0000\u0007q\u0000~\u0000Uq\u0000~\u0000?q\u0000~\u0000%q\u0000"
+"~\u0000;q\u0000~\u0000Qq\u0000~\u0000Aq\u0000~\u0000fx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------");
            }

            protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  10 :
                            if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                _getWBSMask().add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  12 :
                            if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  3 :
                            if (("GenerateCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            if (("Prefix" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  0 :
                            if (("VerifyUniqueCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  5 :
                            if (("GenerateCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  12 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  8 :
                            if (("Prefix" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  11 :
                            if (("WBSMask" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  2 :
                            if (("VerifyUniqueCodes" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  4 :
                                eatText1(value);
                                state = 5;
                                return ;
                            case  12 :
                                revertToParentFromText(value);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  7 :
                                eatText2(value);
                                state = 8;
                                return ;
                            case  1 :
                                eatText3(value);
                                state = 2;
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _GenerateCodes = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_GenerateCodes = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Prefix = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _VerifyUniqueCodes = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_VerifyUniqueCodes = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

        public static class WBSMaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType, com.sun.xml.bind.JAXBObject, com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallableObject, com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializable, com.tapsterrock.mspdi.schema.impl.runtime.ValidatableObject
        {

            protected java.lang.String _Separator;
            protected java.math.BigInteger _Type;
            protected java.lang.String _Length;
            protected java.math.BigInteger _Level;
            public final static java.lang.Class version = (com.tapsterrock.mspdi.schema.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType.class);
            }

            public java.lang.String getSeparator() {
                return _Separator;
            }

            public void setSeparator(java.lang.String value) {
                _Separator = value;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public java.lang.String getLength() {
                return _Length;
            }

            public void setLength(java.lang.String value) {
                _Length = value;
            }

            public java.math.BigInteger getLevel() {
                return _Level;
            }

            public void setLevel(java.math.BigInteger value) {
                _Level = value;
            }

            public com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://schemas.microsoft.com/project", "Level");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Level)), "Level");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Type");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Type)), "Type");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Length");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Length), "Length");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Separator");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Separator), "Separator");
                } catch (java.lang.Exception e) {
                    com.tapsterrock.mspdi.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }

            public void serializeAttributes(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeURIs(com.tapsterrock.mspdi.schema.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public java.lang.Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000s"
+"q\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.In"
+"tegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDeri"
+"vedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/"
+"XSDatatypeImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun."
+"msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;c"
+"om.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090"
+"\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u0013L\u0000"
+"\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfa"
+"cetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016ppq\u0000~\u0000\u001e\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Numb"
+"erType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000\u001eq\u0000~\u0000%t\u0000\u000efractionD"
+"igits\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.s"
+"un.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.g"
+"rammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\rppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005Q"
+"Nameq\u0000~\u0000\u001eq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00005q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.Simple"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000"
+"\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Ex"
+"pression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00000\u0001q\u0000~\u0000=sq\u0000~\u0000"
+"7t\u0000\u0005Levelt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\bpp\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\rppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype"
+".xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000Ap"
+"q\u0000~\u0000\u001e\u0000\u0000q\u0000~\u0000\u0019q\u0000~\u0000\u0019t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74"
+"\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.IntegerValue"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0017xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000x"
+"pt\u0000\u00013sq\u0000~\u0000Lt\u0000\u00012sq\u0000~\u0000Lt\u0000\u00010sq\u0000~\u0000Lt\u0000\u00011xq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000finteger-de"
+"rivedq\u0000~\u0000Asq\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0004Typeq\u0000"
+"~\u0000Asq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rppsr\u0000#com.sun.msv.datatype.xsd.Str"
+"ingType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0006stringsr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u001d\u0001q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000aq\u0000~\u0000\u001asq\u0000~\u0000,ppsq\u0000~\u0000.q\u0000~\u00001pq\u0000~\u00002q\u0000~\u00009"
+"q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0006Lengthq\u0000~\u0000Asq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000^sq\u0000~\u0000,ppsq\u0000~\u0000"
+".q\u0000~\u00001pq\u0000~\u00002q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\tSeparatorq\u0000~\u0000Asr\u0000\"com.sun.msv"
+".grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv"
+"/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar"
+".ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersio"
+"nL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~"
+"\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000Cq\u0000~\u0000]q\u0000~\u0000jq\u0000~\u0000-q\u0000~\u0000Xq\u0000~\u0000eq\u0000~\u0000kx"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.tapsterrock.mspdi.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------");
                }

                protected Unmarshaller(com.tapsterrock.mspdi.schema.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  9 :
                                if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                break;
                            case  12 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  3 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  0 :
                                if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  6 :
                                if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("Level" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  8 :
                                if (("Length" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("Type" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("Separator" == ___local)&&("http://schemas.microsoft.com/project" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  12 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  10 :
                                    eatText1(value);
                                    state = 11;
                                    return ;
                                case  4 :
                                    eatText2(value);
                                    state = 5;
                                    return ;
                                case  12 :
                                    revertToParentFromText(value);
                                    return ;
                                case  7 :
                                    eatText3(value);
                                    state = 8;
                                    return ;
                                case  1 :
                                    eatText4(value);
                                    state = 2;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Separator = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Type = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Length = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _Level = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

    }

}
