//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vBeta 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.02.21 at 09:54:12 GMT 
//


package com.tapsterrock.mspdi.schema.impl;

public class ProjectTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.class;
    protected java.math.BigInteger _MinutesPerDay;
    protected boolean has_SplitsInProgressTasks;
    protected boolean _SplitsInProgressTasks;
    protected String _Manager;
    protected java.util.Calendar _DefaultFinishTime;
    protected boolean has_FiscalYearStart;
    protected boolean _FiscalYearStart;
    protected java.math.BigInteger _DefaultTaskEVMethod;
    protected java.util.Calendar _DefaultStartTime;
    protected java.util.Calendar _FinishDate;
    protected boolean has_MoveCompletedEndsBack;
    protected boolean _MoveCompletedEndsBack;
    protected java.math.BigInteger _WorkFormat;
    protected java.math.BigInteger _BaselineForEarnedValue;
    protected java.math.BigInteger _CalendarUID;
    protected String _Subject;
    protected boolean has_NewTasksEstimated;
    protected boolean _NewTasksEstimated;
    protected boolean has_SpreadActualCost;
    protected boolean _SpreadActualCost;
    protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType _Resources;
    protected java.math.BigInteger _DefaultFixedCostAccrual;
    protected boolean has_MultipleCriticalPaths;
    protected boolean _MultipleCriticalPaths;
    protected boolean has_AutoAddNewResourcesAndTasks;
    protected boolean _AutoAddNewResourcesAndTasks;
    protected boolean has_DefaultOvertimeRate;
    protected float _DefaultOvertimeRate;
    protected java.util.Calendar _StartDate;
    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType _Calendars;
    protected java.math.BigInteger _CurrencySymbolPosition;
    protected com.tapsterrock.mspdi.schema.ProjectType.TasksType _Tasks;
    protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType _OutlineCodes;
    protected com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType _WBSMasks;
    protected java.math.BigInteger _FYStartDate;
    protected java.util.Calendar _LastSaved;
    protected java.util.Calendar _StatusDate;
    protected boolean has_MoveRemainingStartsBack;
    protected boolean _MoveRemainingStartsBack;
    protected boolean has_Autolink;
    protected boolean _Autolink;
    protected String _Title;
    protected String _Company;
    protected java.math.BigInteger _DurationFormat;
    protected boolean has_MicrosoftProjectServerURL;
    protected boolean _MicrosoftProjectServerURL;
    protected java.math.BigInteger _NewTaskStartDate;
    protected boolean has_HonorConstraints;
    protected boolean _HonorConstraints;
    protected java.math.BigInteger _DaysPerMonth;
    protected String _Author;
    protected boolean has_ScheduleFromStart;
    protected boolean _ScheduleFromStart;
    protected java.math.BigInteger _MinutesPerWeek;
    protected java.util.Calendar _CurrentDate;
    protected com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType _ExtendedAttributes;
    protected java.math.BigInteger _CurrencyDigits;
    protected boolean has_InsertedProjectsLikeSummary;
    protected boolean _InsertedProjectsLikeSummary;
    protected String _Name;
    protected boolean has_SpreadPercentComplete;
    protected boolean _SpreadPercentComplete;
    protected java.math.BigInteger _WeekStartDay;
    protected boolean has_DefaultStandardRate;
    protected float _DefaultStandardRate;
    protected boolean has_MoveCompletedEndsForward;
    protected boolean _MoveCompletedEndsForward;
    protected String _CurrencySymbol;
    protected com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType _Assignments;
    protected boolean has_TaskUpdatesResource;
    protected boolean _TaskUpdatesResource;
    protected boolean has_EditableActualCosts;
    protected boolean _EditableActualCosts;
    protected String _UID;
    protected java.math.BigInteger _CriticalSlackLimit;
    protected java.math.BigInteger _Revision;
    protected boolean has_NewTasksEffortDriven;
    protected boolean _NewTasksEffortDriven;
    protected java.math.BigInteger _EarnedValueMethod;
    protected boolean has_MoveRemainingStartsForward;
    protected boolean _MoveRemainingStartsForward;
    protected java.math.BigInteger _DefaultTaskType;
    protected boolean has_ProjectExternallyEdited;
    protected boolean _ProjectExternallyEdited;
    protected String _Category;
    protected java.util.Calendar _CreationDate;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpE\u000e\u00eb2ppsq\u0000~\u0000\u0000Dg\u0088\u00f7ppsq\u0000~\u0000\u0000C\u00c0&\u00bcppsq\u0000~\u0000\u0000C\u0018\u00c4\u0081ppsq\u0000~\u0000\u0000BqbFppsq\u0000~\u0000\u0000A\u00ca\u0000\u000bppsq\u0000~\u0000\u0000A\"\u009d\u00d0ppsq\u0000~\u0000\u0000@{;\u0095ppsq\u0000~\u0000\u0000>\u00d31\u0001ppsq\u0000~\u0000\u0000=\u001cA\u00b6ppsq\u0000~\u0000\u0000<o\u0001\u00b7ppsq\u0000~\u0000\u0000:\u00c6\u00f7#ppsq\u0000~\u0000\u00009\u001e\u00ec\u008fppsq\u0000~\u0000\u00008\u008d\u00f1\u0005ppsq\u0000~\u0000\u00007\u00fc\u00f5{ppsq\u0000~\u0000\u00006T\u00ea\u00e7ppsq\u0000~\u0000\u000054\u00eb\u0013ppsq\u0000~\u0000\u00003\u008c\u00e0\u007fppsq\u0000~\u0000\u00001\u00e4\u00d5\u00ebppsq\u0000~\u0000\u00000<\u00cbWppsq\u0000~\u0000\u0000.\u0094\u00c0\u00c3ppsq\u0000~\u0000\u0000.nC\u00dcppsq\u0000~\u0000\u0000,\u00c69Hppsq\u0000~\u0000\u0000+\u001e.\u00b4ppsq\u0000~\u0000\u0000)v$ ppsq\u0000~\u0000\u0000\'\u00ce\u0019\u008cppsq\u0000~\u0000\u0000&&\u000e\u00f8ppsq\u0000~\u0000\u0000$~\u0004dppsq\u0000~\u0000\u0000\"\u00d5\u00f9\u00d0ppsq\u0000~\u0000\u0000!-\u00ef<ppsq\u0000~\u0000\u0000\u001f\u0085\u00e4\u00a8ppsq\u0000~\u0000\u0000\u001e+S\nppsq\u0000~\u0000\u0000\u001c\u0083Hvppsq\u0000~\u0000\u0000\u001a\u00db=\u00e2ppsq\u0000~\u0000\u0000\u0019\u00d7-\u0010ppsq\u0000~\u0000\u0000\u0018\u00bb\ngppsq\u0000~\u0000\u0000\u0018\u00a0M_ppsq\u0000~\u0000\u0000\u0018\u0085\u0090Wppsq\u0000~\u0000\u0000\u0018r{\u00e8ppsq\u0000~\u0000\u0000\u0017\u00d6\u00c9\u00e3ppsq\u0000~\u0000\u0000\u0016\u00d8E\u00d3ppsq\u0000~\u0000\u0000\u0015\u00d9\u00c1\u00c3ppsq\u0000~\u0000\u0000\u0014\u00db=\u00b3ppsq\u0000~\u0000\u0000\u0014\\r\u00e7ppsq\u0000~\u0000\u0000\u0013\u00dd\u00a8\u001bppsq\u0000~\u0000\u0000\u0012\u00df$\u000bppsq\u0000~\u0000\u0000\u0011$\u0012\u00b3ppsq\u0000~\u0000\u0000\u000f\u00c1\u00c8lppsq\u0000~\u0000\u0000\u000e\u00c3D\\ppsq\u0000~\u0000\u0000\r\u00c4\u00c0Lppsq\u0000~\u0000\u0000\ri\u0087\u00c9ppsq\u0000~\u0000\u0000\f\u00d8\u008c?ppsq\u0000~\u0000\u0000\fG\u0090\u00b5ppsq\u0000~\u0000\u0000\n\u009f\u0086!ppsq\u0000~\u0000\u0000\n\u000e\u008a\u0097ppsq\u0000~\u0000\u0000\t\u0010\u0006\u0087ppsq\u0000~\u0000\u0000\b\u007f\n\u00fdppsq\u0000~\u0000\u0000\u0007\u00c29\u0088ppsq\u0000~\u0000\u0000\u0007\u000f\u00c8\u0013ppsq\u0000~\u0000\u0000\u0005`\u00camppsq\u0000~\u0000\u0000\u0003\u00c9A\u00d6ppsq\u0000~\u0000\u0000\u00030J\u00e4ppsq\u0000~\u0000\u0000\u0002\u00d4\u00da\u0094ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001m8`ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001m8Usr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001m8Jppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000UL\u0000\btypeNameq\u0000~\u0000UL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xq\u0000~\u0000Vt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringq\u0000~\u0000\\q\u0000~\u0000`t\u0000\tmaxLength\u0000\u0000\u0000\u0010sr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000Kpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000UL\u0000\fnamespaceURIq\u0000~\u0000Uxpt\u0000\u000estring-derivedq\u0000~\u0000Ysr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000UL\u0000\fnamespaceURIq\u0000~\u0000Uxr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000J\u0001psq\u0000~\u0000D\u0001g\u00a2/ppsq\u0000~\u0000F\u0001g\u00a2$q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001g\u00a2\u0019ppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0000\u00ffq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0004Nameq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000[pKppsq\u0000~\u0000F\u0000[p@q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000[p5ppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0002\u0000q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0005Titleq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0098\u00f6\u00edppsq\u0000~\u0000F\u0000\u0098\u00f6\u00e2q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u0098\u00f6\u00d7ppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0002\u0000q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0007Subjectq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u0097\u0088\u0092ppsq\u0000~\u0000F\u0001\u0097\u0088\u0087q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u0097\u0088|ppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0002\u0000q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\bCategoryq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00ae\u00fd\u00a1ppsq\u0000~\u0000F\u0001\u00ae\u00fd\u0096q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u00ae\u00fd\u008bppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0002\u0000q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0007Companyq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00b2qpppsq\u0000~\u0000F\u0000\u00b2qeq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u00b2qZppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0002\u0000q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0007Managerq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00bc\u00d1pppsq\u0000~\u0000F\u0000\u00bc\u00d1eq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u00bc\u00d1Zppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0002\u0000q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0006Authorq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000F\u0000\u0090\u00fbzq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000^q\u0000~\u0000at\u0000\bdateTimesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000[q\u0000~\u0000esq\u0000~\u0000fq\u0000~\u0000\u00afq\u0000~\u0000asq\u0000~\u0000it\u0000\fCreationDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xq\u0000~\u0000^q\u0000~\u0000at\u0000\u0007integerq\u0000~\u0000\u00b1q\u0000~\u0000esq\u0000~\u0000fq\u0000~\u0000\u00bbq\u0000~\u0000asq\u0000~\u0000it\u0000\bRevisionq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000F\u0000\u0090\u00fbzq\u0000~\u0000Kp\u0000q\u0000~\u0000\u00absq\u0000~\u0000it\u0000\tLastSavedq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000^q\u0000~\u0000at\u0000\u0007booleanq\u0000~\u0000\u00b1q\u0000~\u0000esq\u0000~\u0000fq\u0000~\u0000\u00c8q\u0000~\u0000asq\u0000~\u0000it\u0000\u0011ScheduleFromStartq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000F\u0000\u0090\u00fbzq\u0000~\u0000Kp\u0000q\u0000~\u0000\u00absq\u0000~\u0000it\u0000\tStartDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000F\u0000\u0090\u00fbzq\u0000~\u0000Kp\u0000q\u0000~\u0000\u00absq\u0000~\u0000it\u0000\nFinishDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000[8~ppsq\u0000~\u0000F\u0000[8sq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000[8hppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000Qq\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00bat\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000 ?@\u0000\u0000\u0000\u0000\u0000\fsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Uxpt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u00017sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddt\u0000\u00016sq\u0000~\u0000\u00ddt\u0000\u00011sq\u0000~\u0000\u00ddt\u0000\u000210sq\u0000~\u0000\u00ddt\u0000\u00015sq\u0000~\u0000\u00ddt\u0000\u000211sq\u0000~\u0000\u00ddt\u0000\u00019sq\u0000~\u0000\u00ddt\u0000\u00014sq\u0000~\u0000\u00ddt\u0000\u00018sq\u0000~\u0000\u00ddt\u0000\u000212xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u000bFYStartDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00b7sq\u0000~\u0000it\u0000\u0012CriticalSlackLimitq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00b7sq\u0000~\u0000it\u0000\u000eCurrencyDigitsq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001bJBppsq\u0000~\u0000F\u0001bJ7q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001bJ,ppsq\u0000~\u0000Pq\u0000~\u0000Ypq\u0000~\u0000\\\u0000\u0000q\u0000~\u0000`q\u0000~\u0000`q\u0000~\u0000c\u0000\u0000\u0000\u0014q\u0000~\u0000esq\u0000~\u0000ft\u0000\u000estring-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u000eCurrencySymbolq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00bb\u0011Sppsq\u0000~\u0000F\u0001\u00bb\u0011Hq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u00bb\u0011=ppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sq\u0000~\u0000\u00ddt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddt\u0000\u00010sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0016CurrencySymbolPositionq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00b7sq\u0000~\u0000it\u0000\u000bCalendarUIDq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000~\u00ca\u00c7ppsq\u0000~\u0000F\u0000~\u00ca\u00bcq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000~\u00ca\u00b1ppsr\u0000!com.sun.msv.datatype.xsd.TimeType\u0011\u00fb\u0013\u008b\u00a9l\u009d\u001b\u0002\u0000\u0000xq\u0000~\u0000\u00adq\u0000~\u0000at\u0000\u0004timeq\u0000~\u0000\u00b1q\u0000~\u0000esq\u0000~\u0000fq\u0000~\u0001$q\u0000~\u0000asq\u0000~\u0000it\u0000\u0010DefaultStartTimeq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000~\u00ca\u00c7ppsq\u0000~\u0000F\u0000~\u00ca\u00bcq\u0000~\u0000Kp\u0000q\u0000~\u0001!sq\u0000~\u0000it\u0000\u0011DefaultFinishTimeq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00b7sq\u0000~\u0000it\u0000\rMinutesPerDayq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00b7sq\u0000~\u0000it\u0000\u000eMinutesPerWeekq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00fe\u0084\u000bppsq\u0000~\u0000F\u0000\u00fe\u0084\u0000q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00b7sq\u0000~\u0000it\u0000\fDaysPerMonthq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u009b\u00b2\u0000ppsq\u0000~\u0000F\u0000\u009b\u00b1\u00f5q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u009b\u00b1\u00eappsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddq\u0000~\u0001\u0014sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u000fDefaultTaskTypeq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0013\u0014jppsq\u0000~\u0000F\u0000\u0013\u0014_q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u0013\u0014Tppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000\u00ddt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0017DefaultFixedCostAccrualq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000F\u0000\u001a\u00bc\u00f8q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000^q\u0000~\u0000at\u0000\u0005floatq\u0000~\u0000\u00b1q\u0000~\u0000esq\u0000~\u0000fq\u0000~\u0001[q\u0000~\u0000asq\u0000~\u0000it\u0000\u0013DefaultStandardRateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000F\u0000\u001a\u00bc\u00f8q\u0000~\u0000Kp\u0000q\u0000~\u0001Wsq\u0000~\u0000it\u0000\u0013DefaultOvertimeRateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u001c\"\u00a4ppsq\u0000~\u0000F\u0001\u001c\"\u0099q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u001c\"\u008eppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00ddt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u000241sq\u0000~\u0000\u00ddt\u0000\u000239sq\u0000~\u0000\u00ddt\u0000\u000236sq\u0000~\u0000\u00ddt\u0000\u00016sq\u0000~\u0000\u00ddt\u0000\u00015sq\u0000~\u0000\u00ddt\u0000\u000237sq\u0000~\u0000\u00ddt\u0000\u000211sq\u0000~\u0000\u00ddt\u0000\u000240sq\u0000~\u0000\u00ddt\u0000\u00014sq\u0000~\u0000\u00ddt\u0000\u000212sq\u0000~\u0000\u00ddt\u0000\u000252sq\u0000~\u0000\u00ddt\u0000\u00017sq\u0000~\u0000\u00ddt\u0000\u000238sq\u0000~\u0000\u00ddt\u0000\u000220sq\u0000~\u0000\u00ddt\u0000\u000242sq\u0000~\u0000\u00ddt\u0000\u000253sq\u0000~\u0000\u00ddt\u0000\u000243sq\u0000~\u0000\u00ddt\u0000\u000221sq\u0000~\u0000\u00ddt\u0000\u000210sq\u0000~\u0000\u00ddt\u0000\u000235sq\u0000~\u0000\u00ddt\u0000\u000244sq\u0000~\u0000\u00ddt\u0000\u00019sq\u0000~\u0000\u00ddt\u0000\u000219sq\u0000~\u0000\u00ddt\u0000\u00018sq\u0000~\u0000\u00ddt\u0000\u000251xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u000eDurationFormatq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u0004\u0010\u00cdppsq\u0000~\u0000F\u0001\u0004\u0010\u00c2q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u0004\u0010\u00b7ppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sq\u0000~\u0000\u00ddt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u00015sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddt\u0000\u00014sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\nWorkFormatq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0013EditableActualCostsq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0010HonorConstraintsq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001Z\u0091\u0099ppsq\u0000~\u0000F\u0001Z\u0091\u008eq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001Z\u0091\u0083ppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00ddq\u0000~\u0001\u0014sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0011EarnedValueMethodq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u001bInsertedProjectsLikeSummaryq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0015MultipleCriticalPathsq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0014NewTasksEffortDrivenq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0011NewTasksEstimatedq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0015SplitsInProgressTasksq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0010SpreadActualCostq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0015SpreadPercentCompleteq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0013TaskUpdatesResourceq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u000fFiscalYearStartq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000&|\u00e2ppsq\u0000~\u0000F\u0000&|\u00d7q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000&|\u00ccppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0007sq\u0000~\u0000\u00ddt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u00015sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddq\u0000~\u0001\u0014sq\u0000~\u0000\u00ddt\u0000\u00014sq\u0000~\u0000\u00ddt\u0000\u00016sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\fWeekStartDayq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0015MoveCompletedEndsBackq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0017MoveRemainingStartsBackq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u001aMoveRemainingStartsForwardq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0018MoveCompletedEndsForwardq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u001f\u00ff\u00cfppsq\u0000~\u0000F\u0001\u001f\u00ff\u00c4q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u001f\u00ff\u00b9ppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u000bsq\u0000~\u0000\u00ddt\u0000\u000210sq\u0000~\u0000\u00ddt\u0000\u00013sq\u0000~\u0000\u00ddt\u0000\u00015sq\u0000~\u0000\u00ddt\u0000\u00017sq\u0000~\u0000\u00ddt\u0000\u00012sq\u0000~\u0000\u00ddq\u0000~\u0001\u0014sq\u0000~\u0000\u00ddt\u0000\u00019sq\u0000~\u0000\u00ddt\u0000\u00014sq\u0000~\u0000\u00ddt\u0000\u00018sq\u0000~\u0000\u00ddt\u0000\u00016sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0016BaselineForEarnedValueq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u001bAutoAddNewResourcesAndTasksq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000F\u0000\u0090\u00fbzq\u0000~\u0000Kp\u0000q\u0000~\u0000\u00absq\u0000~\u0000it\u0000\nStatusDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000F\u0000\u0090\u00fbzq\u0000~\u0000Kp\u0000q\u0000~\u0000\u00absq\u0000~\u0000it\u0000\u000bCurrentDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0019MicrosoftProjectServerURLq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\bAutolinkq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00ad?\u00fappsq\u0000~\u0000F\u0000\u00ad?\u00efq\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0000\u00ad?\u00e4ppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00ddq\u0000~\u0001\u0014sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0010NewTaskStartDateq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00b6\u00efFppsq\u0000~\u0000F\u0001\u00b6\u00ef;q\u0000~\u0000Kp\u0000sq\u0000~\u0000L\u0001\u00b6\u00ef0ppsq\u0000~\u0000\u00d7q\u0000~\u0000Ypq\u0000~\u0000\u00b1\u0000\u0000q\u0000~\u0000\u00baq\u0000~\u0000\u00baq\u0000~\u0000\u00dasq\u0000~\u0000\u00dbw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00ddq\u0000~\u0001\u0014sq\u0000~\u0000\u00ddt\u0000\u00011xq\u0000~\u0000esq\u0000~\u0000ft\u0000\u000finteger-derivedq\u0000~\u0000Ysq\u0000~\u0000it\u0000\u0013DefaultTaskEVMethodq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0001\u00a8\n\u008fppsq\u0000~\u0000F\u0001\u00a8\n\u0084q\u0000~\u0000Kp\u0000q\u0000~\u0000\u00c5sq\u0000~\u0000it\u0000\u0017ProjectExternallyEditedq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000Kpsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Gxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000Kpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000pq\u0000~\u0002isr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000jq\u0000~\u0000osq\u0000~\u0000it\u00009com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000it\u0000\fOutlineCodesq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsq\u0000~\u0002c\u0000\u00a7b\nq\u0000~\u0000Kpsq\u0000~\u0002f\u0000\u00a7b\u0007q\u0000~\u0000Kpq\u0000~\u0002iq\u0000~\u0002kq\u0000~\u0000osq\u0000~\u0000it\u00005com.tapsterrock.mspdi.schema.ProjectType.WBSMasksTypeq\u0000~\u0002nsq\u0000~\u0000it\u0000\bWBSMasksq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsq\u0000~\u0002c\u0000\u00a7b\nq\u0000~\u0000Kpsq\u0000~\u0002f\u0000\u00a7b\u0007q\u0000~\u0000Kpq\u0000~\u0002iq\u0000~\u0002kq\u0000~\u0000osq\u0000~\u0000it\u0000?com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesTypeq\u0000~\u0002nsq\u0000~\u0000it\u0000\u0012ExtendedAttributesq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsq\u0000~\u0002c\u0000\u00a7b\nq\u0000~\u0000Kpsq\u0000~\u0002f\u0000\u00a7b\u0007q\u0000~\u0000Kpq\u0000~\u0002iq\u0000~\u0002kq\u0000~\u0000osq\u0000~\u0000it\u00006com.tapsterrock.mspdi.schema.ProjectType.CalendarsTypeq\u0000~\u0002nsq\u0000~\u0000it\u0000\tCalendarsq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsq\u0000~\u0002c\u0000\u00a7b\nq\u0000~\u0000Kpsq\u0000~\u0002f\u0000\u00a7b\u0007q\u0000~\u0000Kpq\u0000~\u0002iq\u0000~\u0002kq\u0000~\u0000osq\u0000~\u0000it\u00002com.tapsterrock.mspdi.schema.ProjectType.TasksTypeq\u0000~\u0002nsq\u0000~\u0000it\u0000\u0005Tasksq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsq\u0000~\u0002c\u0000\u00a7b\nq\u0000~\u0000Kpsq\u0000~\u0002f\u0000\u00a7b\u0007q\u0000~\u0000Kpq\u0000~\u0002iq\u0000~\u0002kq\u0000~\u0000osq\u0000~\u0000it\u00006com.tapsterrock.mspdi.schema.ProjectType.ResourcesTypeq\u0000~\u0002nsq\u0000~\u0000it\u0000\tResourcesq\u0000~\u0000mq\u0000~\u0000osq\u0000~\u0000D\u0000\u00a7b6ppsq\u0000~\u0000F\u0000\u00a7b+q\u0000~\u0000Kp\u0000sq\u0000~\u0000F\u0000\u00a7b pp\u0000sq\u0000~\u0000D\u0000\u00a7b\u0015ppsq\u0000~\u0002c\u0000\u00a7b\nq\u0000~\u0000Kpsq\u0000~\u0002f\u0000\u00a7b\u0007q\u0000~\u0000Kpq\u0000~\u0002iq\u0000~\u0002kq\u0000~\u0000osq\u0000~\u0000it\u00008com.tapsterrock.mspdi.schema.ProjectType.AssignmentsTypeq\u0000~\u0002nsq\u0000~\u0000it\u0000\u000bAssignmentsq\u0000~\u0000mq\u0000~\u0000osr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0002\u00ae[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u008d\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000\'q\u0000~\u0000\u00faq\u0000~\u0000\u00feq\u0000~\u0001\u001bq\u0000~\u0001,q\u0000~\u00010q\u0000~\u00014q\u0000~\u0000\u001bppppppppppppq\u0000~\u0002_q\u0000~\u0002qq\u0000~\u0002{q\u0000~\u0002[q\u0000~\u0002?q\u0000~\u0002;q\u0000~\u0002/q\u0000~\u0002\rq\u0000~\u0002\tq\u0000~\u0000\u001aq\u0000~\u0002\u0005q\u0000~\u0002\u0001q\u0000~\u0001\u00e7q\u0000~\u0001\u00e3q\u0000~\u0001\u00dfq\u0000~\u0001\u00dbq\u0000~\u0001\u00d7q\u0000~\u0001\u00d3q\u0000~\u0001\u00cfq\u0000~\u0001\u00cbq\u0000~\u0001\u00c7q\u0000~\u0001\u00b7q\u0000~\u0001\u00b3q\u0000~\u0000\u00c3q\u0000~\u0002\u0085q\u0000~\u0002\u008fq\u0000~\u0002\u0099q\u0000~\u0002\u00a3pppppppppppppppppppq\u0000~\u0000\u000eppq\u0000~\u0000Epppppq\u0000~\u00003pppppppppppppppppppppppppppppppppppppppq\u0000~\u0000?pppq\u0000~\u0000>pppppppq\u0000~\u0000(pq\u0000~\u0001\u0002pppppppppppppppppppppppq\u0000~\u0001\u00a0pppq\u0000~\u0000&pppppppppppppppppppppppppppq\u0000~\u0000%pppppppppq\u0000~\u0000/ppq\u0000~\u0000.q\u0000~\u0001Fpq\u0000~\u0000-ppq\u0000~\u0002Cq\u0000~\u0000,pppppppq\u0000~\u0000$pppppppppppppppppppppppppq\u0000~\u0000\u00d4pppq\u0000~\u0000@ppq\u0000~\u00018pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001\u00bbpppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u00a1pppppppppppppppppppppq\u0000~\u0000)pppppppppppq\u0000~\u0000\u0089ppppppppppppppq\u0000~\u00000pppppppppppppppppppq\u0000~\u0001\u00ebpppppppppppq\u0000~\u0002Oppq\u0000~\u0000+q\u0000~\u00007ppppppq\u0000~\u0000:pppppppppq\u0000~\u00008q\u0000~\u0000\u0019pppq\u0000~\u0000<ppq\u0000~\u0000;pppppppppq\u0000~\u00009pq\u0000~\u0001Uq\u0000~\u0001_pq\u0000~\u0000=pppppq\u0000~\u0000\u0018pppppppppppppppppppppq\u0000~\u0000\rpppppq\u0000~\u0000\u0017pppq\u0000~\u0001\u001fq\u0000~\u0001(ppppppq\u0000~\u0000#pppppppppq\u0000~\u0000\fpppppq\u0000~\u0000\u0016pppq\u0000~\u0001\nppq\u0000~\u0000qq\u0000~\u0000\u0011pppq\u0000~\u0000\"pppq\u0000~\u0000\u0014ppq\u0000~\u0000\u000bppppppq\u0000~\u0000\u0012pq\u0000~\u0000\u0015pppppppq\u0000~\u0000\u0010ppq\u0000~\u0000Aq\u0000~\u0000Bq\u0000~\u0000!ppq\u0000~\u0000\u0013q\u0000~\u0000\nppppppppppppppppppq\u0000~\u0000\u000fpppq\u0000~\u0000 q\u0000~\u0000\tpppq\u0000~\u0001cq\u0000~\u0000\u0091pppppppq\u0000~\u0000Cppq\u0000~\u00002ppq\u0000~\u00001pppppq\u0000~\u0000\bpq\u0000~\u0000\u001fpppppq\u0000~\u0000*ppppppppppppppppq\u0000~\u0000\u0007ppppq\u0000~\u0000\u001epppppppppppppppppq\u0000~\u00006pq\u0000~\u0000\u0006q\u0000~\u00005ppq\u0000~\u00004pppq\u0000~\u0000\u001dppppppq\u0000~\u0000ypppppppppq\u0000~\u0000\u0005ppppppppppq\u0000~\u0000\u001cppq\u0000~\u0002eq\u0000~\u00027q\u0000~\u00023q\u0000~\u0000\u00a9q\u0000~\u0000\u00bfq\u0000~\u0000\u00ccq\u0000~\u0000\u00d0q\u0000~\u0002\u0011q\u0000~\u0002uq\u0000~\u0002\u007fq\u0000~\u0002\u0089q\u0000~\u0002bq\u0000~\u0002tq\u0000~\u0002~q\u0000~\u0002\u0088q\u0000~\u0002\u0093q\u0000~\u0002\u0092q\u0000~\u0002\u009dq\u0000~\u0002\u009cq\u0000~\u0000\u0081q\u0000~\u0002\u00a7q\u0000~\u0002\u00a6q\u0000~\u0000\u00b5q\u0000~\u0000\u0099");

    public java.math.BigInteger getMinutesPerDay() {
        return _MinutesPerDay;
    }

    public void setMinutesPerDay(java.math.BigInteger value) {
        _MinutesPerDay = value;
    }

    public boolean isSplitsInProgressTasks() {
        return _SplitsInProgressTasks;
    }

    public void setSplitsInProgressTasks(boolean value) {
        _SplitsInProgressTasks = value;
        has_SplitsInProgressTasks = true;
    }

    public String getManager() {
        return _Manager;
    }

    public void setManager(String value) {
        _Manager = value;
    }

    public java.util.Calendar getDefaultFinishTime() {
        return _DefaultFinishTime;
    }

    public void setDefaultFinishTime(java.util.Calendar value) {
        _DefaultFinishTime = value;
    }

    public boolean isFiscalYearStart() {
        return _FiscalYearStart;
    }

    public void setFiscalYearStart(boolean value) {
        _FiscalYearStart = value;
        has_FiscalYearStart = true;
    }

    public java.math.BigInteger getDefaultTaskEVMethod() {
        return _DefaultTaskEVMethod;
    }

    public void setDefaultTaskEVMethod(java.math.BigInteger value) {
        _DefaultTaskEVMethod = value;
    }

    public java.util.Calendar getDefaultStartTime() {
        return _DefaultStartTime;
    }

    public void setDefaultStartTime(java.util.Calendar value) {
        _DefaultStartTime = value;
    }

    public java.util.Calendar getFinishDate() {
        return _FinishDate;
    }

    public void setFinishDate(java.util.Calendar value) {
        _FinishDate = value;
    }

    public boolean isMoveCompletedEndsBack() {
        return _MoveCompletedEndsBack;
    }

    public void setMoveCompletedEndsBack(boolean value) {
        _MoveCompletedEndsBack = value;
        has_MoveCompletedEndsBack = true;
    }

    public java.math.BigInteger getWorkFormat() {
        return _WorkFormat;
    }

    public void setWorkFormat(java.math.BigInteger value) {
        _WorkFormat = value;
    }

    public java.math.BigInteger getBaselineForEarnedValue() {
        return _BaselineForEarnedValue;
    }

    public void setBaselineForEarnedValue(java.math.BigInteger value) {
        _BaselineForEarnedValue = value;
    }

    public java.math.BigInteger getCalendarUID() {
        return _CalendarUID;
    }

    public void setCalendarUID(java.math.BigInteger value) {
        _CalendarUID = value;
    }

    public String getSubject() {
        return _Subject;
    }

    public void setSubject(String value) {
        _Subject = value;
    }

    public boolean isNewTasksEstimated() {
        return _NewTasksEstimated;
    }

    public void setNewTasksEstimated(boolean value) {
        _NewTasksEstimated = value;
        has_NewTasksEstimated = true;
    }

    public boolean isSpreadActualCost() {
        return _SpreadActualCost;
    }

    public void setSpreadActualCost(boolean value) {
        _SpreadActualCost = value;
        has_SpreadActualCost = true;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType getResources() {
        return _Resources;
    }

    public void setResources(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType value) {
        _Resources = value;
    }

    public java.math.BigInteger getDefaultFixedCostAccrual() {
        return _DefaultFixedCostAccrual;
    }

    public void setDefaultFixedCostAccrual(java.math.BigInteger value) {
        _DefaultFixedCostAccrual = value;
    }

    public boolean isMultipleCriticalPaths() {
        return _MultipleCriticalPaths;
    }

    public void setMultipleCriticalPaths(boolean value) {
        _MultipleCriticalPaths = value;
        has_MultipleCriticalPaths = true;
    }

    public boolean isAutoAddNewResourcesAndTasks() {
        return _AutoAddNewResourcesAndTasks;
    }

    public void setAutoAddNewResourcesAndTasks(boolean value) {
        _AutoAddNewResourcesAndTasks = value;
        has_AutoAddNewResourcesAndTasks = true;
    }

    public float getDefaultOvertimeRate() {
        return _DefaultOvertimeRate;
    }

    public void setDefaultOvertimeRate(float value) {
        _DefaultOvertimeRate = value;
        has_DefaultOvertimeRate = true;
    }

    public java.util.Calendar getStartDate() {
        return _StartDate;
    }

    public void setStartDate(java.util.Calendar value) {
        _StartDate = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType getCalendars() {
        return _Calendars;
    }

    public void setCalendars(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType value) {
        _Calendars = value;
    }

    public java.math.BigInteger getCurrencySymbolPosition() {
        return _CurrencySymbolPosition;
    }

    public void setCurrencySymbolPosition(java.math.BigInteger value) {
        _CurrencySymbolPosition = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.TasksType getTasks() {
        return _Tasks;
    }

    public void setTasks(com.tapsterrock.mspdi.schema.ProjectType.TasksType value) {
        _Tasks = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType getOutlineCodes() {
        return _OutlineCodes;
    }

    public void setOutlineCodes(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType value) {
        _OutlineCodes = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType getWBSMasks() {
        return _WBSMasks;
    }

    public void setWBSMasks(com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType value) {
        _WBSMasks = value;
    }

    public java.math.BigInteger getFYStartDate() {
        return _FYStartDate;
    }

    public void setFYStartDate(java.math.BigInteger value) {
        _FYStartDate = value;
    }

    public java.util.Calendar getLastSaved() {
        return _LastSaved;
    }

    public void setLastSaved(java.util.Calendar value) {
        _LastSaved = value;
    }

    public java.util.Calendar getStatusDate() {
        return _StatusDate;
    }

    public void setStatusDate(java.util.Calendar value) {
        _StatusDate = value;
    }

    public boolean isMoveRemainingStartsBack() {
        return _MoveRemainingStartsBack;
    }

    public void setMoveRemainingStartsBack(boolean value) {
        _MoveRemainingStartsBack = value;
        has_MoveRemainingStartsBack = true;
    }

    public boolean isAutolink() {
        return _Autolink;
    }

    public void setAutolink(boolean value) {
        _Autolink = value;
        has_Autolink = true;
    }

    public String getTitle() {
        return _Title;
    }

    public void setTitle(String value) {
        _Title = value;
    }

    public String getCompany() {
        return _Company;
    }

    public void setCompany(String value) {
        _Company = value;
    }

    public java.math.BigInteger getDurationFormat() {
        return _DurationFormat;
    }

    public void setDurationFormat(java.math.BigInteger value) {
        _DurationFormat = value;
    }

    public boolean isMicrosoftProjectServerURL() {
        return _MicrosoftProjectServerURL;
    }

    public void setMicrosoftProjectServerURL(boolean value) {
        _MicrosoftProjectServerURL = value;
        has_MicrosoftProjectServerURL = true;
    }

    public java.math.BigInteger getNewTaskStartDate() {
        return _NewTaskStartDate;
    }

    public void setNewTaskStartDate(java.math.BigInteger value) {
        _NewTaskStartDate = value;
    }

    public boolean isHonorConstraints() {
        return _HonorConstraints;
    }

    public void setHonorConstraints(boolean value) {
        _HonorConstraints = value;
        has_HonorConstraints = true;
    }

    public java.math.BigInteger getDaysPerMonth() {
        return _DaysPerMonth;
    }

    public void setDaysPerMonth(java.math.BigInteger value) {
        _DaysPerMonth = value;
    }

    public String getAuthor() {
        return _Author;
    }

    public void setAuthor(String value) {
        _Author = value;
    }

    public boolean isScheduleFromStart() {
        return _ScheduleFromStart;
    }

    public void setScheduleFromStart(boolean value) {
        _ScheduleFromStart = value;
        has_ScheduleFromStart = true;
    }

    public java.math.BigInteger getMinutesPerWeek() {
        return _MinutesPerWeek;
    }

    public void setMinutesPerWeek(java.math.BigInteger value) {
        _MinutesPerWeek = value;
    }

    public java.util.Calendar getCurrentDate() {
        return _CurrentDate;
    }

    public void setCurrentDate(java.util.Calendar value) {
        _CurrentDate = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType getExtendedAttributes() {
        return _ExtendedAttributes;
    }

    public void setExtendedAttributes(com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType value) {
        _ExtendedAttributes = value;
    }

    public java.math.BigInteger getCurrencyDigits() {
        return _CurrencyDigits;
    }

    public void setCurrencyDigits(java.math.BigInteger value) {
        _CurrencyDigits = value;
    }

    public boolean isInsertedProjectsLikeSummary() {
        return _InsertedProjectsLikeSummary;
    }

    public void setInsertedProjectsLikeSummary(boolean value) {
        _InsertedProjectsLikeSummary = value;
        has_InsertedProjectsLikeSummary = true;
    }

    public String getName() {
        return _Name;
    }

    public void setName(String value) {
        _Name = value;
    }

    public boolean isSpreadPercentComplete() {
        return _SpreadPercentComplete;
    }

    public void setSpreadPercentComplete(boolean value) {
        _SpreadPercentComplete = value;
        has_SpreadPercentComplete = true;
    }

    public java.math.BigInteger getWeekStartDay() {
        return _WeekStartDay;
    }

    public void setWeekStartDay(java.math.BigInteger value) {
        _WeekStartDay = value;
    }

    public float getDefaultStandardRate() {
        return _DefaultStandardRate;
    }

    public void setDefaultStandardRate(float value) {
        _DefaultStandardRate = value;
        has_DefaultStandardRate = true;
    }

    public boolean isMoveCompletedEndsForward() {
        return _MoveCompletedEndsForward;
    }

    public void setMoveCompletedEndsForward(boolean value) {
        _MoveCompletedEndsForward = value;
        has_MoveCompletedEndsForward = true;
    }

    public String getCurrencySymbol() {
        return _CurrencySymbol;
    }

    public void setCurrencySymbol(String value) {
        _CurrencySymbol = value;
    }

    public com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType getAssignments() {
        return _Assignments;
    }

    public void setAssignments(com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType value) {
        _Assignments = value;
    }

    public boolean isTaskUpdatesResource() {
        return _TaskUpdatesResource;
    }

    public void setTaskUpdatesResource(boolean value) {
        _TaskUpdatesResource = value;
        has_TaskUpdatesResource = true;
    }

    public boolean isEditableActualCosts() {
        return _EditableActualCosts;
    }

    public void setEditableActualCosts(boolean value) {
        _EditableActualCosts = value;
        has_EditableActualCosts = true;
    }

    public String getUID() {
        return _UID;
    }

    public void setUID(String value) {
        _UID = value;
    }

    public java.math.BigInteger getCriticalSlackLimit() {
        return _CriticalSlackLimit;
    }

    public void setCriticalSlackLimit(java.math.BigInteger value) {
        _CriticalSlackLimit = value;
    }

    public java.math.BigInteger getRevision() {
        return _Revision;
    }

    public void setRevision(java.math.BigInteger value) {
        _Revision = value;
    }

    public boolean isNewTasksEffortDriven() {
        return _NewTasksEffortDriven;
    }

    public void setNewTasksEffortDriven(boolean value) {
        _NewTasksEffortDriven = value;
        has_NewTasksEffortDriven = true;
    }

    public java.math.BigInteger getEarnedValueMethod() {
        return _EarnedValueMethod;
    }

    public void setEarnedValueMethod(java.math.BigInteger value) {
        _EarnedValueMethod = value;
    }

    public boolean isMoveRemainingStartsForward() {
        return _MoveRemainingStartsForward;
    }

    public void setMoveRemainingStartsForward(boolean value) {
        _MoveRemainingStartsForward = value;
        has_MoveRemainingStartsForward = true;
    }

    public java.math.BigInteger getDefaultTaskType() {
        return _DefaultTaskType;
    }

    public void setDefaultTaskType(java.math.BigInteger value) {
        _DefaultTaskType = value;
    }

    public boolean isProjectExternallyEdited() {
        return _ProjectExternallyEdited;
    }

    public void setProjectExternallyEdited(boolean value) {
        _ProjectExternallyEdited = value;
        has_ProjectExternallyEdited = true;
    }

    public String getCategory() {
        return _Category;
    }

    public void setCategory(String value) {
        _Category = value;
    }

    public java.util.Calendar getCreationDate() {
        return _CreationDate;
    }

    public void setCreationDate(java.util.Calendar value) {
        _CreationDate = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.Unmarshaller(context);
    }

    public Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS;
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_UID!= null) {
            context.startElement("http://schemas.microsoft.com/project", "UID");
            context.endAttributes();
            context.text(((String) _UID));
            context.endElement();
        }
        if (_Name!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Name");
            context.endAttributes();
            context.text(((String) _Name));
            context.endElement();
        }
        if (_Title!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Title");
            context.endAttributes();
            context.text(((String) _Title));
            context.endElement();
        }
        if (_Subject!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Subject");
            context.endAttributes();
            context.text(((String) _Subject));
            context.endElement();
        }
        if (_Category!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Category");
            context.endAttributes();
            context.text(((String) _Category));
            context.endElement();
        }
        if (_Company!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Company");
            context.endAttributes();
            context.text(((String) _Company));
            context.endElement();
        }
        if (_Manager!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Manager");
            context.endAttributes();
            context.text(((String) _Manager));
            context.endElement();
        }
        if (_Author!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Author");
            context.endAttributes();
            context.text(((String) _Author));
            context.endElement();
        }
        if (_CreationDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CreationDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreationDate), null));
            context.endElement();
        }
        if (_Revision!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Revision");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Revision)));
            context.endElement();
        }
        if (_LastSaved!= null) {
            context.startElement("http://schemas.microsoft.com/project", "LastSaved");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LastSaved), null));
            context.endElement();
        }
        if (has_ScheduleFromStart) {
            context.startElement("http://schemas.microsoft.com/project", "ScheduleFromStart");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_ScheduleFromStart))));
            context.endElement();
        }
        if (_StartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "StartDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StartDate), null));
            context.endElement();
        }
        if (_FinishDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "FinishDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FinishDate), null));
            context.endElement();
        }
        if (_FYStartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "FYStartDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _FYStartDate)));
            context.endElement();
        }
        if (_CriticalSlackLimit!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CriticalSlackLimit");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CriticalSlackLimit)));
            context.endElement();
        }
        if (_CurrencyDigits!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencyDigits");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CurrencyDigits)));
            context.endElement();
        }
        if (_CurrencySymbol!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencySymbol");
            context.endAttributes();
            context.text(((String) _CurrencySymbol));
            context.endElement();
        }
        if (_CurrencySymbolPosition!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrencySymbolPosition");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CurrencySymbolPosition)));
            context.endElement();
        }
        if (_CalendarUID!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CalendarUID)));
            context.endElement();
        }
        if (_DefaultStartTime!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultStartTime");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _DefaultStartTime), null));
            context.endElement();
        }
        if (_DefaultFinishTime!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultFinishTime");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _DefaultFinishTime), null));
            context.endElement();
        }
        if (_MinutesPerDay!= null) {
            context.startElement("http://schemas.microsoft.com/project", "MinutesPerDay");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _MinutesPerDay)));
            context.endElement();
        }
        if (_MinutesPerWeek!= null) {
            context.startElement("http://schemas.microsoft.com/project", "MinutesPerWeek");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _MinutesPerWeek)));
            context.endElement();
        }
        if (_DaysPerMonth!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DaysPerMonth");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DaysPerMonth)));
            context.endElement();
        }
        if (_DefaultTaskType!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultTaskType");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DefaultTaskType)));
            context.endElement();
        }
        if (_DefaultFixedCostAccrual!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultFixedCostAccrual");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DefaultFixedCostAccrual)));
            context.endElement();
        }
        if (has_DefaultStandardRate) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultStandardRate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_DefaultStandardRate))));
            context.endElement();
        }
        if (has_DefaultOvertimeRate) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultOvertimeRate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_DefaultOvertimeRate))));
            context.endElement();
        }
        if (_DurationFormat!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DurationFormat)));
            context.endElement();
        }
        if (_WorkFormat!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WorkFormat");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _WorkFormat)));
            context.endElement();
        }
        if (has_EditableActualCosts) {
            context.startElement("http://schemas.microsoft.com/project", "EditableActualCosts");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_EditableActualCosts))));
            context.endElement();
        }
        if (has_HonorConstraints) {
            context.startElement("http://schemas.microsoft.com/project", "HonorConstraints");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_HonorConstraints))));
            context.endElement();
        }
        if (_EarnedValueMethod!= null) {
            context.startElement("http://schemas.microsoft.com/project", "EarnedValueMethod");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _EarnedValueMethod)));
            context.endElement();
        }
        if (has_InsertedProjectsLikeSummary) {
            context.startElement("http://schemas.microsoft.com/project", "InsertedProjectsLikeSummary");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_InsertedProjectsLikeSummary))));
            context.endElement();
        }
        if (has_MultipleCriticalPaths) {
            context.startElement("http://schemas.microsoft.com/project", "MultipleCriticalPaths");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_MultipleCriticalPaths))));
            context.endElement();
        }
        if (has_NewTasksEffortDriven) {
            context.startElement("http://schemas.microsoft.com/project", "NewTasksEffortDriven");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_NewTasksEffortDriven))));
            context.endElement();
        }
        if (has_NewTasksEstimated) {
            context.startElement("http://schemas.microsoft.com/project", "NewTasksEstimated");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_NewTasksEstimated))));
            context.endElement();
        }
        if (has_SplitsInProgressTasks) {
            context.startElement("http://schemas.microsoft.com/project", "SplitsInProgressTasks");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_SplitsInProgressTasks))));
            context.endElement();
        }
        if (has_SpreadActualCost) {
            context.startElement("http://schemas.microsoft.com/project", "SpreadActualCost");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_SpreadActualCost))));
            context.endElement();
        }
        if (has_SpreadPercentComplete) {
            context.startElement("http://schemas.microsoft.com/project", "SpreadPercentComplete");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_SpreadPercentComplete))));
            context.endElement();
        }
        if (has_TaskUpdatesResource) {
            context.startElement("http://schemas.microsoft.com/project", "TaskUpdatesResource");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_TaskUpdatesResource))));
            context.endElement();
        }
        if (has_FiscalYearStart) {
            context.startElement("http://schemas.microsoft.com/project", "FiscalYearStart");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_FiscalYearStart))));
            context.endElement();
        }
        if (_WeekStartDay!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WeekStartDay");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _WeekStartDay)));
            context.endElement();
        }
        if (has_MoveCompletedEndsBack) {
            context.startElement("http://schemas.microsoft.com/project", "MoveCompletedEndsBack");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_MoveCompletedEndsBack))));
            context.endElement();
        }
        if (has_MoveRemainingStartsBack) {
            context.startElement("http://schemas.microsoft.com/project", "MoveRemainingStartsBack");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_MoveRemainingStartsBack))));
            context.endElement();
        }
        if (has_MoveRemainingStartsForward) {
            context.startElement("http://schemas.microsoft.com/project", "MoveRemainingStartsForward");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_MoveRemainingStartsForward))));
            context.endElement();
        }
        if (has_MoveCompletedEndsForward) {
            context.startElement("http://schemas.microsoft.com/project", "MoveCompletedEndsForward");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_MoveCompletedEndsForward))));
            context.endElement();
        }
        if (_BaselineForEarnedValue!= null) {
            context.startElement("http://schemas.microsoft.com/project", "BaselineForEarnedValue");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _BaselineForEarnedValue)));
            context.endElement();
        }
        if (has_AutoAddNewResourcesAndTasks) {
            context.startElement("http://schemas.microsoft.com/project", "AutoAddNewResourcesAndTasks");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_AutoAddNewResourcesAndTasks))));
            context.endElement();
        }
        if (_StatusDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "StatusDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StatusDate), null));
            context.endElement();
        }
        if (_CurrentDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "CurrentDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CurrentDate), null));
            context.endElement();
        }
        if (has_MicrosoftProjectServerURL) {
            context.startElement("http://schemas.microsoft.com/project", "MicrosoftProjectServerURL");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_MicrosoftProjectServerURL))));
            context.endElement();
        }
        if (has_Autolink) {
            context.startElement("http://schemas.microsoft.com/project", "Autolink");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Autolink))));
            context.endElement();
        }
        if (_NewTaskStartDate!= null) {
            context.startElement("http://schemas.microsoft.com/project", "NewTaskStartDate");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _NewTaskStartDate)));
            context.endElement();
        }
        if (_DefaultTaskEVMethod!= null) {
            context.startElement("http://schemas.microsoft.com/project", "DefaultTaskEVMethod");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DefaultTaskEVMethod)));
            context.endElement();
        }
        if (has_ProjectExternallyEdited) {
            context.startElement("http://schemas.microsoft.com/project", "ProjectExternallyEdited");
            context.endAttributes();
            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_ProjectExternallyEdited))));
            context.endElement();
        }
        if (_OutlineCodes!= null) {
            context.startElement("http://schemas.microsoft.com/project", "OutlineCodes");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCodes));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCodes));
            context.endElement();
        }
        if (_WBSMasks!= null) {
            context.startElement("http://schemas.microsoft.com/project", "WBSMasks");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _WBSMasks));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _WBSMasks));
            context.endElement();
        }
        if (_ExtendedAttributes!= null) {
            context.startElement("http://schemas.microsoft.com/project", "ExtendedAttributes");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttributes));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttributes));
            context.endElement();
        }
        if (_Calendars!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Calendars");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Calendars));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Calendars));
            context.endElement();
        }
        if (_Tasks!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Tasks");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Tasks));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Tasks));
            context.endElement();
        }
        if (_Resources!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Resources");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Resources));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Resources));
            context.endElement();
        }
        if (_Assignments!= null) {
            context.startElement("http://schemas.microsoft.com/project", "Assignments");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Assignments));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Assignments));
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public Class getPrimaryInterface() {
        return (com.tapsterrock.mspdi.schema.ProjectType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class AssignmentsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.class;
        protected java.util.ArrayList _Assignment = new java.util.ArrayList();
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000Gcom.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\nAssignmentt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getAssignment() {
            return _Assignment;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Assignment.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Assignment");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Assignment.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Assignment.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Assignment.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Assignment.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class AssignmentTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.class;
            protected java.util.Calendar _Resume;
            protected java.math.BigInteger _TaskUID;
            protected boolean has_FixedMaterial;
            protected boolean _FixedMaterial;
            protected String _Work;
            protected java.math.BigInteger _FinishVariance;
            protected java.math.BigInteger _StartVariance;
            protected String _HyperlinkSubAddress;
            protected String _RemainingOvertimeWork;
            protected java.math.BigInteger _CostRateTable;
            protected String _RemainingWork;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected String _HyperlinkAddress;
            protected boolean has_Milestone;
            protected boolean _Milestone;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected java.math.BigDecimal _ActualCost;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected boolean has_UpdateNeeded;
            protected boolean _UpdateNeeded;
            protected java.math.BigInteger _LevelingDelay;
            protected java.math.BigDecimal _RemainingCost;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected String _ActualOvertimeWork;
            protected java.util.ArrayList _Baseline = new java.util.ArrayList();
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected String _Hyperlink;
            protected boolean has_LinkedFields;
            protected boolean _LinkedFields;
            protected java.util.ArrayList _TimephasedData = new java.util.ArrayList();
            protected boolean has_CostVariance;
            protected float _CostVariance;
            protected boolean has_Overallocated;
            protected boolean _Overallocated;
            protected java.util.ArrayList _ExtendedAttribute = new java.util.ArrayList();
            protected boolean has_HasFixedRateUnits;
            protected boolean _HasFixedRateUnits;
            protected java.math.BigInteger _ResourceUID;
            protected String _RegularWork;
            protected String _OvertimeWork;
            protected java.math.BigInteger _WorkContour;
            protected boolean has_Units;
            protected float _Units;
            protected boolean has_ResponsePending;
            protected boolean _ResponsePending;
            protected boolean has_Confirmed;
            protected boolean _Confirmed;
            protected java.math.BigInteger _Delay;
            protected java.util.Calendar _Stop;
            protected String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.Calendar _ActualStart;
            protected String _ActualWork;
            protected java.math.BigInteger _UID;
            protected boolean has_VAC;
            protected float _VAC;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.util.Calendar _ActualFinish;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected boolean has_CV;
            protected float _CV;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp*`\u00a0Bppsq\u0000~\u0000\u0000)\u00b9>\u0004ppsq\u0000~\u0000\u0000)\u0011\u00db\u00c6ppsq\u0000~\u0000\u0000(jy\u0088ppsq\u0000~\u0000\u0000(O\u00bc\u0080ppsq\u0000~\u0000\u0000(4\u00ffxppsq\u0000~\u0000\u0000&\u00ad\u00a4<ppsq\u0000~\u0000\u0000%\u00b9M\u009eppsq\u0000~\u0000\u0000%\u009e\u0090\u0096ppsq\u0000~\u0000\u0000#\u00f6\u0086\u0002ppsq\u0000~\u0000\u0000#\u00db\u00c8\u00fappsq\u0000~\u0000\u0000\"\u00ddD\u00eappsq\u0000~\u0000\u0000\"LI`ppsq\u0000~\u0000\u0000!\u00bbM\u00d6ppsq\u0000~\u0000\u0000!*RLppsq\u0000~\u0000\u0000\u001f\u0082G\u00b8ppsq\u0000~\u0000\u0000\u001e\u008d\u00f1\u001appsq\u0000~\u0000\u0000\u001d\u0099\u009a|ppsq\u0000~\u0000\u0000\u001d\u0080\u00f2\u00b3ppsq\u0000~\u0000\u0000\u001dhJ\u00eappsq\u0000~\u0000\u0000\u001cs\u00f4Lppsq\u0000~\u0000\u0000\u001b\u007f\u009d\u00aeppsq\u0000~\u0000\u0000\u001bf\u00f5\u00e5ppsq\u0000~\u0000\u0000\u0019\u00be\u00ebQppsq\u0000~\u0000\u0000\u0019\f\u00b9\u0016ppsq\u0000~\u0000\u0000\u0017d\u00ae\u0082ppsq\u0000~\u0000\u0000\u0015\u00bc\u00a3\u00eeppsq\u0000~\u0000\u0000\u0014\u00be\u001f\u00deppsq\u0000~\u0000\u0000\u0013\u0016\u0015Jppsq\u0000~\u0000\u0000\u0011n\n\u00b6ppsq\u0000~\u0000\u0000\u0011SM\u00aeppsq\u0000~\u0000\u0000\u000fy\u00d7\u00feppsq\u0000~\u0000\u0000\u000e-e\u000bppsq\u0000~\u0000\u0000\r\u00d0\u0091\u0092ppsq\u0000~\u0000\u0000\f\u00d2\r\u0082ppsq\u0000~\u0000\u0000\fA\u0011\u00f8ppsq\u0000~\u0000\u0000\u000bB\u008d\u00e8ppsq\u0000~\u0000\u0000\u000b\'\u00d0\u00e0ppsq\u0000~\u0000\u0000\u000b\r\u0013\u00d8ppsq\u0000~\u0000\u0000\t\u0011swppsq\u0000~\u0000\u0000\b\u00f8\u00cb\u00aeppsq\u0000~\u0000\u0000\u0007P\u00c1\u001appsq\u0000~\u0000\u0000\u00076\u0004\u0012ppsq\u0000~\u0000\u0000\u0006A\u00adtppsq\u0000~\u0000\u0000\u0005\u00b0\u00b1\u00eappsq\u0000~\u0000\u0000\u0004\u00bc[Lppsq\u0000~\u0000\u0000\u0004\u00a3\u00b3\u0083ppsq\u0000~\u0000\u0000\u0004\u0012\u00b7\u00f9ppsq\u0000~\u0000\u0000\u0003\u00fa\u00100ppsq\u0000~\u0000\u0000\u0002\u00fb\u008c ppsq\u0000~\u0000\u0000\u0001\u00fd\b\u0010ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000EL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000EL\u0000\fnamespaceURIq\u0000~\u0000Expq\u0000~\u0000Iq\u0000~\u0000Hsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000EL\u0000\fnamespaceURIq\u0000~\u0000Exr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\u0007TaskUIDq\u0000~\u0000Wsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000O\u0001psq\u0000~\u0000X\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\u000bResourceUIDq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\u0013PercentWorkCompleteq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0018\u00a7\u00c4ppsq\u0000~\u00008\u0000\u0018\u00a7\u00b9q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0000\u0018\u00a7\u00aeppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u00c9A\u007f\\\u00a4S\u00c2\u00a7\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Ht\u0000\u0007decimalq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Qq\u0000~\u0000mq\u0000~\u0000Hsq\u0000~\u0000St\u0000\nActualCostq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0090\u00fb\u0085ppsq\u0000~\u00008\u0000\u0090\u00fbzq\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Ht\u0000\bdateTimeq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Qq\u0000~\u0000wq\u0000~\u0000Hsq\u0000~\u0000St\u0000\fActualFinishq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0018\u00a7\u00c4ppsq\u0000~\u00008\u0000\u0018\u00a7\u00b9q\u0000~\u0000Pp\u0000q\u0000~\u0000jsq\u0000~\u0000St\u0000\u0012ActualOvertimeCostq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0000\u00f4V\u0083ppsr\u0000%com.sun.msv.datatype.xsd.DurationType=;_\u00b5\u00cd\u007f\u00ea\u0016\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Ht\u0000\bdurationq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Qq\u0000~\u0000\u0084q\u0000~\u0000Hsq\u0000~\u0000St\u0000\u0012ActualOvertimeWorkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0090\u00fb\u0085ppsq\u0000~\u00008\u0000\u0090\u00fbzq\u0000~\u0000Pp\u0000q\u0000~\u0000ssq\u0000~\u0000St\u0000\u000bActualStartq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000q\u0000~\u0000\u0081sq\u0000~\u0000St\u0000\nActualWorkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Ht\u0000\u0005floatq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Qq\u0000~\u0000\u0096q\u0000~\u0000Hsq\u0000~\u0000St\u0000\u0004ACWPq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Ht\u0000\u0007booleanq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Qq\u0000~\u0000\u009fq\u0000~\u0000Hsq\u0000~\u0000St\u0000\tConfirmedq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0018\u00a7\u00c4ppsq\u0000~\u00008\u0000\u0018\u00a7\u00b9q\u0000~\u0000Pp\u0000q\u0000~\u0000jsq\u0000~\u0000St\u0000\u0004Costq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00fb\u00a0\\ppsq\u0000~\u00008\u0001\u00fb\u00a0Qq\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0001\u00fb\u00a0Fppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000Exq\u0000~\u0000Dt\u0000\u0000pq\u0000~\u0000L\u0000\u0000q\u0000~\u0000Gq\u0000~\u0000Gt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Expt\u0000\u00013sq\u0000~\u0000\u00b5t\u0000\u00012sq\u0000~\u0000\u00b5t\u0000\u00010sq\u0000~\u0000\u00b5t\u0000\u00014sq\u0000~\u0000\u00b5t\u0000\u00011xq\u0000~\u0000Nsq\u0000~\u0000Qt\u0000\u000finteger-derivedq\u0000~\u0000\u00b1sq\u0000~\u0000St\u0000\rCostRateTableq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\fCostVarianceq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\u0002CVq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\u0005Delayq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0090\u00fb\u0085ppsq\u0000~\u00008\u0000\u0090\u00fbzq\u0000~\u0000Pp\u0000q\u0000~\u0000ssq\u0000~\u0000St\u0000\u0006Finishq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\u000eFinishVarianceq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\\\u00d3tppsq\u0000~\u00008\u0000\\\u00d3iq\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0000\\\u00d3^ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxq\u0000~\u0000\u00acq\u0000~\u0000\u00b1psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000K\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000Ht\u0000\u0006stringq\u0000~\u0000\u00deq\u0000~\u0000\u00e0t\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000Nsq\u0000~\u0000Qt\u0000\u000estring-derivedq\u0000~\u0000\u00b1sq\u0000~\u0000St\u0000\tHyperlinkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001Lr\u00eeppsq\u0000~\u00008\u0001Lr\u00e3q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0001Lr\u00d8ppsq\u0000~\u0000\u00dbq\u0000~\u0000\u00b1pq\u0000~\u0000\u00de\u0000\u0000q\u0000~\u0000\u00e0q\u0000~\u0000\u00e0q\u0000~\u0000\u00e2\u0000\u0000\u0002\u0000q\u0000~\u0000Nsq\u0000~\u0000Qt\u0000\u000estring-derivedq\u0000~\u0000\u00b1sq\u0000~\u0000St\u0000\u0010HyperlinkAddressq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00d9u\u00abppsq\u0000~\u00008\u0001\u00d9u\u00a0q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0001\u00d9u\u0095ppsq\u0000~\u0000\u00dbq\u0000~\u0000\u00b1pq\u0000~\u0000\u00de\u0000\u0000q\u0000~\u0000\u00e0q\u0000~\u0000\u00e0q\u0000~\u0000\u00e2\u0000\u0000\u0002\u0000q\u0000~\u0000Nsq\u0000~\u0000Qt\u0000\u000estring-derivedq\u0000~\u0000\u00b1sq\u0000~\u0000St\u0000\u0013HyperlinkSubAddressq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\fWorkVarianceq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\u0011HasFixedRateUnitsq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\rFixedMaterialq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\rLevelingDelayq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\fLinkedFieldsq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\tMilestoneq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00b226ppsq\u0000~\u00008\u0000\u00b22+q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0000\u00b22 ppq\u0000~\u0000\u00e0q\u0000~\u0000Nsq\u0000~\u0000Qq\u0000~\u0000\u00e1q\u0000~\u0000Hsq\u0000~\u0000St\u0000\u0005Notesq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\rOverallocatedq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0018\u00a7\u00c4ppsq\u0000~\u00008\u0000\u0018\u00a7\u00b9q\u0000~\u0000Pp\u0000q\u0000~\u0000jsq\u0000~\u0000St\u0000\fOvertimeCostq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000q\u0000~\u0000\u0081sq\u0000~\u0000St\u0000\fOvertimeWorkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000q\u0000~\u0000\u0081sq\u0000~\u0000St\u0000\u000bRegularWorkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0018\u00a7\u00c4ppsq\u0000~\u00008\u0000\u0018\u00a7\u00b9q\u0000~\u0000Pp\u0000q\u0000~\u0000jsq\u0000~\u0000St\u0000\rRemainingCostq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0018\u00a7\u00c4ppsq\u0000~\u00008\u0000\u0018\u00a7\u00b9q\u0000~\u0000Pp\u0000q\u0000~\u0000jsq\u0000~\u0000St\u0000\u0015RemainingOvertimeCostq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000q\u0000~\u0000\u0081sq\u0000~\u0000St\u0000\u0015RemainingOvertimeWorkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000q\u0000~\u0000\u0081sq\u0000~\u0000St\u0000\rRemainingWorkq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\u000fResponsePendingq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0090\u00fb\u0085ppsq\u0000~\u00008\u0000\u0090\u00fbzq\u0000~\u0000Pp\u0000q\u0000~\u0000ssq\u0000~\u0000St\u0000\u0005Startq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0090\u00fb\u0085ppsq\u0000~\u00008\u0000\u0090\u00fbzq\u0000~\u0000Pp\u0000q\u0000~\u0000ssq\u0000~\u0000St\u0000\u0004Stopq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u0090\u00fb\u0085ppsq\u0000~\u00008\u0000\u0090\u00fbzq\u0000~\u0000Pp\u0000q\u0000~\u0000ssq\u0000~\u0000St\u0000\u0006Resumeq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00fe\u0084\u000bppsq\u0000~\u00008\u0000\u00fe\u0084\u0000q\u0000~\u0000Pp\u0000q\u0000~\u0000?sq\u0000~\u0000St\u0000\rStartVarianceq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\u0005Unitsq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u00a8\n\u008fppsq\u0000~\u00008\u0001\u00a8\n\u0084q\u0000~\u0000Pp\u0000q\u0000~\u0000\u009csq\u0000~\u0000St\u0000\fUpdateNeededq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\u0003VACq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00f4V\u0099ppsq\u0000~\u00008\u0000\u00f4V\u008eq\u0000~\u0000Pp\u0000q\u0000~\u0000\u0081sq\u0000~\u0000St\u0000\u0004Workq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0001\u0087[7ppsq\u0000~\u00008\u0001\u0087[,q\u0000~\u0000Pp\u0000sq\u0000~\u0000<\u0001\u0087[!ppsq\u0000~\u0000\u00aaq\u0000~\u0000\u00b1pq\u0000~\u0000L\u0000\u0000q\u0000~\u0000Gq\u0000~\u0000Gq\u0000~\u0000\u00b2sq\u0000~\u0000\u00b3w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\tsq\u0000~\u0000\u00b5t\u0000\u00013sq\u0000~\u0000\u00b5t\u0000\u00015sq\u0000~\u0000\u00b5t\u0000\u00017sq\u0000~\u0000\u00b5t\u0000\u00012sq\u0000~\u0000\u00b5q\u0000~\u0000\u00bbsq\u0000~\u0000\u00b5t\u0000\u00014sq\u0000~\u0000\u00b5t\u0000\u00018sq\u0000~\u0000\u00b5t\u0000\u00016sq\u0000~\u0000\u00b5t\u0000\u00011xq\u0000~\u0000Nsq\u0000~\u0000Qt\u0000\u000finteger-derivedq\u0000~\u0000\u00b1sq\u0000~\u0000St\u0000\u000bWorkContourq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\u0004BCWSq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u001a\u00bd\u0003ppsq\u0000~\u00008\u0000\u001a\u00bc\u00f8q\u0000~\u0000Pp\u0000q\u0000~\u0000\u0092sq\u0000~\u0000St\u0000\u0004BCWPq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.q\u0000~\u0000Ppsq\u0000~\u00008\u0000\u00a7b+q\u0000~\u0000Pp\u0000sq\u0000~\u00008\u0000\u00a7b pp\u0000sq\u0000~\u0000X\u0000\u00a7b\u0015ppsq\u0000~\u0001|\u0000\u00a7b\nq\u0000~\u0000Ppsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u00009xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000Ppsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000_q\u0000~\u0001\u0086sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000Tq\u0000~\u0000^sq\u0000~\u0000St\u0000]com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000St\u0000\u0011ExtendedAttributeq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00a7b9ppsq\u0000~\u0001|\u0000\u00a7b.q\u0000~\u0000Ppsq\u0000~\u00008\u0000\u00a7b+q\u0000~\u0000Pp\u0000sq\u0000~\u00008\u0000\u00a7b pp\u0000sq\u0000~\u0000X\u0000\u00a7b\u0015ppsq\u0000~\u0001|\u0000\u00a7b\nq\u0000~\u0000Ppsq\u0000~\u0001\u0083\u0000\u00a7b\u0007q\u0000~\u0000Ppq\u0000~\u0001\u0086q\u0000~\u0001\u0088q\u0000~\u0000^sq\u0000~\u0000St\u0000Tcom.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineTypeq\u0000~\u0001\u008bsq\u0000~\u0000St\u0000\bBaselineq\u0000~\u0000Wq\u0000~\u0000^sq\u0000~\u0000X\u0000\u00a7b9ppsq\u0000~\u0001|\u0000\u00a7b.q\u0000~\u0000Ppsq\u0000~\u00008\u0000\u00a7b+q\u0000~\u0000Pp\u0000sq\u0000~\u00008\u0000\u00a7b pp\u0000sq\u0000~\u0000X\u0000\u00a7b\u0015ppsq\u0000~\u0001|\u0000\u00a7b\nq\u0000~\u0000Ppsq\u0000~\u0001\u0083\u0000\u00a7b\u0007q\u0000~\u0000Ppq\u0000~\u0001\u0086q\u0000~\u0001\u0088q\u0000~\u0000^sq\u0000~\u0000St\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypeq\u0000~\u0001\u008bsq\u0000~\u0000St\u0000\u000eTimephasedDataq\u0000~\u0000Wq\u0000~\u0000^sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u00a5[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000o\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppppppppq\u0000~\u0000\u0005ppppppppppppppq\u0000~\u0000$ppq\u0000~\u0000\u0010q\u0000~\u0000\fpq\u0000~\u0000\u00e7q\u0000~\u00002q\u0000~\u0000\u0017ppq\u0000~\u0000\u00a7pq\u0000~\u00005q\u0000~\u0000\"ppppppppppq\u0000~\u0000\u000epq\u0000~\u0000*ppq\u0000~\u0000\u001cpppppppppppppq\u0000~\u0000\u0013ppppq\u0000~\u0000(q\u0000~\u0000\u0007pppppppq\u0000~\u0000\u0015ppppq\u0000~\u0000.ppq\u0000~\u0000\u001fq\u0000~\u00003q\u0000~\u0000\u00f7q\u0000~\u0000\u00c8q\u0000~\u0000\u00c4q\u0000~\u0000\u0090q\u0000~\u0000\u0018q\u0000~\u0001Iq\u0000~\u0001Qq\u0000~\u0000\nq\u0000~\u0000\u008cq\u0000~\u0000\u007fq\u0000~\u0001\u001dq\u0000~\u0000\u00d0q\u0000~\u0000\u0088q\u0000~\u0000qq\u0000~\u0000&q\u0000~\u0001!q\u0000~\u0001-q\u0000~\u00011q\u0000~\u00019q\u0000~\u0001=q\u0000~\u0001Aq\u0000~\u0001Uq\u0000~\u0001sq\u0000~\u0001wq\u0000~\u0001\u0082q\u0000~\u0001\u0081q\u0000~\u00006q\u0000~\u0001\u0093q\u0000~\u0001\u0092q\u0000~\u0001\u009eq\u0000~\u0001\u009dppppppppppppppq\u0000~\u0001~q\u0000~\u0000\u000bq\u0000~\u0001\u008fq\u0000~\u0001\u009apq\u0000~\u00001pppppq\u0000~\u0001{q\u0000~\u0001\u008eq\u0000~\u0001\u0099pppq\u0000~\u0000)ppppppppppppppppq\u0000~\u0000 ppppppppppq\u0000~\u0000\u0012ppppq\u0000~\u0000\'pppppq\u0000~\u0000\u0014pq\u0000~\u0000\tpppq\u0000~\u00007pppq\u0000~\u0001\u000fpppppppppppppppppppq\u0000~\u0000\u001dpppppppppq\u0000~\u0000\u0006pppppppppppppq\u0000~\u0001\u0015q\u0000~\u0001\u000bq\u0000~\u0000\u00d8q\u0000~\u0001\u0007q\u0000~\u0000\u00ffq\u0000~\u0000\u00fbq\u0000~\u0000\u009aq\u0000~\u0000\u001aq\u0000~\u00015q\u0000~\u00000q\u0000~\u0001Mpppppppppppppppppppppppppq\u0000~\u0000\u00efpq\u0000~\u0000,pppppq\u0000~\u0001\u0003q\u0000~\u0000\u00d4q\u0000~\u0000\u00ccq\u0000~\u0000dq\u0000~\u0000`q\u0000~\u0000!q\u0000~\u0000Yq\u0000~\u0000\u0011q\u0000~\u0001Eq\u0000~\u0000\bppppppq\u0000~\u0000\rppppq\u0000~\u0000\u00a3q\u0000~\u0000{q\u0000~\u0000hq\u0000~\u0000\u001bq\u0000~\u0001\u0019q\u0000~\u0001%q\u0000~\u0000#q\u0000~\u0001)ppppppq\u0000~\u0001Yppq\u0000~\u0000\u000fpq\u0000~\u0000+pppppppppppppq\u0000~\u0000-ppq\u0000~\u0000\u001epppppq\u0000~\u0000\u0016pppppq\u0000~\u00004ppq\u0000~\u0000\u0019ppq\u0000~\u0000%q\u0000~\u0000/ppppppppp");

            public java.util.Calendar getResume() {
                return _Resume;
            }

            public void setResume(java.util.Calendar value) {
                _Resume = value;
            }

            public java.math.BigInteger getTaskUID() {
                return _TaskUID;
            }

            public void setTaskUID(java.math.BigInteger value) {
                _TaskUID = value;
            }

            public boolean isFixedMaterial() {
                return _FixedMaterial;
            }

            public void setFixedMaterial(boolean value) {
                _FixedMaterial = value;
                has_FixedMaterial = true;
            }

            public String getWork() {
                return _Work;
            }

            public void setWork(String value) {
                _Work = value;
            }

            public java.math.BigInteger getFinishVariance() {
                return _FinishVariance;
            }

            public void setFinishVariance(java.math.BigInteger value) {
                _FinishVariance = value;
            }

            public java.math.BigInteger getStartVariance() {
                return _StartVariance;
            }

            public void setStartVariance(java.math.BigInteger value) {
                _StartVariance = value;
            }

            public String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(String value) {
                _HyperlinkSubAddress = value;
            }

            public String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(String value) {
                _RemainingOvertimeWork = value;
            }

            public java.math.BigInteger getCostRateTable() {
                return _CostRateTable;
            }

            public void setCostRateTable(java.math.BigInteger value) {
                _CostRateTable = value;
            }

            public String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(String value) {
                _RemainingWork = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(String value) {
                _HyperlinkAddress = value;
            }

            public boolean isMilestone() {
                return _Milestone;
            }

            public void setMilestone(boolean value) {
                _Milestone = value;
                has_Milestone = true;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public boolean isUpdateNeeded() {
                return _UpdateNeeded;
            }

            public void setUpdateNeeded(boolean value) {
                _UpdateNeeded = value;
                has_UpdateNeeded = true;
            }

            public java.math.BigInteger getLevelingDelay() {
                return _LevelingDelay;
            }

            public void setLevelingDelay(java.math.BigInteger value) {
                _LevelingDelay = value;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(String value) {
                _ActualOvertimeWork = value;
            }

            public java.util.List getBaseline() {
                return _Baseline;
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(String value) {
                _Hyperlink = value;
            }

            public boolean isLinkedFields() {
                return _LinkedFields;
            }

            public void setLinkedFields(boolean value) {
                _LinkedFields = value;
                has_LinkedFields = true;
            }

            public java.util.List getTimephasedData() {
                return _TimephasedData;
            }

            public float getCostVariance() {
                return _CostVariance;
            }

            public void setCostVariance(float value) {
                _CostVariance = value;
                has_CostVariance = true;
            }

            public boolean isOverallocated() {
                return _Overallocated;
            }

            public void setOverallocated(boolean value) {
                _Overallocated = value;
                has_Overallocated = true;
            }

            public java.util.List getExtendedAttribute() {
                return _ExtendedAttribute;
            }

            public boolean isHasFixedRateUnits() {
                return _HasFixedRateUnits;
            }

            public void setHasFixedRateUnits(boolean value) {
                _HasFixedRateUnits = value;
                has_HasFixedRateUnits = true;
            }

            public java.math.BigInteger getResourceUID() {
                return _ResourceUID;
            }

            public void setResourceUID(java.math.BigInteger value) {
                _ResourceUID = value;
            }

            public String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(String value) {
                _RegularWork = value;
            }

            public String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(String value) {
                _OvertimeWork = value;
            }

            public java.math.BigInteger getWorkContour() {
                return _WorkContour;
            }

            public void setWorkContour(java.math.BigInteger value) {
                _WorkContour = value;
            }

            public float getUnits() {
                return _Units;
            }

            public void setUnits(float value) {
                _Units = value;
                has_Units = true;
            }

            public boolean isResponsePending() {
                return _ResponsePending;
            }

            public void setResponsePending(boolean value) {
                _ResponsePending = value;
                has_ResponsePending = true;
            }

            public boolean isConfirmed() {
                return _Confirmed;
            }

            public void setConfirmed(boolean value) {
                _Confirmed = value;
                has_Confirmed = true;
            }

            public java.math.BigInteger getDelay() {
                return _Delay;
            }

            public void setDelay(java.math.BigInteger value) {
                _Delay = value;
            }

            public java.util.Calendar getStop() {
                return _Stop;
            }

            public void setStop(java.util.Calendar value) {
                _Stop = value;
            }

            public String getNotes() {
                return _Notes;
            }

            public void setNotes(String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.Calendar getActualStart() {
                return _ActualStart;
            }

            public void setActualStart(java.util.Calendar value) {
                _ActualStart = value;
            }

            public String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(String value) {
                _ActualWork = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public float getVAC() {
                return _VAC;
            }

            public void setVAC(float value) {
                _VAC = value;
                has_VAC = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.util.Calendar getActualFinish() {
                return _ActualFinish;
            }

            public void setActualFinish(java.util.Calendar value) {
                _ActualFinish = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx25 = 0;
                final int len25 = _Baseline.size();
                int idx29 = 0;
                final int len29 = _TimephasedData.size();
                int idx32 = 0;
                final int len32 = _ExtendedAttribute.size();
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                context.endElement();
                if (_TaskUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "TaskUID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _TaskUID)));
                    context.endElement();
                }
                if (_ResourceUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ResourceUID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ResourceUID)));
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _PercentWorkComplete)));
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _ActualCost)));
                    context.endElement();
                }
                if (_ActualFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualFinish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualFinish), null));
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _ActualOvertimeCost)));
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endAttributes();
                    context.text(((String) _ActualOvertimeWork));
                    context.endElement();
                }
                if (_ActualStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualStart");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualStart), null));
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endAttributes();
                    context.text(((String) _ActualWork));
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_ACWP))));
                    context.endElement();
                }
                if (has_Confirmed) {
                    context.startElement("http://schemas.microsoft.com/project", "Confirmed");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Confirmed))));
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _Cost)));
                    context.endElement();
                }
                if (_CostRateTable!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CostRateTable");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CostRateTable)));
                    context.endElement();
                }
                if (has_CostVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "CostVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_CostVariance))));
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_CV))));
                    context.endElement();
                }
                if (_Delay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Delay");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Delay)));
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null));
                    context.endElement();
                }
                if (_FinishVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FinishVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _FinishVariance)));
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endAttributes();
                    context.text(((String) _Hyperlink));
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endAttributes();
                    context.text(((String) _HyperlinkAddress));
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endAttributes();
                    context.text(((String) _HyperlinkSubAddress));
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_WorkVariance))));
                    context.endElement();
                }
                if (has_HasFixedRateUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "HasFixedRateUnits");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_HasFixedRateUnits))));
                    context.endElement();
                }
                if (has_FixedMaterial) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedMaterial");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_FixedMaterial))));
                    context.endElement();
                }
                if (_LevelingDelay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelay");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _LevelingDelay)));
                    context.endElement();
                }
                if (has_LinkedFields) {
                    context.startElement("http://schemas.microsoft.com/project", "LinkedFields");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_LinkedFields))));
                    context.endElement();
                }
                if (has_Milestone) {
                    context.startElement("http://schemas.microsoft.com/project", "Milestone");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Milestone))));
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endAttributes();
                    context.text(((String) _Notes));
                    context.endElement();
                }
                if (has_Overallocated) {
                    context.startElement("http://schemas.microsoft.com/project", "Overallocated");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Overallocated))));
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _OvertimeCost)));
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endAttributes();
                    context.text(((String) _OvertimeWork));
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endAttributes();
                    context.text(((String) _RegularWork));
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _RemainingCost)));
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _RemainingOvertimeCost)));
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endAttributes();
                    context.text(((String) _RemainingOvertimeWork));
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endAttributes();
                    context.text(((String) _RemainingWork));
                    context.endElement();
                }
                if (has_ResponsePending) {
                    context.startElement("http://schemas.microsoft.com/project", "ResponsePending");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_ResponsePending))));
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null));
                    context.endElement();
                }
                if (_Stop!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Stop");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Stop), null));
                    context.endElement();
                }
                if (_Resume!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Resume");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Resume), null));
                    context.endElement();
                }
                if (_StartVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StartVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _StartVariance)));
                    context.endElement();
                }
                if (has_Units) {
                    context.startElement("http://schemas.microsoft.com/project", "Units");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_Units))));
                    context.endElement();
                }
                if (has_UpdateNeeded) {
                    context.startElement("http://schemas.microsoft.com/project", "UpdateNeeded");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_UpdateNeeded))));
                    context.endElement();
                }
                if (has_VAC) {
                    context.startElement("http://schemas.microsoft.com/project", "VAC");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_VAC))));
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endAttributes();
                    context.text(((String) _Work));
                    context.endElement();
                }
                if (_WorkContour!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkContour");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _WorkContour)));
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWS))));
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWP))));
                    context.endElement();
                }
                while (idx32 != len32) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_49 = idx32;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx_49 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx32 ++)));
                    context.endElement();
                }
                while (idx25 != len25) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_50 = idx25;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Baseline.get(idx_50 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Baseline.get(idx25 ++)));
                    context.endElement();
                }
                while (idx29 != len29) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_51 = idx29;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx_51 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx29 ++)));
                    context.endElement();
                }
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx25 = 0;
                final int len25 = _Baseline.size();
                int idx29 = 0;
                final int len29 = _TimephasedData.size();
                int idx32 = 0;
                final int len32 = _ExtendedAttribute.size();
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx25 = 0;
                final int len25 = _Baseline.size();
                int idx29 = 0;
                final int len29 = _TimephasedData.size();
                int idx32 = 0;
                final int len32 = _ExtendedAttribute.size();
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType.class;
                protected boolean has_BCWP;
                protected float _BCWP;
                protected String _Start;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected String _Cost;
                protected String _Finish;
                protected String _Number;
                protected java.util.ArrayList _TimephasedData = new java.util.ArrayList();
                protected String _Work;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u0099\u00fb\u00c8ppsq\u0000~\u0000\u0000\u0004\u007f>\u00c0ppsq\u0000~\u0000\u0000\u0004d\u0081\u00b8ppsq\u0000~\u0000\u0000\u0003\u00b2O}ppsq\u0000~\u0000\u0000\u0002\u00bd\u00f8\u00dfppsq\u0000~\u0000\u0000\u0002\u000b\u00c6\u00a4ppsq\u0000~\u0000\u0000\u0001Y\u0094ippsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0013\u0000\u00a7b pp\u0000sq\u0000~\u0000\f\u0000\u00a7b\u0015ppsq\u0000~\u0000\u000e\u0000\u00a7b\nq\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0014xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001epsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000$t\u0000\u000eTimephasedDatat\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000#sq\u0000~\u0000\u0013\u0000\u00b22+pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000%L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u00008q\u0000~\u00007sq\u0000~\u0000$t\u0000\u0006Numberq\u0000~\u0000+sq\u0000~\u0000\f\u0000\u00b226ppsq\u0000~\u0000\u0013\u0000\u00b22+q\u0000~\u0000\u0012p\u0000q\u0000~\u00000sq\u0000~\u0000$t\u0000\u0005Startq\u0000~\u0000+q\u0000~\u0000#sq\u0000~\u0000\f\u0000\u00b226ppsq\u0000~\u0000\u0013\u0000\u00b22+q\u0000~\u0000\u0012p\u0000q\u0000~\u00000sq\u0000~\u0000$t\u0000\u0006Finishq\u0000~\u0000+q\u0000~\u0000#sq\u0000~\u0000\f\u0000\u00f4V\u0099ppsq\u0000~\u0000\u0013\u0000\u00f4V\u008eq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000-\u0000\u00f4V\u0083ppsr\u0000%com.sun.msv.datatype.xsd.DurationType=;_\u00b5\u00cd\u007f\u00ea\u0016\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00007t\u0000\bdurationsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000=sq\u0000~\u0000>q\u0000~\u0000Oq\u0000~\u00007sq\u0000~\u0000$t\u0000\u0004Workq\u0000~\u0000+q\u0000~\u0000#sq\u0000~\u0000\f\u0000\u00b226ppsq\u0000~\u0000\u0013\u0000\u00b22+q\u0000~\u0000\u0012p\u0000q\u0000~\u00000sq\u0000~\u0000$t\u0000\u0004Costq\u0000~\u0000+q\u0000~\u0000#sq\u0000~\u0000\f\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\u0013\u0000\u001a\u00bc\u00f8q\u0000~\u0000\u0012p\u0000sq\u0000~\u0000-\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00002q\u0000~\u00007t\u0000\u0005floatq\u0000~\u0000Qq\u0000~\u0000=sq\u0000~\u0000>q\u0000~\u0000_q\u0000~\u00007sq\u0000~\u0000$t\u0000\u0004BCWSq\u0000~\u0000+q\u0000~\u0000#sq\u0000~\u0000\f\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\u0013\u0000\u001a\u00bc\u00f8q\u0000~\u0000\u0012p\u0000q\u0000~\u0000[sq\u0000~\u0000$t\u0000\u0004BCWPq\u0000~\u0000+q\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000h[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0011\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000\u0007q\u0000~\u0000\npppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Jq\u0000~\u0000\bq\u0000~\u0000\u000bq\u0000~\u0000Yq\u0000~\u0000cpppppppq\u0000~\u0000\u0019ppppppppppq\u0000~\u0000\u0018ppppppppppppppppppppppppq\u0000~\u0000\u0010q\u0000~\u0000\u0006ppppq\u0000~\u0000Bq\u0000~\u0000Fq\u0000~\u0000Uppq\u0000~\u0000\rpppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\tppp");

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public String getStart() {
                    return _Start;
                }

                public void setStart(String value) {
                    _Start = value;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public String getCost() {
                    return _Cost;
                }

                public void setCost(String value) {
                    _Cost = value;
                }

                public String getFinish() {
                    return _Finish;
                }

                public void setFinish(String value) {
                    _Finish = value;
                }

                public String getNumber() {
                    return _Number;
                }

                public void setNumber(String value) {
                    _Number = value;
                }

                public java.util.List getTimephasedData() {
                    return _TimephasedData;
                }

                public String getWork() {
                    return _Work;
                }

                public void setWork(String value) {
                    _Work = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = _TimephasedData.size();
                    while (idx7 != len7) {
                        context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                        int idx_0 = idx7;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx7 ++)));
                        context.endElement();
                    }
                    context.startElement("http://schemas.microsoft.com/project", "Number");
                    context.endAttributes();
                    context.text(((String) _Number));
                    context.endElement();
                    if (_Start!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Start");
                        context.endAttributes();
                        context.text(((String) _Start));
                        context.endElement();
                    }
                    if (_Finish!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Finish");
                        context.endAttributes();
                        context.text(((String) _Finish));
                        context.endElement();
                    }
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endAttributes();
                        context.text(((String) _Work));
                        context.endElement();
                    }
                    if (_Cost!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endAttributes();
                        context.text(((String) _Cost));
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWS))));
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWP))));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = _TimephasedData.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx7 = 0;
                    final int len7 = _TimephasedData.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "------------------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 10;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 14;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 8;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 4;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 6;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 12;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 16;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  16 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 17, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 17, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  17 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  13 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  11 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  7 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  9 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  15 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  5 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  1 :
                                    _Number = value;
                                    state = 2;
                                    return ;
                                case  8 :
                                    _BCWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_BCWP = true;
                                    state = 9;
                                    return ;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                                case  6 :
                                    _BCWS = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_BCWS = true;
                                    state = 7;
                                    return ;
                                case  12 :
                                    _Finish = value;
                                    state = 13;
                                    return ;
                                case  10 :
                                    _Start = value;
                                    state = 11;
                                    return ;
                                case  14 :
                                    _Work = value;
                                    state = 15;
                                    return ;
                                case  4 :
                                    _Cost = value;
                                    state = 5;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  17 :
                                state = 17;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType.class;
                protected java.math.BigInteger _DurationFormat;
                protected String _Value;
                protected String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00040\u00e8\u00afppsq\u0000~\u0000\u0000\u0003al\u0091ppsq\u0000~\u0000\u0000\u0002b\u00e8\u0081ppsq\u0000~\u0000\u0000\u0001\u00b0\u00b6Fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u0000\t\u0000\u00b226ppsq\u0000~\u0000\u000b\u0000\u00b22+q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u00003q\u0000~\u0000\u001dsq\u0000~\u0000&t\u0000\u0007FieldIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00b226ppsq\u0000~\u0000\u000b\u0000\u00b22+q\u0000~\u0000\u0010p\u0000q\u0000~\u00000sq\u0000~\u0000&t\u0000\u0005Valueq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u000b\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0010p\u0000q\u0000~\u0000\u0014sq\u0000~\u0000&t\u0000\u0007ValueIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00cf|\u0019ppsq\u0000~\u0000\u000b\u0000\u00cf|\u000eq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0000\u00cf|\u0003ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019t\u0000\u0000pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000\u001cq\u0000~\u0000\u001ct\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001axpt\u0000\u00013sq\u0000~\u0000Ot\u0000\u000241sq\u0000~\u0000Ot\u0000\u000239sq\u0000~\u0000Ot\u0000\u000236sq\u0000~\u0000Ot\u0000\u00016sq\u0000~\u0000Ot\u0000\u00015sq\u0000~\u0000Ot\u0000\u000237sq\u0000~\u0000Ot\u0000\u000211sq\u0000~\u0000Ot\u0000\u000240sq\u0000~\u0000Ot\u0000\u00014sq\u0000~\u0000Ot\u0000\u000212sq\u0000~\u0000Ot\u0000\u000252sq\u0000~\u0000Ot\u0000\u00017sq\u0000~\u0000Ot\u0000\u000238sq\u0000~\u0000Ot\u0000\u000220sq\u0000~\u0000Ot\u0000\u000242sq\u0000~\u0000Ot\u0000\u000253sq\u0000~\u0000Ot\u0000\u000243sq\u0000~\u0000Ot\u0000\u000221sq\u0000~\u0000Ot\u0000\u000210sq\u0000~\u0000Ot\u0000\u000235sq\u0000~\u0000Ot\u0000\u000244sq\u0000~\u0000Ot\u0000\u00019sq\u0000~\u0000Ot\u0000\u000219sq\u0000~\u0000Ot\u0000\u00018sq\u0000~\u0000Ot\u0000\u000251xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000Ksq\u0000~\u0000&t\u0000\u000eDurationFormatq\u0000~\u0000*q\u0000~\u0000,sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0089[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\t\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppq\u0000~\u0000\u0007ppppppppppppppppppppppppppppppppq\u0000~\u0000Appppppppppppq\u0000~\u0000\bpppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\nq\u0000~\u0000=pppppppppppppppppppq\u0000~\u0000\u0006ppppppppppq\u0000~\u0000.q\u0000~\u00009pppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppp");

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public String getValue() {
                    return _Value;
                }

                public void setValue(String value) {
                    _Value = value;
                }

                public String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endAttributes();
                        context.text(((String) _FieldID));
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endAttributes();
                        context.text(((String) _Value));
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValueID)));
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DurationFormat)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.AssignmentsType.AssignmentType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-----------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 7;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 9;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  10 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  8 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  5 :
                                    _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 6;
                                    return ;
                                case  3 :
                                    _Value = value;
                                    state = 4;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                                case  7 :
                                    _DurationFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 8;
                                    return ;
                                case  9 :
                                    _ValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 10;
                                    return ;
                                case  1 :
                                    _FieldID = value;
                                    state = 2;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            break;
                        case  104 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.class), 105, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.BaselineTypeImpl.class), 105, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  3 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 42;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 16;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FinishVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 4;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingDelay".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 36;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"VAC".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 32;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 74;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 84;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RegularWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 48;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resume".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 94;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 26;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CV".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 96;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 78;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 56;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FixedMaterial".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 60;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualFinish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 38;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResponsePending".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 52;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UpdateNeeded".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 58;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 8;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 76;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualStart".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 102;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TaskUID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 44;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 64;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LinkedFields".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 20;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentWorkComplete".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 82;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 98;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 70;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostRateTable".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 14;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 30;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 12;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Notes".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 72;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 90;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 100;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StartVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 88;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 80;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkSubAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 28;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Hyperlink".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 18;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResourceUID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 86;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Stop".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 54;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 6;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Units".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 62;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ACWP".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 34;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Confirmed".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 24;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Delay".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 22;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 46;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 68;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkContour".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 10;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 92;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Overallocated".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 50;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Milestone".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 66;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 104;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HasFixedRateUnits".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 40;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                        case  56 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 57, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 57, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 57, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 57, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 57, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  68 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 69, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 69, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  53 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResponsePending".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  93 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  79 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  99 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  51 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Overallocated".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FinishVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  81 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  41 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HasFixedRateUnits".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  31 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  37 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingDelay".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  87 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResourceUID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  45 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TaskUID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  55 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Stop".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  47 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  63 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Units".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  7 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  65 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  85 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  75 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  73 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Notes".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  67 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Milestone".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  105 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  43 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  13 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  25 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Confirmed".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  23 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Delay".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  21 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LinkedFields".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                        case  49 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RegularWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  15 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostRateTable".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  71 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  33 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"VAC".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  97 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CV".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  56 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.ExtendedAttributeTypeImpl.class), 57, ___uri, ___local)));
                                return ;
                            }
                            break;
                        case  89 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StartVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  69 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  27 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  61 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FixedMaterial".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  95 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resume".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  17 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  19 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Hyperlink".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  57 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  91 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  103 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualStart".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  39 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualFinish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  101 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  11 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkContour".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  77 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  83 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentWorkComplete".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  29 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkSubAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  59 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UpdateNeeded".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  35 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ACWP".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  9 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  74 :
                                _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 75;
                                return ;
                            case  84 :
                                _OvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 85;
                                return ;
                            case  90 :
                                _HyperlinkAddress = value;
                                state = 91;
                                return ;
                            case  14 :
                                _CostRateTable = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 15;
                                return ;
                            case  60 :
                                _FixedMaterial = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_FixedMaterial = true;
                                state = 61;
                                return ;
                            case  78 :
                                _RemainingOvertimeWork = value;
                                state = 79;
                                return ;
                            case  64 :
                                _RemainingOvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 65;
                                return ;
                            case  100 :
                                _RemainingCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 101;
                                return ;
                            case  80 :
                                _ActualOvertimeWork = value;
                                state = 81;
                                return ;
                            case  24 :
                                _Confirmed = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Confirmed = true;
                                state = 25;
                                return ;
                            case  42 :
                                _ActualOvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 43;
                                return ;
                            case  26 :
                                _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 27;
                                return ;
                            case  38 :
                                _ActualFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 39;
                                return ;
                            case  30 :
                                _RemainingWork = value;
                                state = 31;
                                return ;
                            case  44 :
                                _TaskUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 45;
                                return ;
                            case  58 :
                                _UpdateNeeded = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_UpdateNeeded = true;
                                state = 59;
                                return ;
                            case  32 :
                                _VAC = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_VAC = true;
                                state = 33;
                                return ;
                            case  72 :
                                _Notes = value;
                                state = 73;
                                return ;
                            case  4 :
                                _FinishVariance = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 5;
                                return ;
                            case  94 :
                                _Resume = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 95;
                                return ;
                            case  98 :
                                _OvertimeWork = value;
                                state = 99;
                                return ;
                            case  52 :
                                _ResponsePending = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_ResponsePending = true;
                                state = 53;
                                return ;
                            case  62 :
                                _Units = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_Units = true;
                                state = 63;
                                return ;
                            case  82 :
                                _PercentWorkComplete = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 83;
                                return ;
                            case  8 :
                                _ActualCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 9;
                                return ;
                            case  76 :
                                _ActualWork = value;
                                state = 77;
                                return ;
                            case  22 :
                                _Delay = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 23;
                                return ;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  12 :
                                _WorkVariance = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_WorkVariance = true;
                                state = 13;
                                return ;
                            case  86 :
                                _ResourceUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 87;
                                return ;
                            case  50 :
                                _Overallocated = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Overallocated = true;
                                state = 51;
                                return ;
                            case  20 :
                                _LinkedFields = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_LinkedFields = true;
                                state = 21;
                                return ;
                            case  6 :
                                _BCWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_BCWP = true;
                                state = 7;
                                return ;
                            case  92 :
                                _Work = value;
                                state = 93;
                                return ;
                            case  54 :
                                _Stop = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 55;
                                return ;
                            case  88 :
                                _StartVariance = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 89;
                                return ;
                            case  102 :
                                _ActualStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 103;
                                return ;
                            case  34 :
                                _ACWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_ACWP = true;
                                state = 35;
                                return ;
                            case  16 :
                                _BCWS = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_BCWS = true;
                                state = 17;
                                return ;
                            case  18 :
                                _Hyperlink = value;
                                state = 19;
                                return ;
                            case  96 :
                                _CV = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_CV = true;
                                state = 97;
                                return ;
                            case  48 :
                                _RegularWork = value;
                                state = 49;
                                return ;
                            case  40 :
                                _HasFixedRateUnits = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_HasFixedRateUnits = true;
                                state = 41;
                                return ;
                            case  10 :
                                _WorkContour = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 11;
                                return ;
                            case  28 :
                                _HyperlinkSubAddress = value;
                                state = 29;
                                return ;
                            case  70 :
                                _CostVariance = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_CostVariance = true;
                                state = 71;
                                return ;
                            case  36 :
                                _LevelingDelay = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 37;
                                return ;
                            case  1 :
                                _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 2;
                                return ;
                            case  66 :
                                _Milestone = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Milestone = true;
                                state = 67;
                                return ;
                            case  46 :
                                _Cost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 47;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

                public void leaveChild(int nextState)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (nextState) {
                        case  105 :
                            state = 105;
                            return ;
                        case  57 :
                            state = 57;
                            return ;
                        case  69 :
                            state = 69;
                            return ;
                    }
                    super.leaveChild(nextState);
                }

            }

        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "---");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                            _Assignment.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.AssignmentTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Assignment".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Assignment".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

    }

    public static class CalendarsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.class;
        protected java.util.ArrayList _Calendar = new java.util.ArrayList();
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b.ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+pp\u0000sq\u0000~\u0000\u0006\u0000\u00a7b pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0000\u0000\u00a7b\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u0014sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0015psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001cxq\u0000~\u0000\u0017t\u0000Ccom.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001bt\u0000\bCalendart\u0000$http://schemas.microsoft.com/projectsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000$[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u000eppppppppppq\u0000~\u0000\rppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getCalendar() {
            return _Calendar;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Calendar.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Calendar");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Calendar.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Calendar.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Calendar.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Calendar.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class CalendarTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.class;
            protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType _WeekDays;
            protected boolean has_IsBaseCalendar;
            protected boolean _IsBaseCalendar;
            protected java.math.BigInteger _BaseCalendarUID;
            protected String _Name;
            protected java.math.BigInteger _UID;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005OC\u0003ppsq\u0000~\u0000\u0000\u0004\u00a7\u00e0\u00c8ppsq\u0000~\u0000\u0000\u0003\u00a9\\\u00b8ppsq\u0000~\u0000\u0000\u0002\u0001R$ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u0002\u00ce\u001fppsq\u0000~\u0000\t\u0001\u0002\u00ce\u0014q\u0000~\u0000!p\u0000sq\u0000~\u0000\r\u0001\u0002\u00ce\tppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0016xq\u0000~\u0000\u0015t\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001c\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0006stringq\u0000~\u00005q\u0000~\u00007t\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000\u001fsq\u0000~\u0000\"t\u0000\u000estring-derivedq\u0000~\u00003sq\u0000~\u0000$t\u0000\u0004Nameq\u0000~\u0000(sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000 \u0001psq\u0000~\u0000)\u0001\u00a8\n\u008fppsq\u0000~\u0000\t\u0001\u00a8\n\u0084q\u0000~\u0000!p\u0000sq\u0000~\u0000\r\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0007booleanq\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000\"q\u0000~\u0000Fq\u0000~\u0000\u0019sq\u0000~\u0000$t\u0000\u000eIsBaseCalendarq\u0000~\u0000(q\u0000~\u0000?sq\u0000~\u0000)\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\t\u0000\u00fe\u0084\u0000q\u0000~\u0000!p\u0000q\u0000~\u0000\u0010sq\u0000~\u0000$t\u0000\u000fBaseCalendarUIDq\u0000~\u0000(q\u0000~\u0000?sq\u0000~\u0000)\u0000\u00a7b6ppsq\u0000~\u0000\t\u0000\u00a7b+q\u0000~\u0000!p\u0000sq\u0000~\u0000\t\u0000\u00a7b pp\u0000sq\u0000~\u0000)\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000!psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000!psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000@q\u0000~\u0000Xsr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000?sq\u0000~\u0000$t\u0000Pcom.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000$t\u0000\bWeekDaysq\u0000~\u0000(q\u0000~\u0000?sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000a[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\n\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppq\u0000~\u0000\u0007pppppppppppppppppppq\u0000~\u0000Apppppppppppppppppppppppq\u0000~\u0000*ppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppq\u0000~\u0000Tpppppppppq\u0000~\u0000Jq\u0000~\u0000Qpppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppq\u0000~\u0000Npppppppppppppppppppppppq\u0000~\u0000\bpppppppppppppppppppppppp");

            public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType getWeekDays() {
                return _WeekDays;
            }

            public void setWeekDays(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType value) {
                _WeekDays = value;
            }

            public boolean isIsBaseCalendar() {
                return _IsBaseCalendar;
            }

            public void setIsBaseCalendar(boolean value) {
                _IsBaseCalendar = value;
                has_IsBaseCalendar = true;
            }

            public java.math.BigInteger getBaseCalendarUID() {
                return _BaseCalendarUID;
            }

            public void setBaseCalendarUID(java.math.BigInteger value) {
                _BaseCalendarUID = value;
            }

            public String getName() {
                return _Name;
            }

            public void setName(String value) {
                _Name = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                context.endElement();
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endAttributes();
                    context.text(((String) _Name));
                    context.endElement();
                }
                if (has_IsBaseCalendar) {
                    context.startElement("http://schemas.microsoft.com/project", "IsBaseCalendar");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsBaseCalendar))));
                    context.endElement();
                }
                if (_BaseCalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "BaseCalendarUID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _BaseCalendarUID)));
                    context.endElement();
                }
                if (_WeekDays!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WeekDays");
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _WeekDays));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _WeekDays));
                    context.endElement();
                }
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BaseCalendarUID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 10;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsBaseCalendar".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 4;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekDays".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 6;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 8;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            break;
                        case  6 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekDay".equals(___local)) {
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 7, ___uri, ___local, __atts));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  9 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  7 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekDays".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  11 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BaseCalendarUID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsBaseCalendar".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  6 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekDays".equals(___local)) {
                                _WeekDays = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.class), 7, ___uri, ___local));
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  4 :
                                _IsBaseCalendar = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsBaseCalendar = true;
                                state = 5;
                                return ;
                            case  1 :
                                _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 2;
                                return ;
                            case  8 :
                                _Name = value;
                                state = 9;
                                return ;
                            case  10 :
                                _BaseCalendarUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 11;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

                public void leaveChild(int nextState)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (nextState) {
                        case  7 :
                            state = 7;
                            return ;
                    }
                    super.leaveChild(nextState);
                }

            }

            public static class WeekDaysTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.class;
                protected java.util.ArrayList _WeekDay = new java.util.ArrayList();
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000\\com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u0007WeekDayt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

                public java.util.List getWeekDay() {
                    return _WeekDay;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _WeekDay.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "WeekDay");
                        int idx_0 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _WeekDay.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _WeekDay.get(idx1 ++)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _WeekDay.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _WeekDay.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "---");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekDay".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DayType".equals(___local)) {
                                    _WeekDay.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekDay".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  2 :
                                state = 2;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

                public static class WeekDayTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.class;
                    protected boolean has_DayWorking;
                    protected boolean _DayWorking;
                    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType _WorkingTimes;
                    protected java.math.BigInteger _DayType;
                    protected com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType _TimePeriod;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004xWOppsq\u0000~\u0000\u0000\u0003\u00d0\u00f5\u0014ppsq\u0000~\u0000\u0000\u0003)\u0092\u00d9ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0081\u0088Epp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u0081\u0088:ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lang/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0016L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xp\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xq\u0000~\u0000\u0017t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integerq\u0000~\u0000\u001dq\u0000~\u0000\"t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0016xpt\u0000\u00013sq\u0000~\u0000(t\u0000\u00015sq\u0000~\u0000(t\u0000\u00017sq\u0000~\u0000(t\u0000\u00012sq\u0000~\u0000(t\u0000\u00010sq\u0000~\u0000(t\u0000\u00014sq\u0000~\u0000(t\u0000\u00016sq\u0000~\u0000(t\u0000\u00011xsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpt\u0000\u000finteger-derivedq\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0007DayTypet\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00a8\n\u008fppsq\u0000~\u0000\b\u0001\u00a8\n\u0084q\u0000~\u0000<p\u0000sq\u0000~\u0000\f\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000#t\u0000\u0007booleanq\u0000~\u0000\u001dq\u0000~\u0000:sq\u0000~\u0000=q\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000@t\u0000\nDayWorkingq\u0000~\u0000Dsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000;\u0001psq\u0000~\u0000E\u0000\u00a7b6ppsq\u0000~\u0000\b\u0000\u00a7b+q\u0000~\u0000<p\u0000sq\u0000~\u0000\b\u0000\u00a7b pp\u0000sq\u0000~\u0000E\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000<psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000<psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000Qq\u0000~\u0000\\sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000Psq\u0000~\u0000@t\u0000kcom.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000@t\u0000\nTimePeriodq\u0000~\u0000Dq\u0000~\u0000Psq\u0000~\u0000E\u0000\u00a7b6ppsq\u0000~\u0000\b\u0000\u00a7b+q\u0000~\u0000<p\u0000sq\u0000~\u0000\b\u0000\u00a7b pp\u0000sq\u0000~\u0000E\u0000\u00a7b\u0015ppsq\u0000~\u0000V\u0000\u00a7b\nq\u0000~\u0000<psq\u0000~\u0000Y\u0000\u00a7b\u0007q\u0000~\u0000<pq\u0000~\u0000\\q\u0000~\u0000^q\u0000~\u0000Psq\u0000~\u0000@t\u0000mcom.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesTypeq\u0000~\u0000asq\u0000~\u0000@t\u0000\fWorkingTimesq\u0000~\u0000Dq\u0000~\u0000Psr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000o[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\n\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppppppppq\u0000~\u0000Fpppppq\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Xq\u0000~\u0000hpppppppppq\u0000~\u0000Uq\u0000~\u0000gpppppppppppppppppppppppppppppppq\u0000~\u0000Rq\u0000~\u0000dpppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppp");

                    public boolean isDayWorking() {
                        return _DayWorking;
                    }

                    public void setDayWorking(boolean value) {
                        _DayWorking = value;
                        has_DayWorking = true;
                    }

                    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType getWorkingTimes() {
                        return _WorkingTimes;
                    }

                    public void setWorkingTimes(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType value) {
                        _WorkingTimes = value;
                    }

                    public java.math.BigInteger getDayType() {
                        return _DayType;
                    }

                    public void setDayType(java.math.BigInteger value) {
                        _DayType = value;
                    }

                    public com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType getTimePeriod() {
                        return _TimePeriod;
                    }

                    public void setTimePeriod(com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType value) {
                        _TimePeriod = value;
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "DayType");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DayType)));
                        context.endElement();
                        if (has_DayWorking) {
                            context.startElement("http://schemas.microsoft.com/project", "DayWorking");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_DayWorking))));
                            context.endElement();
                        }
                        if (_TimePeriod!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "TimePeriod");
                            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TimePeriod));
                            context.endAttributes();
                            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TimePeriod));
                            context.endElement();
                        }
                        if (_WorkingTimes!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "WorkingTimes");
                            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _WorkingTimes));
                            context.endAttributes();
                            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _WorkingTimes));
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public static class TimePeriodTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                    {

                        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType.class;
                        protected java.util.Calendar _ToDate;
                        protected java.util.Calendar _FromDate;
                        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0001!\u00f7\u000fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u0090\u00fb\u0085ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0090\u00fbzsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\bdateTimesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\bFromDatet\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\f\u0001psq\u0000~\u0000\u0006\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000\b\u0000\u0090\u00fbzq\u0000~\u0000\rp\u0000q\u0000~\u0000\u0011sq\u0000~\u0000#t\u0000\u0006ToDateq\u0000~\u0000\'q\u0000~\u0000)sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u00000[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0007q\u0000~\u0000+ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppp");

                        public java.util.Calendar getToDate() {
                            return _ToDate;
                        }

                        public void setToDate(java.util.Calendar value) {
                            _ToDate = value;
                        }

                        public java.util.Calendar getFromDate() {
                            return _FromDate;
                        }

                        public void setFromDate(java.util.Calendar value) {
                            _FromDate = value;
                        }

                        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.Unmarshaller(context);
                        }

                        public Class getPrimaryInterfaceClass() {
                            return PRIMARY_INTERFACE_CLASS;
                        }

                        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            if (_FromDate!= null) {
                                context.startElement("http://schemas.microsoft.com/project", "FromDate");
                                context.endAttributes();
                                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FromDate), null));
                                context.endElement();
                            }
                            if (_ToDate!= null) {
                                context.startElement("http://schemas.microsoft.com/project", "ToDate");
                                context.endAttributes();
                                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ToDate), null));
                                context.endElement();
                            }
                        }

                        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                        }

                        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                        }

                        public Class getPrimaryInterface() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.TimePeriodType.class);
                        }

                        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                        }

                        public class Unmarshaller
                            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                        {


                            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                                super(context, "-----");
                            }

                            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.this;
                            }

                            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FromDate".equals(___local)) {
                                            context.pushAttributes(__atts);
                                            state = 1;
                                            return ;
                                        }
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ToDate".equals(___local)) {
                                            context.pushAttributes(__atts);
                                            state = 3;
                                            return ;
                                        }
                                        revertToParentFromEnterElement(___uri, ___local, __atts);
                                        return ;
                                }
                                super.enterElement(___uri, ___local, __atts);
                            }

                            public void leaveElement(String ___uri, String ___local)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveElement(___uri, ___local);
                                        return ;
                                    case  4 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ToDate".equals(___local)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  2 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FromDate".equals(___local)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local);
                            }

                            public void enterAttribute(String ___uri, String ___local)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromEnterAttribute(___uri, ___local);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local);
                            }

                            public void leaveAttribute(String ___uri, String ___local)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveAttribute(___uri, ___local);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local);
                            }

                            public void text(String value)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                try {
                                    switch (state) {
                                        case  0 :
                                            revertToParentFromText(value);
                                            return ;
                                        case  1 :
                                            _FromDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                            state = 2;
                                            return ;
                                        case  3 :
                                            _ToDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                            state = 4;
                                            return ;
                                    }
                                } catch (RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                            }

                        }

                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "----------");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  3 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTimes".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 8;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DayWorking".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 4;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimePeriod".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 6;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DayType".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTime".equals(___local)) {
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 9, ___uri, ___local, __atts));
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FromDate".equals(___local)) {
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 7, ___uri, ___local, __atts));
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ToDate".equals(___local)) {
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 7, ___uri, ___local, __atts));
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                                case  5 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DayWorking".equals(___local)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTimes".equals(___local)) {
                                        _WorkingTimes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.class), 9, ___uri, ___local));
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimePeriod".equals(___local)) {
                                        _TimePeriod = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.TimePeriodTypeImpl.class), 7, ___uri, ___local));
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DayType".equals(___local)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTimes".equals(___local)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  7 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimePeriod".equals(___local)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  4 :
                                        _DayWorking = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                        has_DayWorking = true;
                                        state = 5;
                                        return ;
                                    case  1 :
                                        _DayType = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 2;
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                        public void leaveChild(int nextState)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (nextState) {
                                case  9 :
                                    state = 9;
                                    return ;
                                case  7 :
                                    state = 7;
                                    return ;
                            }
                            super.leaveChild(nextState);
                        }

                    }

                    public static class WorkingTimesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                    {

                        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.class;
                        protected java.util.ArrayList _WorkingTime = new java.util.ArrayList();
                        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0003D\u00eb\"ppsr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003D\u00eb\u0017sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000\tpsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\tpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\b\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000}com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001dt\u0000\u000bWorkingTimet\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\u0000\u0002\u009d\u0088\u00e7ppsq\u0000~\u0000\u0006\u0002\u009d\u0088\u00dcq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u00f6&\u00acppsq\u0000~\u0000\u0006\u0001\u00f6&\u00a1q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001N\u00c4qppsq\u0000~\u0000\u0006\u0001N\u00c4fq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0000\u00a7b6ppsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"q\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001csr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000E[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0013\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppq\u0000~\u0000%ppppppppppppppppppppppppppppppppq\u0000~\u0000.ppppppppppq\u0000~\u0000-ppppppppppppppppppppppppppppppppq\u0000~\u00006ppppppppppq\u0000~\u0000\u0012q\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000:q\u0000~\u0000Aq\u0000~\u00005pppppq\u0000~\u0000\u000fq\u0000~\u0000)q\u0000~\u00001q\u0000~\u00009q\u0000~\u0000@ppppppppppppppppppppppppppppq\u0000~\u0000=pppq\u0000~\u0000\u0007ppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppq\u0000~\u0000&");

                        public java.util.List getWorkingTime() {
                            return _WorkingTime;
                        }

                        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.Unmarshaller(context);
                        }

                        public Class getPrimaryInterfaceClass() {
                            return PRIMARY_INTERFACE_CLASS;
                        }

                        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = _WorkingTime.size();
                            while (idx1 != len1) {
                                context.startElement("http://schemas.microsoft.com/project", "WorkingTime");
                                int idx_0 = idx1;
                                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _WorkingTime.get(idx_0 ++)));
                                context.endAttributes();
                                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _WorkingTime.get(idx1 ++)));
                                context.endElement();
                            }
                        }

                        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = _WorkingTime.size();
                        }

                        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                            throws org.xml.sax.SAXException
                        {
                            int idx1 = 0;
                            final int len1 = _WorkingTime.size();
                        }

                        public Class getPrimaryInterface() {
                            return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.class);
                        }

                        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                        }

                        public class Unmarshaller
                            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                        {


                            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                                super(context, "---");
                            }

                            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.this;
                            }

                            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTime".equals(___local)) {
                                            context.pushAttributes(__atts);
                                            state = 1;
                                            return ;
                                        }
                                        revertToParentFromEnterElement(___uri, ___local, __atts);
                                        return ;
                                    case  1 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ToTime".equals(___local)) {
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, __atts)));
                                            return ;
                                        }
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FromTime".equals(___local)) {
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local, __atts)));
                                            return ;
                                        }
                                        break;
                                }
                                super.enterElement(___uri, ___local, __atts);
                            }

                            public void leaveElement(String ___uri, String ___local)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveElement(___uri, ___local);
                                        return ;
                                    case  2 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTime".equals(___local)) {
                                            context.popAttributes();
                                            state = 0;
                                            return ;
                                        }
                                        break;
                                    case  1 :
                                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkingTime".equals(___local)) {
                                            _WorkingTime.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.class), 2, ___uri, ___local)));
                                            return ;
                                        }
                                        break;
                                }
                                super.leaveElement(___uri, ___local);
                            }

                            public void enterAttribute(String ___uri, String ___local)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromEnterAttribute(___uri, ___local);
                                        return ;
                                }
                                super.enterAttribute(___uri, ___local);
                            }

                            public void leaveAttribute(String ___uri, String ___local)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (state) {
                                    case  0 :
                                        revertToParentFromLeaveAttribute(___uri, ___local);
                                        return ;
                                }
                                super.leaveAttribute(___uri, ___local);
                            }

                            public void text(String value)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                try {
                                    switch (state) {
                                        case  0 :
                                            revertToParentFromText(value);
                                            return ;
                                    }
                                } catch (RuntimeException e) {
                                    handleUnexpectedTextException(value, e);
                                }
                            }

                            public void leaveChild(int nextState)
                                throws com.sun.xml.bind.unmarshaller.UnreportedException
                            {
                                switch (nextState) {
                                    case  2 :
                                        state = 2;
                                        return ;
                                }
                                super.leaveChild(nextState);
                            }

                        }

                        public static class WorkingTimeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                        {

                            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType.class;
                            protected java.util.Calendar _ToTime;
                            protected java.util.Calendar _FromTime;
                            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00fd\u0095\u0093ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000~\u00ca\u00c7ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000~\u00ca\u00bcsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000~\u00ca\u00b1ppsr\u0000!com.sun.msv.datatype.xsd.TimeType\u0011\u00fb\u0013\u008b\u00a9l\u009d\u001b\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0004timesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\bFromTimet\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\f\u0001psq\u0000~\u0000\u0006\u0000~\u00ca\u00c7ppsq\u0000~\u0000\b\u0000~\u00ca\u00bcq\u0000~\u0000\rp\u0000q\u0000~\u0000\u0011sq\u0000~\u0000#t\u0000\u0006ToTimeq\u0000~\u0000\'q\u0000~\u0000)sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u00000[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000\u0007q\u0000~\u0000+pppppp");

                            public java.util.Calendar getToTime() {
                                return _ToTime;
                            }

                            public void setToTime(java.util.Calendar value) {
                                _ToTime = value;
                            }

                            public java.util.Calendar getFromTime() {
                                return _FromTime;
                            }

                            public void setFromTime(java.util.Calendar value) {
                                _FromTime = value;
                            }

                            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.Unmarshaller(context);
                            }

                            public Class getPrimaryInterfaceClass() {
                                return PRIMARY_INTERFACE_CLASS;
                            }

                            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                                if (_FromTime!= null) {
                                    context.startElement("http://schemas.microsoft.com/project", "FromTime");
                                    context.endAttributes();
                                    context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FromTime), null));
                                    context.endElement();
                                }
                                if (_ToTime!= null) {
                                    context.startElement("http://schemas.microsoft.com/project", "ToTime");
                                    context.endAttributes();
                                    context.text(com.sun.msv.datatype.xsd.TimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ToTime), null));
                                    context.endElement();
                                }
                            }

                            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                            }

                            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                                throws org.xml.sax.SAXException
                            {
                            }

                            public Class getPrimaryInterface() {
                                return (com.tapsterrock.mspdi.schema.ProjectType.CalendarsType.CalendarType.WeekDaysType.WeekDayType.WorkingTimesType.WorkingTimeType.class);
                            }

                            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                            }

                            public class Unmarshaller
                                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                            {


                                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                                    super(context, "-----");
                                }

                                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.WeekDaysTypeImpl.WeekDayTypeImpl.WorkingTimesTypeImpl.WorkingTimeTypeImpl.this;
                                }

                                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                                {
                                    switch (state) {
                                        case  0 :
                                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ToTime".equals(___local)) {
                                                context.pushAttributes(__atts);
                                                state = 3;
                                                return ;
                                            }
                                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FromTime".equals(___local)) {
                                                context.pushAttributes(__atts);
                                                state = 1;
                                                return ;
                                            }
                                            revertToParentFromEnterElement(___uri, ___local, __atts);
                                            return ;
                                    }
                                    super.enterElement(___uri, ___local, __atts);
                                }

                                public void leaveElement(String ___uri, String ___local)
                                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                                {
                                    switch (state) {
                                        case  4 :
                                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ToTime".equals(___local)) {
                                                context.popAttributes();
                                                state = 0;
                                                return ;
                                            }
                                            break;
                                        case  0 :
                                            revertToParentFromLeaveElement(___uri, ___local);
                                            return ;
                                        case  2 :
                                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FromTime".equals(___local)) {
                                                context.popAttributes();
                                                state = 0;
                                                return ;
                                            }
                                            break;
                                    }
                                    super.leaveElement(___uri, ___local);
                                }

                                public void enterAttribute(String ___uri, String ___local)
                                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                                {
                                    switch (state) {
                                        case  0 :
                                            revertToParentFromEnterAttribute(___uri, ___local);
                                            return ;
                                    }
                                    super.enterAttribute(___uri, ___local);
                                }

                                public void leaveAttribute(String ___uri, String ___local)
                                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                                {
                                    switch (state) {
                                        case  0 :
                                            revertToParentFromLeaveAttribute(___uri, ___local);
                                            return ;
                                    }
                                    super.leaveAttribute(___uri, ___local);
                                }

                                public void text(String value)
                                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                                {
                                    try {
                                        switch (state) {
                                            case  3 :
                                                _ToTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(value, context));
                                                state = 4;
                                                return ;
                                            case  0 :
                                                revertToParentFromText(value);
                                                return ;
                                            case  1 :
                                                _FromTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(value, context));
                                                state = 2;
                                                return ;
                                        }
                                    } catch (RuntimeException e) {
                                        handleUnexpectedTextException(value, e);
                                    }
                                }

                            }

                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "----");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                            _Calendar.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.CalendarTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Calendar".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Calendar".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Calendar".equals(___local)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

    }

    public static class ExtendedAttributesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.class;
        protected java.util.ArrayList _ExtendedAttribute = new java.util.ArrayList();
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000Ucom.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u0011ExtendedAttributet\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getExtendedAttribute() {
            return _ExtendedAttribute;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _ExtendedAttribute.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _ExtendedAttribute.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _ExtendedAttribute.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.class;
            protected boolean has_AppendNewValues;
            protected boolean _AppendNewValues;
            protected com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType _ValueList;
            protected String _FieldID;
            protected String _FieldName;
            protected java.math.BigInteger _ValuelistSortOrder;
            protected java.math.BigInteger _CalculationType;
            protected java.math.BigInteger _RollupType;
            protected String _Default;
            protected boolean has_RestrictValues;
            protected boolean _RestrictValues;
            protected String _Formula;
            protected String _PhoneticAlias;
            protected String _Alias;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\fq\u00cc\u0082ppsq\u0000~\u0000\u0000\u000b\u00cajGppsq\u0000~\u0000\u0000\n]u#ppsq\u0000~\u0000\u0000\t\u00abB\u00e8ppsq\u0000~\u0000\u0000\b\u00038Tppsq\u0000~\u0000\u0000\u0006[-\u00c0ppsq\u0000~\u0000\u0000\u0005\u00a8\u00fb\u0085ppsq\u0000~\u0000\u0000\u0003\u00d5f\u00afppsq\u0000~\u0000\u0000\u0003\u00b1\u008e\u0005ppsq\u0000~\u0000\u0000\u0003Bd\u0012ppsq\u0000~\u0000\u0000\u0001ddqppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00b226ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00b22+sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0007FieldIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0016\u0001psq\u0000~\u0000\u0010\u0000\u00b226ppsq\u0000~\u0000\u0012\u0000\u00b22+q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u001bsq\u0000~\u0000,t\u0000\tFieldNameq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00dd\u00ff\u009cppsq\u0000~\u0000\u0012\u0001\u00dd\u00ff\u0091q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0001\u00dd\u00ff\u0086ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000\u001ft\u0000\u0000pq\u0000~\u0000\'\u0000\u0000q\u0000~\u0000\"q\u0000~\u0000\"t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000estring-derivedq\u0000~\u0000Asq\u0000~\u0000,t\u0000\u0005Aliasq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000o)\u00eeppsq\u0000~\u0000\u0012\u0000o)\u00e3q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0000o)\u00d8ppsq\u0000~\u0000;q\u0000~\u0000Apq\u0000~\u0000\'\u0000\u0000q\u0000~\u0000\"q\u0000~\u0000\"q\u0000~\u0000B\u0000\u0000\u00002q\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000estring-derivedq\u0000~\u0000Asq\u0000~\u0000,t\u0000\rPhoneticAliasq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000#\u00d8\u00a5ppsq\u0000~\u0000\u0012\u0000#\u00d8\u009aq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0000#\u00d8\u008fppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000<q\u0000~\u0000Apsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000&\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007integerq\u0000~\u0000Vq\u0000~\u0000Yt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000 xpt\u0000\u00013sq\u0000~\u0000^t\u0000\u00015sq\u0000~\u0000^t\u0000\u00017sq\u0000~\u0000^t\u0000\u00012sq\u0000~\u0000^t\u0000\u00010sq\u0000~\u0000^t\u0000\u00014sq\u0000~\u0000^t\u0000\u00016sq\u0000~\u0000^t\u0000\u00011xq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000finteger-derivedq\u0000~\u0000Asq\u0000~\u0000,t\u0000\nRollupTypeq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00d3\u0094\u00d1ppsq\u0000~\u0000\u0012\u0001\u00d3\u0094\u00c6q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0001\u00d3\u0094\u00bbppsq\u0000~\u0000Rq\u0000~\u0000Apq\u0000~\u0000V\u0000\u0000q\u0000~\u0000Yq\u0000~\u0000Yq\u0000~\u0000[sq\u0000~\u0000\\w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000^t\u0000\u00012sq\u0000~\u0000^q\u0000~\u0000hsq\u0000~\u0000^t\u0000\u00011xq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000finteger-derivedq\u0000~\u0000Asq\u0000~\u0000,t\u0000\u000fCalculationTypeq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00b226ppsq\u0000~\u0000\u0012\u0000\u00b22+q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u001bsq\u0000~\u0000,t\u0000\u0007Formulaq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007booleanq\u0000~\u0000Vq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000\u008aq\u0000~\u0000#sq\u0000~\u0000,t\u0000\u000eRestrictValuesq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u0087sq\u0000~\u0000,t\u0000\u000fAppendNewValuesq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00b226ppsq\u0000~\u0000\u0012\u0000\u00b22+q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u001bsq\u0000~\u0000,t\u0000\u0007Defaultq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001l\u00f5\u001fppsq\u0000~\u0000\u0012\u0001l\u00f5\u0014q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0001l\u00f5\tppsq\u0000~\u0000Rq\u0000~\u0000Apq\u0000~\u0000V\u0000\u0000q\u0000~\u0000Yq\u0000~\u0000Yq\u0000~\u0000[sq\u0000~\u0000\\w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000^t\u0000\u00012sq\u0000~\u0000^q\u0000~\u0000hsq\u0000~\u0000^t\u0000\u00011xq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u000finteger-derivedq\u0000~\u0000Asq\u0000~\u0000,t\u0000\u0012ValuelistSortOrderq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00a7b6ppsq\u0000~\u0000\u0012\u0000\u00a7b+q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0012\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0010\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000\u0017psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u00003q\u0000~\u0000\u00aesr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000-q\u0000~\u00002sq\u0000~\u0000,t\u0000ccom.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000,t\u0000\tValueListq\u0000~\u00000q\u0000~\u00002sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00b7[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0019\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppq\u0000~\u00008ppppppppppppppppppppq\u0000~\u0000\rpppppppppppq\u0000~\u0000\u0085q\u0000~\u0000\u008eppppq\u0000~\u0000\nppppppppppppppppppppppppq\u0000~\u0000\u0096ppppppppppppppppppq\u0000~\u0000\u0007q\u0000~\u0000\tq\u0000~\u0000\u000bpq\u0000~\u0000\u000fpppq\u0000~\u0000\u00aapppppppq\u0000~\u0000\u000epq\u0000~\u0000Gq\u0000~\u0000\u00a7ppq\u0000~\u0000Opppppppppq\u0000~\u0000\u0005ppppppppppq\u0000~\u0000sppq\u0000~\u0000\bpppq\u0000~\u0000\u0011q\u0000~\u00004q\u0000~\u0000\u0081q\u0000~\u0000\u0092q\u0000~\u0000\u00a4q\u0000~\u0000\fppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppp");

            public boolean isAppendNewValues() {
                return _AppendNewValues;
            }

            public void setAppendNewValues(boolean value) {
                _AppendNewValues = value;
                has_AppendNewValues = true;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType getValueList() {
                return _ValueList;
            }

            public void setValueList(com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType value) {
                _ValueList = value;
            }

            public String getFieldID() {
                return _FieldID;
            }

            public void setFieldID(String value) {
                _FieldID = value;
            }

            public String getFieldName() {
                return _FieldName;
            }

            public void setFieldName(String value) {
                _FieldName = value;
            }

            public java.math.BigInteger getValuelistSortOrder() {
                return _ValuelistSortOrder;
            }

            public void setValuelistSortOrder(java.math.BigInteger value) {
                _ValuelistSortOrder = value;
            }

            public java.math.BigInteger getCalculationType() {
                return _CalculationType;
            }

            public void setCalculationType(java.math.BigInteger value) {
                _CalculationType = value;
            }

            public java.math.BigInteger getRollupType() {
                return _RollupType;
            }

            public void setRollupType(java.math.BigInteger value) {
                _RollupType = value;
            }

            public String getDefault() {
                return _Default;
            }

            public void setDefault(String value) {
                _Default = value;
            }

            public boolean isRestrictValues() {
                return _RestrictValues;
            }

            public void setRestrictValues(boolean value) {
                _RestrictValues = value;
                has_RestrictValues = true;
            }

            public String getFormula() {
                return _Formula;
            }

            public void setFormula(String value) {
                _Formula = value;
            }

            public String getPhoneticAlias() {
                return _PhoneticAlias;
            }

            public void setPhoneticAlias(String value) {
                _PhoneticAlias = value;
            }

            public String getAlias() {
                return _Alias;
            }

            public void setAlias(String value) {
                _Alias = value;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FieldID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldID");
                    context.endAttributes();
                    context.text(((String) _FieldID));
                    context.endElement();
                }
                if (_FieldName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldName");
                    context.endAttributes();
                    context.text(((String) _FieldName));
                    context.endElement();
                }
                if (_Alias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Alias");
                    context.endAttributes();
                    context.text(((String) _Alias));
                    context.endElement();
                }
                if (_PhoneticAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhoneticAlias");
                    context.endAttributes();
                    context.text(((String) _PhoneticAlias));
                    context.endElement();
                }
                if (_RollupType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RollupType");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _RollupType)));
                    context.endElement();
                }
                if (_CalculationType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalculationType");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CalculationType)));
                    context.endElement();
                }
                if (_Formula!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Formula");
                    context.endAttributes();
                    context.text(((String) _Formula));
                    context.endElement();
                }
                if (has_RestrictValues) {
                    context.startElement("http://schemas.microsoft.com/project", "RestrictValues");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_RestrictValues))));
                    context.endElement();
                }
                if (has_AppendNewValues) {
                    context.startElement("http://schemas.microsoft.com/project", "AppendNewValues");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_AppendNewValues))));
                    context.endElement();
                }
                if (_Default!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Default");
                    context.endAttributes();
                    context.text(((String) _Default));
                    context.endElement();
                }
                if (_ValuelistSortOrder!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ValuelistSortOrder");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValuelistSortOrder)));
                    context.endElement();
                }
                if (_ValueList!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ValueList");
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ValueList));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ValueList));
                    context.endElement();
                }
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "-------------------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  21 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                _ValueList = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.class), 22, ___uri, ___local, __atts));
                                return ;
                            }
                            break;
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Default".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 13;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalculationType".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 11;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AppendNewValues".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 5;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueList".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 21;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Formula".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 23;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhoneticAlias".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 7;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Alias".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RollupType".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 19;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 17;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldName".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 9;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RestrictValues".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 3;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValuelistSortOrder".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 15;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  14 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Default".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  24 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Formula".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  20 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RollupType".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  6 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AppendNewValues".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  18 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  12 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalculationType".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Alias".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  22 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueList".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  16 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValuelistSortOrder".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  8 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhoneticAlias".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  0 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                        case  10 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldName".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  4 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RestrictValues".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  0 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  0 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  7 :
                                _PhoneticAlias = value;
                                state = 8;
                                return ;
                            case  9 :
                                _FieldName = value;
                                state = 10;
                                return ;
                            case  13 :
                                _Default = value;
                                state = 14;
                                return ;
                            case  3 :
                                _RestrictValues = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_RestrictValues = true;
                                state = 4;
                                return ;
                            case  5 :
                                _AppendNewValues = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_AppendNewValues = true;
                                state = 6;
                                return ;
                            case  23 :
                                _Formula = value;
                                state = 24;
                                return ;
                            case  1 :
                                _Alias = value;
                                state = 2;
                                return ;
                            case  17 :
                                _FieldID = value;
                                state = 18;
                                return ;
                            case  0 :
                                revertToParentFromText(value);
                                return ;
                            case  19 :
                                _RollupType = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 20;
                                return ;
                            case  11 :
                                _CalculationType = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 12;
                                return ;
                            case  15 :
                                _ValuelistSortOrder = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 16;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

                public void leaveChild(int nextState)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (nextState) {
                        case  22 :
                            state = 22;
                            return ;
                    }
                    super.leaveChild(nextState);
                }

            }

            public static class ValueListTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.class;
                protected java.util.ArrayList _Value = new java.util.ArrayList();
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b.ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+pp\u0000sq\u0000~\u0000\u0006\u0000\u00a7b pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0000\u0000\u00a7b\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u0014sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0015psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001cxq\u0000~\u0000\u0017t\u0000mcom.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001bt\u0000\u0005Valuet\u0000$http://schemas.microsoft.com/projectsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000$[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u000eppppppppppq\u0000~\u0000\rppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppp");

                public java.util.List getValue() {
                    return _Value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        int idx_0 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx1 ++)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "----");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Description".equals(___local)) {
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                            case  3 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  2 :
                                state = 2;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

                public static class ValueTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType.class;
                    protected String _Value;
                    protected String _Description;
                    protected java.math.BigInteger _ID;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000!com.sun.msv.grammar.InterleaveExp\u009c0\u0094\u00ed\u001b\u009b\u001a\u008c\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002b\u00e8\u0096ppsq\u0000~\u0000\u0000\u0001\u00b0\u00b6Kppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0014L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xpq\u0000~\u0000\u0018q\u0000~\u0000\u0017sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0014L\u0000\fnamespaceURIq\u0000~\u0000\u0014xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0002IDt\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00b226ppsq\u0000~\u0000\u0007\u0000\u00b22+q\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u000b\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0011q\u0000~\u0000\u0017t\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000\u001dsq\u0000~\u0000 q\u0000~\u0000-q\u0000~\u0000\u0017sq\u0000~\u0000\"t\u0000\u0005Valueq\u0000~\u0000&sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u001e\u0001psq\u0000~\u0000\'\u0000\u00b226ppsq\u0000~\u0000\u0007\u0000\u00b22+q\u0000~\u0000\u001fp\u0000q\u0000~\u0000*sq\u0000~\u0000\"t\u0000\u000bDescriptionq\u0000~\u0000&q\u0000~\u00004sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000;[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000(q\u0000~\u00006ppppppppppppppppppppppppppppppppppppppppppppppppp");

                    public String getValue() {
                        return _Value;
                    }

                    public void setValue(String value) {
                        _Value = value;
                    }

                    public String getDescription() {
                        return _Description;
                    }

                    public void setDescription(String value) {
                        _Description = value;
                    }

                    public java.math.BigInteger getID() {
                        return _ID;
                    }

                    public void setID(java.math.BigInteger value) {
                        _ID = value;
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "ID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ID)));
                        context.endElement();
                        if (_Value!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Value");
                            context.endAttributes();
                            context.text(((String) _Value));
                            context.endElement();
                        }
                        if (_Description!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Description");
                            context.endAttributes();
                            context.text(((String) _Description));
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ExtendedAttributesType.ExtendedAttributeType.ValueListType.ValueType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "-------");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.ValueListTypeImpl.ValueTypeImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Description".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 5;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 3;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  4 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Description".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  5 :
                                        _Description = value;
                                        state = 6;
                                        return ;
                                    case  1 :
                                        _ID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 2;
                                        return ;
                                    case  3 :
                                        _Value = value;
                                        state = 4;
                                        return ;
                                    case  0 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "---");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Default".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"AppendNewValues".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalculationType".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueList".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhoneticAlias".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Formula".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Alias".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"RollupType".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldName".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"RestrictValues".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValuelistSortOrder".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                            _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.ExtendedAttributeTypeImpl.class), 2, ___uri, ___local)));
                            return ;
                        }
                        break;
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

    }

    public static class OutlineCodesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.class;
        protected java.util.ArrayList _OutlineCode = new java.util.ArrayList();
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000Icom.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u000bOutlineCodet\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getOutlineCode() {
            return _OutlineCode;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _OutlineCode.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCode.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCode.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _OutlineCode.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _OutlineCode.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.class;
            protected boolean has_Enterprise;
            protected boolean _Enterprise;
            protected String _FieldID;
            protected java.math.BigInteger _EnterpriseOutlineCodeAlias;
            protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType _Values;
            protected String _FieldName;
            protected boolean has_OnlyTableValuesAllowed;
            protected boolean _OnlyTableValuesAllowed;
            protected boolean has_LeafOnly;
            protected boolean _LeafOnly;
            protected boolean has_ResourceSubstitutionEnabled;
            protected boolean _ResourceSubstitutionEnabled;
            protected boolean has_AllLevelsRequired;
            protected boolean _AllLevelsRequired;
            protected String _PhoneticAlias;
            protected String _Alias;
            protected com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType _Masks;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\r^FQppsq\u0000~\u0000\u0000\f\u00b6\u00e4\u0016ppsq\u0000~\u0000\u0000\u000b\u000e\u00d9\u0082ppsq\u0000~\u0000\u0000\tf\u00ce\u00eeppsq\u0000~\u0000\u0000\u0007\u00be\u00c4Zppsq\u0000~\u0000\u0000\u0006\u0016\u00b9\u00c6ppsq\u0000~\u0000\u0000\u0005\u00185\u00b6ppsq\u0000~\u0000\u0000\u0003p+\"ppsq\u0000~\u0000\u0000\u0002\u00c8\u00c8\u00e7ppsq\u0000~\u0000\u0000\u0002\u0016\u0096\u00acppsq\u0000~\u0000\u0000\u0001ddqppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00b226ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00b22+sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0007FieldIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0016\u0001psq\u0000~\u0000\u0010\u0000\u00b226ppsq\u0000~\u0000\u0012\u0000\u00b22+q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u001bsq\u0000~\u0000,t\u0000\tFieldNameq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00b226ppsq\u0000~\u0000\u0012\u0000\u00b22+q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u001bsq\u0000~\u0000,t\u0000\u0005Aliasq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00b226ppsq\u0000~\u0000\u0012\u0000\u00b22+q\u0000~\u0000\u0017p\u0000q\u0000~\u0000\u001bsq\u0000~\u0000,t\u0000\rPhoneticAliasq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00a7b6ppsq\u0000~\u0000\u0012\u0000\u00a7b+q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0012\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0010\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000\u0017psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u00003q\u0000~\u0000Jsr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000-q\u0000~\u00002sq\u0000~\u0000,t\u0000Tcom.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000,t\u0000\u0006Valuesq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007booleansr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Wq\u0000~\u0000#sq\u0000~\u0000,t\u0000\nEnterpriseq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u0012\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0018\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007integerq\u0000~\u0000Yq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000cq\u0000~\u0000#sq\u0000~\u0000,t\u0000\u001aEnterpriseOutlineCodeAliasq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000q\u0000~\u0000Tsq\u0000~\u0000,t\u0000\u001bResourceSubstitutionEnabledq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000q\u0000~\u0000Tsq\u0000~\u0000,t\u0000\bLeafOnlyq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000q\u0000~\u0000Tsq\u0000~\u0000,t\u0000\u0011AllLevelsRequiredq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0012\u0001\u00a8\n\u0084q\u0000~\u0000\u0017p\u0000q\u0000~\u0000Tsq\u0000~\u0000,t\u0000\u0016OnlyTableValuesAllowedq\u0000~\u00000q\u0000~\u00002sq\u0000~\u0000\u0010\u0000\u00a7b6ppsq\u0000~\u0000\u0012\u0000\u00a7b+q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0012\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0010\u0000\u00a7b\u0015ppsq\u0000~\u0000D\u0000\u00a7b\nq\u0000~\u0000\u0017psq\u0000~\u0000G\u0000\u00a7b\u0007q\u0000~\u0000\u0017pq\u0000~\u0000Jq\u0000~\u0000Lq\u0000~\u00002sq\u0000~\u0000,t\u0000Scom.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksTypeq\u0000~\u0000Osq\u0000~\u0000,t\u0000\u0005Masksq\u0000~\u00000q\u0000~\u00002sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0082[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u001b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppq\u0000~\u0000\rq\u0000~\u0000\u000bpppppppppppq\u0000~\u0000\bppppppppppppppppppppppppq\u0000~\u0000Rq\u0000~\u0000gq\u0000~\u0000kq\u0000~\u0000oq\u0000~\u0000spppq\u0000~\u0000\u000epppppppppppq\u0000~\u0000\u0007q\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppq\u0000~\u0000\u000fpppq\u0000~\u0000Fq\u0000~\u0000{pppppq\u0000~\u0000\u0006ppq\u0000~\u0000]q\u0000~\u0000Cq\u0000~\u0000zpppppq\u0000~\u0000\npppppppppppppppppppppppq\u0000~\u0000\u0011q\u0000~\u00004q\u0000~\u00008q\u0000~\u0000<q\u0000~\u0000@q\u0000~\u0000wpppq\u0000~\u0000\fpppppppppppq\u0000~\u0000\tppppppppppppppppppppppppppppp");

            public boolean isEnterprise() {
                return _Enterprise;
            }

            public void setEnterprise(boolean value) {
                _Enterprise = value;
                has_Enterprise = true;
            }

            public String getFieldID() {
                return _FieldID;
            }

            public void setFieldID(String value) {
                _FieldID = value;
            }

            public java.math.BigInteger getEnterpriseOutlineCodeAlias() {
                return _EnterpriseOutlineCodeAlias;
            }

            public void setEnterpriseOutlineCodeAlias(java.math.BigInteger value) {
                _EnterpriseOutlineCodeAlias = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType getValues() {
                return _Values;
            }

            public void setValues(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType value) {
                _Values = value;
            }

            public String getFieldName() {
                return _FieldName;
            }

            public void setFieldName(String value) {
                _FieldName = value;
            }

            public boolean isOnlyTableValuesAllowed() {
                return _OnlyTableValuesAllowed;
            }

            public void setOnlyTableValuesAllowed(boolean value) {
                _OnlyTableValuesAllowed = value;
                has_OnlyTableValuesAllowed = true;
            }

            public boolean isLeafOnly() {
                return _LeafOnly;
            }

            public void setLeafOnly(boolean value) {
                _LeafOnly = value;
                has_LeafOnly = true;
            }

            public boolean isResourceSubstitutionEnabled() {
                return _ResourceSubstitutionEnabled;
            }

            public void setResourceSubstitutionEnabled(boolean value) {
                _ResourceSubstitutionEnabled = value;
                has_ResourceSubstitutionEnabled = true;
            }

            public boolean isAllLevelsRequired() {
                return _AllLevelsRequired;
            }

            public void setAllLevelsRequired(boolean value) {
                _AllLevelsRequired = value;
                has_AllLevelsRequired = true;
            }

            public String getPhoneticAlias() {
                return _PhoneticAlias;
            }

            public void setPhoneticAlias(String value) {
                _PhoneticAlias = value;
            }

            public String getAlias() {
                return _Alias;
            }

            public void setAlias(String value) {
                _Alias = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType getMasks() {
                return _Masks;
            }

            public void setMasks(com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType value) {
                _Masks = value;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (_FieldID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldID");
                    context.endAttributes();
                    context.text(((String) _FieldID));
                    context.endElement();
                }
                if (_FieldName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FieldName");
                    context.endAttributes();
                    context.text(((String) _FieldName));
                    context.endElement();
                }
                if (_Alias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Alias");
                    context.endAttributes();
                    context.text(((String) _Alias));
                    context.endElement();
                }
                if (_PhoneticAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhoneticAlias");
                    context.endAttributes();
                    context.text(((String) _PhoneticAlias));
                    context.endElement();
                }
                if (_Values!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Values");
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Values));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Values));
                    context.endElement();
                }
                if (has_Enterprise) {
                    context.startElement("http://schemas.microsoft.com/project", "Enterprise");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Enterprise))));
                    context.endElement();
                }
                if (_EnterpriseOutlineCodeAlias!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EnterpriseOutlineCodeAlias");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _EnterpriseOutlineCodeAlias)));
                    context.endElement();
                }
                if (has_ResourceSubstitutionEnabled) {
                    context.startElement("http://schemas.microsoft.com/project", "ResourceSubstitutionEnabled");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_ResourceSubstitutionEnabled))));
                    context.endElement();
                }
                if (has_LeafOnly) {
                    context.startElement("http://schemas.microsoft.com/project", "LeafOnly");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_LeafOnly))));
                    context.endElement();
                }
                if (has_AllLevelsRequired) {
                    context.startElement("http://schemas.microsoft.com/project", "AllLevelsRequired");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_AllLevelsRequired))));
                    context.endElement();
                }
                if (has_OnlyTableValuesAllowed) {
                    context.startElement("http://schemas.microsoft.com/project", "OnlyTableValuesAllowed");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_OnlyTableValuesAllowed))));
                    context.endElement();
                }
                if (_Masks!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Masks");
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Masks));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Masks));
                    context.endElement();
                }
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class MasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.class;
                protected java.util.ArrayList _Mask = new java.util.ArrayList();
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000\\com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u0004Maskt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

                public java.util.List getMask() {
                    return _Mask;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Mask.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Mask");
                        int idx_0 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Mask.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Mask.get(idx1 ++)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Mask.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Mask.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class MaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType.class;
                    protected String _Separator;
                    protected java.math.BigInteger _Type;
                    protected java.math.BigInteger _Length;
                    protected java.math.BigInteger _Level;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0003j\u00bf\u00dcppsq\u0000~\u0000\u0000\u0002\u00b8\u008d\u00a1ppsq\u0000~\u0000\u0000\u0001\u00ba\t\u0091ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0005Levelt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~\u0000\b\u0000\u00bb\u0085\u0081ppsq\u0000~\u0000\n\u0000\u00bb\u0085vq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0000\u00bb\u0085kppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0019xq\u0000~\u0000\u0018t\u0000\u0000pq\u0000~\u0000 \u0000\u0000q\u0000~\u0000\u001bq\u0000~\u0000\u001bt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0019xpt\u0000\u00013sq\u0000~\u0000;t\u0000\u00012sq\u0000~\u0000;t\u0000\u00010sq\u0000~\u0000;t\u0000\u00011xq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000finteger-derivedq\u0000~\u00007sq\u0000~\u0000%t\u0000\u0004Typeq\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000\b\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\n\u0000\u00fe\u0084\u0000q\u0000~\u0000\u000fp\u0000q\u0000~\u0000\u0013sq\u0000~\u0000%t\u0000\u0006Lengthq\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000\b\u0000\u00b226ppsq\u0000~\u0000\n\u0000\u00b22+q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000Qq\u0000~\u0000\u001csq\u0000~\u0000%t\u0000\tSeparatorq\u0000~\u0000)q\u0000~\u0000+sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000X[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppq\u0000~\u0000\u0007ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppq\u0000~\u0000-ppppppppppppppppppppq\u0000~\u0000\tq\u0000~\u0000Hppppppppppppq\u0000~\u0000\u0006pppppppppppppppppq\u0000~\u0000Lpppppppppppppppppppppppppppppppppppppppppppppppppp");

                    public String getSeparator() {
                        return _Separator;
                    }

                    public void setSeparator(String value) {
                        _Separator = value;
                    }

                    public java.math.BigInteger getType() {
                        return _Type;
                    }

                    public void setType(java.math.BigInteger value) {
                        _Type = value;
                    }

                    public java.math.BigInteger getLength() {
                        return _Length;
                    }

                    public void setLength(java.math.BigInteger value) {
                        _Length = value;
                    }

                    public java.math.BigInteger getLevel() {
                        return _Level;
                    }

                    public void setLevel(java.math.BigInteger value) {
                        _Level = value;
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_Level!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Level");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Level)));
                            context.endElement();
                        }
                        if (_Type!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Type");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Type)));
                            context.endElement();
                        }
                        if (_Length!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Length");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Length)));
                            context.endElement();
                        }
                        if (_Separator!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Separator");
                            context.endAttributes();
                            context.text(((String) _Separator));
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.MasksType.MaskType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "---------");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Level".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 3;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Separator".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 7;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Length".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 5;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                                case  8 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Separator".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Length".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  4 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Level".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  7 :
                                        _Separator = value;
                                        state = 8;
                                        return ;
                                    case  0 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _Type = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 2;
                                        return ;
                                    case  5 :
                                        _Length = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 6;
                                        return ;
                                    case  3 :
                                        _Level = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 4;
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "---");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Level".equals(___local)) {
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Separator".equals(___local)) {
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Length".equals(___local)) {
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Mask".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Mask".equals(___local)) {
                                    _Mask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.MaskTypeImpl.class), 2, ___uri, ___local)));
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Mask".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  2 :
                                state = 2;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "-------------------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 6, ___uri, ___local, __atts));
                                return ;
                            }
                            break;
                        case  23 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Mask".equals(___local)) {
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 24, ___uri, ___local, __atts));
                                return ;
                            }
                            break;
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LeafOnly".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 21;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhoneticAlias".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 13;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EnterpriseOutlineCodeAlias".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 9;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Masks".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 23;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 19;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResourceSubstitutionEnabled".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 7;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldName".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 11;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Values".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 5;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Enterprise".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 15;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Alias".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 3;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AllLevelsRequired".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OnlyTableValuesAllowed".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 17;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Values".equals(___local)) {
                                _Values = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.class), 6, ___uri, ___local));
                                return ;
                            }
                            break;
                        case  14 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhoneticAlias".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  20 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AllLevelsRequired".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  8 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResourceSubstitutionEnabled".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  10 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EnterpriseOutlineCodeAlias".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  6 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Values".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  23 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Masks".equals(___local)) {
                                _Masks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.MasksTypeImpl.class), 24, ___uri, ___local));
                                return ;
                            }
                            break;
                        case  24 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Masks".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  0 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                        case  4 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Alias".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  22 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LeafOnly".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  12 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldName".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  16 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Enterprise".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                        case  18 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OnlyTableValuesAllowed".equals(___local)) {
                                context.popAttributes();
                                state = 0;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  0 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  0 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  7 :
                                _ResourceSubstitutionEnabled = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_ResourceSubstitutionEnabled = true;
                                state = 8;
                                return ;
                            case  13 :
                                _PhoneticAlias = value;
                                state = 14;
                                return ;
                            case  15 :
                                _Enterprise = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Enterprise = true;
                                state = 16;
                                return ;
                            case  17 :
                                _OnlyTableValuesAllowed = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_OnlyTableValuesAllowed = true;
                                state = 18;
                                return ;
                            case  11 :
                                _FieldName = value;
                                state = 12;
                                return ;
                            case  19 :
                                _FieldID = value;
                                state = 20;
                                return ;
                            case  3 :
                                _Alias = value;
                                state = 4;
                                return ;
                            case  9 :
                                _EnterpriseOutlineCodeAlias = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 10;
                                return ;
                            case  1 :
                                _AllLevelsRequired = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_AllLevelsRequired = true;
                                state = 2;
                                return ;
                            case  0 :
                                revertToParentFromText(value);
                                return ;
                            case  21 :
                                _LeafOnly = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_LeafOnly = true;
                                state = 22;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

                public void leaveChild(int nextState)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (nextState) {
                        case  24 :
                            state = 24;
                            return ;
                        case  6 :
                            state = 6;
                            return ;
                    }
                    super.leaveChild(nextState);
                }

            }

            public static class ValuesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.class;
                protected java.util.ArrayList _Value = new java.util.ArrayList();
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b.ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b#sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b q\u0000~\u0000\np\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0014sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0015psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001cxq\u0000~\u0000\u0017t\u0000Zcom.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Valuet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementsq\u0000~\u0000\u001asr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000![\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0010ppppppppppq\u0000~\u0000\u000fpppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppp");

                public java.util.List getValue() {
                    return _Value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx1 ++)));
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx1 ++)));
                    }
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Value.size();
                    while (idx1 != len1) {
                        context.childAsAttributeBodies(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx1 ++)));
                    }
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    _Value.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.class), 0, ___uri, ___local, __atts)));
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  0 :
                                state = 0;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

                public static class ValueImpl
                    extends com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl
                    implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value, com.sun.xml.bind.RIElement, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value.class;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0003al\u00ccpp\u0000sr\u0000!com.sun.msv.grammar.InterleaveExp\u009c0\u0094\u00ed\u001b\u009b\u001a\u008c\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0003al\u00c1ppsq\u0000~\u0000\u0007\u0002\u00af:vppsq\u0000~\u0000\u0007\u0001\u00fd\b+ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\b\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u0000\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0007ValueIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u0000\f\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u0000\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0010p\u0000q\u0000~\u0000\u0014sq\u0000~\u0000&t\u0000\rParentValueIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\f\u0000\u00b226ppsq\u0000~\u0000\u0000\u0000\u00b22+q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u00007q\u0000~\u0000\u001dsq\u0000~\u0000&t\u0000\u0005Valueq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\f\u0000\u00b226ppsq\u0000~\u0000\u0000\u0000\u00b22+q\u0000~\u0000\u0010p\u0000q\u0000~\u00004sq\u0000~\u0000&t\u0000\u000bDescriptionq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000&t\u0000\u0005Valueq\u0000~\u0000*sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000D[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppq\u0000~\u0000\npppppppppppppppppppppppppppppq\u0000~\u0000\u000bpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\rq\u0000~\u0000.ppppppppppppppppppppppppppppppq\u0000~\u00002q\u0000~\u0000=pppppppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppp");

                    public String ____jaxb_ri____getNamespaceURI() {
                        return "http://schemas.microsoft.com/project";
                    }

                    public String ____jaxb_ri____getLocalName() {
                        return "Value";
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        super.serializeAttributes(context);
                        context.endAttributes();
                        super.serializeElements(context);
                        context.endElement();
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.Value.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "----");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  1 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                        spawnSuperClassFromEnterElement((new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context)), 2, ___uri, ___local, __atts);
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ParentValueID".equals(___local)) {
                                        spawnSuperClassFromEnterElement((new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context)), 2, ___uri, ___local, __atts);
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Description".equals(___local)) {
                                        spawnSuperClassFromEnterElement((new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context)), 2, ___uri, ___local, __atts);
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        spawnSuperClassFromEnterElement((new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context)), 2, ___uri, ___local, __atts);
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  1 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        spawnSuperClassFromLeaveElement((new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context)), 2, ___uri, ___local);
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  3 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  3 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  3 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                        public void leaveChild(int nextState)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (nextState) {
                                case  2 :
                                    state = 2;
                                    return ;
                            }
                            super.leaveChild(nextState);
                        }

                    }

                }

                public static class ValueTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType.class;
                    protected String _Value;
                    protected String _Description;
                    protected java.math.BigInteger _ValueID;
                    protected java.math.BigInteger _ParentValueID;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000!com.sun.msv.grammar.InterleaveExp\u009c0\u0094\u00ed\u001b\u009b\u001a\u008c\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0003al\u00c1ppsq\u0000~\u0000\u0000\u0002\u00af:vppsq\u0000~\u0000\u0000\u0001\u00fd\b+ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0007ValueIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~\u0000\b\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\n\u0000\u00fe\u0084\u0000q\u0000~\u0000\u000fp\u0000q\u0000~\u0000\u0013sq\u0000~\u0000%t\u0000\rParentValueIDq\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000\b\u0000\u00b226ppsq\u0000~\u0000\n\u0000\u00b22+q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u00006q\u0000~\u0000\u001csq\u0000~\u0000%t\u0000\u0005Valueq\u0000~\u0000)q\u0000~\u0000+sq\u0000~\u0000\b\u0000\u00b226ppsq\u0000~\u0000\n\u0000\u00b22+q\u0000~\u0000\u000fp\u0000q\u0000~\u00003sq\u0000~\u0000%t\u0000\u000bDescriptionq\u0000~\u0000)q\u0000~\u0000+sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000A[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppq\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\tq\u0000~\u0000-ppppppppppppppppppppppppppppppq\u0000~\u00001q\u0000~\u0000<pppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppp");

                    public String getValue() {
                        return _Value;
                    }

                    public void setValue(String value) {
                        _Value = value;
                    }

                    public String getDescription() {
                        return _Description;
                    }

                    public void setDescription(String value) {
                        _Description = value;
                    }

                    public java.math.BigInteger getValueID() {
                        return _ValueID;
                    }

                    public void setValueID(java.math.BigInteger value) {
                        _ValueID = value;
                    }

                    public java.math.BigInteger getParentValueID() {
                        return _ParentValueID;
                    }

                    public void setParentValueID(java.math.BigInteger value) {
                        _ParentValueID = value;
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_ValueID!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "ValueID");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValueID)));
                            context.endElement();
                        }
                        if (_ParentValueID!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "ParentValueID");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ParentValueID)));
                            context.endElement();
                        }
                        if (_Value!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Value");
                            context.endAttributes();
                            context.text(((String) _Value));
                            context.endElement();
                        }
                        if (_Description!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "Description");
                            context.endAttributes();
                            context.text(((String) _Description));
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.OutlineCodesType.OutlineCodeType.ValuesType.ValueType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "---------");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.ValuesTypeImpl.ValueTypeImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 7;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ParentValueID".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 5;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Description".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 3;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ParentValueID".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                                case  8 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  4 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Description".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  3 :
                                        _Description = value;
                                        state = 4;
                                        return ;
                                    case  7 :
                                        _ValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 8;
                                        return ;
                                    case  0 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  1 :
                                        _ParentValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 2;
                                        return ;
                                    case  5 :
                                        _Value = value;
                                        state = 6;
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                    }

                }

            }

        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "---");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"LeafOnly".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhoneticAlias".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"EnterpriseOutlineCodeAlias".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResourceSubstitutionEnabled".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Masks".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldName".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Values".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Alias".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Enterprise".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"AllLevelsRequired".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"OnlyTableValuesAllowed".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                            _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.OutlineCodeTypeImpl.class), 2, ___uri, ___local)));
                            return ;
                        }
                        break;
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

    }

    public static class ResourcesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.class;
        protected java.util.ArrayList _Resource = new java.util.ArrayList();
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000Ccom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\bResourcet\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getResource() {
            return _Resource;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Resource.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Resource");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Resource.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Resource.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Resource.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Resource.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class ResourceTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.class;
            protected String _EmailAddress;
            protected java.math.BigInteger _StandardRateFormat;
            protected String _Phonetics;
            protected String _NTAccount;
            protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType _AvailabilityPeriods;
            protected String _Group;
            protected String _Work;
            protected java.util.Calendar _AvailableFrom;
            protected java.math.BigInteger _CalendarUID;
            protected java.math.BigInteger _WorkGroup;
            protected String _HyperlinkSubAddress;
            protected String _RemainingOvertimeWork;
            protected String _RemainingWork;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected String _HyperlinkAddress;
            protected boolean has_MaxUnits;
            protected float _MaxUnits;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected java.math.BigDecimal _ActualCost;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected boolean has_IsInactive;
            protected boolean _IsInactive;
            protected com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType _Rates;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _RemainingCost;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected String _ActualOvertimeWork;
            protected boolean has_IsGeneric;
            protected boolean _IsGeneric;
            protected java.util.ArrayList _Baseline = new java.util.ArrayList();
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected java.math.BigInteger _ID;
            protected String _Hyperlink;
            protected boolean has_CanLevel;
            protected boolean _CanLevel;
            protected java.math.BigInteger _Type;
            protected boolean has_IsNull;
            protected boolean _IsNull;
            protected java.util.ArrayList _TimephasedData = new java.util.ArrayList();
            protected boolean has_CostVariance;
            protected float _CostVariance;
            protected boolean has_PeakUnits;
            protected float _PeakUnits;
            protected java.math.BigDecimal _CostPerUse;
            protected java.util.ArrayList _ExtendedAttribute = new java.util.ArrayList();
            protected java.math.BigInteger _AccrueAt;
            protected java.math.BigInteger _OvertimeRateFormat;
            protected String _Code;
            protected String _RegularWork;
            protected String _Name;
            protected String _OvertimeWork;
            protected String _Initials;
            protected java.math.BigDecimal _StandardRate;
            protected boolean has_SV;
            protected float _SV;
            protected String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.ArrayList _OutlineCode = new java.util.ArrayList();
            protected String _ActualWork;
            protected java.math.BigInteger _UID;
            protected boolean has_OverAllocated;
            protected boolean _OverAllocated;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected String _MaterialLabel;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.util.Calendar _AvailableTo;
            protected java.math.BigDecimal _OvertimeRate;
            protected boolean has_CV;
            protected float _CV;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp*\u00ec.fppsq\u0000~\u0000\u0000*D\u00cc(ppsq\u0000~\u0000\u0000)\u009di\u00edppsq\u0000~\u0000\u0000(\u00f6\u0007\u00b2ppsq\u0000~\u0000\u0000(N\u00a5tppsq\u0000~\u0000\u0000\'\u00a7C6ppsq\u0000~\u0000\u0000&\u00ff\u00e0\u00f8ppsq\u0000~\u0000\u0000%W\u00d6dppsq\u0000~\u0000\u0000#\u00af\u00cb\u00d0ppsq\u0000~\u0000\u0000#\u0095\u000e\u00c8ppsq\u0000~\u0000\u0000#zQ\u00c0ppsq\u0000~\u0000\u0000\"\u00c8\u001f\u0085ppsq\u0000~\u0000\u0000!\u00c9\u009buppsq\u0000~\u0000\u0000!\u00ae\u00demppsq\u0000~\u0000\u0000!\u0094!eppsq\u0000~\u0000\u0000!yd]ppsq\u0000~\u0000\u0000!^\u00a7Uppsq\u0000~\u0000\u0000!C\u00eaMppsq\u0000~\u0000\u0000!+B\u0084ppsq\u0000~\u0000\u0000!\u0012\u009a\u00bbppsq\u0000~\u0000\u0000 \u00f9\u00f2\u00f2ppsq\u0000~\u0000\u0000 \u00e1K)ppsq\u0000~\u0000\u0000 \u00c8\u00a3`ppsq\u0000~\u0000\u0000 \u00af\u00fb\u0097ppsq\u0000~\u0000\u0000\u001fE.\u0089ppsq\u0000~\u0000\u0000\u001f,\u0086\u00c0ppsq\u0000~\u0000\u0000\u001f\u0013\u00de\u00f7ppsq\u0000~\u0000\u0000\u001d\u00bc\\\u00bcppsq\u0000~\u0000\u0000\u001d\u00a3\u00b4\u00f3ppsq\u0000~\u0000\u0000\u001c\u00a50\u00e3ppsq\u0000~\u0000\u0000\u001b\u00b0\u00daEppsq\u0000~\u0000\u0000\u001a\u00bc\u0083\u00a7ppsq\u0000~\u0000\u0000\u0019\u00c8-\tppsq\u0000~\u0000\u0000\u0018\u00d3\u00d6kppsq\u0000~\u0000\u0000\u0017\u00df\u007f\u00cdppsq\u0000~\u0000\u0000\u0016\u00eb)/ppsq\u0000~\u0000\u0000\u0015\u00f6\u00d2\u0091ppsq\u0000~\u0000\u0000\u0015\u0003\u00db\u0005ppsq\u0000~\u0000\u0000\u0013[\u00d0qppsq\u0000~\u0000\u0000\u0012\u00ca\u00d4\u00e7ppsq\u0000~\u0000\u0000\u00129\u00d9]ppsq\u0000~\u0000\u0000\u0011\u00a8\u00dd\u00d3ppsq\u0000~\u0000\u0000\u0011\u0017\u00e2Ippsq\u0000~\u0000\u0000\u000fo\u00d7\u00b5ppsq\u0000~\u0000\u0000\u000fU\u001a\u00adppsq\u0000~\u0000\u0000\u000f:]\u00a5ppsq\u0000~\u0000\u0000\u000e\u009d\u000f\u00f6ppsq\u0000~\u0000\u0000\u000e\u0015e\u00b5ppsq\u0000~\u0000\u0000\r\u0007\u00a8\u00fdppsq\u0000~\u0000\u0000\f\u0013\u00e9\u00f9ppsq\u0000~\u0000\u0000\u000b\u0091\u00f5}ppsq\u0000~\u0000\u0000\t\u00fa\u00be ppsq\u0000~\u0000\u0000\b\u00d645ppsq\u0000~\u0000\u0000\u0006\u00df\u0084\bppsq\u0000~\u0000\u0000\u0005r\u008f^ppsq\u0000~\u0000\u0000\u0004\u00f2\u00d6\u00bbppsq\u0000~\u0000\u0000\u0004\u00e5,\u00e2ppsq\u0000~\u0000\u0000\u0003=\"Nppsq\u0000~\u0000\u0000\u0002\"D3ppsq\u0000~\u0000\u0000\u0001\u00fd\b\u0010ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000NL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000NL\u0000\fnamespaceURIq\u0000~\u0000Nxpq\u0000~\u0000Rq\u0000~\u0000Qsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000NL\u0000\fnamespaceURIq\u0000~\u0000Nxr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsq\u0000~\u0000A\u0000\u00fe\u0084\u0000q\u0000~\u0000Yp\u0000q\u0000~\u0000Hsq\u0000~\u0000\\t\u0000\u0002IDq\u0000~\u0000`sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000X\u0001psq\u0000~\u0000a\u0000%<\u001eppsq\u0000~\u0000A\u0000%<\u0013q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000%<\bppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000Nxq\u0000~\u0000Mt\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000T\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000Qt\u0000\u0006stringq\u0000~\u0000tq\u0000~\u0000vt\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0004Nameq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u001a\u00de\u0016ppsq\u0000~\u0000A\u0001\u001a\u00de\u000bq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001\u001a\u00de\u0000ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000mq\u0000~\u0000rpq\u0000~\u0000U\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000Nxpt\u0000\u00010sq\u0000~\u0000\u0086t\u0000\u00011xq\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000finteger-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0004Typeq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00a8\n\u008fppsq\u0000~\u0000A\u0001\u00a8\n\u0084q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000Qt\u0000\u0007booleanq\u0000~\u0000Uq\u0000~\u0000Wsq\u0000~\u0000Zq\u0000~\u0000\u0094q\u0000~\u0000Qsq\u0000~\u0000\\t\u0000\u0006IsNullq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\r\u00a9\u00d4ppsq\u0000~\u0000A\u0000\r\u00a9\u00c9q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\r\u00a9\u00beppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\bInitialsq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u007f\u00b8\u009eppsq\u0000~\u0000A\u0000\u007f\u00b8\u0093q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u007f\u00b8\u0088ppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\tPhoneticsq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001l\u00f4\u00a5ppsq\u0000~\u0000A\u0001l\u00f4\u009aq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001l\u00f4\u008fppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\tNTAccountq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00f6\u00b0(ppsq\u0000~\u0000A\u0001\u00f6\u00b0\u001dq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001\u00f6\u00b0\u0012ppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\rMaterialLabelq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001$\u0089\u00e6ppsq\u0000~\u0000A\u0001$\u0089\u00dbq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001$\u0089\u00d0ppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0004Codeq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00977Xppsq\u0000~\u0000A\u0001\u00977Mq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001\u00977Bppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0005Groupq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0081\u00f4wppsq\u0000~\u0000A\u0000\u0081\u00f4lq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u0081\u00f4appsq\u0000~\u0000\u0080q\u0000~\u0000rpq\u0000~\u0000U\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pq\u0000~\u0000\u0083sq\u0000~\u0000\u0084w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sq\u0000~\u0000\u0086t\u0000\u00013sq\u0000~\u0000\u0086t\u0000\u00012sq\u0000~\u0000\u0086q\u0000~\u0000\u0088sq\u0000~\u0000\u0086t\u0000\u00011xq\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000finteger-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\tWorkGroupq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f3\u00be\u00ffppsq\u0000~\u0000A\u0000\u00f3\u00be\u00f4q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u00f3\u00be\u00e9ppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\fEmailAddressq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\r\u00bc\u00b3ppsq\u0000~\u0000A\u0001\r\u00bc\u00a8q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001\r\u00bc\u009dppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\tHyperlinkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0087\u00aa<ppsq\u0000~\u0000A\u0000\u0087\u00aa1q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u0087\u00aa&ppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0010HyperlinkAddressq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u009dM\u00aappsq\u0000~\u0000A\u0000\u009dM\u009fq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u009dM\u0094ppsq\u0000~\u0000lq\u0000~\u0000rpq\u0000~\u0000t\u0000\u0000q\u0000~\u0000vq\u0000~\u0000vq\u0000~\u0000x\u0000\u0000\u0002\u0000q\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000estring-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0013HyperlinkSubAddressq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000Qt\u0000\u0005floatq\u0000~\u0000Uq\u0000~\u0000Wsq\u0000~\u0000Zq\u0000~\u0000\u00feq\u0000~\u0000Qsq\u0000~\u0000\\t\u0000\bMaxUnitsq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\tPeakUnitsq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00a8\n\u008fppsq\u0000~\u0000A\u0001\u00a8\n\u0084q\u0000~\u0000Yp\u0000q\u0000~\u0000\u0091sq\u0000~\u0000\\t\u0000\rOverAllocatedq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000A\u0000\u0090\u00fbzq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000Qt\u0000\bdateTimeq\u0000~\u0000Uq\u0000~\u0000Wsq\u0000~\u0000Zq\u0000~\u0001\u0010q\u0000~\u0000Qsq\u0000~\u0000\\t\u0000\rAvailableFromq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000A\u0000\u0090\u00fbzq\u0000~\u0000Yp\u0000q\u0000~\u0001\fsq\u0000~\u0000\\t\u0000\u000bAvailableToq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000A\u0000\u0090\u00fbzq\u0000~\u0000Yp\u0000q\u0000~\u0001\fsq\u0000~\u0000\\t\u0000\u0005Startq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000A\u0000\u0090\u00fbzq\u0000~\u0000Yp\u0000q\u0000~\u0001\fsq\u0000~\u0000\\t\u0000\u0006Finishq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00a8\n\u008fppsq\u0000~\u0000A\u0001\u00a8\n\u0084q\u0000~\u0000Yp\u0000q\u0000~\u0000\u0091sq\u0000~\u0000\\t\u0000\bCanLevelq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f2\u00f7\u0087ppsq\u0000~\u0000A\u0000\u00f2\u00f7|q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u00f2\u00f7qppsq\u0000~\u0000\u0080q\u0000~\u0000rpq\u0000~\u0000U\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pq\u0000~\u0000\u0083sq\u0000~\u0000\u0084w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sq\u0000~\u0000\u0086t\u0000\u00013sq\u0000~\u0000\u0086t\u0000\u00012sq\u0000~\u0000\u0086t\u0000\u00011xq\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000finteger-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\bAccrueAtq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u00f4V\u0083ppsr\u0000%com.sun.msv.datatype.xsd.DurationType=;_\u00b5\u00cd\u007f\u00ea\u0016\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000Qt\u0000\bdurationq\u0000~\u0000Uq\u0000~\u0000Wsq\u0000~\u0000Zq\u0000~\u00018q\u0000~\u0000Qsq\u0000~\u0000\\t\u0000\u0004Workq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000q\u0000~\u00015sq\u0000~\u0000\\t\u0000\u000bRegularWorkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000q\u0000~\u00015sq\u0000~\u0000\\t\u0000\fOvertimeWorkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000q\u0000~\u00015sq\u0000~\u0000\\t\u0000\nActualWorkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000q\u0000~\u00015sq\u0000~\u0000\\t\u0000\rRemainingWorkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000q\u0000~\u00015sq\u0000~\u0000\\t\u0000\u0012ActualOvertimeWorkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00f4V\u0099ppsq\u0000~\u0000A\u0000\u00f4V\u008eq\u0000~\u0000Yp\u0000q\u0000~\u00015sq\u0000~\u0000\\t\u0000\u0015RemainingOvertimeWorkq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00fe\u0084\u000bppsq\u0000~\u0000A\u0000\u00fe\u0084\u0000q\u0000~\u0000Yp\u0000q\u0000~\u0000Hsq\u0000~\u0000\\t\u0000\u0013PercentWorkCompleteq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u0018\u00a7\u00aeppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u00c9A\u007f\\\u00a4S\u00c2\u00a7\u0002\u0000\u0000xq\u0000~\u0000Kq\u0000~\u0000Qt\u0000\u0007decimalq\u0000~\u0000Uq\u0000~\u0000Wsq\u0000~\u0000Zq\u0000~\u0001]q\u0000~\u0000Qsq\u0000~\u0000\\t\u0000\fStandardRateq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001W\u00826ppsq\u0000~\u0000A\u0001W\u0082+q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001W\u0082 ppsq\u0000~\u0000\u0080q\u0000~\u0000rpq\u0000~\u0000U\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pq\u0000~\u0000\u0083sq\u0000~\u0000\u0084w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0007sq\u0000~\u0000\u0086t\u0000\u00013sq\u0000~\u0000\u0086t\u0000\u00015sq\u0000~\u0000\u0086t\u0000\u00017sq\u0000~\u0000\u0086t\u0000\u00012sq\u0000~\u0000\u0086t\u0000\u00014sq\u0000~\u0000\u0086t\u0000\u00018sq\u0000~\u0000\u0086t\u0000\u00011xq\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000finteger-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0012StandardRateFormatq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\u0004Costq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\fOvertimeRateq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001j\u00cd\tppsq\u0000~\u0000A\u0001j\u00cc\u00feq\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0001j\u00cc\u00f3ppsq\u0000~\u0000\u0080q\u0000~\u0000rpq\u0000~\u0000U\u0000\u0000q\u0000~\u0000Pq\u0000~\u0000Pq\u0000~\u0000\u0083sq\u0000~\u0000\u0084w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000\u0086t\u0000\u00013sq\u0000~\u0000\u0086t\u0000\u00015sq\u0000~\u0000\u0086t\u0000\u00017sq\u0000~\u0000\u0086t\u0000\u00012sq\u0000~\u0000\u0086t\u0000\u00014sq\u0000~\u0000\u0086t\u0000\u00011xq\u0000~\u0000Wsq\u0000~\u0000Zt\u0000\u000finteger-derivedq\u0000~\u0000rsq\u0000~\u0000\\t\u0000\u0012OvertimeRateFormatq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\fOvertimeCostq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\nCostPerUseq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\nActualCostq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\u0012ActualOvertimeCostq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\rRemainingCostq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000A\u0000\u0018\u00a7\u00b9q\u0000~\u0000Yp\u0000q\u0000~\u0001Zsq\u0000~\u0000\\t\u0000\u0015RemainingOvertimeCostq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\fWorkVarianceq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\fCostVarianceq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\u0002SVq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\u0002CVq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\u0004ACWPq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00fe\u0084\u000bppsq\u0000~\u0000A\u0000\u00fe\u0084\u0000q\u0000~\u0000Yp\u0000q\u0000~\u0000Hsq\u0000~\u0000\\t\u0000\u000bCalendarUIDq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00b226ppsq\u0000~\u0000A\u0000\u00b22+q\u0000~\u0000Yp\u0000sq\u0000~\u0000E\u0000\u00b22 ppq\u0000~\u0000vq\u0000~\u0000Wsq\u0000~\u0000Zq\u0000~\u0000wq\u0000~\u0000Qsq\u0000~\u0000\\t\u0000\u0005Notesq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\u0004BCWSq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000A\u0000\u001a\u00bc\u00f8q\u0000~\u0000Yp\u0000q\u0000~\u0000\u00fasq\u0000~\u0000\\t\u0000\u0004BCWPq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00a8\n\u008fppsq\u0000~\u0000A\u0001\u00a8\n\u0084q\u0000~\u0000Yp\u0000q\u0000~\u0000\u0091sq\u0000~\u0000\\t\u0000\tIsGenericq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0001\u00a8\n\u008fppsq\u0000~\u0000A\u0001\u00a8\n\u0084q\u0000~\u0000Yp\u0000q\u0000~\u0000\u0091sq\u0000~\u0000\\t\u0000\nIsInactiveq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.q\u0000~\u0000Ypsq\u0000~\u0000A\u0000\u00a7b+q\u0000~\u0000Yp\u0000sq\u0000~\u0000A\u0000\u00a7b pp\u0000sq\u0000~\u0000a\u0000\u00a7b\u0015ppsq\u0000~\u0001\u00dc\u0000\u00a7b\nq\u0000~\u0000Ypsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Bxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000Ypsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000hq\u0000~\u0001\u00e6sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000]q\u0000~\u0000gsq\u0000~\u0000\\t\u0000Ycom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\\t\u0000\u0011ExtendedAttributeq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00a7b9ppsq\u0000~\u0001\u00dc\u0000\u00a7b.q\u0000~\u0000Ypsq\u0000~\u0000A\u0000\u00a7b+q\u0000~\u0000Yp\u0000sq\u0000~\u0000A\u0000\u00a7b pp\u0000sq\u0000~\u0000a\u0000\u00a7b\u0015ppsq\u0000~\u0001\u00dc\u0000\u00a7b\nq\u0000~\u0000Ypsq\u0000~\u0001\u00e3\u0000\u00a7b\u0007q\u0000~\u0000Ypq\u0000~\u0001\u00e6q\u0000~\u0001\u00e8q\u0000~\u0000gsq\u0000~\u0000\\t\u0000Pcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineTypeq\u0000~\u0001\u00ebsq\u0000~\u0000\\t\u0000\bBaselineq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00a7b9ppsq\u0000~\u0001\u00dc\u0000\u00a7b.q\u0000~\u0000Ypsq\u0000~\u0000A\u0000\u00a7b+q\u0000~\u0000Yp\u0000sq\u0000~\u0000A\u0000\u00a7b pp\u0000sq\u0000~\u0000a\u0000\u00a7b\u0015ppsq\u0000~\u0001\u00dc\u0000\u00a7b\nq\u0000~\u0000Ypsq\u0000~\u0001\u00e3\u0000\u00a7b\u0007q\u0000~\u0000Ypq\u0000~\u0001\u00e6q\u0000~\u0001\u00e8q\u0000~\u0000gsq\u0000~\u0000\\t\u0000Scom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeTypeq\u0000~\u0001\u00ebsq\u0000~\u0000\\t\u0000\u000bOutlineCodeq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00a7b6ppsq\u0000~\u0000A\u0000\u00a7b+q\u0000~\u0000Yp\u0000sq\u0000~\u0000A\u0000\u00a7b pp\u0000sq\u0000~\u0000a\u0000\u00a7b\u0015ppsq\u0000~\u0001\u00dc\u0000\u00a7b\nq\u0000~\u0000Ypsq\u0000~\u0001\u00e3\u0000\u00a7b\u0007q\u0000~\u0000Ypq\u0000~\u0001\u00e6q\u0000~\u0001\u00e8q\u0000~\u0000gsq\u0000~\u0000\\t\u0000[com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsTypeq\u0000~\u0001\u00ebsq\u0000~\u0000\\t\u0000\u0013AvailabilityPeriodsq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00a7b6ppsq\u0000~\u0000A\u0000\u00a7b+q\u0000~\u0000Yp\u0000sq\u0000~\u0000A\u0000\u00a7b pp\u0000sq\u0000~\u0000a\u0000\u00a7b\u0015ppsq\u0000~\u0001\u00dc\u0000\u00a7b\nq\u0000~\u0000Ypsq\u0000~\u0001\u00e3\u0000\u00a7b\u0007q\u0000~\u0000Ypq\u0000~\u0001\u00e6q\u0000~\u0001\u00e8q\u0000~\u0000gsq\u0000~\u0000\\t\u0000Mcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesTypeq\u0000~\u0001\u00ebsq\u0000~\u0000\\t\u0000\u0005Ratesq\u0000~\u0000`q\u0000~\u0000gsq\u0000~\u0000a\u0000\u00a7b9ppsq\u0000~\u0001\u00dc\u0000\u00a7b.q\u0000~\u0000Ypsq\u0000~\u0000A\u0000\u00a7b+q\u0000~\u0000Yp\u0000sq\u0000~\u0000A\u0000\u00a7b pp\u0000sq\u0000~\u0000a\u0000\u00a7b\u0015ppsq\u0000~\u0001\u00dc\u0000\u00a7b\nq\u0000~\u0000Ypsq\u0000~\u0001\u00e3\u0000\u00a7b\u0007q\u0000~\u0000Ypq\u0000~\u0001\u00e6q\u0000~\u0001\u00e8q\u0000~\u0000gsq\u0000~\u0000\\t\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypeq\u0000~\u0001\u00ebsq\u0000~\u0000\\t\u0000\u000eTimephasedDataq\u0000~\u0000`q\u0000~\u0000gsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0002$[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0088\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000bppppppppppq\u0000~\u0000>q\u0000~\u0001\u00deq\u0000~\u0001\u00efq\u0000~\u0001\u00faq\u0000~\u0002\u0019ppppq\u0000~\u0002\u0004q\u0000~\u0002\u000epq\u0000~\u0001\u00d7q\u0000~\u0001\u00d3q\u0000~\u0000\u008fq\u0000~\u0001\u0006q\u0000~\u0001 q\u0000~\u0001\u00dbq\u0000~\u0001\u00eeq\u0000~\u0001\u00f9q\u0000~\u0002\u0018pppq\u0000~\u0000\u000fpppq\u0000~\u0000=pppppppppppppppppppppppq\u0000~\u0000\u00a0ppq\u0000~\u00009ppppppppppq\u0000~\u0000:q\u0000~\u0000#ppppq\u0000~\u00005pppppppppppppq\u0000~\u0000\u001fpppppppppq\u0000~\u0000\u0011ppq\u0000~\u0000\u0010pppppq\u0000~\u0000(ppppppppppq\u0000~\u0000 pppppppppppppq\u0000~\u0000\u0014pppppppq\u0000~\u0000\u001apppppppppq\u0000~\u0001$q\u0000~\u0000\u0017ppppppppppppppppppppppppppppppppppppppppppq\u0000~\u00002ppppppppppppppppppppppppppppppppppppppppq\u0000~\u00006pq\u0000~\u0000%pppppppppppppppppppppq\u0000~\u0000\rpppppppppppq\u0000~\u00007pppppppq\u0000~\u0001\u0080pppppq\u0000~\u0001Pq\u0000~\u0001Lq\u0000~\u0000\fq\u0000~\u00013q\u0000~\u0001<q\u0000~\u0001@q\u0000~\u0001Dq\u0000~\u0001Hppppppppppppppppppppq\u0000~\u0000\u00c0pq\u0000~\u0000\u000bpppppppppppppppppppppppppppq\u0000~\u0000\nppq\u0000~\u0000\u0098ppppq\u0000~\u0000\u001dpppppppppppq\u0000~\u0000\u00a8pq\u0000~\u0000\u0012pq\u0000~\u0000\"ppq\u0000~\u0000!q\u0000~\u0000\tppq\u0000~\u0000}ppppppq\u0000~\u0000?pq\u0000~\u0000+ppq\u0000~\u0000ipppq\u0000~\u0000<pq\u0000~\u0000\u001bppppppq\u0000~\u0000\u0015q\u0000~\u0000\bq\u0000~\u0000,q\u0000~\u00003q\u0000~\u0000\u0018ppq\u0000~\u0000\'ppppq\u0000~\u0000*pppppppq\u0000~\u0000-ppppq\u0000~\u0000\u0007ppq\u0000~\u00000pppppq\u0000~\u0000\u00e0pppq\u0000~\u0000.pppppppppppq\u0000~\u0000\u0006pppppq\u0000~\u0000/ppq\u0000~\u0000;ppppppppppppppppppq\u0000~\u0000\u0005ppppppppq\u0000~\u0001\u00cfq\u0000~\u0001\u00cbq\u0000~\u0001\u00bdq\u0000~\u0001\u00b9q\u0000~\u0001\u00b5q\u0000~\u0001\u00b1q\u0000~\u0001\u00adq\u0000~\u0000\u00f8q\u0000~\u0001\u0002ppppppq\u0000~\u0001\u00a9q\u0000~\u0001\u00a5q\u0000~\u0001\u00a1q\u0000~\u0001\u009dq\u0000~\u0001\u0099q\u0000~\u0001\u0095q\u0000~\u0001|q\u0000~\u0001xq\u0000~\u0001Xpppppppppppq\u0000~\u00004ppppq\u0000~\u0000\u000epppppppppq\u0000~\u0000$ppppppppq\u0000~\u0000\u00f0pppppppppppppppppppppppppppppq\u0000~\u0000)ppppppppppppppppq\u0000~\u0000\u00d8ppppppppppq\u0000~\u0000\u001eppppppppppppppppppppppppppppq\u0000~\u0000\u0013pq\u0000~\u0000\u00e8pppppq\u0000~\u0000\u00b8pppq\u0000~\u0000\u001cppppppppppq\u0000~\u0000\u0019ppppppppppq\u0000~\u0000\u0016pppppppppppq\u0000~\u0001\u00c5pppppppppppppppq\u0000~\u00001ppppppppppq\u0000~\u0000&pppppq\u0000~\u00008pppppq\u0000~\u0000\u00c8pppppq\u0000~\u0001appppppppppq\u0000~\u0001\u00f3q\u0000~\u0001\u00e2q\u0000~\u0001\nq\u0000~\u0001\u0014q\u0000~\u0001\u0018q\u0000~\u0001\u001cq\u0000~\u0001\u00feq\u0000~\u0002\bq\u0000~\u0000\u00b0q\u0000~\u0002\u0012q\u0000~\u0002\u001dq\u0000~\u0001\u00e1q\u0000~\u0001\u00f2q\u0000~\u0001\u00fdq\u0000~\u0000@q\u0000~\u0002\u0007q\u0000~\u0002\u0011q\u0000~\u0002\u001cppppq\u0000~\u0001\u00c1q\u0000~\u0001T");

            public String getEmailAddress() {
                return _EmailAddress;
            }

            public void setEmailAddress(String value) {
                _EmailAddress = value;
            }

            public java.math.BigInteger getStandardRateFormat() {
                return _StandardRateFormat;
            }

            public void setStandardRateFormat(java.math.BigInteger value) {
                _StandardRateFormat = value;
            }

            public String getPhonetics() {
                return _Phonetics;
            }

            public void setPhonetics(String value) {
                _Phonetics = value;
            }

            public String getNTAccount() {
                return _NTAccount;
            }

            public void setNTAccount(String value) {
                _NTAccount = value;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType getAvailabilityPeriods() {
                return _AvailabilityPeriods;
            }

            public void setAvailabilityPeriods(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType value) {
                _AvailabilityPeriods = value;
            }

            public String getGroup() {
                return _Group;
            }

            public void setGroup(String value) {
                _Group = value;
            }

            public String getWork() {
                return _Work;
            }

            public void setWork(String value) {
                _Work = value;
            }

            public java.util.Calendar getAvailableFrom() {
                return _AvailableFrom;
            }

            public void setAvailableFrom(java.util.Calendar value) {
                _AvailableFrom = value;
            }

            public java.math.BigInteger getCalendarUID() {
                return _CalendarUID;
            }

            public void setCalendarUID(java.math.BigInteger value) {
                _CalendarUID = value;
            }

            public java.math.BigInteger getWorkGroup() {
                return _WorkGroup;
            }

            public void setWorkGroup(java.math.BigInteger value) {
                _WorkGroup = value;
            }

            public String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(String value) {
                _HyperlinkSubAddress = value;
            }

            public String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(String value) {
                _RemainingOvertimeWork = value;
            }

            public String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(String value) {
                _RemainingWork = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(String value) {
                _HyperlinkAddress = value;
            }

            public float getMaxUnits() {
                return _MaxUnits;
            }

            public void setMaxUnits(float value) {
                _MaxUnits = value;
                has_MaxUnits = true;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public boolean isIsInactive() {
                return _IsInactive;
            }

            public void setIsInactive(boolean value) {
                _IsInactive = value;
                has_IsInactive = true;
            }

            public com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType getRates() {
                return _Rates;
            }

            public void setRates(com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType value) {
                _Rates = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(String value) {
                _ActualOvertimeWork = value;
            }

            public boolean isIsGeneric() {
                return _IsGeneric;
            }

            public void setIsGeneric(boolean value) {
                _IsGeneric = value;
                has_IsGeneric = true;
            }

            public java.util.List getBaseline() {
                return _Baseline;
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public java.math.BigInteger getID() {
                return _ID;
            }

            public void setID(java.math.BigInteger value) {
                _ID = value;
            }

            public String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(String value) {
                _Hyperlink = value;
            }

            public boolean isCanLevel() {
                return _CanLevel;
            }

            public void setCanLevel(boolean value) {
                _CanLevel = value;
                has_CanLevel = true;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public boolean isIsNull() {
                return _IsNull;
            }

            public void setIsNull(boolean value) {
                _IsNull = value;
                has_IsNull = true;
            }

            public java.util.List getTimephasedData() {
                return _TimephasedData;
            }

            public float getCostVariance() {
                return _CostVariance;
            }

            public void setCostVariance(float value) {
                _CostVariance = value;
                has_CostVariance = true;
            }

            public float getPeakUnits() {
                return _PeakUnits;
            }

            public void setPeakUnits(float value) {
                _PeakUnits = value;
                has_PeakUnits = true;
            }

            public java.math.BigDecimal getCostPerUse() {
                return _CostPerUse;
            }

            public void setCostPerUse(java.math.BigDecimal value) {
                _CostPerUse = value;
            }

            public java.util.List getExtendedAttribute() {
                return _ExtendedAttribute;
            }

            public java.math.BigInteger getAccrueAt() {
                return _AccrueAt;
            }

            public void setAccrueAt(java.math.BigInteger value) {
                _AccrueAt = value;
            }

            public java.math.BigInteger getOvertimeRateFormat() {
                return _OvertimeRateFormat;
            }

            public void setOvertimeRateFormat(java.math.BigInteger value) {
                _OvertimeRateFormat = value;
            }

            public String getCode() {
                return _Code;
            }

            public void setCode(String value) {
                _Code = value;
            }

            public String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(String value) {
                _RegularWork = value;
            }

            public String getName() {
                return _Name;
            }

            public void setName(String value) {
                _Name = value;
            }

            public String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(String value) {
                _OvertimeWork = value;
            }

            public String getInitials() {
                return _Initials;
            }

            public void setInitials(String value) {
                _Initials = value;
            }

            public java.math.BigDecimal getStandardRate() {
                return _StandardRate;
            }

            public void setStandardRate(java.math.BigDecimal value) {
                _StandardRate = value;
            }

            public float getSV() {
                return _SV;
            }

            public void setSV(float value) {
                _SV = value;
                has_SV = true;
            }

            public String getNotes() {
                return _Notes;
            }

            public void setNotes(String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.List getOutlineCode() {
                return _OutlineCode;
            }

            public String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(String value) {
                _ActualWork = value;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public boolean isOverAllocated() {
                return _OverAllocated;
            }

            public void setOverAllocated(boolean value) {
                _OverAllocated = value;
                has_OverAllocated = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public String getMaterialLabel() {
                return _MaterialLabel;
            }

            public void setMaterialLabel(String value) {
                _MaterialLabel = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.util.Calendar getAvailableTo() {
                return _AvailableTo;
            }

            public void setAvailableTo(java.util.Calendar value) {
                _AvailableTo = value;
            }

            public java.math.BigDecimal getOvertimeRate() {
                return _OvertimeRate;
            }

            public void setOvertimeRate(java.math.BigDecimal value) {
                _OvertimeRate = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx29 = 0;
                final int len29 = _Baseline.size();
                int idx36 = 0;
                final int len36 = _TimephasedData.size();
                int idx40 = 0;
                final int len40 = _ExtendedAttribute.size();
                int idx52 = 0;
                final int len52 = _OutlineCode.size();
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                context.endElement();
                if (_ID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ID)));
                    context.endElement();
                }
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endAttributes();
                    context.text(((String) _Name));
                    context.endElement();
                }
                if (_Type!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Type");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Type)));
                    context.endElement();
                }
                if (has_IsNull) {
                    context.startElement("http://schemas.microsoft.com/project", "IsNull");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsNull))));
                    context.endElement();
                }
                if (_Initials!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Initials");
                    context.endAttributes();
                    context.text(((String) _Initials));
                    context.endElement();
                }
                if (_Phonetics!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Phonetics");
                    context.endAttributes();
                    context.text(((String) _Phonetics));
                    context.endElement();
                }
                if (_NTAccount!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "NTAccount");
                    context.endAttributes();
                    context.text(((String) _NTAccount));
                    context.endElement();
                }
                if (_MaterialLabel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "MaterialLabel");
                    context.endAttributes();
                    context.text(((String) _MaterialLabel));
                    context.endElement();
                }
                if (_Code!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Code");
                    context.endAttributes();
                    context.text(((String) _Code));
                    context.endElement();
                }
                if (_Group!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Group");
                    context.endAttributes();
                    context.text(((String) _Group));
                    context.endElement();
                }
                if (_WorkGroup!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkGroup");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _WorkGroup)));
                    context.endElement();
                }
                if (_EmailAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EmailAddress");
                    context.endAttributes();
                    context.text(((String) _EmailAddress));
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endAttributes();
                    context.text(((String) _Hyperlink));
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endAttributes();
                    context.text(((String) _HyperlinkAddress));
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endAttributes();
                    context.text(((String) _HyperlinkSubAddress));
                    context.endElement();
                }
                if (has_MaxUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "MaxUnits");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_MaxUnits))));
                    context.endElement();
                }
                if (has_PeakUnits) {
                    context.startElement("http://schemas.microsoft.com/project", "PeakUnits");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_PeakUnits))));
                    context.endElement();
                }
                if (has_OverAllocated) {
                    context.startElement("http://schemas.microsoft.com/project", "OverAllocated");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_OverAllocated))));
                    context.endElement();
                }
                if (_AvailableFrom!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailableFrom");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableFrom), null));
                    context.endElement();
                }
                if (_AvailableTo!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailableTo");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableTo), null));
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null));
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null));
                    context.endElement();
                }
                if (has_CanLevel) {
                    context.startElement("http://schemas.microsoft.com/project", "CanLevel");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_CanLevel))));
                    context.endElement();
                }
                if (_AccrueAt!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AccrueAt");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _AccrueAt)));
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endAttributes();
                    context.text(((String) _Work));
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endAttributes();
                    context.text(((String) _RegularWork));
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endAttributes();
                    context.text(((String) _OvertimeWork));
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endAttributes();
                    context.text(((String) _ActualWork));
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endAttributes();
                    context.text(((String) _RemainingWork));
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endAttributes();
                    context.text(((String) _ActualOvertimeWork));
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endAttributes();
                    context.text(((String) _RemainingOvertimeWork));
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _PercentWorkComplete)));
                    context.endElement();
                }
                if (_StandardRate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StandardRate");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _StandardRate)));
                    context.endElement();
                }
                if (_StandardRateFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StandardRateFormat");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _StandardRateFormat)));
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _Cost)));
                    context.endElement();
                }
                if (_OvertimeRate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeRate");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _OvertimeRate)));
                    context.endElement();
                }
                if (_OvertimeRateFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeRateFormat");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _OvertimeRateFormat)));
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _OvertimeCost)));
                    context.endElement();
                }
                if (_CostPerUse!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CostPerUse");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _CostPerUse)));
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _ActualCost)));
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _ActualOvertimeCost)));
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _RemainingCost)));
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _RemainingOvertimeCost)));
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_WorkVariance))));
                    context.endElement();
                }
                if (has_CostVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "CostVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_CostVariance))));
                    context.endElement();
                }
                if (has_SV) {
                    context.startElement("http://schemas.microsoft.com/project", "SV");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_SV))));
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_CV))));
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_ACWP))));
                    context.endElement();
                }
                if (_CalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CalendarUID)));
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endAttributes();
                    context.text(((String) _Notes));
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWS))));
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWP))));
                    context.endElement();
                }
                if (has_IsGeneric) {
                    context.startElement("http://schemas.microsoft.com/project", "IsGeneric");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsGeneric))));
                    context.endElement();
                }
                if (has_IsInactive) {
                    context.startElement("http://schemas.microsoft.com/project", "IsInactive");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsInactive))));
                    context.endElement();
                }
                while (idx40 != len40) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_55 = idx40;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx_55 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx40 ++)));
                    context.endElement();
                }
                while (idx29 != len29) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_56 = idx29;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Baseline.get(idx_56 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Baseline.get(idx29 ++)));
                    context.endElement();
                }
                while (idx52 != len52) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                    int idx_57 = idx52;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCode.get(idx_57 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCode.get(idx52 ++)));
                    context.endElement();
                }
                if (_AvailabilityPeriods!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "AvailabilityPeriods");
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _AvailabilityPeriods));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _AvailabilityPeriods));
                    context.endElement();
                }
                if (_Rates!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Rates");
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Rates));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Rates));
                    context.endElement();
                }
                while (idx36 != len36) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_60 = idx36;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx_60 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx36 ++)));
                    context.endElement();
                }
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx29 = 0;
                final int len29 = _Baseline.size();
                int idx36 = 0;
                final int len36 = _TimephasedData.size();
                int idx40 = 0;
                final int len40 = _ExtendedAttribute.size();
                int idx52 = 0;
                final int len52 = _OutlineCode.size();
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx29 = 0;
                final int len29 = _Baseline.size();
                int idx36 = 0;
                final int len36 = _TimephasedData.size();
                int idx40 = 0;
                final int len40 = _ExtendedAttribute.size();
                int idx52 = 0;
                final int len52 = _OutlineCode.size();
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class AvailabilityPeriodsTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.class;
                protected java.util.ArrayList _AvailabilityPeriod = new java.util.ArrayList();
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000rcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u0012AvailabilityPeriodt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

                public java.util.List getAvailabilityPeriod() {
                    return _AvailabilityPeriod;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _AvailabilityPeriod.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "AvailabilityPeriod");
                        int idx_0 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _AvailabilityPeriod.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _AvailabilityPeriod.get(idx1 ++)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _AvailabilityPeriod.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _AvailabilityPeriod.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class AvailabilityPeriodTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType.class;
                    protected java.util.Calendar _AvailableFrom;
                    protected java.util.Calendar _AvailableTo;
                    protected boolean has_AvailableUnits;
                    protected float _AvailableUnits;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0001<\u00b4\u0017ppsq\u0000~\u0000\u0000\u0001!\u00f7\u000fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u0090\u00fb\u0085ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0090\u00fbzsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\bdateTimesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\rAvailableFromt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\r\u0001psq\u0000~\u0000\u0007\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000\t\u0000\u0090\u00fbzq\u0000~\u0000\u000ep\u0000q\u0000~\u0000\u0012sq\u0000~\u0000$t\u0000\u000bAvailableToq\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000\u0007\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\t\u0000\u001a\u00bc\u00f8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u000f\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0005floatq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u00006q\u0000~\u0000\u001bsq\u0000~\u0000$t\u0000\u000eAvailableUnitsq\u0000~\u0000(q\u0000~\u0000*sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000;[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0005\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppq\u0000~\u0000\bq\u0000~\u0000,q\u0000~\u00000pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppppp");

                    public java.util.Calendar getAvailableFrom() {
                        return _AvailableFrom;
                    }

                    public void setAvailableFrom(java.util.Calendar value) {
                        _AvailableFrom = value;
                    }

                    public java.util.Calendar getAvailableTo() {
                        return _AvailableTo;
                    }

                    public void setAvailableTo(java.util.Calendar value) {
                        _AvailableTo = value;
                    }

                    public float getAvailableUnits() {
                        return _AvailableUnits;
                    }

                    public void setAvailableUnits(float value) {
                        _AvailableUnits = value;
                        has_AvailableUnits = true;
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        if (_AvailableFrom!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableFrom");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableFrom), null));
                            context.endElement();
                        }
                        if (_AvailableTo!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableTo");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _AvailableTo), null));
                            context.endElement();
                        }
                        if (has_AvailableUnits) {
                            context.startElement("http://schemas.microsoft.com/project", "AvailableUnits");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_AvailableUnits))));
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.AvailabilityPeriodsType.AvailabilityPeriodType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "-------");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableFrom".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableUnits".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 3;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableTo".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 5;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableFrom".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  4 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableUnits".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableTo".equals(___local)) {
                                        context.popAttributes();
                                        state = 0;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  0 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  5 :
                                        _AvailableTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                        state = 6;
                                        return ;
                                    case  1 :
                                        _AvailableFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                        state = 2;
                                        return ;
                                    case  3 :
                                        _AvailableUnits = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                        has_AvailableUnits = true;
                                        state = 4;
                                        return ;
                                    case  0 :
                                        revertToParentFromText(value);
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "---");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableFrom".equals(___local)) {
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableUnits".equals(___local)) {
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableTo".equals(___local)) {
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriod".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriod".equals(___local)) {
                                    _AvailabilityPeriod.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.AvailabilityPeriodTypeImpl.class), 2, ___uri, ___local)));
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriod".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  2 :
                                state = 2;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType.class;
                protected boolean has_BCWP;
                protected float _BCWP;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected boolean has_Cost;
                protected float _Cost;
                protected java.math.BigInteger _Number;
                protected String _Work;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002C\u0011\u00b6ppsq\u0000~\u0000\u0000\u0002(T\u00aeppsq\u0000~\u0000\u0000\u0002\r\u0097\u00a6ppsq\u0000~\u0000\u0000\u0001\u00f2\u00da\u009eppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0006Numbert\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00f4V\u0099ppsq\u0000~\u0000\t\u0000\u00f4V\u008eq\u0000~\u0000!p\u0000sq\u0000~\u0000\r\u0000\u00f4V\u0083ppsr\u0000%com.sun.msv.datatype.xsd.DurationType=;_\u00b5\u00cd\u007f\u00ea\u0016\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\bdurationq\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000\"q\u0000~\u0000/q\u0000~\u0000\u0019sq\u0000~\u0000$t\u0000\u0004Workq\u0000~\u0000(sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000 \u0001psq\u0000~\u0000)\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\t\u0000\u001a\u00bc\u00f8q\u0000~\u0000!p\u0000sq\u0000~\u0000\r\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0005floatq\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000\"q\u0000~\u0000<q\u0000~\u0000\u0019sq\u0000~\u0000$t\u0000\u0004Costq\u0000~\u0000(q\u0000~\u00004sq\u0000~\u0000)\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\t\u0000\u001a\u00bc\u00f8q\u0000~\u0000!p\u0000q\u0000~\u00008sq\u0000~\u0000$t\u0000\u0004BCWSq\u0000~\u0000(q\u0000~\u00004sq\u0000~\u0000)\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\t\u0000\u001a\u00bc\u00f8q\u0000~\u0000!p\u0000q\u0000~\u00008sq\u0000~\u0000$t\u0000\u0004BCWPq\u0000~\u0000(q\u0000~\u00004sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000I[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000*pq\u0000~\u0000\u0005q\u0000~\u00006q\u0000~\u0000@q\u0000~\u0000\u0007q\u0000~\u0000Dppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppq\u0000~\u0000\bpp");

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public float getCost() {
                    return _Cost;
                }

                public void setCost(float value) {
                    _Cost = value;
                    has_Cost = true;
                }

                public java.math.BigInteger getNumber() {
                    return _Number;
                }

                public void setNumber(java.math.BigInteger value) {
                    _Number = value;
                }

                public String getWork() {
                    return _Work;
                }

                public void setWork(String value) {
                    _Work = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    context.startElement("http://schemas.microsoft.com/project", "Number");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Number)));
                    context.endElement();
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endAttributes();
                        context.text(((String) _Work));
                        context.endElement();
                    }
                    if (has_Cost) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_Cost))));
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWS))));
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWP))));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "------------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 8;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 6;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 4;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 10;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  11 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  9 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  7 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  5 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  3 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  4 :
                                    _Cost = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_Cost = true;
                                    state = 5;
                                    return ;
                                case  8 :
                                    _Work = value;
                                    state = 9;
                                    return ;
                                case  6 :
                                    _BCWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_BCWP = true;
                                    state = 7;
                                    return ;
                                case  10 :
                                    _BCWS = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_BCWS = true;
                                    state = 11;
                                    return ;
                                case  3 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    _Number = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 2;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType.class;
                protected java.math.BigInteger _DurationFormat;
                protected String _Value;
                protected String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00042\u00c8\u00e8ppsq\u0000~\u0000\u0000\u0003al\u0091ppsq\u0000~\u0000\u0000\u0002b\u00e8\u0081ppsq\u0000~\u0000\u0000\u0001\u00b0\u00b6Fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u0000\t\u0000\u00b226ppsq\u0000~\u0000\u000b\u0000\u00b22+q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u00003q\u0000~\u0000\u001dsq\u0000~\u0000&t\u0000\u0007FieldIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00b226ppsq\u0000~\u0000\u000b\u0000\u00b22+q\u0000~\u0000\u0010p\u0000q\u0000~\u00000sq\u0000~\u0000&t\u0000\u0005Valueq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u000b\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0010p\u0000q\u0000~\u0000\u0014sq\u0000~\u0000&t\u0000\u0007ValueIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00d1\\Rppsq\u0000~\u0000\u000b\u0000\u00d1\\Gq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0000\u00d1\\<ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019t\u0000\u0000pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000\u001cq\u0000~\u0000\u001ct\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001axpt\u0000\u00013sq\u0000~\u0000Ot\u0000\u000241sq\u0000~\u0000Ot\u0000\u000239sq\u0000~\u0000Ot\u0000\u000236sq\u0000~\u0000Ot\u0000\u00016sq\u0000~\u0000Ot\u0000\u00015sq\u0000~\u0000Ot\u0000\u000237sq\u0000~\u0000Ot\u0000\u000211sq\u0000~\u0000Ot\u0000\u000240sq\u0000~\u0000Ot\u0000\u00014sq\u0000~\u0000Ot\u0000\u000212sq\u0000~\u0000Ot\u0000\u000252sq\u0000~\u0000Ot\u0000\u00017sq\u0000~\u0000Ot\u0000\u000238sq\u0000~\u0000Ot\u0000\u000220sq\u0000~\u0000Ot\u0000\u000242sq\u0000~\u0000Ot\u0000\u000253sq\u0000~\u0000Ot\u0000\u000243sq\u0000~\u0000Ot\u0000\u000221sq\u0000~\u0000Ot\u0000\u000210sq\u0000~\u0000Ot\u0000\u000235sq\u0000~\u0000Ot\u0000\u000244sq\u0000~\u0000Ot\u0000\u00019sq\u0000~\u0000Ot\u0000\u000219sq\u0000~\u0000Ot\u0000\u00018sq\u0000~\u0000Ot\u0000\u000251xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000Ksq\u0000~\u0000&t\u0000\u000eDurationFormatq\u0000~\u0000*q\u0000~\u0000,sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0089[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\t\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppq\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\bpppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\nq\u0000~\u0000=ppppppq\u0000~\u0000\u0005ppppppppppppq\u0000~\u0000\u0006ppppppppppq\u0000~\u0000.q\u0000~\u00009pppppppppppppppppppppppppppppppq\u0000~\u0000Appppppppppppppppp");

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public String getValue() {
                    return _Value;
                }

                public void setValue(String value) {
                    _Value = value;
                }

                public String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endAttributes();
                        context.text(((String) _FieldID));
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endAttributes();
                        context.text(((String) _Value));
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValueID)));
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DurationFormat)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-----------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 9;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 7;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  8 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  10 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  3 :
                                    _DurationFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 4;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                                case  9 :
                                    _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 10;
                                    return ;
                                case  7 :
                                    _FieldID = value;
                                    state = 8;
                                    return ;
                                case  1 :
                                    _Value = value;
                                    state = 2;
                                    return ;
                                case  5 :
                                    _ValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 6;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType.class;
                protected String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002\u00af:Vppsq\u0000~\u0000\u0000\u0001\u00b0\u00b6Fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\r\u0001psq\u0000~\u0000\u0007\u0000\u00b226ppsq\u0000~\u0000\t\u0000\u00b22+q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u000f\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u00001q\u0000~\u0000\u001bsq\u0000~\u0000$t\u0000\u0007FieldIDq\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000\u0007\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\t\u0000\u00fe\u0084\u0000q\u0000~\u0000\u000ep\u0000q\u0000~\u0000\u0012sq\u0000~\u0000$t\u0000\u0007ValueIDq\u0000~\u0000(q\u0000~\u0000*sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000<[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0005\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\bq\u0000~\u00007ppppppppppppppppppppppppppppppq\u0000~\u0000,ppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppp");

                public String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endAttributes();
                        context.text(((String) _FieldID));
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValueID)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.OutlineCodeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  5 :
                                    _ValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 6;
                                    return ;
                                case  3 :
                                    _FieldID = value;
                                    state = 4;
                                    return ;
                                case  1 :
                                    _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 2;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public static class RatesTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.class;
                protected java.util.ArrayList _Rate = new java.util.ArrayList();
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0010X\u0097\u00beppsr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0010X\u0097\u00b3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b\nq\u0000~\u0000\tpsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\tpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\b\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000Vcom.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001dt\u0000\u0004Ratet\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\u0000\u000f\u00b15\u0083ppsq\u0000~\u0000\u0006\u000f\u00b15xq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u000f\t\u00d3Hppsq\u0000~\u0000\u0006\u000f\t\u00d3=q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u000ebq\rppsq\u0000~\u0000\u0006\u000ebq\u0002q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\r\u00bb\u000e\u00d2ppsq\u0000~\u0000\u0006\r\u00bb\u000e\u00c7q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\r\u0013\u00ac\u0097ppsq\u0000~\u0000\u0006\r\u0013\u00ac\u008cq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\flJ\\ppsq\u0000~\u0000\u0006\flJQq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u000b\u00c4\u00e8!ppsq\u0000~\u0000\u0006\u000b\u00c4\u00e8\u0016q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u000b\u001d\u0085\u00e6ppsq\u0000~\u0000\u0006\u000b\u001d\u0085\u00dbq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\nv#\u00abppsq\u0000~\u0000\u0006\nv#\u00a0q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\t\u00ce\u00c1pppsq\u0000~\u0000\u0006\t\u00ce\u00c1eq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\t\'_5ppsq\u0000~\u0000\u0006\t\'_*q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\b\u007f\u00fc\u00fappsq\u0000~\u0000\u0006\b\u007f\u00fc\u00efq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0007\u00d8\u009a\u00bfppsq\u0000~\u0000\u0006\u0007\u00d8\u009a\u00b4q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u000718\u0084ppsq\u0000~\u0000\u0006\u000718yq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0006\u0089\u00d6Ippsq\u0000~\u0000\u0006\u0006\u0089\u00d6>q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0005\u00e2t\u000eppsq\u0000~\u0000\u0006\u0005\u00e2t\u0003q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0005;\u0011\u00d3ppsq\u0000~\u0000\u0006\u0005;\u0011\u00c8q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0004\u0093\u00af\u0098ppsq\u0000~\u0000\u0006\u0004\u0093\u00af\u008dq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0003\u00ecM]ppsq\u0000~\u0000\u0006\u0003\u00ecMRq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0003D\u00eb\"ppsq\u0000~\u0000\u0006\u0003D\u00eb\u0017q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0002\u009d\u0088\u00e7ppsq\u0000~\u0000\u0006\u0002\u009d\u0088\u00dcq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u00f6&\u00acppsq\u0000~\u0000\u0006\u0001\u00f6&\u00a1q\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001N\u00c4qppsq\u0000~\u0000\u0006\u0001N\u00c4fq\u0000~\u0000\tpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"sq\u0000~\u0000\u0000\u0000\u00a7b6ppsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\tp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0010\u0000\u00a7b\nq\u0000~\u0000\tpsq\u0000~\u0000\u0013\u0000\u00a7b\u0007q\u0000~\u0000\tpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000!q\u0000~\u0000\"q\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001cq\u0000~\u0000\u001csr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00e5[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000c\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppq\u0000~\u0000\u00bdppq\u0000~\u0000\u0096ppppppppppq\u0000~\u0000\u0095ppq\u0000~\u0000nppppppppppq\u0000~\u0000mppq\u0000~\u0000Fppppppppppq\u0000~\u0000Eppq\u0000~\u0000\u0007ppppppppppq\u0000~\u0000\u0005pppq\u0000~\u0000\u00ceppppppppppq\u0000~\u0000\u00cdppq\u0000~\u0000\u00a6ppppppppppq\u0000~\u0000\u00a5ppq\u0000~\u0000~pppppppppq\u0000~\u0000\u00e1q\u0000~\u0000\u00daq\u0000~\u0000\u00d2q\u0000~\u0000\u00caq\u0000~\u0000\u00c2q\u0000~\u0000\u00baq\u0000~\u0000\u00b2q\u0000~\u0000\u00aaq\u0000~\u0000\u00a2q\u0000~\u0000\u009aq\u0000~\u0000\u0092q\u0000~\u0000\u00e0q\u0000~\u0000\u00d9q\u0000~\u0000\u00d1q\u0000~\u0000\u00c9q\u0000~\u0000\u00c1q\u0000~\u0000\u00b9q\u0000~\u0000\u00b1q\u0000~\u0000\u00a9q\u0000~\u0000\u00a1q\u0000~\u0000\u0099q\u0000~\u0000\u0091q\u0000~\u0000\u0089q\u0000~\u0000\u008aq\u0000~\u0000\u0081q\u0000~\u0000\u0082q\u0000~\u0000yq\u0000~\u0000zq\u0000~\u0000qq\u0000~\u0000iq\u0000~\u0000aq\u0000~\u0000Yq\u0000~\u0000Qq\u0000~\u0000Iq\u0000~\u0000Aq\u0000~\u00009q\u0000~\u00001q\u0000~\u0000)q\u0000~\u0000\u000fq\u0000~\u0000rq\u0000~\u0000jq\u0000~\u0000bq\u0000~\u0000Zq\u0000~\u0000Rq\u0000~\u0000\u00ddq\u0000~\u0000Jq\u0000~\u0000Bq\u0000~\u0000:q\u0000~\u00002q\u0000~\u0000*q\u0000~\u0000\u0012q\u0000~\u0000\u00b6q\u0000~\u0000}q\u0000~\u0000Vq\u0000~\u0000Uq\u0000~\u0000.q\u0000~\u0000-pq\u0000~\u0000\u00b5ppq\u0000~\u0000\u008eppppppppppq\u0000~\u0000\u008dppq\u0000~\u0000fppppppppppq\u0000~\u0000eppq\u0000~\u0000>ppppppppppq\u0000~\u0000=pppppppppppppppppq\u0000~\u0000\u00c6ppppppppppq\u0000~\u0000\u00c5ppq\u0000~\u0000\u009eppppppppppq\u0000~\u0000\u009dppq\u0000~\u0000vppppppppppq\u0000~\u0000uppq\u0000~\u0000Nppppppppppq\u0000~\u0000Mppq\u0000~\u0000&ppppppppppq\u0000~\u0000%pppq\u0000~\u0000\u00d6ppppppppppq\u0000~\u0000\u00d5ppq\u0000~\u0000\u00aeppppppppppq\u0000~\u0000\u00adppq\u0000~\u0000\u0086ppppppppppq\u0000~\u0000\u0085ppq\u0000~\u0000^ppppppppppq\u0000~\u0000]ppq\u0000~\u00006ppppppppppq\u0000~\u00005pppppppppppppppppq\u0000~\u0000\u00bep");

                public java.util.List getRate() {
                    return _Rate;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Rate.size();
                    while (idx1 != len1) {
                        context.startElement("http://schemas.microsoft.com/project", "Rate");
                        int idx_0 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Rate.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Rate.get(idx1 ++)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Rate.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx1 = 0;
                    final int len1 = _Rate.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public static class RateTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
                {

                    private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType.class;
                    protected java.util.Calendar _RatesFrom;
                    protected java.math.BigDecimal _CostPerUse;
                    protected java.math.BigInteger _StandardRateFormat;
                    protected java.math.BigInteger _RateTable;
                    protected java.math.BigInteger _OvertimeRateFormat;
                    protected java.util.Calendar _RatesTo;
                    protected java.math.BigDecimal _OvertimeRate;
                    protected java.math.BigDecimal _StandardRate;
                    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005+ACppsq\u0000~\u0000\u0000\u0005\u0012\u0099zppsq\u0000~\u0000\u0000\u0003\u0081z\u0087ppsq\u0000~\u0000\u0000\u0003h\u00d2\u00beppsq\u0000~\u0000\u0000\u0001\u00ac\u008c\u00b5ppsq\u0000~\u0000\u0000\u0001\u0093\u00e4\u00ecppsq\u0000~\u0000\u0000\u0001!\u00f6\u00f9ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0090\u00fbzpp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\bdateTimesr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\tRatesFromt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\f\u0000\u0090\u00fbzpp\u0000q\u0000~\u0000\u0013sq\u0000~\u0000\'t\u0000\u0007RatesToq\u0000~\u0000+sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000q\u00ed\u00eeppsq\u0000~\u0000\f\u0000q\u00ed\u00e3q\u0000~\u0000$p\u0000sq\u0000~\u0000\u0010\u0000q\u00ed\u00d8ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0019xq\u0000~\u0000\u0018t\u0000\u0000pq\u0000~\u0000 \u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0007integerq\u0000~\u0000 q\u0000~\u0000=t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0005sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0019xpt\u0000\u00013sq\u0000~\u0000Bt\u0000\u00012sq\u0000~\u0000Bt\u0000\u00010sq\u0000~\u0000Bt\u0000\u00014sq\u0000~\u0000Bt\u0000\u00011xq\u0000~\u0000\"sq\u0000~\u0000%t\u0000\u000finteger-derivedq\u0000~\u0000:sq\u0000~\u0000\'t\u0000\tRateTableq\u0000~\u0000+sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000#\u0001psq\u0000~\u0000/\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000\f\u0000\u0018\u00a7\u00b9q\u0000~\u0000$p\u0000sq\u0000~\u0000\u0010\u0000\u0018\u00a7\u00aeppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u00c9A\u007f\\\u00a4S\u00c2\u00a7\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0007decimalq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000%q\u0000~\u0000Yq\u0000~\u0000\u001csq\u0000~\u0000\'t\u0000\fStandardRateq\u0000~\u0000+q\u0000~\u0000Rsq\u0000~\u0000/\u0001\u00bcF\u0004ppsq\u0000~\u0000\f\u0001\u00bcE\u00f9q\u0000~\u0000$p\u0000sq\u0000~\u0000\u0010\u0001\u00bcE\u00eeppsq\u0000~\u00003q\u0000~\u0000:pq\u0000~\u0000 \u0000\u0000q\u0000~\u0000=q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u0000@w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000Bt\u0000\u00013sq\u0000~\u0000Bt\u0000\u00015sq\u0000~\u0000Bt\u0000\u00017sq\u0000~\u0000Bt\u0000\u00012sq\u0000~\u0000Bt\u0000\u00014sq\u0000~\u0000Bt\u0000\u00011xq\u0000~\u0000\"sq\u0000~\u0000%t\u0000\u000finteger-derivedq\u0000~\u0000:sq\u0000~\u0000\'t\u0000\u0012StandardRateFormatq\u0000~\u0000+q\u0000~\u0000Rsq\u0000~\u0000/\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000\f\u0000\u0018\u00a7\u00b9q\u0000~\u0000$p\u0000q\u0000~\u0000Vsq\u0000~\u0000\'t\u0000\fOvertimeRateq\u0000~\u0000+q\u0000~\u0000Rsq\u0000~\u0000/\u0001\u0091\u001e\u00eeppsq\u0000~\u0000\f\u0001\u0091\u001e\u00e3q\u0000~\u0000$p\u0000sq\u0000~\u0000\u0010\u0001\u0091\u001e\u00d8ppsq\u0000~\u00003q\u0000~\u0000:pq\u0000~\u0000 \u0000\u0000q\u0000~\u0000=q\u0000~\u0000=q\u0000~\u0000?sq\u0000~\u0000@w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0006sq\u0000~\u0000Bt\u0000\u00013sq\u0000~\u0000Bt\u0000\u00015sq\u0000~\u0000Bt\u0000\u00017sq\u0000~\u0000Bt\u0000\u00012sq\u0000~\u0000Bt\u0000\u00014sq\u0000~\u0000Bt\u0000\u00011xq\u0000~\u0000\"sq\u0000~\u0000%t\u0000\u000finteger-derivedq\u0000~\u0000:sq\u0000~\u0000\'t\u0000\u0012OvertimeRateFormatq\u0000~\u0000+q\u0000~\u0000Rsq\u0000~\u0000/\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000\f\u0000\u0018\u00a7\u00b9q\u0000~\u0000$p\u0000q\u0000~\u0000Vsq\u0000~\u0000\'t\u0000\nCostPerUseq\u0000~\u0000+q\u0000~\u0000Rsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0090[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\r\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppq\u0000~\u0000\u0006ppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppppppppq\u0000~\u0000\u0007ppppppppppppq\u0000~\u0000]ppppppppq\u0000~\u0000\nppppppppppppppppppppq\u0000~\u0000\bpppppppq\u0000~\u00000ppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000vq\u0000~\u0000Tq\u0000~\u0000rq\u0000~\u0000\u008bppppq\u0000~\u0000\u0005ppppppq\u0000~\u0000\u000bppppppppppppppppppppppppppppppppp");

                    public java.util.Calendar getRatesFrom() {
                        return _RatesFrom;
                    }

                    public void setRatesFrom(java.util.Calendar value) {
                        _RatesFrom = value;
                    }

                    public java.math.BigDecimal getCostPerUse() {
                        return _CostPerUse;
                    }

                    public void setCostPerUse(java.math.BigDecimal value) {
                        _CostPerUse = value;
                    }

                    public java.math.BigInteger getStandardRateFormat() {
                        return _StandardRateFormat;
                    }

                    public void setStandardRateFormat(java.math.BigInteger value) {
                        _StandardRateFormat = value;
                    }

                    public java.math.BigInteger getRateTable() {
                        return _RateTable;
                    }

                    public void setRateTable(java.math.BigInteger value) {
                        _RateTable = value;
                    }

                    public java.math.BigInteger getOvertimeRateFormat() {
                        return _OvertimeRateFormat;
                    }

                    public void setOvertimeRateFormat(java.math.BigInteger value) {
                        _OvertimeRateFormat = value;
                    }

                    public java.util.Calendar getRatesTo() {
                        return _RatesTo;
                    }

                    public void setRatesTo(java.util.Calendar value) {
                        _RatesTo = value;
                    }

                    public java.math.BigDecimal getOvertimeRate() {
                        return _OvertimeRate;
                    }

                    public void setOvertimeRate(java.math.BigDecimal value) {
                        _OvertimeRate = value;
                    }

                    public java.math.BigDecimal getStandardRate() {
                        return _StandardRate;
                    }

                    public void setStandardRate(java.math.BigDecimal value) {
                        _StandardRate = value;
                    }

                    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.Unmarshaller(context);
                    }

                    public Class getPrimaryInterfaceClass() {
                        return PRIMARY_INTERFACE_CLASS;
                    }

                    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                        context.startElement("http://schemas.microsoft.com/project", "RatesFrom");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _RatesFrom), null));
                        context.endElement();
                        context.startElement("http://schemas.microsoft.com/project", "RatesTo");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _RatesTo), null));
                        context.endElement();
                        if (_RateTable!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "RateTable");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _RateTable)));
                            context.endElement();
                        }
                        if (_StandardRate!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "StandardRate");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _StandardRate)));
                            context.endElement();
                        }
                        if (_StandardRateFormat!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "StandardRateFormat");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _StandardRateFormat)));
                            context.endElement();
                        }
                        if (_OvertimeRate!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "OvertimeRate");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _OvertimeRate)));
                            context.endElement();
                        }
                        if (_OvertimeRateFormat!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "OvertimeRateFormat");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _OvertimeRateFormat)));
                            context.endElement();
                        }
                        if (_CostPerUse!= null) {
                            context.startElement("http://schemas.microsoft.com/project", "CostPerUse");
                            context.endAttributes();
                            context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _CostPerUse)));
                            context.endElement();
                        }
                    }

                    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                        throws org.xml.sax.SAXException
                    {
                    }

                    public Class getPrimaryInterface() {
                        return (com.tapsterrock.mspdi.schema.ProjectType.ResourcesType.ResourceType.RatesType.RateType.class);
                    }

                    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                    }

                    public class Unmarshaller
                        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                    {


                        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                            super(context, "-------------------");
                        }

                        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.this;
                        }

                        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  6 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRate".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 9;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRateFormat".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 17;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRateFormat".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 11;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRate".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 7;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"RateTable".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 13;
                                        return ;
                                    }
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostPerUse".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 15;
                                        return ;
                                    }
                                    revertToParentFromEnterElement(___uri, ___local, __atts);
                                    return ;
                                case  0 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"RatesFrom".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"RatesTo".equals(___local)) {
                                        context.pushAttributes(__atts);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                            }
                            super.enterElement(___uri, ___local, __atts);
                        }

                        public void leaveElement(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  2 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"RatesFrom".equals(___local)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  8 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRate".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"RatesTo".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    revertToParentFromLeaveElement(___uri, ___local);
                                    return ;
                                case  12 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRateFormat".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  14 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"RateTable".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  16 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostPerUse".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  18 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRateFormat".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  10 :
                                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRate".equals(___local)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local);
                        }

                        public void enterAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  6 :
                                    revertToParentFromEnterAttribute(___uri, ___local);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local);
                        }

                        public void leaveAttribute(String ___uri, String ___local)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            switch (state) {
                                case  6 :
                                    revertToParentFromLeaveAttribute(___uri, ___local);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local);
                        }

                        public void text(String value)
                            throws com.sun.xml.bind.unmarshaller.UnreportedException
                        {
                            try {
                                switch (state) {
                                    case  17 :
                                        _OvertimeRateFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 18;
                                        return ;
                                    case  15 :
                                        _CostPerUse = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 16;
                                        return ;
                                    case  9 :
                                        _OvertimeRate = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 10;
                                        return ;
                                    case  1 :
                                        _RatesFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                        state = 2;
                                        return ;
                                    case  6 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  4 :
                                        _RatesTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                        state = 5;
                                        return ;
                                    case  7 :
                                        _StandardRate = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 8;
                                        return ;
                                    case  11 :
                                        _StandardRateFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 12;
                                        return ;
                                    case  13 :
                                        _RateTable = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                        state = 14;
                                        return ;
                                }
                            } catch (RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                        }

                    }

                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "---");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rate".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                            case  1 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"RatesFrom".equals(___local)) {
                                    _Rate.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.RateTypeImpl.class), 2, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rate".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  2 :
                                state = 2;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "----------------------------------------------------------------------------------------------------------------------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  26 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 27, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 27, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 27, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 27, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 27, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  3 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Phonetics".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 92;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CV".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 108;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 76;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkSubAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 18;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 22;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"SV".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 110;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRate".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 60;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 80;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rates".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 94;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"MaxUnits".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 40;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 58;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 12;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 30;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Initials".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 54;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 102;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableTo".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 82;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CanLevel".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 116;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 44;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ACWP".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 36;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableFrom".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 68;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"MaterialLabel".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 78;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 28;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 118;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 106;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsInactive".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 62;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Notes".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 56;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"NTAccount".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 64;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 88;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRate".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 120;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EmailAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 24;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 100;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 46;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRateFormat".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 42;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 66;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PeakUnits".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 6;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 90;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRateFormat".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 20;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Group".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 48;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentWorkComplete".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 16;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 26;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 104;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 122;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Code".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 96;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Hyperlink".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 114;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 98;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 50;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AccrueAt".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 70;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsGeneric".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 74;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 84;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 72;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 38;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriods".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 8;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 4;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsNull".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 52;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkGroup".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 14;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OverAllocated".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 10;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostPerUse".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 112;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 32;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RegularWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 86;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalendarUID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 34;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                        case  94 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rate".equals(___local)) {
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 95, ___uri, ___local, __atts));
                                return ;
                            }
                            break;
                        case  118 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 119, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 119, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 119, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  8 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriod".equals(___local)) {
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 9, ___uri, ___local, __atts));
                                return ;
                            }
                            break;
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            break;
                        case  28 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.BaselineTypeImpl.class), 29, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  106 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 107, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 107, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  35 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalendarUID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  26 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.ExtendedAttributeTypeImpl.class), 27, ___uri, ___local)));
                                return ;
                            }
                            break;
                        case  103 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  33 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  117 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CanLevel".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  17 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentWorkComplete".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  83 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableTo".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  11 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OverAllocated".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  43 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRateFormat".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  63 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsInactive".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  121 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRate".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                        case  19 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkSubAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  61 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StandardRate".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  123 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  119 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  27 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  59 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  113 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostPerUse".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  94 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rates".equals(___local)) {
                                _Rates = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.RatesTypeImpl.class), 95, ___uri, ___local));
                                return ;
                            }
                            break;
                        case  105 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  89 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  115 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Hyperlink".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  118 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.OutlineCodeTypeImpl.class), 119, ___uri, ___local)));
                                return ;
                            }
                            break;
                        case  8 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriods".equals(___local)) {
                                _AvailabilityPeriods = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.AvailabilityPeriodsTypeImpl.class), 9, ___uri, ___local));
                                return ;
                            }
                            break;
                        case  51 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  47 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  41 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"MaxUnits".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  49 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Group".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  111 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"SV".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  85 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  77 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  95 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rates".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  67 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CostVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  53 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsNull".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  91 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  99 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  31 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  69 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailableFrom".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  21 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeRateFormat".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  97 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Code".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  71 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AccrueAt".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  81 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  13 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  57 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Notes".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  93 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Phonetics".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  7 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PeakUnits".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  79 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"MaterialLabel".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  107 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  37 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ACWP".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  65 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"NTAccount".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  75 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsGeneric".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  101 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  109 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CV".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  25 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EmailAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  87 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RegularWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  45 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  29 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  23 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  15 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkGroup".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  9 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"AvailabilityPeriods".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  73 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  39 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  55 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Initials".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  98 :
                                _OvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 99;
                                return ;
                            case  56 :
                                _Notes = value;
                                state = 57;
                                return ;
                            case  14 :
                                _WorkGroup = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 15;
                                return ;
                            case  60 :
                                _StandardRate = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 61;
                                return ;
                            case  96 :
                                _Code = value;
                                state = 97;
                                return ;
                            case  32 :
                                _RemainingOvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 33;
                                return ;
                            case  18 :
                                _HyperlinkSubAddress = value;
                                state = 19;
                                return ;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  46 :
                                _Name = value;
                                state = 47;
                                return ;
                            case  30 :
                                _Work = value;
                                state = 31;
                                return ;
                            case  1 :
                                _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 2;
                                return ;
                            case  110 :
                                _SV = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_SV = true;
                                state = 111;
                                return ;
                            case  100 :
                                _RemainingCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 101;
                                return ;
                            case  24 :
                                _EmailAddress = value;
                                state = 25;
                                return ;
                            case  122 :
                                _RemainingOvertimeWork = value;
                                state = 123;
                                return ;
                            case  82 :
                                _AvailableTo = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 83;
                                return ;
                            case  6 :
                                _PeakUnits = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_PeakUnits = true;
                                state = 7;
                                return ;
                            case  78 :
                                _MaterialLabel = value;
                                state = 79;
                                return ;
                            case  102 :
                                _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 103;
                                return ;
                            case  44 :
                                _BCWS = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_BCWS = true;
                                state = 45;
                                return ;
                            case  104 :
                                _ActualOvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 105;
                                return ;
                            case  42 :
                                _StandardRateFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 43;
                                return ;
                            case  10 :
                                _OverAllocated = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_OverAllocated = true;
                                state = 11;
                                return ;
                            case  90 :
                                _WorkVariance = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_WorkVariance = true;
                                state = 91;
                                return ;
                            case  52 :
                                _IsNull = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsNull = true;
                                state = 53;
                                return ;
                            case  12 :
                                _ActualCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 13;
                                return ;
                            case  114 :
                                _Hyperlink = value;
                                state = 115;
                                return ;
                            case  120 :
                                _OvertimeRate = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 121;
                                return ;
                            case  34 :
                                _CalendarUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 35;
                                return ;
                            case  54 :
                                _Initials = value;
                                state = 55;
                                return ;
                            case  76 :
                                _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 77;
                                return ;
                            case  74 :
                                _IsGeneric = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsGeneric = true;
                                state = 75;
                                return ;
                            case  86 :
                                _RegularWork = value;
                                state = 87;
                                return ;
                            case  108 :
                                _CV = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_CV = true;
                                state = 109;
                                return ;
                            case  16 :
                                _PercentWorkComplete = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 17;
                                return ;
                            case  70 :
                                _AccrueAt = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 71;
                                return ;
                            case  40 :
                                _MaxUnits = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_MaxUnits = true;
                                state = 41;
                                return ;
                            case  20 :
                                _OvertimeRateFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 21;
                                return ;
                            case  38 :
                                _HyperlinkAddress = value;
                                state = 39;
                                return ;
                            case  112 :
                                _CostPerUse = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 113;
                                return ;
                            case  88 :
                                _RemainingWork = value;
                                state = 89;
                                return ;
                            case  68 :
                                _AvailableFrom = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 69;
                                return ;
                            case  66 :
                                _CostVariance = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_CostVariance = true;
                                state = 67;
                                return ;
                            case  64 :
                                _NTAccount = value;
                                state = 65;
                                return ;
                            case  72 :
                                _Type = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 73;
                                return ;
                            case  4 :
                                _ActualOvertimeWork = value;
                                state = 5;
                                return ;
                            case  62 :
                                _IsInactive = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsInactive = true;
                                state = 63;
                                return ;
                            case  48 :
                                _Group = value;
                                state = 49;
                                return ;
                            case  92 :
                                _Phonetics = value;
                                state = 93;
                                return ;
                            case  36 :
                                _ACWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_ACWP = true;
                                state = 37;
                                return ;
                            case  84 :
                                _ID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 85;
                                return ;
                            case  22 :
                                _ActualWork = value;
                                state = 23;
                                return ;
                            case  80 :
                                _BCWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_BCWP = true;
                                state = 81;
                                return ;
                            case  116 :
                                _CanLevel = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_CanLevel = true;
                                state = 117;
                                return ;
                            case  50 :
                                _Cost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 51;
                                return ;
                            case  58 :
                                _OvertimeWork = value;
                                state = 59;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

                public void leaveChild(int nextState)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (nextState) {
                        case  119 :
                            state = 119;
                            return ;
                        case  27 :
                            state = 27;
                            return ;
                        case  107 :
                            state = 107;
                            return ;
                        case  95 :
                            state = 95;
                            return ;
                        case  9 :
                            state = 9;
                            return ;
                        case  29 :
                            state = 29;
                            return ;
                    }
                    super.leaveChild(nextState);
                }

            }

        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "---");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resource".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                            _Resource.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.ResourceTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resource".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

    }

    public static class TasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.TasksType.class;
        protected java.util.ArrayList _Task = new java.util.ArrayList();
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0000\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0006\u0000\u00a7b\nq\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001q\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000;com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u0004Taskt\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getTask() {
            return _Task;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Task.size();
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "Task");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Task.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Task.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Task.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _Task.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class TaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.class;
            protected java.util.Calendar _LateFinish;
            protected java.util.Calendar _PreLeveledStart;
            protected boolean has_Summary;
            protected boolean _Summary;
            protected java.util.Calendar _Resume;
            protected boolean has_Recurring;
            protected boolean _Recurring;
            protected boolean has_Critical;
            protected boolean _Critical;
            protected java.util.Calendar _CreateDate;
            protected String _Work;
            protected java.util.Calendar _PreLeveledFinish;
            protected boolean has_Estimated;
            protected boolean _Estimated;
            protected boolean has_IgnoreResourceCalendar;
            protected boolean _IgnoreResourceCalendar;
            protected java.math.BigInteger _StartVariance;
            protected java.math.BigInteger _FinishVariance;
            protected java.math.BigInteger _CalendarUID;
            protected String _HyperlinkSubAddress;
            protected String _RemainingOvertimeWork;
            protected boolean has_IsSubprojectReadOnly;
            protected boolean _IsSubprojectReadOnly;
            protected String _RemainingWork;
            protected java.util.Calendar _Deadline;
            protected String _WBSLevel;
            protected boolean has_BCWP;
            protected float _BCWP;
            protected String _HyperlinkAddress;
            protected boolean has_Milestone;
            protected boolean _Milestone;
            protected String _WBS;
            protected java.math.BigDecimal _Cost;
            protected java.math.BigDecimal _ActualCost;
            protected java.math.BigInteger _PercentWorkComplete;
            protected boolean has_ACWP;
            protected float _ACWP;
            protected java.math.BigInteger _LevelingDelay;
            protected boolean has_FixedCost;
            protected float _FixedCost;
            protected java.math.BigDecimal _RemainingCost;
            protected java.util.Calendar _Start;
            protected java.math.BigDecimal _OvertimeCost;
            protected java.math.BigDecimal _RemainingOvertimeCost;
            protected String _Contact;
            protected String _ActualOvertimeWork;
            protected java.math.BigInteger _LevelingDelayFormat;
            protected String _SubprojectName;
            protected java.math.BigInteger _FreeSlack;
            protected boolean has_EffortDriven;
            protected boolean _EffortDriven;
            protected boolean has_LevelAssignments;
            protected boolean _LevelAssignments;
            protected String _Duration;
            protected java.util.ArrayList _Baseline = new java.util.ArrayList();
            protected java.math.BigDecimal _ActualOvertimeCost;
            protected String _Hyperlink;
            protected java.math.BigInteger _ID;
            protected java.math.BigInteger _PhysicalPercentComplete;
            protected java.math.BigInteger _Type;
            protected java.math.BigInteger _DurationFormat;
            protected boolean has_IsNull;
            protected boolean _IsNull;
            protected java.math.BigInteger _ConstraintType;
            protected java.math.BigInteger _PercentComplete;
            protected java.util.Calendar _EarlyStart;
            protected java.util.ArrayList _TimephasedData = new java.util.ArrayList();
            protected java.math.BigInteger _Priority;
            protected boolean has_LevelingCanSplit;
            protected boolean _LevelingCanSplit;
            protected boolean has_IsSubproject;
            protected boolean _IsSubproject;
            protected java.util.Calendar _ConstraintDate;
            protected java.util.ArrayList _ExtendedAttribute = new java.util.ArrayList();
            protected boolean has_HideBar;
            protected boolean _HideBar;
            protected String _RegularWork;
            protected String _Name;
            protected String _ActualDuration;
            protected String _OvertimeWork;
            protected String _OutlineNumber;
            protected boolean has_ExternalTask;
            protected boolean _ExternalTask;
            protected String _FixedCostAccrual;
            protected java.util.Calendar _Stop;
            protected java.util.ArrayList _PredecessorLink = new java.util.ArrayList();
            protected java.util.Calendar _EarlyFinish;
            protected String _Notes;
            protected java.util.Calendar _Finish;
            protected java.util.Calendar _LateStart;
            protected java.util.Calendar _ActualStart;
            protected java.util.ArrayList _OutlineCode = new java.util.ArrayList();
            protected java.math.BigInteger _TotalSlack;
            protected String _ActualWork;
            protected boolean has_ResumeValid;
            protected boolean _ResumeValid;
            protected java.math.BigInteger _UID;
            protected boolean has_Rollup;
            protected boolean _Rollup;
            protected java.util.Calendar _ActualFinish;
            protected boolean has_OverAllocated;
            protected boolean _OverAllocated;
            protected boolean has_WorkVariance;
            protected float _WorkVariance;
            protected java.math.BigInteger _EarnedValueMethod;
            protected String _RemainingDuration;
            protected boolean has_BCWS;
            protected float _BCWS;
            protected java.math.BigInteger _OutlineLevel;
            protected String _ExternalTaskProject;
            protected boolean has_CV;
            protected float _CV;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpT\u0018E\u0084ppsq\u0000~\u0000\u0000Sp\u00e3Fppsq\u0000~\u0000\u0000R\u00c9\u0081\bppsq\u0000~\u0000\u0000R\"\u001e\u00cappsq\u0000~\u0000\u0000Qz\u00bc\u008cppsq\u0000~\u0000\u0000P\u00d3ZNppsq\u0000~\u0000\u0000P-\u0086\u0014ppsq\u0000~\u0000\u0000O/\u0002\u0004ppsq\u0000~\u0000\u0000O\u0014D\u00fcppsq\u0000~\u0000\u0000N\u00f9\u0087\u00f4ppsq\u0000~\u0000\u0000MQ}`ppsq\u0000~\u0000\u0000K\u00a9r\u00ccppsq\u0000~\u0000\u0000J\u00f7@\u0091ppsq\u0000~\u0000\u0000IO5\u00fdppsq\u0000~\u0000\u0000G\u00f2\u00ba>ppsq\u0000~\u0000\u0000F\u0089\u00fc\u0088ppsq\u0000~\u0000\u0000E\u0084\u00c5\u00cappsq\u0000~\u0000\u0000D\u00f3\u00ca@ppsq\u0000~\u0000\u0000Db\u00ce\u00b6ppsq\u0000~\u0000\u0000C\u0017/\u00a0ppsq\u0000~\u0000\u0000B\u0018\u00ab\u0090ppsq\u0000~\u0000\u0000@p\u00a0\u00fcppsq\u0000~\u0000\u0000>\u00c8\u0096hppsq\u0000~\u0000\u0000>7\u009a\u00deppsq\u0000~\u0000\u0000=\u00a6\u009fTppsq\u0000~\u0000\u0000<\u00a8\u001bDppsq\u0000~\u0000\u0000:\u00b8\u00bc\u009cppsq\u0000~\u0000\u0000:\u009d\u00ff\u0094ppsq\u0000~\u0000\u0000:\u0083B\u008cppsq\u0000~\u0000\u00009\u008e\u00eb\u00eeppsq\u0000~\u0000\u00009vD%ppsq\u0000~\u0000\u00008\u0081\u00ed\u0087ppsq\u0000~\u0000\u00008iE\u00beppsq\u0000~\u0000\u00007t\u00ef ppsq\u0000~\u0000\u00006\u0080\u0098\u0082ppsq\u0000~\u0000\u00005\u008cA\u00e4ppsq\u0000~\u0000\u00004\u0097\u00ebFppsq\u0000~\u0000\u00004\u007fC}ppsq\u0000~\u0000\u00004f\u009b\u00b4ppsq\u0000~\u0000\u00003rE\u0016ppsq\u0000~\u0000\u00002\u00e1I\u008cppsq\u0000~\u0000\u00002PN\u0002ppsq\u0000~\u0000\u00001[\u00f7dppsq\u0000~\u0000\u00001CO\u009bppsq\u0000~\u0000\u00001*\u00a7\u00d2ppsq\u0000~\u0000\u00000,#\u00c2ppsq\u0000~\u0000\u0000/-\u009f\u00b2ppsq\u0000~\u0000\u0000.U\u0082\u00f6ppsq\u0000~\u0000\u0000.:\u00c5\u00eeppsq\u0000~\u0000\u0000-<A\u00deppsq\u0000~\u0000\u0000,=\u00bd\u00ceppsq\u0000~\u0000\u0000,#\u0000\u00c6ppsq\u0000~\u0000\u0000+$|\u00b6ppsq\u0000~\u0000\u0000*%\u00f8\u00a6ppsq\u0000~\u0000\u0000)\u0094\u00fd\u001cppsq\u0000~\u0000\u0000)\u0004\u0001\u0092ppsq\u0000~\u0000\u0000(s\u0006\bppsq\u0000~\u0000\u0000\'\u00e2\n~ppsq\u0000~\u0000\u0000&\u0089\u00d9\u008fppsq\u0000~\u0000\u0000$\u00e1\u00ce\u00fbppsq\u0000~\u0000\u0000$\u00c2o\tppsq\u0000~\u0000\u0000#\u001aduppsq\u0000~\u0000\u0000!rY\u00e1ppsq\u0000~\u0000\u0000\u001f\u00caOMppsq\u0000~\u0000\u0000\u001e\"D\u00b9ppsq\u0000~\u0000\u0000\u001cz:%ppsq\u0000~\u0000\u0000\u001a\u00d2/\u0091ppsq\u0000~\u0000\u0000\u0019*$\u00fdppsq\u0000~\u0000\u0000\u0017\u0082\u001aippsq\u0000~\u0000\u0000\u0015\u00da\u000f\u00d5ppsq\u0000~\u0000\u0000\u00142\u0005Appsq\u0000~\u0000\u0000\u0013\u00a1\t\u00b7ppsq\u0000~\u0000\u0000\u0013\u0010\u000e-ppsq\u0000~\u0000\u0000\u0012\u001b\u00b7\u008fppsq\u0000~\u0000\u0000\u0010Hh\u00b8ppsq\u0000~\u0000\u0000\u000fT\u0012\u001appsq\u0000~\u0000\u0000\u000e\u00c3\u0016\u0090ppsq\u0000~\u0000\u0000\u000e2\u001b\u0006ppsq\u0000~\u0000\u0000\r3\u0096\u00f6ppsq\u0000~\u0000\u0000\f5\u0012\u00e6ppsq\u0000~\u0000\u0000\n:\u00d6\u00cdppsq\u0000~\u0000\u0000\t\u0088\u00a4\u0092ppsq\u0000~\u0000\u0000\b\u00d6rWppsq\u0000~\u0000\u0000\u0007L\u00ec\u00aappsq\u0000~\u0000\u0000\u0006\u00bb\u00f1 ppsq\u0000~\u0000\u0000\u0005\u0013\u00e6\u008cppsq\u0000~\u0000\u0000\u0003\u00f6\f4ppsq\u0000~\u0000\u0000\u0001\u00fd\b\u0010ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000jL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000jL\u0000\fnamespaceURIq\u0000~\u0000jxpq\u0000~\u0000nq\u0000~\u0000msr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000jL\u0000\fnamespaceURIq\u0000~\u0000jxr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\u0002IDq\u0000~\u0000|sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000t\u0001psq\u0000~\u0000}\u0001\u00f9\u0004\u001fppsq\u0000~\u0000]\u0001\u00f9\u0004\u0014q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u00f9\u0004\tppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000jxq\u0000~\u0000it\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000p\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000gq\u0000~\u0000mt\u0000\u0006stringq\u0000~\u0000\u0090q\u0000~\u0000\u0092t\u0000\tmaxLength\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0004Nameq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u001d\u00daSppsq\u0000~\u0000]\u0001\u001d\u00daHq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u001d\u00da=ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000\u0089q\u0000~\u0000\u008epq\u0000~\u0000q\u0000\u0000q\u0000~\u0000lq\u0000~\u0000lt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000jxpt\u0000\u00012sq\u0000~\u0000\u00a2t\u0000\u00010sq\u0000~\u0000\u00a2t\u0000\u00011xq\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000finteger-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0004Typeq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000gq\u0000~\u0000mt\u0000\u0007booleanq\u0000~\u0000qq\u0000~\u0000ssq\u0000~\u0000vq\u0000~\u0000\u00b2q\u0000~\u0000msq\u0000~\u0000xt\u0000\u0006IsNullq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000gq\u0000~\u0000mt\u0000\bdateTimeq\u0000~\u0000qq\u0000~\u0000ssq\u0000~\u0000vq\u0000~\u0000\u00bcq\u0000~\u0000msq\u0000~\u0000xt\u0000\nCreateDateq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u0089\u0085\u00a8ppsq\u0000~\u0000]\u0001\u0089\u0085\u009dq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u0089\u0085\u0092ppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0007Contactq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00b226ppsq\u0000~\u0000]\u0000\u00b22+q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u00b22 ppq\u0000~\u0000\u0092q\u0000~\u0000ssq\u0000~\u0000vq\u0000~\u0000\u0093q\u0000~\u0000msq\u0000~\u0000xt\u0000\u0003WBSq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00b226ppsq\u0000~\u0000]\u0000\u00b22+q\u0000~\u0000up\u0000q\u0000~\u0000\u00casq\u0000~\u0000xt\u0000\bWBSLevelq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00fa<\u0014ppsq\u0000~\u0000]\u0001\u00fa<\tq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u00fa;\u00feppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\rOutlineNumberq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\fOutlineLevelq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\bPriorityq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u0005Startq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u0006Finishq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u00f4V\u0083ppsr\u0000%com.sun.msv.datatype.xsd.DurationType=;_\u00b5\u00cd\u007f\u00ea\u0016\u0002\u0000\u0000xq\u0000~\u0000gq\u0000~\u0000mt\u0000\bdurationq\u0000~\u0000qq\u0000~\u0000ssq\u0000~\u0000vq\u0000~\u0000\u00efq\u0000~\u0000msq\u0000~\u0000xt\u0000\bDurationq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00d3N\u00d2ppsq\u0000~\u0000]\u0001\u00d3N\u00c7q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u00d3N\u00bcppsq\u0000~\u0000\u009cq\u0000~\u0000\u008epq\u0000~\u0000q\u0000\u0000q\u0000~\u0000lq\u0000~\u0000lq\u0000~\u0000\u009fsq\u0000~\u0000\u00a0w\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00a2t\u0000\u00013sq\u0000~\u0000\u00a2t\u0000\u000241sq\u0000~\u0000\u00a2t\u0000\u000239sq\u0000~\u0000\u00a2t\u0000\u000236sq\u0000~\u0000\u00a2t\u0000\u00016sq\u0000~\u0000\u00a2t\u0000\u00015sq\u0000~\u0000\u00a2t\u0000\u000237sq\u0000~\u0000\u00a2t\u0000\u000211sq\u0000~\u0000\u00a2t\u0000\u000240sq\u0000~\u0000\u00a2t\u0000\u00014sq\u0000~\u0000\u00a2t\u0000\u000212sq\u0000~\u0000\u00a2t\u0000\u000252sq\u0000~\u0000\u00a2t\u0000\u00017sq\u0000~\u0000\u00a2t\u0000\u000238sq\u0000~\u0000\u00a2t\u0000\u000220sq\u0000~\u0000\u00a2t\u0000\u000242sq\u0000~\u0000\u00a2t\u0000\u000253sq\u0000~\u0000\u00a2t\u0000\u000243sq\u0000~\u0000\u00a2t\u0000\u000221sq\u0000~\u0000\u00a2t\u0000\u000210sq\u0000~\u0000\u00a2t\u0000\u000235sq\u0000~\u0000\u00a2t\u0000\u000244sq\u0000~\u0000\u00a2t\u0000\u00019sq\u0000~\u0000\u00a2t\u0000\u000219sq\u0000~\u0000\u00a2t\u0000\u00018sq\u0000~\u0000\u00a2t\u0000\u000251xq\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000finteger-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u000eDurationFormatq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\u0004Workq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u0004Stopq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u0006Resumeq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u000bResumeValidq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\fEffortDrivenq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\tRecurringq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\rOverAllocatedq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\tEstimatedq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\tMilestoneq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0007Summaryq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\bCriticalq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\fIsSubprojectq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0014IsSubprojectReadOnlyq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001f_\u00edppsq\u0000~\u0000]\u0000\u001f_\u00e2q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u001f_\u00d7ppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u000eSubprojectNameq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\fExternalTaskq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001X0\u00eappsq\u0000~\u0000]\u0001X0\u00dfq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001X0\u00d4ppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0013ExternalTaskProjectq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\nEarlyStartq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u000bEarlyFinishq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\tLateStartq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\nLateFinishq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\rStartVarianceq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\u000eFinishVarianceq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000]\u0000\u001a\u00bc\u00f8q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000gq\u0000~\u0000mt\u0000\u0005floatq\u0000~\u0000qq\u0000~\u0000ssq\u0000~\u0000vq\u0000~\u0001\u0096q\u0000~\u0000msq\u0000~\u0000xt\u0000\fWorkVarianceq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\tFreeSlackq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\nTotalSlackq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000]\u0000\u001a\u00bc\u00f8q\u0000~\u0000up\u0000q\u0000~\u0001\u0092sq\u0000~\u0000xt\u0000\tFixedCostq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00d8\u001c\u00b7ppsq\u0000~\u0000]\u0000\u00d8\u001c\u00acq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u00d8\u001c\u00a1ppsq\u0000~\u0000\u009cq\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u009fsq\u0000~\u0000\u00a0w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u00013t\u0000\u00012t\u0000\u00011xq\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0010FixedCostAccrualq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\u000fPercentCompleteq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\u0013PercentWorkCompleteq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000]\u0000\u0018\u00a7\u00b9q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u0018\u00a7\u00aeppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u00c9A\u007f\\\u00a4S\u00c2\u00a7\u0002\u0000\u0000xq\u0000~\u0000gq\u0000~\u0000mt\u0000\u0007decimalq\u0000~\u0000qq\u0000~\u0000ssq\u0000~\u0000vq\u0000~\u0001\u00bfq\u0000~\u0000msq\u0000~\u0000xt\u0000\u0004Costq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000]\u0000\u0018\u00a7\u00b9q\u0000~\u0000up\u0000q\u0000~\u0001\u00bcsq\u0000~\u0000xt\u0000\fOvertimeCostq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\fOvertimeWorkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u000bActualStartq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\fActualFinishq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\u000eActualDurationq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000]\u0000\u0018\u00a7\u00b9q\u0000~\u0000up\u0000q\u0000~\u0001\u00bcsq\u0000~\u0000xt\u0000\nActualCostq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000]\u0000\u0018\u00a7\u00b9q\u0000~\u0000up\u0000q\u0000~\u0001\u00bcsq\u0000~\u0000xt\u0000\u0012ActualOvertimeCostq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\nActualWorkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\u0012ActualOvertimeWorkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\u000bRegularWorkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\u0011RemainingDurationq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000]\u0000\u0018\u00a7\u00b9q\u0000~\u0000up\u0000q\u0000~\u0001\u00bcsq\u0000~\u0000xt\u0000\rRemainingCostq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\rRemainingWorkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000]\u0000\u0018\u00a7\u00b9q\u0000~\u0000up\u0000q\u0000~\u0001\u00bcsq\u0000~\u0000xt\u0000\u0015RemainingOvertimeCostq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00f4V\u0099ppsq\u0000~\u0000]\u0000\u00f4V\u008eq\u0000~\u0000up\u0000q\u0000~\u0000\u00ecsq\u0000~\u0000xt\u0000\u0015RemainingOvertimeWorkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000]\u0000\u001a\u00bc\u00f8q\u0000~\u0000up\u0000q\u0000~\u0001\u0092sq\u0000~\u0000xt\u0000\u0004ACWPq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000]\u0000\u001a\u00bc\u00f8q\u0000~\u0000up\u0000q\u0000~\u0001\u0092sq\u0000~\u0000xt\u0000\u0002CVq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00ef^\u00a3ppsq\u0000~\u0000]\u0001\u00ef^\u0098q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u00ef^\u008dppsq\u0000~\u0000\u009cq\u0000~\u0000\u008epq\u0000~\u0000q\u0000\u0000q\u0000~\u0000lq\u0000~\u0000lq\u0000~\u0000\u009fsq\u0000~\u0000\u00a0w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\bsq\u0000~\u0000\u00a2t\u0000\u00013sq\u0000~\u0000\u00a2t\u0000\u00015sq\u0000~\u0000\u00a2t\u0000\u00017sq\u0000~\u0000\u00a2t\u0000\u00012sq\u0000~\u0000\u00a2q\u0000~\u0000\u00a6sq\u0000~\u0000\u00a2t\u0000\u00014sq\u0000~\u0000\u00a2t\u0000\u00016sq\u0000~\u0000\u00a2t\u0000\u00011xq\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000finteger-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u000eConstraintTypeq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\u000bCalendarUIDq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u000eConstraintDateq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\bDeadlineq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0010LevelAssignmentsq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0010LevelingCanSplitq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\rLevelingDelayq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001K\u009f\u0011ppsq\u0000~\u0000]\u0001K\u009f\u0006q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001K\u009e\u00fbppsq\u0000~\u0000\u009cq\u0000~\u0000\u008epq\u0000~\u0000q\u0000\u0000q\u0000~\u0000lq\u0000~\u0000lq\u0000~\u0000\u009fsq\u0000~\u0000\u00a0w\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asq\u0000~\u0000\u00a2t\u0000\u00013sq\u0000~\u0000\u00a2t\u0000\u000241sq\u0000~\u0000\u00a2t\u0000\u000239sq\u0000~\u0000\u00a2t\u0000\u000236sq\u0000~\u0000\u00a2t\u0000\u00016sq\u0000~\u0000\u00a2t\u0000\u00015sq\u0000~\u0000\u00a2t\u0000\u000237sq\u0000~\u0000\u00a2t\u0000\u000211sq\u0000~\u0000\u00a2t\u0000\u000240sq\u0000~\u0000\u00a2t\u0000\u00014sq\u0000~\u0000\u00a2t\u0000\u000212sq\u0000~\u0000\u00a2t\u0000\u000252sq\u0000~\u0000\u00a2t\u0000\u00017sq\u0000~\u0000\u00a2t\u0000\u000238sq\u0000~\u0000\u00a2t\u0000\u000220sq\u0000~\u0000\u00a2t\u0000\u000242sq\u0000~\u0000\u00a2t\u0000\u000253sq\u0000~\u0000\u00a2t\u0000\u000243sq\u0000~\u0000\u00a2t\u0000\u000221sq\u0000~\u0000\u00a2t\u0000\u000210sq\u0000~\u0000\u00a2t\u0000\u000235sq\u0000~\u0000\u00a2t\u0000\u000244sq\u0000~\u0000\u00a2t\u0000\u00019sq\u0000~\u0000\u00a2t\u0000\u000219sq\u0000~\u0000\u00a2t\u0000\u00018sq\u0000~\u0000\u00a2t\u0000\u000251xq\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000finteger-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0013LevelingDelayFormatq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u000fPreLeveledStartq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000]\u0000\u0090\u00fbzq\u0000~\u0000up\u0000q\u0000~\u0000\u00b8sq\u0000~\u0000xt\u0000\u0010PreLeveledFinishq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00056\u00b9ppsq\u0000~\u0000]\u0001\u00056\u00aeq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\u00056\u00a3ppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\tHyperlinkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001h\u00bd\u00b1ppsq\u0000~\u0000]\u0001h\u00bd\u00a6q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001h\u00bd\u009bppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0010HyperlinkAddressq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\\{\u00bappsq\u0000~\u0000]\u0001\\{\u00afq\u0000~\u0000up\u0000sq\u0000~\u0000a\u0001\\{\u00a4ppsq\u0000~\u0000\u0088q\u0000~\u0000\u008epq\u0000~\u0000\u0090\u0000\u0000q\u0000~\u0000\u0092q\u0000~\u0000\u0092q\u0000~\u0000\u0094\u0000\u0000\u0002\u0000q\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000estring-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0013HyperlinkSubAddressq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0016IgnoreResourceCalendarq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00b226ppsq\u0000~\u0000]\u0000\u00b22+q\u0000~\u0000up\u0000q\u0000~\u0000\u00casq\u0000~\u0000xt\u0000\u0005Notesq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0007HideBarq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0001\u00a8\n\u008fppsq\u0000~\u0000]\u0001\u00a8\n\u0084q\u0000~\u0000up\u0000q\u0000~\u0000\u00afsq\u0000~\u0000xt\u0000\u0006Rollupq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000]\u0000\u001a\u00bc\u00f8q\u0000~\u0000up\u0000q\u0000~\u0001\u0092sq\u0000~\u0000xt\u0000\u0004BCWSq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000]\u0000\u001a\u00bc\u00f8q\u0000~\u0000up\u0000q\u0000~\u0001\u0092sq\u0000~\u0000xt\u0000\u0004BCWPq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00fe\u0084\u000bppsq\u0000~\u0000]\u0000\u00fe\u0084\u0000q\u0000~\u0000up\u0000q\u0000~\u0000dsq\u0000~\u0000xt\u0000\u0017PhysicalPercentCompleteq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00a5\u00d45ppsq\u0000~\u0000]\u0000\u00a5\u00d4*q\u0000~\u0000up\u0000sq\u0000~\u0000a\u0000\u00a5\u00d4\u001fppsq\u0000~\u0000\u009cq\u0000~\u0000\u008epq\u0000~\u0000q\u0000\u0000q\u0000~\u0000lq\u0000~\u0000lq\u0000~\u0000\u009fsq\u0000~\u0000\u00a0w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002sq\u0000~\u0000\u00a2q\u0000~\u0000\u00a6sq\u0000~\u0000\u00a2t\u0000\u00011xq\u0000~\u0000ssq\u0000~\u0000vt\u0000\u000finteger-derivedq\u0000~\u0000\u008esq\u0000~\u0000xt\u0000\u0011EarnedValueMethodq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.q\u0000~\u0000upsq\u0000~\u0000]\u0000\u00a7b+q\u0000~\u0000up\u0000sq\u0000~\u0000]\u0000\u00a7b pp\u0000sq\u0000~\u0000}\u0000\u00a7b\u0015ppsq\u0000~\u0002\u00bd\u0000\u00a7b\nq\u0000~\u0000upsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000^xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000upsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000\u0084q\u0000~\u0002\u00c7sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000yq\u0000~\u0000\u0083sq\u0000~\u0000xt\u0000Ocom.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000xt\u0000\u000fPredecessorLinkq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00a7b9ppsq\u0000~\u0002\u00bd\u0000\u00a7b.q\u0000~\u0000upsq\u0000~\u0000]\u0000\u00a7b+q\u0000~\u0000up\u0000sq\u0000~\u0000]\u0000\u00a7b pp\u0000sq\u0000~\u0000}\u0000\u00a7b\u0015ppsq\u0000~\u0002\u00bd\u0000\u00a7b\nq\u0000~\u0000upsq\u0000~\u0002\u00c4\u0000\u00a7b\u0007q\u0000~\u0000upq\u0000~\u0002\u00c7q\u0000~\u0002\u00c9q\u0000~\u0000\u0083sq\u0000~\u0000xt\u0000Qcom.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeTypeq\u0000~\u0002\u00ccsq\u0000~\u0000xt\u0000\u0011ExtendedAttributeq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00a7b9ppsq\u0000~\u0002\u00bd\u0000\u00a7b.q\u0000~\u0000upsq\u0000~\u0000]\u0000\u00a7b+q\u0000~\u0000up\u0000sq\u0000~\u0000]\u0000\u00a7b pp\u0000sq\u0000~\u0000}\u0000\u00a7b\u0015ppsq\u0000~\u0002\u00bd\u0000\u00a7b\nq\u0000~\u0000upsq\u0000~\u0002\u00c4\u0000\u00a7b\u0007q\u0000~\u0000upq\u0000~\u0002\u00c7q\u0000~\u0002\u00c9q\u0000~\u0000\u0083sq\u0000~\u0000xt\u0000Hcom.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineTypeq\u0000~\u0002\u00ccsq\u0000~\u0000xt\u0000\bBaselineq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00a7b9ppsq\u0000~\u0002\u00bd\u0000\u00a7b.q\u0000~\u0000upsq\u0000~\u0000]\u0000\u00a7b+q\u0000~\u0000up\u0000sq\u0000~\u0000]\u0000\u00a7b pp\u0000sq\u0000~\u0000}\u0000\u00a7b\u0015ppsq\u0000~\u0002\u00bd\u0000\u00a7b\nq\u0000~\u0000upsq\u0000~\u0002\u00c4\u0000\u00a7b\u0007q\u0000~\u0000upq\u0000~\u0002\u00c7q\u0000~\u0002\u00c9q\u0000~\u0000\u0083sq\u0000~\u0000xt\u0000Kcom.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeTypeq\u0000~\u0002\u00ccsq\u0000~\u0000xt\u0000\u000bOutlineCodeq\u0000~\u0000|q\u0000~\u0000\u0083sq\u0000~\u0000}\u0000\u00a7b9ppsq\u0000~\u0002\u00bd\u0000\u00a7b.q\u0000~\u0000upsq\u0000~\u0000]\u0000\u00a7b+q\u0000~\u0000up\u0000sq\u0000~\u0000]\u0000\u00a7b pp\u0000sq\u0000~\u0000}\u0000\u00a7b\u0015ppsq\u0000~\u0002\u00bd\u0000\u00a7b\nq\u0000~\u0000upsq\u0000~\u0002\u00c4\u0000\u00a7b\u0007q\u0000~\u0000upq\u0000~\u0002\u00c7q\u0000~\u0002\u00c9q\u0000~\u0000\u0083sq\u0000~\u0000xt\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypeq\u0000~\u0002\u00ccsq\u0000~\u0000xt\u0000\u000eTimephasedDataq\u0000~\u0000|q\u0000~\u0000\u0083sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0002\u00fc[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00bf\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Oq\u0000~\u0001\u009eq\u0000~\u0001\u009aq\u0000~\u0001\u008cq\u0000~\u0001\u0088q\u0000~\u0000~q\u0000~\u0000\u00daq\u0000~\u0000\u00deq\u0000~\u0002\u001fq\u0000~\u00023q\u0000~\u0002\u008cq\u0000~\u0000\u00d2q\u0000~\u0002\u00acq\u0000~\u0002\u00bfq\u0000~\u0000\u001fq\u0000~\u0002\u00d0q\u0000~\u0002\u00dfq\u0000~\u0002\u00deq\u0000~\u0002\u00dbq\u0000~\u0002\u00eaq\u0000~\u0002\u00e9q\u0000~\u0002\u00e6q\u0000~\u0002\u00f5q\u0000~\u0001lq\u0000~\u0000\u00adq\u0000~\u0000)q\u0000~\u0001<q\u0000~\u0001@q\u0000~\u0001Dq\u0000~\u0001Hq\u0000~\u0001Lq\u0000~\u0001Pq\u0000~\u0001Tq\u0000~\u0001Xq\u0000~\u0001\\q\u0000~\u0001`q\u0000~\u0002+q\u0000~\u0002/q\u0000~\u0002\u0094q\u0000~\u0002\u009cq\u0000~\u0002\u00a0q\u0000~\u0002\u00bcq\u0000~\u0002\u00cfq\u0000~\u0002\u00daq\u0000~\u0002\u00e5q\u0000~\u0002\u00f4q\u0000~\u0002\u00f1q\u0000~\u0002\u00f0ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\npppppppppppppppppppppppppppq\u0000~\u0000\tpppppppq\u0000~\u0002\u00b0ppppppppppppq\u0000~\u0000&ppppppq\u0000~\u0000\bppppppppppppppppppq\u0000~\u0000\u0014ppppppppq\u0000~\u0000\u0007pq\u0000~\u00027pppppppppq\u0000~\u0000$q\u0000~\u0001ppppppppppppq\u0000~\u0000Kppq\u0000~\u0000\u0006q\u0000~\u00000pppq\u0000~\u0000\rppppppq\u0000~\u0000,pq\u0000~\u0002|q\u0000~\u0000Lpppppppppq\u0000~\u0000Jppq\u0000~\u0000\u0005pq\u0000~\u0000-q\u0000~\u00007q\u0000~\u0000\"q\u0000~\u0000Mq\u0000~\u00006ppq\u0000~\u00005q\u0000~\u0000\u00c0pppppppppq\u0000~\u0000.ppppq\u0000~\u0000Ipppppq\u0000~\u0000*ppq\u0000~\u0002\u0084q\u0000~\u0000 ppppppppppppq\u0000~\u0001\u00ebq\u0000~\u0001\u00e7q\u0000~\u0001\u00e3q\u0000~\u0001\u00dfq\u0000~\u0001\u00d3q\u0000~\u0000Hq\u0000~\u0001\u00c7q\u0000~\u0000\u00eaq\u0000~\u00010q\u0000~\u0001\u00f3q\u0000~\u0001\u00fbpppppppppppppppppppq\u0000~\u0000(ppq\u0000~\u0000Gppppppppppppppppppq\u0000~\u0000@ppppppppq\u0000~\u0000Fpppppq\u0000~\u0000Zpppppppppq\u0000~\u0000Xppq\u0000~\u0000?ppppppppq\u0000~\u0000Epppppq\u0000~\u0000Ypppppppppppppppppppppq\u0000~\u0000Dppppppppppppppppppppppq\u0000~\u0000\u0010ppppq\u0000~\u0000Cpppq\u0000~\u0000\u0099ppppppppppq\u0000~\u0000%pppppppq\u0000~\u0000\u000fppq\u0000~\u00003q\u0000~\u0000\u0013q\u0000~\u0000Bq\u0000~\u0000Pq\u0000~\u00002pq\u0000~\u00001q\u0000~\u0001\u00a6ppppppppq\u0000~\u0000\u0012q\u0000~\u0000Upppq\u0000~\u0000Qpppq\u0000~\u0000\u000eq\u0000~\u0000\u001bpppq\u0000~\u0000Aq\u0000~\u0001\u00a2q\u0000~\u0001\u0090q\u0000~\u0000Tq\u0000~\u0001\u00ffq\u0000~\u0002\u0003q\u0000~\u0000Sq\u0000~\u0000#q\u0000~\u0002\u00a4q\u0000~\u0000Rq\u0000~\u0002\u0007q\u0000~\u0002\u00a8ppq\u0000~\u0000\u001cq\u0000~\u0001\u00efq\u0000~\u0001\u00dbq\u0000~\u0001\u00d7q\u0000~\u0001\u00c3q\u0000~\u0001\u00baq\u0000~\u0000:q\u0000~\u00009q\u0000~\u00008q\u0000~\u0001\u00f7q\u0000~\u0000\u001aq\u0000~\u0000\u0011pppq\u0000~\u0000\u001eppq\u0000~\u0000\u001dq\u0000~\u0000;q\u0000~\u0000+ppppppppppppppppq\u0000~\u0000<q\u0000~\u0000\u0019q\u0000~\u0000!pq\u0000~\u0000\u0018ppppppq\u0000~\u0000Vppppppq\u0000~\u0000=pppppppppppppppppq\u0000~\u0000>ppppppppppppppppppppppppppppppq\u0000~\u0001dpppppppppq\u0000~\u0000\'ppppppppq\u0000~\u0000Wpppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000[ppppq\u0000~\u0000\u0085pq\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~\u0002\u0098pppppppppppppppppppppq\u0000~\u0000\u0015ppq\u0000~\u0000\u00f3ppppq\u0000~\u0000Npppq\u0000~\u0000\fppq\u0000~\u0000\u000bppq\u0000~\u0000\u0016ppppq\u0000~\u0000/ppppppppq\u0000~\u0002\u00c3q\u0000~\u0001\u00cfq\u0000~\u0001\u00cbq\u0000~\u0001\u0084q\u0000~\u0001\u0080q\u0000~\u0001|q\u0000~\u0001xq\u0000~\u0000\u00b6q\u0000~\u0000\u00e2q\u0000~\u0000\u00e6q\u0000~\u00014q\u0000~\u00018q\u0000~\u00004q\u0000~\u0002#q\u0000~\u0000\\q\u0000~\u0002\'q\u0000~\u0000\u0017q\u0000~\u0002tq\u0000~\u0002xq\u0000~\u0002\u00c2q\u0000~\u0002\u00d4q\u0000~\u0002\u00d3q\u0000~\u0001\u00b6q\u0000~\u0001\u00b2");

            public java.util.Calendar getLateFinish() {
                return _LateFinish;
            }

            public void setLateFinish(java.util.Calendar value) {
                _LateFinish = value;
            }

            public java.util.Calendar getPreLeveledStart() {
                return _PreLeveledStart;
            }

            public void setPreLeveledStart(java.util.Calendar value) {
                _PreLeveledStart = value;
            }

            public boolean isSummary() {
                return _Summary;
            }

            public void setSummary(boolean value) {
                _Summary = value;
                has_Summary = true;
            }

            public java.util.Calendar getResume() {
                return _Resume;
            }

            public void setResume(java.util.Calendar value) {
                _Resume = value;
            }

            public boolean isRecurring() {
                return _Recurring;
            }

            public void setRecurring(boolean value) {
                _Recurring = value;
                has_Recurring = true;
            }

            public boolean isCritical() {
                return _Critical;
            }

            public void setCritical(boolean value) {
                _Critical = value;
                has_Critical = true;
            }

            public java.util.Calendar getCreateDate() {
                return _CreateDate;
            }

            public void setCreateDate(java.util.Calendar value) {
                _CreateDate = value;
            }

            public String getWork() {
                return _Work;
            }

            public void setWork(String value) {
                _Work = value;
            }

            public java.util.Calendar getPreLeveledFinish() {
                return _PreLeveledFinish;
            }

            public void setPreLeveledFinish(java.util.Calendar value) {
                _PreLeveledFinish = value;
            }

            public boolean isEstimated() {
                return _Estimated;
            }

            public void setEstimated(boolean value) {
                _Estimated = value;
                has_Estimated = true;
            }

            public boolean isIgnoreResourceCalendar() {
                return _IgnoreResourceCalendar;
            }

            public void setIgnoreResourceCalendar(boolean value) {
                _IgnoreResourceCalendar = value;
                has_IgnoreResourceCalendar = true;
            }

            public java.math.BigInteger getStartVariance() {
                return _StartVariance;
            }

            public void setStartVariance(java.math.BigInteger value) {
                _StartVariance = value;
            }

            public java.math.BigInteger getFinishVariance() {
                return _FinishVariance;
            }

            public void setFinishVariance(java.math.BigInteger value) {
                _FinishVariance = value;
            }

            public java.math.BigInteger getCalendarUID() {
                return _CalendarUID;
            }

            public void setCalendarUID(java.math.BigInteger value) {
                _CalendarUID = value;
            }

            public String getHyperlinkSubAddress() {
                return _HyperlinkSubAddress;
            }

            public void setHyperlinkSubAddress(String value) {
                _HyperlinkSubAddress = value;
            }

            public String getRemainingOvertimeWork() {
                return _RemainingOvertimeWork;
            }

            public void setRemainingOvertimeWork(String value) {
                _RemainingOvertimeWork = value;
            }

            public boolean isIsSubprojectReadOnly() {
                return _IsSubprojectReadOnly;
            }

            public void setIsSubprojectReadOnly(boolean value) {
                _IsSubprojectReadOnly = value;
                has_IsSubprojectReadOnly = true;
            }

            public String getRemainingWork() {
                return _RemainingWork;
            }

            public void setRemainingWork(String value) {
                _RemainingWork = value;
            }

            public java.util.Calendar getDeadline() {
                return _Deadline;
            }

            public void setDeadline(java.util.Calendar value) {
                _Deadline = value;
            }

            public String getWBSLevel() {
                return _WBSLevel;
            }

            public void setWBSLevel(String value) {
                _WBSLevel = value;
            }

            public float getBCWP() {
                return _BCWP;
            }

            public void setBCWP(float value) {
                _BCWP = value;
                has_BCWP = true;
            }

            public String getHyperlinkAddress() {
                return _HyperlinkAddress;
            }

            public void setHyperlinkAddress(String value) {
                _HyperlinkAddress = value;
            }

            public boolean isMilestone() {
                return _Milestone;
            }

            public void setMilestone(boolean value) {
                _Milestone = value;
                has_Milestone = true;
            }

            public String getWBS() {
                return _WBS;
            }

            public void setWBS(String value) {
                _WBS = value;
            }

            public java.math.BigDecimal getCost() {
                return _Cost;
            }

            public void setCost(java.math.BigDecimal value) {
                _Cost = value;
            }

            public java.math.BigDecimal getActualCost() {
                return _ActualCost;
            }

            public void setActualCost(java.math.BigDecimal value) {
                _ActualCost = value;
            }

            public java.math.BigInteger getPercentWorkComplete() {
                return _PercentWorkComplete;
            }

            public void setPercentWorkComplete(java.math.BigInteger value) {
                _PercentWorkComplete = value;
            }

            public float getACWP() {
                return _ACWP;
            }

            public void setACWP(float value) {
                _ACWP = value;
                has_ACWP = true;
            }

            public java.math.BigInteger getLevelingDelay() {
                return _LevelingDelay;
            }

            public void setLevelingDelay(java.math.BigInteger value) {
                _LevelingDelay = value;
            }

            public float getFixedCost() {
                return _FixedCost;
            }

            public void setFixedCost(float value) {
                _FixedCost = value;
                has_FixedCost = true;
            }

            public java.math.BigDecimal getRemainingCost() {
                return _RemainingCost;
            }

            public void setRemainingCost(java.math.BigDecimal value) {
                _RemainingCost = value;
            }

            public java.util.Calendar getStart() {
                return _Start;
            }

            public void setStart(java.util.Calendar value) {
                _Start = value;
            }

            public java.math.BigDecimal getOvertimeCost() {
                return _OvertimeCost;
            }

            public void setOvertimeCost(java.math.BigDecimal value) {
                _OvertimeCost = value;
            }

            public java.math.BigDecimal getRemainingOvertimeCost() {
                return _RemainingOvertimeCost;
            }

            public void setRemainingOvertimeCost(java.math.BigDecimal value) {
                _RemainingOvertimeCost = value;
            }

            public String getContact() {
                return _Contact;
            }

            public void setContact(String value) {
                _Contact = value;
            }

            public String getActualOvertimeWork() {
                return _ActualOvertimeWork;
            }

            public void setActualOvertimeWork(String value) {
                _ActualOvertimeWork = value;
            }

            public java.math.BigInteger getLevelingDelayFormat() {
                return _LevelingDelayFormat;
            }

            public void setLevelingDelayFormat(java.math.BigInteger value) {
                _LevelingDelayFormat = value;
            }

            public String getSubprojectName() {
                return _SubprojectName;
            }

            public void setSubprojectName(String value) {
                _SubprojectName = value;
            }

            public java.math.BigInteger getFreeSlack() {
                return _FreeSlack;
            }

            public void setFreeSlack(java.math.BigInteger value) {
                _FreeSlack = value;
            }

            public boolean isEffortDriven() {
                return _EffortDriven;
            }

            public void setEffortDriven(boolean value) {
                _EffortDriven = value;
                has_EffortDriven = true;
            }

            public boolean isLevelAssignments() {
                return _LevelAssignments;
            }

            public void setLevelAssignments(boolean value) {
                _LevelAssignments = value;
                has_LevelAssignments = true;
            }

            public String getDuration() {
                return _Duration;
            }

            public void setDuration(String value) {
                _Duration = value;
            }

            public java.util.List getBaseline() {
                return _Baseline;
            }

            public java.math.BigDecimal getActualOvertimeCost() {
                return _ActualOvertimeCost;
            }

            public void setActualOvertimeCost(java.math.BigDecimal value) {
                _ActualOvertimeCost = value;
            }

            public String getHyperlink() {
                return _Hyperlink;
            }

            public void setHyperlink(String value) {
                _Hyperlink = value;
            }

            public java.math.BigInteger getID() {
                return _ID;
            }

            public void setID(java.math.BigInteger value) {
                _ID = value;
            }

            public java.math.BigInteger getPhysicalPercentComplete() {
                return _PhysicalPercentComplete;
            }

            public void setPhysicalPercentComplete(java.math.BigInteger value) {
                _PhysicalPercentComplete = value;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public java.math.BigInteger getDurationFormat() {
                return _DurationFormat;
            }

            public void setDurationFormat(java.math.BigInteger value) {
                _DurationFormat = value;
            }

            public boolean isIsNull() {
                return _IsNull;
            }

            public void setIsNull(boolean value) {
                _IsNull = value;
                has_IsNull = true;
            }

            public java.math.BigInteger getConstraintType() {
                return _ConstraintType;
            }

            public void setConstraintType(java.math.BigInteger value) {
                _ConstraintType = value;
            }

            public java.math.BigInteger getPercentComplete() {
                return _PercentComplete;
            }

            public void setPercentComplete(java.math.BigInteger value) {
                _PercentComplete = value;
            }

            public java.util.Calendar getEarlyStart() {
                return _EarlyStart;
            }

            public void setEarlyStart(java.util.Calendar value) {
                _EarlyStart = value;
            }

            public java.util.List getTimephasedData() {
                return _TimephasedData;
            }

            public java.math.BigInteger getPriority() {
                return _Priority;
            }

            public void setPriority(java.math.BigInteger value) {
                _Priority = value;
            }

            public boolean isLevelingCanSplit() {
                return _LevelingCanSplit;
            }

            public void setLevelingCanSplit(boolean value) {
                _LevelingCanSplit = value;
                has_LevelingCanSplit = true;
            }

            public boolean isIsSubproject() {
                return _IsSubproject;
            }

            public void setIsSubproject(boolean value) {
                _IsSubproject = value;
                has_IsSubproject = true;
            }

            public java.util.Calendar getConstraintDate() {
                return _ConstraintDate;
            }

            public void setConstraintDate(java.util.Calendar value) {
                _ConstraintDate = value;
            }

            public java.util.List getExtendedAttribute() {
                return _ExtendedAttribute;
            }

            public boolean isHideBar() {
                return _HideBar;
            }

            public void setHideBar(boolean value) {
                _HideBar = value;
                has_HideBar = true;
            }

            public String getRegularWork() {
                return _RegularWork;
            }

            public void setRegularWork(String value) {
                _RegularWork = value;
            }

            public String getName() {
                return _Name;
            }

            public void setName(String value) {
                _Name = value;
            }

            public String getActualDuration() {
                return _ActualDuration;
            }

            public void setActualDuration(String value) {
                _ActualDuration = value;
            }

            public String getOvertimeWork() {
                return _OvertimeWork;
            }

            public void setOvertimeWork(String value) {
                _OvertimeWork = value;
            }

            public String getOutlineNumber() {
                return _OutlineNumber;
            }

            public void setOutlineNumber(String value) {
                _OutlineNumber = value;
            }

            public boolean isExternalTask() {
                return _ExternalTask;
            }

            public void setExternalTask(boolean value) {
                _ExternalTask = value;
                has_ExternalTask = true;
            }

            public String getFixedCostAccrual() {
                return _FixedCostAccrual;
            }

            public void setFixedCostAccrual(String value) {
                _FixedCostAccrual = value;
            }

            public java.util.Calendar getStop() {
                return _Stop;
            }

            public void setStop(java.util.Calendar value) {
                _Stop = value;
            }

            public java.util.List getPredecessorLink() {
                return _PredecessorLink;
            }

            public java.util.Calendar getEarlyFinish() {
                return _EarlyFinish;
            }

            public void setEarlyFinish(java.util.Calendar value) {
                _EarlyFinish = value;
            }

            public String getNotes() {
                return _Notes;
            }

            public void setNotes(String value) {
                _Notes = value;
            }

            public java.util.Calendar getFinish() {
                return _Finish;
            }

            public void setFinish(java.util.Calendar value) {
                _Finish = value;
            }

            public java.util.Calendar getLateStart() {
                return _LateStart;
            }

            public void setLateStart(java.util.Calendar value) {
                _LateStart = value;
            }

            public java.util.Calendar getActualStart() {
                return _ActualStart;
            }

            public void setActualStart(java.util.Calendar value) {
                _ActualStart = value;
            }

            public java.util.List getOutlineCode() {
                return _OutlineCode;
            }

            public java.math.BigInteger getTotalSlack() {
                return _TotalSlack;
            }

            public void setTotalSlack(java.math.BigInteger value) {
                _TotalSlack = value;
            }

            public String getActualWork() {
                return _ActualWork;
            }

            public void setActualWork(String value) {
                _ActualWork = value;
            }

            public boolean isResumeValid() {
                return _ResumeValid;
            }

            public void setResumeValid(boolean value) {
                _ResumeValid = value;
                has_ResumeValid = true;
            }

            public java.math.BigInteger getUID() {
                return _UID;
            }

            public void setUID(java.math.BigInteger value) {
                _UID = value;
            }

            public boolean isRollup() {
                return _Rollup;
            }

            public void setRollup(boolean value) {
                _Rollup = value;
                has_Rollup = true;
            }

            public java.util.Calendar getActualFinish() {
                return _ActualFinish;
            }

            public void setActualFinish(java.util.Calendar value) {
                _ActualFinish = value;
            }

            public boolean isOverAllocated() {
                return _OverAllocated;
            }

            public void setOverAllocated(boolean value) {
                _OverAllocated = value;
                has_OverAllocated = true;
            }

            public float getWorkVariance() {
                return _WorkVariance;
            }

            public void setWorkVariance(float value) {
                _WorkVariance = value;
                has_WorkVariance = true;
            }

            public java.math.BigInteger getEarnedValueMethod() {
                return _EarnedValueMethod;
            }

            public void setEarnedValueMethod(java.math.BigInteger value) {
                _EarnedValueMethod = value;
            }

            public String getRemainingDuration() {
                return _RemainingDuration;
            }

            public void setRemainingDuration(String value) {
                _RemainingDuration = value;
            }

            public float getBCWS() {
                return _BCWS;
            }

            public void setBCWS(float value) {
                _BCWS = value;
                has_BCWS = true;
            }

            public java.math.BigInteger getOutlineLevel() {
                return _OutlineLevel;
            }

            public void setOutlineLevel(java.math.BigInteger value) {
                _OutlineLevel = value;
            }

            public String getExternalTaskProject() {
                return _ExternalTaskProject;
            }

            public void setExternalTaskProject(String value) {
                _ExternalTaskProject = value;
            }

            public float getCV() {
                return _CV;
            }

            public void setCV(float value) {
                _CV = value;
                has_CV = true;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx43 = 0;
                final int len43 = _Baseline.size();
                int idx54 = 0;
                final int len54 = _TimephasedData.size();
                int idx59 = 0;
                final int len59 = _ExtendedAttribute.size();
                int idx69 = 0;
                final int len69 = _PredecessorLink.size();
                int idx75 = 0;
                final int len75 = _OutlineCode.size();
                context.startElement("http://schemas.microsoft.com/project", "UID");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                context.endElement();
                if (_ID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ID)));
                    context.endElement();
                }
                if (_Name!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Name");
                    context.endAttributes();
                    context.text(((String) _Name));
                    context.endElement();
                }
                if (_Type!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Type");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Type)));
                    context.endElement();
                }
                if (has_IsNull) {
                    context.startElement("http://schemas.microsoft.com/project", "IsNull");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsNull))));
                    context.endElement();
                }
                if (_CreateDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CreateDate");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _CreateDate), null));
                    context.endElement();
                }
                if (_Contact!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Contact");
                    context.endAttributes();
                    context.text(((String) _Contact));
                    context.endElement();
                }
                if (_WBS!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WBS");
                    context.endAttributes();
                    context.text(((String) _WBS));
                    context.endElement();
                }
                if (_WBSLevel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "WBSLevel");
                    context.endAttributes();
                    context.text(((String) _WBSLevel));
                    context.endElement();
                }
                if (_OutlineNumber!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineNumber");
                    context.endAttributes();
                    context.text(((String) _OutlineNumber));
                    context.endElement();
                }
                if (_OutlineLevel!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineLevel");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _OutlineLevel)));
                    context.endElement();
                }
                if (_Priority!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Priority");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Priority)));
                    context.endElement();
                }
                if (_Start!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Start");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null));
                    context.endElement();
                }
                if (_Finish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Finish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null));
                    context.endElement();
                }
                if (_Duration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Duration");
                    context.endAttributes();
                    context.text(((String) _Duration));
                    context.endElement();
                }
                if (_DurationFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DurationFormat)));
                    context.endElement();
                }
                if (_Work!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Work");
                    context.endAttributes();
                    context.text(((String) _Work));
                    context.endElement();
                }
                if (_Stop!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Stop");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Stop), null));
                    context.endElement();
                }
                if (_Resume!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Resume");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Resume), null));
                    context.endElement();
                }
                if (has_ResumeValid) {
                    context.startElement("http://schemas.microsoft.com/project", "ResumeValid");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_ResumeValid))));
                    context.endElement();
                }
                if (has_EffortDriven) {
                    context.startElement("http://schemas.microsoft.com/project", "EffortDriven");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_EffortDriven))));
                    context.endElement();
                }
                if (has_Recurring) {
                    context.startElement("http://schemas.microsoft.com/project", "Recurring");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Recurring))));
                    context.endElement();
                }
                if (has_OverAllocated) {
                    context.startElement("http://schemas.microsoft.com/project", "OverAllocated");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_OverAllocated))));
                    context.endElement();
                }
                if (has_Estimated) {
                    context.startElement("http://schemas.microsoft.com/project", "Estimated");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Estimated))));
                    context.endElement();
                }
                if (has_Milestone) {
                    context.startElement("http://schemas.microsoft.com/project", "Milestone");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Milestone))));
                    context.endElement();
                }
                if (has_Summary) {
                    context.startElement("http://schemas.microsoft.com/project", "Summary");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Summary))));
                    context.endElement();
                }
                if (has_Critical) {
                    context.startElement("http://schemas.microsoft.com/project", "Critical");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Critical))));
                    context.endElement();
                }
                if (has_IsSubproject) {
                    context.startElement("http://schemas.microsoft.com/project", "IsSubproject");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsSubproject))));
                    context.endElement();
                }
                if (has_IsSubprojectReadOnly) {
                    context.startElement("http://schemas.microsoft.com/project", "IsSubprojectReadOnly");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IsSubprojectReadOnly))));
                    context.endElement();
                }
                if (_SubprojectName!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "SubprojectName");
                    context.endAttributes();
                    context.text(((String) _SubprojectName));
                    context.endElement();
                }
                if (has_ExternalTask) {
                    context.startElement("http://schemas.microsoft.com/project", "ExternalTask");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_ExternalTask))));
                    context.endElement();
                }
                if (_ExternalTaskProject!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ExternalTaskProject");
                    context.endAttributes();
                    context.text(((String) _ExternalTaskProject));
                    context.endElement();
                }
                if (_EarlyStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarlyStart");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EarlyStart), null));
                    context.endElement();
                }
                if (_EarlyFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarlyFinish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EarlyFinish), null));
                    context.endElement();
                }
                if (_LateStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LateStart");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LateStart), null));
                    context.endElement();
                }
                if (_LateFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LateFinish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _LateFinish), null));
                    context.endElement();
                }
                if (_StartVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "StartVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _StartVariance)));
                    context.endElement();
                }
                if (_FinishVariance!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FinishVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _FinishVariance)));
                    context.endElement();
                }
                if (has_WorkVariance) {
                    context.startElement("http://schemas.microsoft.com/project", "WorkVariance");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_WorkVariance))));
                    context.endElement();
                }
                if (_FreeSlack!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FreeSlack");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _FreeSlack)));
                    context.endElement();
                }
                if (_TotalSlack!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "TotalSlack");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _TotalSlack)));
                    context.endElement();
                }
                if (has_FixedCost) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_FixedCost))));
                    context.endElement();
                }
                if (_FixedCostAccrual!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "FixedCostAccrual");
                    context.endAttributes();
                    context.text(((String) _FixedCostAccrual));
                    context.endElement();
                }
                if (_PercentComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentComplete");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _PercentComplete)));
                    context.endElement();
                }
                if (_PercentWorkComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PercentWorkComplete");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _PercentWorkComplete)));
                    context.endElement();
                }
                if (_Cost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Cost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _Cost)));
                    context.endElement();
                }
                if (_OvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _OvertimeCost)));
                    context.endElement();
                }
                if (_OvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "OvertimeWork");
                    context.endAttributes();
                    context.text(((String) _OvertimeWork));
                    context.endElement();
                }
                if (_ActualStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualStart");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualStart), null));
                    context.endElement();
                }
                if (_ActualFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualFinish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ActualFinish), null));
                    context.endElement();
                }
                if (_ActualDuration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualDuration");
                    context.endAttributes();
                    context.text(((String) _ActualDuration));
                    context.endElement();
                }
                if (_ActualCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _ActualCost)));
                    context.endElement();
                }
                if (_ActualOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _ActualOvertimeCost)));
                    context.endElement();
                }
                if (_ActualWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualWork");
                    context.endAttributes();
                    context.text(((String) _ActualWork));
                    context.endElement();
                }
                if (_ActualOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ActualOvertimeWork");
                    context.endAttributes();
                    context.text(((String) _ActualOvertimeWork));
                    context.endElement();
                }
                if (_RegularWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RegularWork");
                    context.endAttributes();
                    context.text(((String) _RegularWork));
                    context.endElement();
                }
                if (_RemainingDuration!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingDuration");
                    context.endAttributes();
                    context.text(((String) _RemainingDuration));
                    context.endElement();
                }
                if (_RemainingCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _RemainingCost)));
                    context.endElement();
                }
                if (_RemainingWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingWork");
                    context.endAttributes();
                    context.text(((String) _RemainingWork));
                    context.endElement();
                }
                if (_RemainingOvertimeCost!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeCost");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _RemainingOvertimeCost)));
                    context.endElement();
                }
                if (_RemainingOvertimeWork!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "RemainingOvertimeWork");
                    context.endAttributes();
                    context.text(((String) _RemainingOvertimeWork));
                    context.endElement();
                }
                if (has_ACWP) {
                    context.startElement("http://schemas.microsoft.com/project", "ACWP");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_ACWP))));
                    context.endElement();
                }
                if (has_CV) {
                    context.startElement("http://schemas.microsoft.com/project", "CV");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_CV))));
                    context.endElement();
                }
                if (_ConstraintType!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ConstraintType");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ConstraintType)));
                    context.endElement();
                }
                if (_CalendarUID!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "CalendarUID");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _CalendarUID)));
                    context.endElement();
                }
                if (_ConstraintDate!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "ConstraintDate");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ConstraintDate), null));
                    context.endElement();
                }
                if (_Deadline!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Deadline");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Deadline), null));
                    context.endElement();
                }
                if (has_LevelAssignments) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelAssignments");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_LevelAssignments))));
                    context.endElement();
                }
                if (has_LevelingCanSplit) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingCanSplit");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_LevelingCanSplit))));
                    context.endElement();
                }
                if (_LevelingDelay!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelay");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _LevelingDelay)));
                    context.endElement();
                }
                if (_LevelingDelayFormat!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "LevelingDelayFormat");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _LevelingDelayFormat)));
                    context.endElement();
                }
                if (_PreLeveledStart!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PreLeveledStart");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _PreLeveledStart), null));
                    context.endElement();
                }
                if (_PreLeveledFinish!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PreLeveledFinish");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _PreLeveledFinish), null));
                    context.endElement();
                }
                if (_Hyperlink!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Hyperlink");
                    context.endAttributes();
                    context.text(((String) _Hyperlink));
                    context.endElement();
                }
                if (_HyperlinkAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkAddress");
                    context.endAttributes();
                    context.text(((String) _HyperlinkAddress));
                    context.endElement();
                }
                if (_HyperlinkSubAddress!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "HyperlinkSubAddress");
                    context.endAttributes();
                    context.text(((String) _HyperlinkSubAddress));
                    context.endElement();
                }
                if (has_IgnoreResourceCalendar) {
                    context.startElement("http://schemas.microsoft.com/project", "IgnoreResourceCalendar");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_IgnoreResourceCalendar))));
                    context.endElement();
                }
                if (_Notes!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "Notes");
                    context.endAttributes();
                    context.text(((String) _Notes));
                    context.endElement();
                }
                if (has_HideBar) {
                    context.startElement("http://schemas.microsoft.com/project", "HideBar");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_HideBar))));
                    context.endElement();
                }
                if (has_Rollup) {
                    context.startElement("http://schemas.microsoft.com/project", "Rollup");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Rollup))));
                    context.endElement();
                }
                if (has_BCWS) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWS");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWS))));
                    context.endElement();
                }
                if (has_BCWP) {
                    context.startElement("http://schemas.microsoft.com/project", "BCWP");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWP))));
                    context.endElement();
                }
                if (_PhysicalPercentComplete!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "PhysicalPercentComplete");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _PhysicalPercentComplete)));
                    context.endElement();
                }
                if (_EarnedValueMethod!= null) {
                    context.startElement("http://schemas.microsoft.com/project", "EarnedValueMethod");
                    context.endAttributes();
                    context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _EarnedValueMethod)));
                    context.endElement();
                }
                while (idx69 != len69) {
                    context.startElement("http://schemas.microsoft.com/project", "PredecessorLink");
                    int idx_84 = idx69;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _PredecessorLink.get(idx_84 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _PredecessorLink.get(idx69 ++)));
                    context.endElement();
                }
                while (idx59 != len59) {
                    context.startElement("http://schemas.microsoft.com/project", "ExtendedAttribute");
                    int idx_85 = idx59;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx_85 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _ExtendedAttribute.get(idx59 ++)));
                    context.endElement();
                }
                while (idx43 != len43) {
                    context.startElement("http://schemas.microsoft.com/project", "Baseline");
                    int idx_86 = idx43;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Baseline.get(idx_86 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Baseline.get(idx43 ++)));
                    context.endElement();
                }
                while (idx75 != len75) {
                    context.startElement("http://schemas.microsoft.com/project", "OutlineCode");
                    int idx_87 = idx75;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCode.get(idx_87 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _OutlineCode.get(idx75 ++)));
                    context.endElement();
                }
                while (idx54 != len54) {
                    context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                    int idx_88 = idx54;
                    context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx_88 ++)));
                    context.endAttributes();
                    context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx54 ++)));
                    context.endElement();
                }
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx43 = 0;
                final int len43 = _Baseline.size();
                int idx54 = 0;
                final int len54 = _TimephasedData.size();
                int idx59 = 0;
                final int len59 = _ExtendedAttribute.size();
                int idx69 = 0;
                final int len69 = _PredecessorLink.size();
                int idx75 = 0;
                final int len75 = _OutlineCode.size();
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx43 = 0;
                final int len43 = _Baseline.size();
                int idx54 = 0;
                final int len54 = _TimephasedData.size();
                int idx59 = 0;
                final int len59 = _ExtendedAttribute.size();
                int idx69 = 0;
                final int len69 = _PredecessorLink.size();
                int idx75 = 0;
                final int len75 = _OutlineCode.size();
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class BaselineTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType.class;
                protected java.math.BigInteger _DurationFormat;
                protected boolean has_BCWP;
                protected float _BCWP;
                protected java.util.Calendar _Start;
                protected boolean has_BCWS;
                protected float _BCWS;
                protected java.math.BigDecimal _Cost;
                protected java.util.Calendar _Finish;
                protected java.math.BigInteger _Number;
                protected java.util.ArrayList _TimephasedData = new java.util.ArrayList();
                protected String _Duration;
                protected boolean has_Interim;
                protected boolean _Interim;
                protected String _Work;
                protected boolean has_EstimatedDuration;
                protected boolean _EstimatedDuration;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\b\u00f6\"wppsq\u0000~\u0000\u0000\b\u00dbeoppsq\u0000~\u0000\u0000\b\u00c0\u00a8gppsq\u0000~\u0000\u0000\b\u00a8\u0000\u009eppsq\u0000~\u0000\u0000\u0007\u00b3\u00aa\u0000ppsq\u0000~\u0000\u0000\u0006\u000b\u009flppsq\u0000~\u0000\u0000\u0005d>\u008fppsq\u0000~\u0000\u0000\u0004o\u00e7\u00f1ppsq\u0000~\u0000\u0000\u0003\u00de\u00ecgppsq\u0000~\u0000\u0000\u0003M\u00f0\u00ddppsq\u0000~\u0000\u0000\u0001\u00a5\u00e6Ippsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b+q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0017\u0000\u00a7b pp\u0000sq\u0000~\u0000\u0010\u0000\u00a7b\u0015ppsq\u0000~\u0000\u0012\u0000\u00a7b\nq\u0000~\u0000\u0016psr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0018xq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0015\u0001q\u0000~\u0000!sr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\"psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000)xq\u0000~\u0000$t\u0000/com.tapsterrock.mspdi.schema.TimephasedDataTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000(t\u0000\u000eTimephasedDatat\u0000$http://schemas.microsoft.com/projectq\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u0017\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0016p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000)L\u0000\btypeNameq\u0000~\u0000)L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000)L\u0000\fnamespaceURIq\u0000~\u0000)xpq\u0000~\u0000>q\u0000~\u0000=sq\u0000~\u0000(t\u0000\u0006Numberq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0017\u0001\u00a8\n\u0084q\u0000~\u0000\u0016p\u0000sq\u0000~\u00002\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\u0007booleanq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000Mq\u0000~\u0000=sq\u0000~\u0000(t\u0000\u0007Interimq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000\u0017\u0000\u0090\u00fbzq\u0000~\u0000\u0016p\u0000sq\u0000~\u00002\u0000\u0090\u00fboppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u00dc\u0095\u001e\u00dce\u00d3\tW\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\bdateTimeq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000Wq\u0000~\u0000=sq\u0000~\u0000(t\u0000\u0005Startq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u0090\u00fb\u0085ppsq\u0000~\u0000\u0017\u0000\u0090\u00fbzq\u0000~\u0000\u0016p\u0000q\u0000~\u0000Ssq\u0000~\u0000(t\u0000\u0006Finishq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u00f4V\u0099ppsq\u0000~\u0000\u0017\u0000\u00f4V\u008eq\u0000~\u0000\u0016p\u0000sq\u0000~\u00002\u0000\u00f4V\u0083ppsr\u0000%com.sun.msv.datatype.xsd.DurationType=;_\u00b5\u00cd\u007f\u00ea\u0016\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\bdurationq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000dq\u0000~\u0000=sq\u0000~\u0000(t\u0000\bDurationq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u00a7`\u00d8ppsq\u0000~\u0000\u0017\u0000\u00a7`\u00cdq\u0000~\u0000\u0016p\u0000sq\u0000~\u00002\u0000\u00a7`\u00c2ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000)xq\u0000~\u0000:t\u0000\u0000pq\u0000~\u0000A\u0000\u0000q\u0000~\u0000<q\u0000~\u0000<t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000)xpt\u0000\u00013sq\u0000~\u0000vt\u0000\u000241sq\u0000~\u0000vt\u0000\u000239sq\u0000~\u0000vt\u0000\u000236sq\u0000~\u0000vt\u0000\u00016sq\u0000~\u0000vt\u0000\u00015sq\u0000~\u0000vt\u0000\u000237sq\u0000~\u0000vt\u0000\u000211sq\u0000~\u0000vt\u0000\u000240sq\u0000~\u0000vt\u0000\u00014sq\u0000~\u0000vt\u0000\u000212sq\u0000~\u0000vt\u0000\u000252sq\u0000~\u0000vt\u0000\u00017sq\u0000~\u0000vt\u0000\u000238sq\u0000~\u0000vt\u0000\u000220sq\u0000~\u0000vt\u0000\u000242sq\u0000~\u0000vt\u0000\u000253sq\u0000~\u0000vt\u0000\u000243sq\u0000~\u0000vt\u0000\u000221sq\u0000~\u0000vt\u0000\u000210sq\u0000~\u0000vt\u0000\u000235sq\u0000~\u0000vt\u0000\u000244sq\u0000~\u0000vt\u0000\u00019sq\u0000~\u0000vt\u0000\u000219sq\u0000~\u0000vt\u0000\u00018sq\u0000~\u0000vt\u0000\u000251xq\u0000~\u0000Csq\u0000~\u0000Dt\u0000\u000finteger-derivedq\u0000~\u0000rsq\u0000~\u0000(t\u0000\u000eDurationFormatq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0001\u00a8\n\u008fppsq\u0000~\u0000\u0017\u0001\u00a8\n\u0084q\u0000~\u0000\u0016p\u0000q\u0000~\u0000Jsq\u0000~\u0000(t\u0000\u0011EstimatedDurationq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u00f4V\u0099ppsq\u0000~\u0000\u0017\u0000\u00f4V\u008eq\u0000~\u0000\u0016p\u0000q\u0000~\u0000asq\u0000~\u0000(t\u0000\u0004Workq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u0018\u00a7\u00c4ppsq\u0000~\u0000\u0017\u0000\u0018\u00a7\u00b9q\u0000~\u0000\u0016p\u0000sq\u0000~\u00002\u0000\u0018\u00a7\u00aeppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u00c9A\u007f\\\u00a4S\u00c2\u00a7\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\u0007decimalq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00bcq\u0000~\u0000=sq\u0000~\u0000(t\u0000\u0004Costq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\u0017\u0000\u001a\u00bc\u00f8q\u0000~\u0000\u0016p\u0000sq\u0000~\u00002\u0000\u001a\u00bc\u00edppsr\u0000\"com.sun.msv.datatype.xsd.FloatType\u0088\u0088\u00a2\u0000pm\u008a.\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\u0005floatq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00c6q\u0000~\u0000=sq\u0000~\u0000(t\u0000\u0004BCWSq\u0000~\u0000/q\u0000~\u0000\'sq\u0000~\u0000\u0010\u0000\u001a\u00bd\u0003ppsq\u0000~\u0000\u0017\u0000\u001a\u00bc\u00f8q\u0000~\u0000\u0016p\u0000q\u0000~\u0000\u00c2sq\u0000~\u0000(t\u0000\u0004BCWPq\u0000~\u0000/q\u0000~\u0000\'sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00cf[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u001a\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppq\u0000~\u0000\u000bpppppppq\u0000~\u0000\rppppppppppppppppppppppppq\u0000~\u0000\tpq\u0000~\u0000Hq\u0000~\u0000\u00afpppppppppppppppppppppppppq\u0000~\u0000\u000fpppppppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000_q\u0000~\u0000Qq\u0000~\u0000[q\u0000~\u0000\u00b3q\u0000~\u0000\u0007q\u0000~\u0000\u00c0q\u0000~\u0000\u00capppppq\u0000~\u0000\u001dppppppq\u0000~\u0000\fppq\u0000~\u00000q\u0000~\u0000\u001cppq\u0000~\u0000\u000eppppppppppppppppq\u0000~\u0000\bppppq\u0000~\u0000\u0014ppppppppq\u0000~\u0000\u00b7pq\u0000~\u0000\u0011ppppppppppppppppppppppppppppq\u0000~\u0000hpppppq\u0000~\u0000\u0006pppq\u0000~\u0000\npppppp");

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public float getBCWP() {
                    return _BCWP;
                }

                public void setBCWP(float value) {
                    _BCWP = value;
                    has_BCWP = true;
                }

                public java.util.Calendar getStart() {
                    return _Start;
                }

                public void setStart(java.util.Calendar value) {
                    _Start = value;
                }

                public float getBCWS() {
                    return _BCWS;
                }

                public void setBCWS(float value) {
                    _BCWS = value;
                    has_BCWS = true;
                }

                public java.math.BigDecimal getCost() {
                    return _Cost;
                }

                public void setCost(java.math.BigDecimal value) {
                    _Cost = value;
                }

                public java.util.Calendar getFinish() {
                    return _Finish;
                }

                public void setFinish(java.util.Calendar value) {
                    _Finish = value;
                }

                public java.math.BigInteger getNumber() {
                    return _Number;
                }

                public void setNumber(java.math.BigInteger value) {
                    _Number = value;
                }

                public java.util.List getTimephasedData() {
                    return _TimephasedData;
                }

                public String getDuration() {
                    return _Duration;
                }

                public void setDuration(String value) {
                    _Duration = value;
                }

                public boolean isInterim() {
                    return _Interim;
                }

                public void setInterim(boolean value) {
                    _Interim = value;
                    has_Interim = true;
                }

                public String getWork() {
                    return _Work;
                }

                public void setWork(String value) {
                    _Work = value;
                }

                public boolean isEstimatedDuration() {
                    return _EstimatedDuration;
                }

                public void setEstimatedDuration(boolean value) {
                    _EstimatedDuration = value;
                    has_EstimatedDuration = true;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = _TimephasedData.size();
                    while (idx8 != len8) {
                        context.startElement("http://schemas.microsoft.com/project", "TimephasedData");
                        int idx_0 = idx8;
                        context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx_0 ++)));
                        context.endAttributes();
                        context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _TimephasedData.get(idx8 ++)));
                        context.endElement();
                    }
                    if (_Number!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Number");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Number)));
                        context.endElement();
                    }
                    if (has_Interim) {
                        context.startElement("http://schemas.microsoft.com/project", "Interim");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_Interim))));
                        context.endElement();
                    }
                    if (_Start!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Start");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Start), null));
                        context.endElement();
                    }
                    if (_Finish!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Finish");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _Finish), null));
                        context.endElement();
                    }
                    if (_Duration!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Duration");
                        context.endAttributes();
                        context.text(((String) _Duration));
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DurationFormat)));
                        context.endElement();
                    }
                    if (has_EstimatedDuration) {
                        context.startElement("http://schemas.microsoft.com/project", "EstimatedDuration");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_EstimatedDuration))));
                        context.endElement();
                    }
                    if (_Work!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Work");
                        context.endAttributes();
                        context.text(((String) _Work));
                        context.endElement();
                    }
                    if (_Cost!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Cost");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.NumberType.save(((java.math.BigDecimal) _Cost)));
                        context.endElement();
                    }
                    if (has_BCWS) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWS");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWS))));
                        context.endElement();
                    }
                    if (has_BCWP) {
                        context.startElement("http://schemas.microsoft.com/project", "BCWP");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.FloatType.save(((Float) new java.lang.Float(_BCWP))));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = _TimephasedData.size();
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    int idx8 = 0;
                    final int len8 = _TimephasedData.size();
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.BaselineType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-------------------------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  11 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 12, ___uri, ___local, __atts)));
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                    _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 12, ___uri, ___local, __atts)));
                                    return ;
                                }
                                break;
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 19;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 13;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Interim".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 21;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Duration".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 17;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 11;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 15;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 9;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 7;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 23;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"EstimatedDuration".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"EstimatedDuration".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  10 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  14 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  16 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  8 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  12 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  18 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Duration".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  20 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  22 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Interim".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  24 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  7 :
                                    _BCWS = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_BCWS = true;
                                    state = 8;
                                    return ;
                                case  19 :
                                    _BCWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                    has_BCWP = true;
                                    state = 20;
                                    return ;
                                case  17 :
                                    _Duration = value;
                                    state = 18;
                                    return ;
                                case  1 :
                                    _Work = value;
                                    state = 2;
                                    return ;
                                case  3 :
                                    _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                    state = 4;
                                    return ;
                                case  23 :
                                    _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                    state = 24;
                                    return ;
                                case  9 :
                                    _Cost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 10;
                                    return ;
                                case  5 :
                                    _EstimatedDuration = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                    has_EstimatedDuration = true;
                                    state = 6;
                                    return ;
                                case  21 :
                                    _Interim = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                    has_Interim = true;
                                    state = 22;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                                case  15 :
                                    _DurationFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 16;
                                    return ;
                                case  13 :
                                    _Number = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 14;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                    public void leaveChild(int nextState)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (nextState) {
                            case  12 :
                                state = 12;
                                return ;
                        }
                        super.leaveChild(nextState);
                    }

                }

            }

            public static class ExtendedAttributeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType.class;
                protected java.math.BigInteger _DurationFormat;
                protected String _Value;
                protected String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u00df\u0082Rppsq\u0000~\u0000\u0000\u0003al\u0091ppsq\u0000~\u0000\u0000\u0002b\u00e8\u0081ppsq\u0000~\u0000\u0000\u0001\u00b0\u00b6Fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000f\u0001psq\u0000~\u0000\t\u0000\u00b226ppsq\u0000~\u0000\u000b\u0000\u00b22+q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000#sq\u0000~\u0000$q\u0000~\u00003q\u0000~\u0000\u001dsq\u0000~\u0000&t\u0000\u0007FieldIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00b226ppsq\u0000~\u0000\u000b\u0000\u00b22+q\u0000~\u0000\u0010p\u0000q\u0000~\u00000sq\u0000~\u0000&t\u0000\u0005Valueq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\u000b\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0010p\u0000q\u0000~\u0000\u0014sq\u0000~\u0000&t\u0000\u0007ValueIDq\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000\t\u0001~\u0015\u00bcppsq\u0000~\u0000\u000b\u0001~\u0015\u00b1q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0011\u0001~\u0015\u00a6ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001axq\u0000~\u0000\u0019t\u0000\u0000pq\u0000~\u0000!\u0000\u0000q\u0000~\u0000\u001cq\u0000~\u0000\u001ct\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u001asr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001axpt\u0000\u00013sq\u0000~\u0000Ot\u0000\u000241sq\u0000~\u0000Ot\u0000\u000239sq\u0000~\u0000Ot\u0000\u000236sq\u0000~\u0000Ot\u0000\u00016sq\u0000~\u0000Ot\u0000\u00015sq\u0000~\u0000Ot\u0000\u000237sq\u0000~\u0000Ot\u0000\u000211sq\u0000~\u0000Ot\u0000\u000240sq\u0000~\u0000Ot\u0000\u00014sq\u0000~\u0000Ot\u0000\u000212sq\u0000~\u0000Ot\u0000\u000252sq\u0000~\u0000Ot\u0000\u00017sq\u0000~\u0000Ot\u0000\u000238sq\u0000~\u0000Ot\u0000\u000220sq\u0000~\u0000Ot\u0000\u000242sq\u0000~\u0000Ot\u0000\u000253sq\u0000~\u0000Ot\u0000\u000243sq\u0000~\u0000Ot\u0000\u000221sq\u0000~\u0000Ot\u0000\u000210sq\u0000~\u0000Ot\u0000\u000235sq\u0000~\u0000Ot\u0000\u000244sq\u0000~\u0000Ot\u0000\u00019sq\u0000~\u0000Ot\u0000\u000219sq\u0000~\u0000Ot\u0000\u00018sq\u0000~\u0000Ot\u0000\u000251xq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000finteger-derivedq\u0000~\u0000Ksq\u0000~\u0000&t\u0000\u000eDurationFormatq\u0000~\u0000*q\u0000~\u0000,sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0089[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\t\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppq\u0000~\u0000\u0007ppppppppq\u0000~\u0000Appppppppppppppppppppppppppppppppppppq\u0000~\u0000\bpppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\nq\u0000~\u0000=pppppppppppppppppppq\u0000~\u0000\u0006ppppppppppq\u0000~\u0000.q\u0000~\u00009pppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppp");

                public java.math.BigInteger getDurationFormat() {
                    return _DurationFormat;
                }

                public void setDurationFormat(java.math.BigInteger value) {
                    _DurationFormat = value;
                }

                public String getValue() {
                    return _Value;
                }

                public void setValue(String value) {
                    _Value = value;
                }

                public String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endAttributes();
                        context.text(((String) _FieldID));
                        context.endElement();
                    }
                    if (_Value!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Value");
                        context.endAttributes();
                        context.text(((String) _Value));
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValueID)));
                        context.endElement();
                    }
                    if (_DurationFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "DurationFormat");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _DurationFormat)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.ExtendedAttributeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-----------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 9;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 7;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  8 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  10 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  3 :
                                    _DurationFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 4;
                                    return ;
                                case  7 :
                                    _Value = value;
                                    state = 8;
                                    return ;
                                case  1 :
                                    _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 2;
                                    return ;
                                case  9 :
                                    _ValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 10;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                                case  5 :
                                    _FieldID = value;
                                    state = 6;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public static class OutlineCodeTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType.class;
                protected String _FieldID;
                protected java.math.BigInteger _ValueID;
                protected java.math.BigInteger _UID;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002\u00af:Vppsq\u0000~\u0000\u0000\u0001\u00b0\u00b6Fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0003UIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\r\u0001psq\u0000~\u0000\u0007\u0000\u00b226ppsq\u0000~\u0000\t\u0000\u00b22+q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u000f\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u00001q\u0000~\u0000\u001bsq\u0000~\u0000$t\u0000\u0007FieldIDq\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000\u0007\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\t\u0000\u00fe\u0084\u0000q\u0000~\u0000\u000ep\u0000q\u0000~\u0000\u0012sq\u0000~\u0000$t\u0000\u0007ValueIDq\u0000~\u0000(q\u0000~\u0000*sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000<[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0005\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\bq\u0000~\u00007ppppppppppppppppppppppppppppppq\u0000~\u0000,ppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppp");

                public String getFieldID() {
                    return _FieldID;
                }

                public void setFieldID(String value) {
                    _FieldID = value;
                }

                public java.math.BigInteger getValueID() {
                    return _ValueID;
                }

                public void setValueID(java.math.BigInteger value) {
                    _ValueID = value;
                }

                public java.math.BigInteger getUID() {
                    return _UID;
                }

                public void setUID(java.math.BigInteger value) {
                    _UID = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_UID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "UID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _UID)));
                        context.endElement();
                    }
                    if (_FieldID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "FieldID");
                        context.endAttributes();
                        context.text(((String) _FieldID));
                        context.endElement();
                    }
                    if (_ValueID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "ValueID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _ValueID)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.OutlineCodeType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  5 :
                                    _ValueID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 6;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    _FieldID = value;
                                    state = 2;
                                    return ;
                                case  3 :
                                    _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 4;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public static class PredecessorLinkTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
            {

                private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType.class;
                protected java.math.BigInteger _Type;
                protected String _CrossProjectName;
                protected java.math.BigInteger _PredecessorUID;
                protected java.math.BigInteger _LagFormat;
                protected boolean has_CrossProject;
                protected boolean _CrossProject;
                protected java.math.BigInteger _LinkLag;
                private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0006\u00d8\u0087Fppsq\u0000~\u0000\u0000\u0005\u00ed\u00e7\u00adppsq\u0000~\u0000\u0000\u0004\u00efc\u009dppsq\u0000~\u0000\u0000\u0004=1bppsq\u0000~\u0000\u0000\u0002\u0095&\u00ceppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00fe\u0084\u000bppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u000ePredecessorUIDt\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0010\u0001psq\u0000~\u0000\n\u0001\u0096\u00a2\u00beppsq\u0000~\u0000\f\u0001\u0096\u00a2\u00b3q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0012\u0001\u0096\u00a2\u00a8ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001bxq\u0000~\u0000\u001at\u0000\u0000pq\u0000~\u0000\"\u0000\u0000q\u0000~\u0000\u001dq\u0000~\u0000\u001dt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001bxpt\u0000\u00013sq\u0000~\u0000=t\u0000\u00012sq\u0000~\u0000=t\u0000\u00010sq\u0000~\u0000=t\u0000\u00011xq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000finteger-derivedq\u0000~\u00009sq\u0000~\u0000\'t\u0000\u0004Typeq\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\n\u0001\u00a8\n\u008fppsq\u0000~\u0000\f\u0001\u00a8\n\u0084q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0012\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0007booleanq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000Oq\u0000~\u0000\u001esq\u0000~\u0000\'t\u0000\fCrossProjectq\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\n\u0000\u00b226ppsq\u0000~\u0000\f\u0000\u00b22+q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0012\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000Xq\u0000~\u0000\u001esq\u0000~\u0000\'t\u0000\u0010CrossProjectNameq\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\n\u0000\u00fe\u0084\u000bppsq\u0000~\u0000\f\u0000\u00fe\u0084\u0000q\u0000~\u0000\u0011p\u0000q\u0000~\u0000\u0015sq\u0000~\u0000\'t\u0000\u0007LinkLagq\u0000~\u0000+q\u0000~\u0000-sq\u0000~\u0000\n\u0000\u00ea\u009f\u0094ppsq\u0000~\u0000\f\u0000\u00ea\u009f\u0089q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0012\u0000\u00ea\u009f~ppsq\u0000~\u00002q\u0000~\u00009pq\u0000~\u0000\"\u0000\u0000q\u0000~\u0000\u001dq\u0000~\u0000\u001dq\u0000~\u0000:sq\u0000~\u0000;w\f\u0000\u0000\u0000@?@\u0000\u0000\u0000\u0000\u0000\u0019sq\u0000~\u0000=t\u0000\u00013sq\u0000~\u0000=t\u0000\u000241sq\u0000~\u0000=t\u0000\u000239sq\u0000~\u0000=t\u0000\u000236sq\u0000~\u0000=t\u0000\u00016sq\u0000~\u0000=t\u0000\u00015sq\u0000~\u0000=t\u0000\u000237sq\u0000~\u0000=t\u0000\u000211sq\u0000~\u0000=t\u0000\u000240sq\u0000~\u0000=t\u0000\u00014sq\u0000~\u0000=t\u0000\u000212sq\u0000~\u0000=t\u0000\u000252sq\u0000~\u0000=t\u0000\u00017sq\u0000~\u0000=t\u0000\u000238sq\u0000~\u0000=t\u0000\u000220sq\u0000~\u0000=t\u0000\u000242sq\u0000~\u0000=t\u0000\u000253sq\u0000~\u0000=t\u0000\u000243sq\u0000~\u0000=t\u0000\u000210sq\u0000~\u0000=t\u0000\u000235sq\u0000~\u0000=t\u0000\u000244sq\u0000~\u0000=t\u0000\u00019sq\u0000~\u0000=t\u0000\u000219sq\u0000~\u0000=t\u0000\u00018sq\u0000~\u0000=t\u0000\u000251xq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000finteger-derivedq\u0000~\u00009sq\u0000~\u0000\'t\u0000\tLagFormatq\u0000~\u0000+q\u0000~\u0000-sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u009e[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppq\u0000~\u0000/ppppppppq\u0000~\u0000bppppppppppppppppppppppppq\u0000~\u0000\u0006ppq\u0000~\u0000Jpppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u000bq\u0000~\u0000^pppppq\u0000~\u0000\u0007q\u0000~\u0000\tpppppppppppppppppppppppq\u0000~\u0000Sppppppppppppppppppppq\u0000~\u0000\bppppppppppppppppppppppppppppp");

                public java.math.BigInteger getType() {
                    return _Type;
                }

                public void setType(java.math.BigInteger value) {
                    _Type = value;
                }

                public String getCrossProjectName() {
                    return _CrossProjectName;
                }

                public void setCrossProjectName(String value) {
                    _CrossProjectName = value;
                }

                public java.math.BigInteger getPredecessorUID() {
                    return _PredecessorUID;
                }

                public void setPredecessorUID(java.math.BigInteger value) {
                    _PredecessorUID = value;
                }

                public java.math.BigInteger getLagFormat() {
                    return _LagFormat;
                }

                public void setLagFormat(java.math.BigInteger value) {
                    _LagFormat = value;
                }

                public boolean isCrossProject() {
                    return _CrossProject;
                }

                public void setCrossProject(boolean value) {
                    _CrossProject = value;
                    has_CrossProject = true;
                }

                public java.math.BigInteger getLinkLag() {
                    return _LinkLag;
                }

                public void setLinkLag(java.math.BigInteger value) {
                    _LinkLag = value;
                }

                public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.Unmarshaller(context);
                }

                public Class getPrimaryInterfaceClass() {
                    return PRIMARY_INTERFACE_CLASS;
                }

                public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (_PredecessorUID!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "PredecessorUID");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _PredecessorUID)));
                        context.endElement();
                    }
                    if (_Type!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "Type");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Type)));
                        context.endElement();
                    }
                    if (has_CrossProject) {
                        context.startElement("http://schemas.microsoft.com/project", "CrossProject");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_CrossProject))));
                        context.endElement();
                    }
                    if (_CrossProjectName!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "CrossProjectName");
                        context.endAttributes();
                        context.text(((String) _CrossProjectName));
                        context.endElement();
                    }
                    if (_LinkLag!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "LinkLag");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _LinkLag)));
                        context.endElement();
                    }
                    if (_LagFormat!= null) {
                        context.startElement("http://schemas.microsoft.com/project", "LagFormat");
                        context.endAttributes();
                        context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _LagFormat)));
                        context.endElement();
                    }
                }

                public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                }

                public Class getPrimaryInterface() {
                    return (com.tapsterrock.mspdi.schema.ProjectType.TasksType.TaskType.PredecessorLinkType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
                {


                    public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                        super(context, "-------------");
                    }

                    protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                        return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.this;
                    }

                    public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"PredecessorUID".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 1;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 5;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"CrossProjectName".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 9;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"LinkLag".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 11;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"LagFormat".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 3;
                                    return ;
                                }
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"CrossProject".equals(___local)) {
                                    context.pushAttributes(__atts);
                                    state = 7;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, __atts);
                                return ;
                        }
                        super.enterElement(___uri, ___local, __atts);
                    }

                    public void leaveElement(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  10 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"CrossProjectName".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  12 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"LinkLag".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  2 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"PredecessorUID".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  6 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  8 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"CrossProject".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                            case  0 :
                                revertToParentFromLeaveElement(___uri, ___local);
                                return ;
                            case  4 :
                                if ("http://schemas.microsoft.com/project".equals(___uri)&&"LagFormat".equals(___local)) {
                                    context.popAttributes();
                                    state = 0;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local);
                    }

                    public void enterAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromEnterAttribute(___uri, ___local);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local);
                    }

                    public void leaveAttribute(String ___uri, String ___local)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        switch (state) {
                            case  0 :
                                revertToParentFromLeaveAttribute(___uri, ___local);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local);
                    }

                    public void text(String value)
                        throws com.sun.xml.bind.unmarshaller.UnreportedException
                    {
                        try {
                            switch (state) {
                                case  9 :
                                    _CrossProjectName = value;
                                    state = 10;
                                    return ;
                                case  7 :
                                    _CrossProject = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                    has_CrossProject = true;
                                    state = 8;
                                    return ;
                                case  0 :
                                    revertToParentFromText(value);
                                    return ;
                                case  1 :
                                    _PredecessorUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 2;
                                    return ;
                                case  5 :
                                    _Type = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 6;
                                    return ;
                                case  11 :
                                    _LinkLag = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 12;
                                    return ;
                                case  3 :
                                    _LagFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                    state = 4;
                                    return ;
                            }
                        } catch (RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            break;
                        case  42 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Number".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Interim".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Duration".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EstimatedDuration".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  98 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 99, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 99, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 99, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 99, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Value".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 99, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  3 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualStart".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 156;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsSubproject".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 20;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsNull".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 126;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 68;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RegularWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 172;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Deadline".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 54;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Milestone".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 174;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LateStart".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 146;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentComplete".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 134;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Notes".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 70;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSLevel".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 72;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhysicalPercentComplete".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 114;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarlyStart".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 108;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualDuration".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 30;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 152;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingCanSplit".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 76;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarlyFinish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 44;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 80;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 178;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 170;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineNumber".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 164;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 14;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarnedValueMethod".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 66;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 140;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Critical".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 18;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 148;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PreLeveledStart".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 60;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HideBar".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 106;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingDelay".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 90;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkSubAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 142;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 36;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PredecessorLink".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 130;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBS".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 120;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResumeValid".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 84;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 132;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 96;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IgnoreResourceCalendar".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 150;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LateFinish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 58;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 24;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Recurring".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 26;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Priority".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 128;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ConstraintDate".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 28;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CV".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 8;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EffortDriven".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 22;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExternalTaskProject".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 64;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 98;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 82;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 144;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Stop".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 138;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 102;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Summary".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 176;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FixedCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 122;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ConstraintType".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 56;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StartVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 62;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsSubprojectReadOnly".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 50;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 32;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Hyperlink".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 52;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualFinish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 10;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CreateDate".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 94;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PreLeveledFinish".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 162;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelAssignments".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 110;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Duration".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 154;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 40;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineLevel".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 6;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ACWP".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 112;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FixedCostAccrual".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 46;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 42;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FreeSlack".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 168;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 12;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingDuration".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 158;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 78;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExternalTask".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 136;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 4;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TotalSlack".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 166;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Contact".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 124;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeWork".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 38;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Estimated".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 118;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rollup".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 116;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"SubprojectName".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 104;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalendarUID".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 74;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingDelayFormat".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 160;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resume".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 16;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 86;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentWorkComplete".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 34;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkAddress".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 92;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeCost".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 100;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OverAllocated".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 48;
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FinishVariance".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 88;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                        case  14 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ValueID".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 15, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FieldID".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 15, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 15, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  12 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 13, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                _TimephasedData.add(((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.TimephasedDataTypeImpl.class), 13, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                        case  130 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PredecessorUID".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CrossProjectName".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LagFormat".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LinkLag".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local, __atts)));
                                return ;
                            }
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CrossProject".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local, __atts)));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  137 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExternalTask".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  13 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TimephasedData".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  71 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Notes".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  173 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RegularWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  42 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                _Baseline.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.BaselineTypeImpl.class), 43, ___uri, ___local)));
                                return ;
                            }
                            break;
                        case  99 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  25 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWP".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  161 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingDelayFormat".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  11 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualFinish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  83 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  125 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Contact".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  101 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  33 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  145 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingOvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  109 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarlyStart".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  21 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsSubproject".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  119 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Estimated".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  49 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OverAllocated".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  67 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarnedValueMethod".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  111 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelAssignments".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  37 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Work".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  29 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ConstraintDate".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  61 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PreLeveledStart".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  95 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CreateDate".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  131 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PredecessorLink".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  113 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ACWP".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  98 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                                _ExtendedAttribute.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.ExtendedAttributeTypeImpl.class), 99, ___uri, ___local)));
                                return ;
                            }
                            break;
                        case  59 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LateFinish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  45 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarlyFinish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  73 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSLevel".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  121 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBS".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  7 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineLevel".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  27 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Recurring".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  69 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  179 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualOvertimeCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  127 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsNull".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  167 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"TotalSlack".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  63 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"StartVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                        case  17 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resume".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  105 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"SubprojectName".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  129 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Priority".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  157 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualStart".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  41 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  159 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingDuration".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  165 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineNumber".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  14 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                                _OutlineCode.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.OutlineCodeTypeImpl.class), 15, ___uri, ___local)));
                                return ;
                            }
                            break;
                        case  15 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  117 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Rollup".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  169 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FreeSlack".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  23 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"EffortDriven".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  103 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  39 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"OvertimeWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  93 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  139 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Stop".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  19 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Critical".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  75 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalendarUID".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  57 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ConstraintType".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  55 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Deadline".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  81 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Start".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  79 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"BCWS".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  151 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IgnoreResourceCalendar".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  155 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Duration".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  175 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Milestone".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  149 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingWork".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  91 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingDelay".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  143 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HyperlinkSubAddress".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  153 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Finish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  147 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LateStart".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  31 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualDuration".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  89 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FinishVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  123 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FixedCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  85 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ResumeValid".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  135 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentComplete".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  107 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"HideBar".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  35 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PercentWorkComplete".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  77 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"LevelingCanSplit".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  53 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Hyperlink".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  47 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"FixedCostAccrual".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  115 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PhysicalPercentComplete".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  97 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkVariance".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  163 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PreLeveledFinish".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  43 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Baseline".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  51 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"IsSubprojectReadOnly".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  171 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ActualCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  87 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Cost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  177 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Summary".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  133 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  141 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"RemainingCost".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  9 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"CV".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  65 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExternalTaskProject".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  130 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"PredecessorLink".equals(___local)) {
                                _PredecessorLink.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.PredecessorLinkTypeImpl.class), 131, ___uri, ___local)));
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  34 :
                                _PercentWorkComplete = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 35;
                                return ;
                            case  54 :
                                _Deadline = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 55;
                                return ;
                            case  38 :
                                _OvertimeWork = value;
                                state = 39;
                                return ;
                            case  88 :
                                _FinishVariance = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 89;
                                return ;
                            case  30 :
                                _ActualDuration = value;
                                state = 31;
                                return ;
                            case  50 :
                                _IsSubprojectReadOnly = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsSubprojectReadOnly = true;
                                state = 51;
                                return ;
                            case  100 :
                                _OvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 101;
                                return ;
                            case  64 :
                                _ExternalTaskProject = value;
                                state = 65;
                                return ;
                            case  6 :
                                _OutlineLevel = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 7;
                                return ;
                            case  84 :
                                _ResumeValid = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_ResumeValid = true;
                                state = 85;
                                return ;
                            case  158 :
                                _RemainingDuration = value;
                                state = 159;
                                return ;
                            case  148 :
                                _RemainingWork = value;
                                state = 149;
                                return ;
                            case  112 :
                                _ACWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_ACWP = true;
                                state = 113;
                                return ;
                            case  28 :
                                _ConstraintDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 29;
                                return ;
                            case  104 :
                                _SubprojectName = value;
                                state = 105;
                                return ;
                            case  138 :
                                _Stop = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 139;
                                return ;
                            case  134 :
                                _PercentComplete = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 135;
                                return ;
                            case  178 :
                                _ActualOvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 179;
                                return ;
                            case  144 :
                                _RemainingOvertimeCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 145;
                                return ;
                            case  62 :
                                _StartVariance = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 63;
                                return ;
                            case  40 :
                                _ID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 41;
                                return ;
                            case  114 :
                                _PhysicalPercentComplete = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 115;
                                return ;
                            case  106 :
                                _HideBar = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_HideBar = true;
                                state = 107;
                                return ;
                            case  110 :
                                _LevelAssignments = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_LevelAssignments = true;
                                state = 111;
                                return ;
                            case  4 :
                                _DurationFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 5;
                                return ;
                            case  94 :
                                _CreateDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 95;
                                return ;
                            case  8 :
                                _CV = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_CV = true;
                                state = 9;
                                return ;
                            case  1 :
                                _UID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 2;
                                return ;
                            case  82 :
                                _RemainingOvertimeWork = value;
                                state = 83;
                                return ;
                            case  102 :
                                _ActualWork = value;
                                state = 103;
                                return ;
                            case  92 :
                                _HyperlinkAddress = value;
                                state = 93;
                                return ;
                            case  96 :
                                _WorkVariance = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_WorkVariance = true;
                                state = 97;
                                return ;
                            case  146 :
                                _LateStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 147;
                                return ;
                            case  162 :
                                _PreLeveledFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 163;
                                return ;
                            case  140 :
                                _RemainingCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 141;
                                return ;
                            case  20 :
                                _IsSubproject = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsSubproject = true;
                                state = 21;
                                return ;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                            case  136 :
                                _ExternalTask = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_ExternalTask = true;
                                state = 137;
                                return ;
                            case  124 :
                                _Contact = value;
                                state = 125;
                                return ;
                            case  116 :
                                _Rollup = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Rollup = true;
                                state = 117;
                                return ;
                            case  10 :
                                _ActualFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 11;
                                return ;
                            case  58 :
                                _LateFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 59;
                                return ;
                            case  152 :
                                _Finish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 153;
                                return ;
                            case  80 :
                                _Start = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 81;
                                return ;
                            case  86 :
                                _Cost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 87;
                                return ;
                            case  120 :
                                _WBS = value;
                                state = 121;
                                return ;
                            case  44 :
                                _EarlyFinish = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 45;
                                return ;
                            case  70 :
                                _Notes = value;
                                state = 71;
                                return ;
                            case  118 :
                                _Estimated = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Estimated = true;
                                state = 119;
                                return ;
                            case  170 :
                                _ActualCost = com.sun.msv.datatype.xsd.NumberType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 171;
                                return ;
                            case  126 :
                                _IsNull = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IsNull = true;
                                state = 127;
                                return ;
                            case  60 :
                                _PreLeveledStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 61;
                                return ;
                            case  176 :
                                _Summary = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Summary = true;
                                state = 177;
                                return ;
                            case  166 :
                                _TotalSlack = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 167;
                                return ;
                            case  72 :
                                _WBSLevel = value;
                                state = 73;
                                return ;
                            case  172 :
                                _RegularWork = value;
                                state = 173;
                                return ;
                            case  56 :
                                _ConstraintType = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 57;
                                return ;
                            case  142 :
                                _HyperlinkSubAddress = value;
                                state = 143;
                                return ;
                            case  32 :
                                _Type = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 33;
                                return ;
                            case  156 :
                                _ActualStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 157;
                                return ;
                            case  132 :
                                _Name = value;
                                state = 133;
                                return ;
                            case  22 :
                                _EffortDriven = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_EffortDriven = true;
                                state = 23;
                                return ;
                            case  108 :
                                _EarlyStart = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 109;
                                return ;
                            case  168 :
                                _FreeSlack = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 169;
                                return ;
                            case  74 :
                                _CalendarUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 75;
                                return ;
                            case  160 :
                                _LevelingDelayFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 161;
                                return ;
                            case  68 :
                                _ActualOvertimeWork = value;
                                state = 69;
                                return ;
                            case  52 :
                                _Hyperlink = value;
                                state = 53;
                                return ;
                            case  26 :
                                _Recurring = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Recurring = true;
                                state = 27;
                                return ;
                            case  16 :
                                _Resume = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                                state = 17;
                                return ;
                            case  164 :
                                _OutlineNumber = value;
                                state = 165;
                                return ;
                            case  174 :
                                _Milestone = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Milestone = true;
                                state = 175;
                                return ;
                            case  78 :
                                _BCWS = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_BCWS = true;
                                state = 79;
                                return ;
                            case  76 :
                                _LevelingCanSplit = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_LevelingCanSplit = true;
                                state = 77;
                                return ;
                            case  46 :
                                _FixedCostAccrual = value;
                                state = 47;
                                return ;
                            case  150 :
                                _IgnoreResourceCalendar = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_IgnoreResourceCalendar = true;
                                state = 151;
                                return ;
                            case  90 :
                                _LevelingDelay = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 91;
                                return ;
                            case  18 :
                                _Critical = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_Critical = true;
                                state = 19;
                                return ;
                            case  24 :
                                _BCWP = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_BCWP = true;
                                state = 25;
                                return ;
                            case  122 :
                                _FixedCost = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                                has_FixedCost = true;
                                state = 123;
                                return ;
                            case  154 :
                                _Duration = value;
                                state = 155;
                                return ;
                            case  36 :
                                _Work = value;
                                state = 37;
                                return ;
                            case  66 :
                                _EarnedValueMethod = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 67;
                                return ;
                            case  48 :
                                _OverAllocated = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                                has_OverAllocated = true;
                                state = 49;
                                return ;
                            case  128 :
                                _Priority = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 129;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

                public void leaveChild(int nextState)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (nextState) {
                        case  13 :
                            state = 13;
                            return ;
                        case  43 :
                            state = 43;
                            return ;
                        case  131 :
                            state = 131;
                            return ;
                        case  99 :
                            state = 99;
                            return ;
                        case  15 :
                            state = 15;
                            return ;
                    }
                    super.leaveChild(nextState);
                }

            }

        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "---");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                            _Task.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.TaskTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Task".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Task".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "---------------------------------------------------------------------------------------------------------------------------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.this;
        }

        public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  79 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCode".equals(___local)) {
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 80, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  71 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSMask".equals(___local)) {
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 72, ___uri, ___local, __atts));
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"GenerateCodes".equals(___local)) {
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 72, ___uri, ___local, __atts));
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Prefix".equals(___local)) {
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 72, ___uri, ___local, __atts));
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"VerifyUniqueCodes".equals(___local)) {
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 72, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  33 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Assignment".equals(___local)) {
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 34, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  103 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttribute".equals(___local)) {
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 104, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  0 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultFixedCostAccrual".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 121;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttributes".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 103;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 25;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"NewTasksEffortDriven".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 31;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Subject".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 115;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveRemainingStartsForward".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 109;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MinutesPerWeek".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 9;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveRemainingStartsBack".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 77;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"SpreadPercentComplete".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 7;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkFormat".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 35;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AutoAddNewResourcesAndTasks".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 127;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StartDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 119;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultOvertimeRate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 21;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Revision".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 97;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Author".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 51;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultFinishTime".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 101;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"BaselineForEarnedValue".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 75;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCodes".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 79;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultTaskType".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 55;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"HonorConstraints".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 57;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CreationDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 39;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FiscalYearStart".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 41;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FinishDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 47;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Title".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 45;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DaysPerMonth".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 67;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekStartDay".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 125;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 61;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MultipleCriticalPaths".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 19;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resources".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 59;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"SplitsInProgressTasks".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 15;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CriticalSlackLimit".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 53;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Calendars".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 81;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ScheduleFromStart".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 93;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"LastSaved".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 85;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Autolink".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 3;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSMasks".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 71;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveCompletedEndsForward".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 13;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveCompletedEndsBack".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 69;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultStandardRate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 5;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Category".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 17;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Assignments".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 33;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"InsertedProjectsLikeSummary".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 95;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MinutesPerDay".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 43;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultStartTime".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 63;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"SpreadActualCost".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 73;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 83;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"NewTaskStartDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 11;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrencyDigits".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 27;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrentDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 105;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Tasks".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 23;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrencySymbol".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 65;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StatusDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 123;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultTaskEVMethod".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 89;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarnedValueMethod".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 99;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"NewTasksEstimated".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 113;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FYStartDate".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 117;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrencySymbolPosition".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 91;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"TaskUpdatesResource".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 111;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Company".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 37;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"EditableActualCosts".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 29;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MicrosoftProjectServerURL".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 107;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ProjectExternallyEdited".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 49;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalendarUID".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 87;
                        return ;
                    }
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Manager".equals(___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  23 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Task".equals(___local)) {
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 24, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  81 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Calendar".equals(___local)) {
                        _Calendars = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.CalendarsTypeImpl.class), 82, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  59 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resource".equals(___local)) {
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 60, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  64 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultStartTime".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  118 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FYStartDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  20 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MultipleCriticalPaths".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  84 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Name".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  114 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"NewTasksEstimated".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  40 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CreationDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  116 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Subject".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  26 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"UID".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  120 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StartDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  104 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttributes".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  86 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"LastSaved".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  38 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Company".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  28 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrencyDigits".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  70 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveCompletedEndsBack".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  79 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCodes".equals(___local)) {
                        _OutlineCodes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.OutlineCodesTypeImpl.class), 80, ___uri, ___local));
                        return ;
                    }
                    break;
                case  58 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"HonorConstraints".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  60 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resources".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  71 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSMasks".equals(___local)) {
                        _WBSMasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.class), 72, ___uri, ___local));
                        return ;
                    }
                    break;
                case  8 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"SpreadPercentComplete".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  112 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"TaskUpdatesResource".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  42 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FiscalYearStart".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  102 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultFinishTime".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  34 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Assignments".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  88 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CalendarUID".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  126 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WeekStartDay".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  48 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"FinishDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  122 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultFixedCostAccrual".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  78 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveRemainingStartsBack".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  92 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrencySymbolPosition".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  66 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrencySymbol".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  80 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"OutlineCodes".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  56 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultTaskType".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  33 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Assignments".equals(___local)) {
                        _Assignments = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.AssignmentsTypeImpl.class), 34, ___uri, ___local));
                        return ;
                    }
                    break;
                case  103 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ExtendedAttributes".equals(___local)) {
                        _ExtendedAttributes = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ExtendedAttributesTypeImpl.class), 104, ___uri, ___local));
                        return ;
                    }
                    break;
                case  74 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"SpreadActualCost".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  0 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  32 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"NewTasksEffortDriven".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  76 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"BaselineForEarnedValue".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  62 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DurationFormat".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  14 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveCompletedEndsForward".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  68 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DaysPerMonth".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  44 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MinutesPerDay".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  36 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WorkFormat".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  16 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"SplitsInProgressTasks".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  72 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSMasks".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  23 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Tasks".equals(___local)) {
                        _Tasks = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.TasksTypeImpl.class), 24, ___uri, ___local));
                        return ;
                    }
                    break;
                case  24 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Tasks".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  100 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"EarnedValueMethod".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  96 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"InsertedProjectsLikeSummary".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  4 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Autolink".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  128 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"AutoAddNewResourcesAndTasks".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  46 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Title".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  82 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Calendars".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  90 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultTaskEVMethod".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  106 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CurrentDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  110 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MoveRemainingStartsForward".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  98 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Revision".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  108 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MicrosoftProjectServerURL".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  10 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"MinutesPerWeek".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  52 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Author".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  59 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Resources".equals(___local)) {
                        _Resources = ((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl) spawnChildFromLeaveElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.ResourcesTypeImpl.class), 60, ___uri, ___local));
                        return ;
                    }
                    break;
                case  30 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"EditableActualCosts".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  50 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ProjectExternallyEdited".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  18 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Category".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  94 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"ScheduleFromStart".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  6 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultStandardRate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  12 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"NewTaskStartDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  22 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"DefaultOvertimeRate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  124 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"StatusDate".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  54 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"CriticalSlackLimit".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  2 :
                    if ("http://schemas.microsoft.com/project".equals(___uri)&&"Manager".equals(___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(String ___uri, String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  45 :
                        _Title = value;
                        state = 46;
                        return ;
                    case  95 :
                        _InsertedProjectsLikeSummary = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_InsertedProjectsLikeSummary = true;
                        state = 96;
                        return ;
                    case  29 :
                        _EditableActualCosts = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_EditableActualCosts = true;
                        state = 30;
                        return ;
                    case  31 :
                        _NewTasksEffortDriven = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_NewTasksEffortDriven = true;
                        state = 32;
                        return ;
                    case  77 :
                        _MoveRemainingStartsBack = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_MoveRemainingStartsBack = true;
                        state = 78;
                        return ;
                    case  117 :
                        _FYStartDate = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 118;
                        return ;
                    case  43 :
                        _MinutesPerDay = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 44;
                        return ;
                    case  41 :
                        _FiscalYearStart = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_FiscalYearStart = true;
                        state = 42;
                        return ;
                    case  121 :
                        _DefaultFixedCostAccrual = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 122;
                        return ;
                    case  61 :
                        _DurationFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 62;
                        return ;
                    case  89 :
                        _DefaultTaskEVMethod = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 90;
                        return ;
                    case  1 :
                        _Manager = value;
                        state = 2;
                        return ;
                    case  15 :
                        _SplitsInProgressTasks = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_SplitsInProgressTasks = true;
                        state = 16;
                        return ;
                    case  51 :
                        _Author = value;
                        state = 52;
                        return ;
                    case  67 :
                        _DaysPerMonth = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 68;
                        return ;
                    case  49 :
                        _ProjectExternallyEdited = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_ProjectExternallyEdited = true;
                        state = 50;
                        return ;
                    case  13 :
                        _MoveCompletedEndsForward = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_MoveCompletedEndsForward = true;
                        state = 14;
                        return ;
                    case  123 :
                        _StatusDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        state = 124;
                        return ;
                    case  21 :
                        _DefaultOvertimeRate = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                        has_DefaultOvertimeRate = true;
                        state = 22;
                        return ;
                    case  99 :
                        _EarnedValueMethod = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 100;
                        return ;
                    case  3 :
                        _Autolink = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_Autolink = true;
                        state = 4;
                        return ;
                    case  113 :
                        _NewTasksEstimated = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_NewTasksEstimated = true;
                        state = 114;
                        return ;
                    case  109 :
                        _MoveRemainingStartsForward = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_MoveRemainingStartsForward = true;
                        state = 110;
                        return ;
                    case  83 :
                        _Name = value;
                        state = 84;
                        return ;
                    case  97 :
                        _Revision = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 98;
                        return ;
                    case  55 :
                        _DefaultTaskType = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 56;
                        return ;
                    case  91 :
                        _CurrencySymbolPosition = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 92;
                        return ;
                    case  7 :
                        _SpreadPercentComplete = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_SpreadPercentComplete = true;
                        state = 8;
                        return ;
                    case  35 :
                        _WorkFormat = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 36;
                        return ;
                    case  39 :
                        _CreationDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        state = 40;
                        return ;
                    case  57 :
                        _HonorConstraints = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_HonorConstraints = true;
                        state = 58;
                        return ;
                    case  111 :
                        _TaskUpdatesResource = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_TaskUpdatesResource = true;
                        state = 112;
                        return ;
                    case  0 :
                        revertToParentFromText(value);
                        return ;
                    case  75 :
                        _BaselineForEarnedValue = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 76;
                        return ;
                    case  25 :
                        _UID = value;
                        state = 26;
                        return ;
                    case  107 :
                        _MicrosoftProjectServerURL = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_MicrosoftProjectServerURL = true;
                        state = 108;
                        return ;
                    case  105 :
                        _CurrentDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        state = 106;
                        return ;
                    case  127 :
                        _AutoAddNewResourcesAndTasks = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_AutoAddNewResourcesAndTasks = true;
                        state = 128;
                        return ;
                    case  11 :
                        _NewTaskStartDate = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 12;
                        return ;
                    case  87 :
                        _CalendarUID = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 88;
                        return ;
                    case  5 :
                        _DefaultStandardRate = com.sun.msv.datatype.xsd.FloatType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).floatValue();
                        has_DefaultStandardRate = true;
                        state = 6;
                        return ;
                    case  63 :
                        _DefaultStartTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(value, context));
                        state = 64;
                        return ;
                    case  69 :
                        _MoveCompletedEndsBack = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_MoveCompletedEndsBack = true;
                        state = 70;
                        return ;
                    case  19 :
                        _MultipleCriticalPaths = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_MultipleCriticalPaths = true;
                        state = 20;
                        return ;
                    case  115 :
                        _Subject = value;
                        state = 116;
                        return ;
                    case  17 :
                        _Category = value;
                        state = 18;
                        return ;
                    case  27 :
                        _CurrencyDigits = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 28;
                        return ;
                    case  93 :
                        _ScheduleFromStart = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_ScheduleFromStart = true;
                        state = 94;
                        return ;
                    case  85 :
                        _LastSaved = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        state = 86;
                        return ;
                    case  65 :
                        _CurrencySymbol = value;
                        state = 66;
                        return ;
                    case  37 :
                        _Company = value;
                        state = 38;
                        return ;
                    case  125 :
                        _WeekStartDay = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 126;
                        return ;
                    case  47 :
                        _FinishDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        state = 48;
                        return ;
                    case  119 :
                        _StartDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(value, context));
                        state = 120;
                        return ;
                    case  101 :
                        _DefaultFinishTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.TimeType.theInstance.createJavaObject(value, context));
                        state = 102;
                        return ;
                    case  53 :
                        _CriticalSlackLimit = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 54;
                        return ;
                    case  73 :
                        _SpreadActualCost = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                        has_SpreadActualCost = true;
                        state = 74;
                        return ;
                    case  9 :
                        _MinutesPerWeek = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        state = 10;
                        return ;
                }
            } catch (RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  24 :
                    state = 24;
                    return ;
                case  34 :
                    state = 34;
                    return ;
                case  82 :
                    state = 82;
                    return ;
                case  60 :
                    state = 60;
                    return ;
                case  104 :
                    state = 104;
                    return ;
                case  80 :
                    state = 80;
                    return ;
                case  72 :
                    state = 72;
                    return ;
            }
            super.leaveChild(nextState);
        }

    }

    public static class WBSMasksTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.class;
        protected java.util.ArrayList _WBSMask = new java.util.ArrayList();
        protected boolean has_GenerateCodes;
        protected boolean _GenerateCodes;
        protected String _Prefix;
        protected boolean has_VerifyUniqueCodes;
        protected boolean _VerifyUniqueCodes;
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005<qXppsq\u0000~\u0000\u0000\u0004\u0095\u000f\u001appsq\u0000~\u0000\u0000\u0003P\u0015#ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u00c6|\u00ec3\u0087\u00b8\u00f9\u00f4\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00a8\n\u008fppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00a8\n\u0084sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00a8\nyppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u008f\u0081\u0081\u0090\u00c8\u0002}\u0099\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0011VerifyUniqueCodest\u0000$http://schemas.microsoft.com/projectsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0098v\u00e3\u0003Z\u00fex\u00ee\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u000e\u0001psq\u0000~\u0000\b\u0001\u00a8\n\u008fppsq\u0000~\u0000\n\u0001\u00a8\n\u0084q\u0000~\u0000\u000fp\u0000q\u0000~\u0000\u0013sq\u0000~\u0000$t\u0000\rGenerateCodesq\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000\b\u0001D\u00f9\u00f2ppsq\u0000~\u0000\n\u0001D\u00f9\u00e7q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0010\u0001D\u00f9\u00dcppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet#[>\u001d\u0082}\u00a6B\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0018xq\u0000~\u0000\u0017t\u0000\u0000psr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001e\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0006stringq\u0000~\u0000;q\u0000~\u0000=t\u0000\tmaxLength\u0000\u0000\u00002q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u000estring-derivedq\u0000~\u00009sq\u0000~\u0000$t\u0000\u0006Prefixq\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000\b\u0000\u00a7b9ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u00cc;^\u00bb\u0004E\u00cc\u00db\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\'\u00bbhe^\u001f_5\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00a7b.q\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0000\u00a7b+q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\n\u0000\u00a7b pp\u0000sq\u0000~\u0000\b\u0000\u00a7b\u0015ppsq\u0000~\u0000E\u0000\u00a7b\nq\u0000~\u0000\u000fpsr\u0000 com.sun.msv.grammar.AttributeExp0\rR\n\u00c7L\n\u0099\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00a7b\u0007q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u00cb\u00b2\u00f3\u00c9\u0081\u0000\u000f\u00bc\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000+q\u0000~\u0000Osr\u0000 com.sun.msv.grammar.AnyNameClass\u00c3p\u00af\u0013\u00eft\u0094\u00bd\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000*sq\u0000~\u0000$t\u0000Acom.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000$t\u0000\u0007WBSMaskq\u0000~\u0000(q\u0000~\u0000*sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000X[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\n\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppq\u0000~\u00000pppppppppppppppppppppppppppppppppppq\u0000~\u0000\tq\u0000~\u0000,pppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppq\u0000~\u0000\u0007ppppppppq\u0000~\u0000\u0006pppq\u0000~\u0000Kppppppppppq\u0000~\u0000Jppppppppppppppppppppppppq\u0000~\u0000Gppppppppppq\u0000~\u0000Dppppppppppppppppppppppppppppppppppppppppppppp");

        public java.util.List getWBSMask() {
            return _WBSMask;
        }

        public boolean isGenerateCodes() {
            return _GenerateCodes;
        }

        public void setGenerateCodes(boolean value) {
            _GenerateCodes = value;
            has_GenerateCodes = true;
        }

        public String getPrefix() {
            return _Prefix;
        }

        public void setPrefix(String value) {
            _Prefix = value;
        }

        public boolean isVerifyUniqueCodes() {
            return _VerifyUniqueCodes;
        }

        public void setVerifyUniqueCodes(boolean value) {
            _VerifyUniqueCodes = value;
            has_VerifyUniqueCodes = true;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.Unmarshaller(context);
        }

        public Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS;
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _WBSMask.size();
            if (has_VerifyUniqueCodes) {
                context.startElement("http://schemas.microsoft.com/project", "VerifyUniqueCodes");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_VerifyUniqueCodes))));
                context.endElement();
            }
            if (has_GenerateCodes) {
                context.startElement("http://schemas.microsoft.com/project", "GenerateCodes");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.BooleanType.save(((Boolean) new java.lang.Boolean(_GenerateCodes))));
                context.endElement();
            }
            if (_Prefix!= null) {
                context.startElement("http://schemas.microsoft.com/project", "Prefix");
                context.endAttributes();
                context.text(((String) _Prefix));
                context.endElement();
            }
            while (idx1 != len1) {
                context.startElement("http://schemas.microsoft.com/project", "WBSMask");
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _WBSMask.get(idx_3 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _WBSMask.get(idx1 ++)));
                context.endElement();
            }
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _WBSMask.size();
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = _WBSMask.size();
        }

        public Class getPrimaryInterface() {
            return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "---------");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.this;
            }

            public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSMask".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"GenerateCodes".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 5;
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Prefix".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 3;
                            return ;
                        }
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"VerifyUniqueCodes".equals(___local)) {
                            context.pushAttributes(__atts);
                            state = 7;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                    case  1 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Level".equals(___local)) {
                            _WBSMask.add(((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl) spawnChildFromEnterElement((com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.class), 2, ___uri, ___local, __atts)));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  6 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"GenerateCodes".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                    case  8 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"VerifyUniqueCodes".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                    case  2 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"WBSMask".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                    case  4 :
                        if ("http://schemas.microsoft.com/project".equals(___uri)&&"Prefix".equals(___local)) {
                            context.popAttributes();
                            state = 0;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(String ___uri, String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  3 :
                            _Prefix = value;
                            state = 4;
                            return ;
                        case  5 :
                            _GenerateCodes = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                            has_GenerateCodes = true;
                            state = 6;
                            return ;
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            _VerifyUniqueCodes = com.sun.msv.datatype.xsd.BooleanType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value)).booleanValue();
                            has_VerifyUniqueCodes = true;
                            state = 8;
                            return ;
                    }
                } catch (RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

            public void leaveChild(int nextState)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (nextState) {
                    case  2 :
                        state = 2;
                        return ;
                }
                super.leaveChild(nextState);
            }

        }

        public static class WBSMaskTypeImpl implements com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
        {

            private final static Class PRIMARY_INTERFACE_CLASS = com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType.class;
            protected String _Separator;
            protected java.math.BigInteger _Type;
            protected String _Length;
            protected java.math.BigInteger _Level;
            private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0091Ue\u00f1\u0017p\u00f3\u00ad\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u009f\u008d\u000fi<\u00c1_\u00b7\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0002q\u00ea\u00bcppsq\u0000~\u0000\u0000\u0001\u00bf\u00b8\u008cppsq\u0000~\u0000\u0000\u0001\r\u0086\\ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u008b\u0010\u001fsu\u008b\u0091\u00c2\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u00d3\u00c6b\u0095\u0015\rC\u0092\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00fe\u0084\u0000pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp8\u00f5\u00f5>{j!\u00cb\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00fe\u0083\u00f5ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0087s\u0012U\u00891Q\u00b3\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0002\u00ff10\u00a8bR\u00ca\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType7\u00adsa|\u00d7Z\u001d\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl4\u00e9\u0099H.\u00872z\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007integersr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessorip\u00ff0C\u00ce\u000eN\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression s\u0080\u0089\u0096\u00cf\u009a@\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xpq\u0000~\u0000\u0019q\u0000~\u0000\u0018sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0091\u00e9\u00f7\u008d\u00ab\u0010\u00aa\u00f5\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv.grammar.NameClass\u009c}\u00d4kB\u00c7\tk\u0002\u0000\u0000xpt\u0000\u0005Levelt\u0000$http://schemas.microsoft.com/projectsq\u0000~\u0000\b\u0000\u000f\u0002Wpp\u0000sq\u0000~\u0000\f\u0000\u000f\u0002Lppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacetp\u008f\u0089\u001d\u0098\u00c5.\u007f\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u00f4\u00cf\u00e6D\u00b4\u00a8k\u0000\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0015xq\u0000~\u0000\u0014t\u0000\u0000pq\u0000~\u0000\u001c\u0000\u0000q\u0000~\u0000\u0017q\u0000~\u0000\u0017t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004sr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u00f8\u0096\u00c6\u00ad\u001d\u0013~\u00a0\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u0015xpt\u0000\u00013sq\u0000~\u00005t\u0000\u00012sq\u0000~\u00005t\u0000\u00010sq\u0000~\u00005t\u0000\u00011xq\u0000~\u0000\u001esq\u0000~\u0000!t\u0000\u000finteger-derivedq\u0000~\u00001sq\u0000~\u0000#t\u0000\u0004Typeq\u0000~\u0000\'sq\u0000~\u0000\b\u0000\u00b22+pp\u0000sq\u0000~\u0000\f\u0000\u00b22 ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u00c0\t\u00a9y\u00f6\u0011\u009b\u00e6\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0018t\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000\u001esq\u0000~\u0000!q\u0000~\u0000Fq\u0000~\u0000\u0018sq\u0000~\u0000#t\u0000\u0006Lengthq\u0000~\u0000\'sq\u0000~\u0000\b\u0000\u00b22+pp\u0000q\u0000~\u0000Csq\u0000~\u0000#t\u0000\tSeparatorq\u0000~\u0000\'sr\u0000\"com.sun.msv.grammar.ExpressionPool\u00e5\u00f3J;\u00cd]^\u00f8\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000P[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0003\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0007ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppp");

            public String getSeparator() {
                return _Separator;
            }

            public void setSeparator(String value) {
                _Separator = value;
            }

            public java.math.BigInteger getType() {
                return _Type;
            }

            public void setType(java.math.BigInteger value) {
                _Type = value;
            }

            public String getLength() {
                return _Length;
            }

            public void setLength(String value) {
                _Length = value;
            }

            public java.math.BigInteger getLevel() {
                return _Level;
            }

            public void setLevel(java.math.BigInteger value) {
                _Level = value;
            }

            public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                return new com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.Unmarshaller(context);
            }

            public Class getPrimaryInterfaceClass() {
                return PRIMARY_INTERFACE_CLASS;
            }

            public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                context.startElement("http://schemas.microsoft.com/project", "Level");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Level)));
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Type");
                context.endAttributes();
                context.text(com.sun.msv.datatype.xsd.IntegerType.save(((java.math.BigInteger) _Type)));
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Length");
                context.endAttributes();
                context.text(((String) _Length));
                context.endElement();
                context.startElement("http://schemas.microsoft.com/project", "Separator");
                context.endAttributes();
                context.text(((String) _Separator));
                context.endElement();
            }

            public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
            }

            public Class getPrimaryInterface() {
                return (com.tapsterrock.mspdi.schema.ProjectType.WBSMasksType.WBSMaskType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
            {


                public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                    super(context, "-------------");
                }

                protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                    return com.tapsterrock.mspdi.schema.impl.ProjectTypeImpl.WBSMasksTypeImpl.WBSMaskTypeImpl.this;
                }

                public void enterElement(String ___uri, String ___local, org.xml.sax.Attributes __atts)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  9 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Separator".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 10;
                                return ;
                            }
                            break;
                        case  6 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Length".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 7;
                                return ;
                            }
                            break;
                        case  3 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 4;
                                return ;
                            }
                            break;
                        case  0 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Level".equals(___local)) {
                                context.pushAttributes(__atts);
                                state = 1;
                                return ;
                            }
                            break;
                        case  12 :
                            revertToParentFromEnterElement(___uri, ___local, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, __atts);
                }

                public void leaveElement(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  11 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Separator".equals(___local)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  5 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Type".equals(___local)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  2 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Level".equals(___local)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  8 :
                            if ("http://schemas.microsoft.com/project".equals(___uri)&&"Length".equals(___local)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  12 :
                            revertToParentFromLeaveElement(___uri, ___local);
                            return ;
                    }
                    super.leaveElement(___uri, ___local);
                }

                public void enterAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  12 :
                            revertToParentFromEnterAttribute(___uri, ___local);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local);
                }

                public void leaveAttribute(String ___uri, String ___local)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    switch (state) {
                        case  12 :
                            revertToParentFromLeaveAttribute(___uri, ___local);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local);
                }

                public void text(String value)
                    throws com.sun.xml.bind.unmarshaller.UnreportedException
                {
                    try {
                        switch (state) {
                            case  7 :
                                _Length = value;
                                state = 8;
                                return ;
                            case  10 :
                                _Separator = value;
                                state = 11;
                                return ;
                            case  4 :
                                _Type = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 5;
                                return ;
                            case  12 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                _Level = com.sun.msv.datatype.xsd.IntegerType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                                state = 2;
                                return ;
                        }
                    } catch (RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                }

            }

        }

    }

}
